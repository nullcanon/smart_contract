{
	"id": "310e01852d6e95eb9835e3bf826574b7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"msc_token/ERC1155.sol": {
				"content": "\r\npragma solidity ^0.8.0;\r\n\r\n\r\nimport \"./node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\n\r\ncontract GameItems is ERC1155 {\r\n    uint256 public constant GOLD = 0;\r\n    uint256 public constant SILVER = 1;\r\n    uint256 public constant THORS_HAMMER = 2;\r\n    uint256 public constant SWORD = 3;\r\n    uint256 public constant SHIELD = 4;\r\n\r\n    constructor() ERC1155(\"https://game.example/api/item/{id}.json\") {\r\n        _mint(msg.sender, GOLD, 10**18, \"\");\r\n        _mint(msg.sender, SILVER, 10**27, \"\");\r\n        _mint(msg.sender, THORS_HAMMER, 1, \"\");\r\n        _mint(msg.sender, SWORD, 10**9, \"\");\r\n        _mint(msg.sender, SHIELD, 10**9, \"\");\r\n    }\r\n\r\n    function mintBatch() public {\r\n        uint256[] memory ids = new uint256[](1000);\r\n        uint256[] memory amounts = new uint256[](1000);\r\n        for (uint256 i = 0; i < 1000; i++) {\r\n            ids[i] = i;\r\n            amounts[i] = 1;\r\n        }\r\n        _mintBatch(msg.sender, ids, amounts, \"\");\r\n    }\r\n}"
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"
			},
			"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n        @dev Handles the receipt of a single ERC1155 token type. This function is\n        called at the end of a `safeTransferFrom` after the balance has been updated.\n        To accept the transfer, this must return\n        `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n        (i.e. 0xf23a6e61, or its own function selector).\n        @param operator The address which initiated the transfer (i.e. msg.sender)\n        @param from The address which previously owned the token\n        @param id The ID of the token being transferred\n        @param value The amount of tokens being transferred\n        @param data Additional data with no specified format\n        @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n    */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n        @dev Handles the receipt of a multiple ERC1155 token types. This function\n        is called at the end of a `safeBatchTransferFrom` after the balances have\n        been updated. To accept the transfer(s), this must return\n        `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n        (i.e. 0xbc197c81, or its own function selector).\n        @param operator The address which initiated the batch transfer (i.e. msg.sender)\n        @param from The address which previously owned the token\n        @param ids An array containing ids of each token being transferred (order and length must match values array)\n        @param values An array containing amounts of each token being transferred (order and length must match ids array)\n        @param data Additional data with no specified format\n        @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n    */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"msc_token/ERC1155.sol": {
				"GameItems": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "GOLD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SHIELD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SILVER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SWORD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "THORS_HAMMER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"msc_token/ERC1155.sol\":109:984  contract GameItems is ERC1155 {\r... */\n  mstore(0x40, 0x80)\n    /* \"msc_token/ERC1155.sol\":356:665  constructor() ERC1155(\"https://game.example/api/item/{id}.json\") {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1092:1154  constructor(string memory uri_) {... */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x27\n  dup2\n  mstore\n  0x20\n  add\n  data_9be393994f02169c966a8f7d954e5f555f9d6fdea83c170362ff79cf2c5ce4f1\n  0x27\n  swap2\n  codecopy\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1147  _setURI(uri_) */\n  tag_5\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1142:1146  uri_ */\n  dup2\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1141  _setURI */\n  tag_6\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1147  _setURI(uri_) */\n  jump\t// in\ntag_5:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1092:1154  constructor(string memory uri_) {... */\n  pop\n    /* \"msc_token/ERC1155.sol\":432:467  _mint(msg.sender, GOLD, 10**18, \"\") */\n  tag_8\n    /* \"msc_token/ERC1155.sol\":438:448  msg.sender */\n  caller\n    /* \"msc_token/ERC1155.sol\":177:178  0 */\n  0x00\n    /* \"msc_token/ERC1155.sol\":456:462  10**18 */\n  0x0de0b6b3a7640000\n    /* \"msc_token/ERC1155.sol\":432:467  _mint(msg.sender, GOLD, 10**18, \"\") */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"msc_token/ERC1155.sol\":432:437  _mint */\n  shl(0x20, tag_9)\n    /* \"msc_token/ERC1155.sol\":432:467  _mint(msg.sender, GOLD, 10**18, \"\") */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"msc_token/ERC1155.sol\":478:515  _mint(msg.sender, SILVER, 10**27, \"\") */\n  tag_10\n    /* \"msc_token/ERC1155.sol\":484:494  msg.sender */\n  caller\n    /* \"msc_token/ERC1155.sol\":218:219  1 */\n  0x01\n    /* \"msc_token/ERC1155.sol\":504:510  10**27 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"msc_token/ERC1155.sol\":478:515  _mint(msg.sender, SILVER, 10**27, \"\") */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"msc_token/ERC1155.sol\":478:483  _mint */\n  shl(0x20, tag_9)\n    /* \"msc_token/ERC1155.sol\":478:515  _mint(msg.sender, SILVER, 10**27, \"\") */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"msc_token/ERC1155.sol\":526:564  _mint(msg.sender, THORS_HAMMER, 1, \"\") */\n  tag_11\n    /* \"msc_token/ERC1155.sol\":532:542  msg.sender */\n  caller\n    /* \"msc_token/ERC1155.sol\":265:266  2 */\n  0x02\n    /* \"msc_token/ERC1155.sol\":558:559  1 */\n  0x01\n    /* \"msc_token/ERC1155.sol\":526:564  _mint(msg.sender, THORS_HAMMER, 1, \"\") */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"msc_token/ERC1155.sol\":526:531  _mint */\n  shl(0x20, tag_9)\n    /* \"msc_token/ERC1155.sol\":526:564  _mint(msg.sender, THORS_HAMMER, 1, \"\") */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"msc_token/ERC1155.sol\":575:610  _mint(msg.sender, SWORD, 10**9, \"\") */\n  tag_12\n    /* \"msc_token/ERC1155.sol\":581:591  msg.sender */\n  caller\n    /* \"msc_token/ERC1155.sol\":305:306  3 */\n  0x03\n    /* \"msc_token/ERC1155.sol\":600:605  10**9 */\n  0x3b9aca00\n    /* \"msc_token/ERC1155.sol\":575:610  _mint(msg.sender, SWORD, 10**9, \"\") */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"msc_token/ERC1155.sol\":575:580  _mint */\n  shl(0x20, tag_9)\n    /* \"msc_token/ERC1155.sol\":575:610  _mint(msg.sender, SWORD, 10**9, \"\") */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"msc_token/ERC1155.sol\":621:657  _mint(msg.sender, SHIELD, 10**9, \"\") */\n  tag_13\n    /* \"msc_token/ERC1155.sol\":627:637  msg.sender */\n  caller\n    /* \"msc_token/ERC1155.sol\":346:347  4 */\n  0x04\n    /* \"msc_token/ERC1155.sol\":647:652  10**9 */\n  0x3b9aca00\n    /* \"msc_token/ERC1155.sol\":621:657  _mint(msg.sender, SHIELD, 10**9, \"\") */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"msc_token/ERC1155.sol\":621:626  _mint */\n  shl(0x20, tag_9)\n    /* \"msc_token/ERC1155.sol\":621:657  _mint(msg.sender, SHIELD, 10**9, \"\") */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"msc_token/ERC1155.sol\":109:984  contract GameItems is ERC1155 {\r... */\n  jump(tag_80)\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7936:8022  function _setURI(string memory newuri) internal virtual {... */\ntag_6:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8015  _uri = newuri */\n  dup1\n  mload\n  tag_16\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8006  _uri */\n  0x02\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8015  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  pop\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7936:8022  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8395:8948  function _mint(... */\ntag_9:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8542:8558  to != address(0) */\n  dup5\n  and\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8534:8596  require(to != address(0), \"ERC1155: mint to the zero address\") */\n  tag_19\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":2630:2632   */\n  0x20\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8534:8596  require(to != address(0), \"ERC1155: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2612:2633   */\n  mstore\n    /* \"#utility.yul\":2669:2671   */\n  0x21\n    /* \"#utility.yul\":2649:2667   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2642:2672   */\n  mstore\n    /* \"#utility.yul\":2708:2742   */\n  0x455243313135353a206d696e7420746f20746865207a65726f20616464726573\n    /* \"#utility.yul\":2688:2706   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2681:2743   */\n  mstore\n  shl(0xf8, 0x73)\n    /* \"#utility.yul\":2759:2777   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":2752:2783   */\n  mstore\n    /* \"#utility.yul\":2800:2819   */\n  0x84\n  add\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8534:8596  require(to != address(0), \"ERC1155: mint to the zero address\") */\ntag_20:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_19:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8649:8751  _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n  tag_24\n    /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  dup2\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8607:8623  address operator */\n  0x00\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8692:8694  to */\n  dup8\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8696:8717  _asSingletonArray(id) */\n  tag_25\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8714:8716  id */\n  dup9\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8696:8713  _asSingletonArray */\n  tag_26\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8696:8717  _asSingletonArray(id) */\n  jump\t// in\ntag_25:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8719:8744  _asSingletonArray(amount) */\n  tag_27\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8737:8743  amount */\n  dup9\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8719:8736  _asSingletonArray */\n  tag_26\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8719:8744  _asSingletonArray(amount) */\n  jump\t// in\ntag_27:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13331:13545  function _beforeTokenTransfer(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8649:8751  _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data) */\ntag_24:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8762:8771  _balances */\n  0x00\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8762:8775  _balances[id] */\n  dup5\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8762:8779  _balances[id][to] */\n  dup10\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  dup2\n  keccak256\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8762:8789  _balances[id][to] += amount */\n  dup1\n  sload\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8783:8789  amount */\n  dup6\n  swap3\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8762:8771  _balances */\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8762:8789  _balances[id][to] += amount */\n  tag_29\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8783:8789  amount */\n  dup5\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8762:8789  _balances[id][to] += amount */\n  tag_30\n  jump\t// in\ntag_29:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8804:8856  TransferSingle(operator, address(0), to, id, amount) */\n  0x40\n  dup1\n  mload\n    /* \"#utility.yul\":3004:3029   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":3060:3062   */\n  0x20\n    /* \"#utility.yul\":3045:3063   */\n  dup2\n  add\n    /* \"#utility.yul\":3038:3072   */\n  dup6\n  swap1\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8804:8856  TransferSingle(operator, address(0), to, id, amount) */\n  dup1\n  dup9\n  and\n  swap3\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8837:8838  0 */\n  0x00\n  swap3\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8804:8856  TransferSingle(operator, address(0), to, id, amount) */\n  swap2\n  dup6\n  and\n  swap2\n  0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n  swap2\n    /* \"#utility.yul\":2977:2995   */\n  add\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8804:8856  TransferSingle(operator, address(0), to, id, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8867:8941  _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data) */\n  tag_27\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8898:8906  operator */\n  dup2\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8916:8917  0 */\n  0x00\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8920:8922  to */\n  dup8\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8924:8926  id */\n  dup8\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8928:8934  amount */\n  dup8\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8936:8940  data */\n  dup8\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8867:8897  _doSafeTransferAcceptanceCheck */\n  tag_34\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8867:8941  _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data) */\n  jump\t// in\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15080:15273  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\ntag_26:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n  0x40\n  dup1\n  mload\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15213:15214  1 */\n  0x01\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n  dup1\n  dup3\n  mstore\n  dup2\n  dup4\n  add\n  swap1\n  swap3\n  mstore\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15146:15162  uint256[] memory */\n  0x60\n  swap2\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15174:15196  uint256[] memory array */\n  0x00\n  swap2\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n  swap1\n  0x20\n  dup1\n  dup4\n  add\n  swap1\n  dup1\n  calldatasize\n  dup4\n  calldatacopy\n  add\n  swap1\n  pop\n  pop\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15174:15215  uint256[] memory array = new uint256[](1) */\n  swap1\n  pop\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15236:15243  element */\n  dup3\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15230  array */\n  dup2\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15231:15232  0 */\n  0x00\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15233  array[0] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_39\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x32)\n  revert(0x00, 0x24)\ntag_39:\n  0x20\n  swap1\n  dup2\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  add\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15243  array[0] = element */\n  mstore\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15261:15266  array */\n  swap3\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15080:15273  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13331:13545  function _beforeTokenTransfer(... */\ntag_28:\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13551:14276  function _doSafeTransferAcceptanceCheck(... */\ntag_34:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13758:13773  to.isContract() */\n  tag_42\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13758:13760  to */\n  dup5\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13758:13771  to.isContract */\n  and\n  or(tag_0_78, shl(0x20, tag_43))\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13758:13773  to.isContract() */\n  0x20\n  shr\n  jump\t// in\ntag_42:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13754:14270  if (to.isContract()) {... */\n  iszero\n  tag_28\n  jumpi\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n  mload(0x40)\n  shl(0xe0, 0xf23a6e61)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13831  IERC1155Receiver(to).onERC1155Received */\n  dup6\n  and\n  swap1\n  0xf23a6e61\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n  tag_45\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13832:13840  operator */\n  dup10\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13842:13846  from */\n  dup10\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13848:13850  id */\n  dup9\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13852:13858  amount */\n  dup9\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13860:13864  data */\n  dup9\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n  0x04\n  add\n  tag_46\n  jump\t// in\ntag_45:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_47\n  jumpi\n  0x00\n  dup1\n  revert\ntag_47:\n  pop\n  gas\n  call\n  swap3\n  pop\n  pop\n  pop\n  dup1\n  iszero\n  tag_48\n  jumpi\n  pop\n  0x40\n  dup1\n  mload\n  0x1f\n  returndatasize\n  swap1\n  dup2\n  add\n  not(0x1f)\n  and\n  dup3\n  add\n  swap1\n  swap3\n  mstore\n  tag_49\n  swap2\n  dup2\n  add\n  swap1\n  tag_50\n  jump\t// in\ntag_49:\n  0x01\ntag_48:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13789:14260  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n  tag_51\n  jumpi\n  tag_55\n  tag_56\n  jump\t// in\ntag_55:\n  dup1\n  0x08c379a0\n  eq\n  iszero\n  tag_54\n  jumpi\n  pop\n  tag_57\n  tag_58\n  jump\t// in\ntag_57:\n  dup1\n  tag_59\n  jumpi\n  pop\n  jump(tag_53)\ntag_59:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14136:14142  reason */\n  dup1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14129:14143  revert(reason) */\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  tag_20\n  swap2\n  swap1\n  tag_61\n  jump\t// in\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13789:14260  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\ntag_54:\n  pop\ntag_53:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14183:14245  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1800:1802   */\n  0x20\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14183:14245  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1782:1803   */\n  mstore\n    /* \"#utility.yul\":1839:1841   */\n  0x34\n    /* \"#utility.yul\":1819:1837   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1812:1842   */\n  mstore\n    /* \"#utility.yul\":1878:1912   */\n  0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n    /* \"#utility.yul\":1858:1876   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1851:1913   */\n  mstore\n    /* \"#utility.yul\":1949:1971   */\n  0x526563656976657220696d706c656d656e746572000000000000000000000000\n    /* \"#utility.yul\":1929:1947   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":1922:1972   */\n  mstore\n    /* \"#utility.yul\":1989:2008   */\n  0x84\n  add\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14183:14245  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n  tag_20\n    /* \"#utility.yul\":1772:2014   */\n  jump\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13789:14260  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\ntag_51:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13914:13969  response != IERC1155Receiver.onERC1155Received.selector */\n  dup2\n  and\n  shl(0xe0, 0xf23a6e61)\n  eq\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13910:14062  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n  tag_65\n  jumpi\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13993:14043  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":2221:2223   */\n  0x20\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13993:14043  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2203:2224   */\n  mstore\n    /* \"#utility.yul\":2260:2262   */\n  0x28\n    /* \"#utility.yul\":2240:2258   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2233:2263   */\n  mstore\n    /* \"#utility.yul\":2299:2333   */\n  0x455243313135353a204552433131353552656365697665722072656a65637465\n    /* \"#utility.yul\":2279:2297   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2272:2334   */\n  mstore\n  shl(0xc0, 0x6420746f6b656e73)\n    /* \"#utility.yul\":2350:2368   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":2343:2381   */\n  mstore\n    /* \"#utility.yul\":2398:2417   */\n  0x84\n  add\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13993:14043  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n  tag_20\n    /* \"#utility.yul\":2193:2423   */\n  jump\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13910:14062  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\ntag_65:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13866:14076  returns (bytes4 response) {... */\n  pop\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13551:14276  function _doSafeTransferAcceptanceCheck(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":771:1148  function isContract(address account) internal view returns (bool) {... */\ntag_43:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":1087:1107  extcodesize(account) */\n  extcodesize\n    /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":1133:1141  size > 0 */\n  iszero\n  iszero\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":771:1148  function isContract(address account) internal view returns (bool) {... */\n  jump\t// out\n    /* \"msc_token/ERC1155.sol\":109:984  contract GameItems is ERC1155 {\r... */\ntag_17:\n  dup3\n  dup1\n  sload\n  tag_69\n  swap1\n  tag_70\n  jump\t// in\ntag_69:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_72\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_75)\ntag_72:\n  dup3\n  0x1f\n  lt\n  tag_73\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_75)\ntag_73:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_75\n  jumpi\n  swap2\n  dup3\n  add\ntag_74:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_75\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_74)\ntag_75:\n  pop\n  tag_76\n  swap3\n  swap2\n  pop\n  tag_77\n  jump\t// in\ntag_76:\n  pop\n  swap1\n  jump\t// out\ntag_77:\ntag_78:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_76\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_78)\n    /* \"#utility.yul\":14:324   */\ntag_50:\n    /* \"#utility.yul\":83:89   */\n  0x00\n    /* \"#utility.yul\":136:138   */\n  0x20\n    /* \"#utility.yul\":124:133   */\n  dup3\n    /* \"#utility.yul\":115:122   */\n  dup5\n    /* \"#utility.yul\":111:134   */\n  sub\n    /* \"#utility.yul\":107:139   */\n  slt\n    /* \"#utility.yul\":104:106   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":157:163   */\n  dup1\n    /* \"#utility.yul\":149:155   */\n  dup2\n    /* \"#utility.yul\":142:164   */\n  revert\n    /* \"#utility.yul\":104:106   */\ntag_82:\n    /* \"#utility.yul\":188:204   */\n  dup2\n  mload\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"#utility.yul\":233:265   */\n  dup2\n  and\n    /* \"#utility.yul\":223:266   */\n  dup2\n  eq\n    /* \"#utility.yul\":213:215   */\n  tag_83\n  jumpi\n    /* \"#utility.yul\":285:291   */\n  dup2\n    /* \"#utility.yul\":277:283   */\n  dup3\n    /* \"#utility.yul\":270:292   */\n  revert\n    /* \"#utility.yul\":213:215   */\ntag_83:\n    /* \"#utility.yul\":313:318   */\n  swap4\n    /* \"#utility.yul\":94:324   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":329:804   */\ntag_84:\n    /* \"#utility.yul\":370:373   */\n  0x00\n    /* \"#utility.yul\":408:413   */\n  dup2\n    /* \"#utility.yul\":402:414   */\n  mload\n    /* \"#utility.yul\":435:441   */\n  dup1\n    /* \"#utility.yul\":430:433   */\n  dup5\n    /* \"#utility.yul\":423:442   */\n  mstore\n    /* \"#utility.yul\":460:463   */\n  dup2\n    /* \"#utility.yul\":472:634   */\ntag_86:\n    /* \"#utility.yul\":486:492   */\n  dup2\n    /* \"#utility.yul\":483:484   */\n  dup2\n    /* \"#utility.yul\":480:493   */\n  lt\n    /* \"#utility.yul\":472:634   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":548:552   */\n  0x20\n    /* \"#utility.yul\":604:617   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":600:622   */\n  dup2\n  add\n    /* \"#utility.yul\":594:623   */\n  mload\n    /* \"#utility.yul\":576:587   */\n  dup7\n  dup4\n  add\n    /* \"#utility.yul\":572:592   */\n  dup3\n  add\n    /* \"#utility.yul\":565:624   */\n  mstore\n    /* \"#utility.yul\":501:513   */\n  add\n    /* \"#utility.yul\":472:634   */\n  jump(tag_86)\ntag_88:\n    /* \"#utility.yul\":652:658   */\n  dup2\n    /* \"#utility.yul\":649:650   */\n  dup2\n    /* \"#utility.yul\":646:659   */\n  gt\n    /* \"#utility.yul\":643:645   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":718:721   */\n  dup3\n    /* \"#utility.yul\":711:715   */\n  0x20\n    /* \"#utility.yul\":702:708   */\n  dup4\n    /* \"#utility.yul\":697:700   */\n  dup8\n    /* \"#utility.yul\":693:709   */\n  add\n    /* \"#utility.yul\":689:716   */\n  add\n    /* \"#utility.yul\":682:722   */\n  mstore\n    /* \"#utility.yul\":643:645   */\ntag_89:\n  pop\n    /* \"#utility.yul\":786:788   */\n  0x1f\n    /* \"#utility.yul\":765:780   */\n  add\n  not(0x1f)\n    /* \"#utility.yul\":761:790   */\n  and\n    /* \"#utility.yul\":752:791   */\n  swap3\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":793:797   */\n  0x20\n    /* \"#utility.yul\":748:798   */\n  add\n  swap3\n    /* \"#utility.yul\":378:804   */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":809:1369   */\ntag_46:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1106:1121   */\n  dup7\n  dup2\n  and\n    /* \"#utility.yul\":1088:1122   */\n  dup3\n  mstore\n    /* \"#utility.yul\":1158:1173   */\n  dup6\n  and\n    /* \"#utility.yul\":1153:1155   */\n  0x20\n    /* \"#utility.yul\":1138:1156   */\n  dup3\n  add\n    /* \"#utility.yul\":1131:1174   */\n  mstore\n    /* \"#utility.yul\":1205:1207   */\n  0x40\n    /* \"#utility.yul\":1190:1208   */\n  dup2\n  add\n    /* \"#utility.yul\":1183:1217   */\n  dup5\n  swap1\n  mstore\n    /* \"#utility.yul\":1248:1250   */\n  0x60\n    /* \"#utility.yul\":1233:1251   */\n  dup2\n  add\n    /* \"#utility.yul\":1226:1260   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":1068:1071   */\n  0xa0\n    /* \"#utility.yul\":1291:1294   */\n  0x80\n    /* \"#utility.yul\":1276:1295   */\n  dup3\n  add\n    /* \"#utility.yul\":1269:1301   */\n  dup2\n  swap1\n  mstore\n    /* \"#utility.yul\":1031:1035   */\n  0x00\n  swap1\n    /* \"#utility.yul\":1318:1363   */\n  tag_91\n  swap1\n    /* \"#utility.yul\":1343:1362   */\n  dup4\n  add\n    /* \"#utility.yul\":1335:1341   */\n  dup5\n    /* \"#utility.yul\":1318:1363   */\n  tag_84\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":1310:1363   */\n  swap8\n    /* \"#utility.yul\":1040:1369   */\n  swap7\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1374:1593   */\ntag_61:\n    /* \"#utility.yul\":1523:1525   */\n  0x20\n    /* \"#utility.yul\":1512:1521   */\n  dup2\n    /* \"#utility.yul\":1505:1526   */\n  mstore\n    /* \"#utility.yul\":1486:1490   */\n  0x00\n    /* \"#utility.yul\":1543:1587   */\n  tag_83\n    /* \"#utility.yul\":1583:1585   */\n  0x20\n    /* \"#utility.yul\":1572:1581   */\n  dup4\n    /* \"#utility.yul\":1568:1586   */\n  add\n    /* \"#utility.yul\":1560:1566   */\n  dup5\n    /* \"#utility.yul\":1543:1587   */\n  tag_84\n  jump\t// in\n    /* \"#utility.yul\":3083:3312   */\ntag_30:\n    /* \"#utility.yul\":3123:3126   */\n  0x00\n    /* \"#utility.yul\":3154:3155   */\n  dup3\n    /* \"#utility.yul\":3150:3156   */\n  not\n    /* \"#utility.yul\":3147:3148   */\n  dup3\n    /* \"#utility.yul\":3144:3157   */\n  gt\n    /* \"#utility.yul\":3141:3143   */\n  iszero\n  tag_99\n  jumpi\n  shl(0xe0, 0x4e487b71)\n    /* \"#utility.yul\":3180:3213   */\n  dup2\n  mstore\n    /* \"#utility.yul\":3236:3240   */\n  0x11\n    /* \"#utility.yul\":3233:3234   */\n  0x04\n    /* \"#utility.yul\":3226:3241   */\n  mstore\n    /* \"#utility.yul\":3266:3270   */\n  0x24\n    /* \"#utility.yul\":3187:3190   */\n  dup2\n    /* \"#utility.yul\":3254:3271   */\n  revert\n    /* \"#utility.yul\":3141:3143   */\ntag_99:\n  pop\n    /* \"#utility.yul\":3297:3306   */\n  add\n  swap1\n    /* \"#utility.yul\":3131:3312   */\n  jump\t// out\n    /* \"#utility.yul\":3317:3697   */\ntag_70:\n    /* \"#utility.yul\":3396:3397   */\n  0x01\n    /* \"#utility.yul\":3392:3404   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":3439:3451   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":3460:3462   */\n  tag_101\n  jumpi\n    /* \"#utility.yul\":3514:3518   */\n  0x7f\n    /* \"#utility.yul\":3506:3512   */\n  dup3\n    /* \"#utility.yul\":3502:3519   */\n  and\n    /* \"#utility.yul\":3492:3519   */\n  swap2\n  pop\n    /* \"#utility.yul\":3460:3462   */\ntag_101:\n    /* \"#utility.yul\":3567:3569   */\n  0x20\n    /* \"#utility.yul\":3559:3565   */\n  dup3\n    /* \"#utility.yul\":3556:3570   */\n  lt\n    /* \"#utility.yul\":3536:3554   */\n  dup2\n    /* \"#utility.yul\":3533:3571   */\n  eq\n    /* \"#utility.yul\":3530:3532   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":3613:3623   */\n  0x4e487b71\n    /* \"#utility.yul\":3608:3611   */\n  0xe0\n    /* \"#utility.yul\":3604:3624   */\n  shl\n    /* \"#utility.yul\":3601:3602   */\n  0x00\n    /* \"#utility.yul\":3594:3625   */\n  mstore\n    /* \"#utility.yul\":3648:3652   */\n  0x22\n    /* \"#utility.yul\":3645:3646   */\n  0x04\n    /* \"#utility.yul\":3638:3653   */\n  mstore\n    /* \"#utility.yul\":3676:3680   */\n  0x24\n    /* \"#utility.yul\":3673:3674   */\n  0x00\n    /* \"#utility.yul\":3666:3681   */\n  revert\n    /* \"#utility.yul\":3530:3532   */\ntag_102:\n  pop\n    /* \"#utility.yul\":3372:3697   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3702:4048   */\ntag_103:\n    /* \"#utility.yul\":3812:3814   */\n  0x1f\n    /* \"#utility.yul\":3793:3806   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":3789:3816   */\n  and\n    /* \"#utility.yul\":3777:3817   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3832:3866   */\n  dup2\n  gt\n    /* \"#utility.yul\":3868:3890   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":3829:3891   */\n  or\n    /* \"#utility.yul\":3826:3828   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":3933:3943   */\n  0x4e487b71\n    /* \"#utility.yul\":3928:3931   */\n  0xe0\n    /* \"#utility.yul\":3924:3944   */\n  shl\n    /* \"#utility.yul\":3921:3922   */\n  0x00\n    /* \"#utility.yul\":3914:3945   */\n  mstore\n    /* \"#utility.yul\":3968:3972   */\n  0x41\n    /* \"#utility.yul\":3965:3966   */\n  0x04\n    /* \"#utility.yul\":3958:3973   */\n  mstore\n    /* \"#utility.yul\":3996:4000   */\n  0x24\n    /* \"#utility.yul\":3993:3994   */\n  0x00\n    /* \"#utility.yul\":3986:4001   */\n  revert\n    /* \"#utility.yul\":3826:3828   */\ntag_105:\n    /* \"#utility.yul\":4027:4029   */\n  0x40\n    /* \"#utility.yul\":4020:4042   */\n  mstore\n  pop\n  pop\n    /* \"#utility.yul\":3749:4048   */\n  jump\t// out\n    /* \"#utility.yul\":4053:4238   */\ntag_56:\n    /* \"#utility.yul\":4088:4091   */\n  0x00\n    /* \"#utility.yul\":4130:4131   */\n  0x03\n    /* \"#utility.yul\":4112:4128   */\n  returndatasize\n    /* \"#utility.yul\":4109:4132   */\n  gt\n    /* \"#utility.yul\":4106:4108   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":4180:4181   */\n  0x04\n    /* \"#utility.yul\":4175:4178   */\n  dup2\n    /* \"#utility.yul\":4170:4173   */\n  dup3\n    /* \"#utility.yul\":4155:4182   */\n  returndatacopy\n    /* \"#utility.yul\":4211:4221   */\n  mload\n    /* \"#utility.yul\":4206:4209   */\n  0xe0\n    /* \"#utility.yul\":4202:4222   */\n  shr\n    /* \"#utility.yul\":4106:4108   */\ntag_107:\n    /* \"#utility.yul\":4096:4238   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":4243:4914   */\ntag_58:\n    /* \"#utility.yul\":4282:4285   */\n  0x00\n    /* \"#utility.yul\":4324:4328   */\n  0x44\n    /* \"#utility.yul\":4306:4322   */\n  returndatasize\n    /* \"#utility.yul\":4303:4329   */\n  lt\n    /* \"#utility.yul\":4300:4302   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":4290:4914   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":4300:4302   */\ntag_109:\n    /* \"#utility.yul\":4366:4368   */\n  0x40\n    /* \"#utility.yul\":4360:4369   */\n  mload\n  not(0x03)\n    /* \"#utility.yul\":4431:4447   */\n  returndatasize\n    /* \"#utility.yul\":4427:4452   */\n  dup2\n  add\n    /* \"#utility.yul\":4424:4425   */\n  0x04\n    /* \"#utility.yul\":4360:4369   */\n  dup4\n    /* \"#utility.yul\":4403:4453   */\n  returndatacopy\n    /* \"#utility.yul\":4476:4487   */\n  dup2\n  mload\n    /* \"#utility.yul\":4506:4522   */\n  returndatasize\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":4574:4588   */\n  dup1\n  dup4\n  gt\n    /* \"#utility.yul\":4605:4609   */\n  0x24\n    /* \"#utility.yul\":4593:4610   */\n  dup5\n  add\n    /* \"#utility.yul\":4590:4615   */\n  dup4\n  lt\n    /* \"#utility.yul\":4571:4616   */\n  or\n    /* \"#utility.yul\":4568:4570   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":4619:4624   */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4290:4914   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":4568:4570   */\ntag_110:\n    /* \"#utility.yul\":4656:4662   */\n  dup3\n    /* \"#utility.yul\":4650:4654   */\n  dup6\n    /* \"#utility.yul\":4646:4663   */\n  add\n    /* \"#utility.yul\":4635:4663   */\n  swap2\n  pop\n    /* \"#utility.yul\":4692:4695   */\n  dup2\n    /* \"#utility.yul\":4686:4696   */\n  mload\n    /* \"#utility.yul\":4719:4721   */\n  dup2\n    /* \"#utility.yul\":4711:4717   */\n  dup2\n    /* \"#utility.yul\":4708:4722   */\n  gt\n    /* \"#utility.yul\":4705:4707   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":4725:4730   */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4290:4914   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":4705:4707   */\ntag_111:\n    /* \"#utility.yul\":4809:4811   */\n  dup5\n    /* \"#utility.yul\":4790:4806   */\n  returndatasize\n    /* \"#utility.yul\":4784:4788   */\n  dup8\n    /* \"#utility.yul\":4780:4807   */\n  add\n    /* \"#utility.yul\":4776:4812   */\n  add\n    /* \"#utility.yul\":4769:4773   */\n  0x20\n    /* \"#utility.yul\":4760:4766   */\n  dup3\n    /* \"#utility.yul\":4755:4758   */\n  dup6\n    /* \"#utility.yul\":4751:4767   */\n  add\n    /* \"#utility.yul\":4747:4774   */\n  add\n    /* \"#utility.yul\":4744:4813   */\n  gt\n    /* \"#utility.yul\":4741:4743   */\n  iszero\n  tag_112\n  jumpi\n    /* \"#utility.yul\":4816:4821   */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4290:4914   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":4741:4743   */\ntag_112:\n    /* \"#utility.yul\":4832:4889   */\n  tag_113\n    /* \"#utility.yul\":4883:4887   */\n  0x20\n    /* \"#utility.yul\":4874:4880   */\n  dup3\n    /* \"#utility.yul\":4866:4872   */\n  dup7\n    /* \"#utility.yul\":4862:4881   */\n  add\n    /* \"#utility.yul\":4858:4888   */\n  add\n    /* \"#utility.yul\":4852:4856   */\n  dup8\n    /* \"#utility.yul\":4832:4889   */\n  tag_103\n  jump\t// in\ntag_113:\n  pop\n    /* \"#utility.yul\":4905:4908   */\n  swap1\n  swap6\n    /* \"#utility.yul\":4290:4914   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\ntag_80:\n    /* \"msc_token/ERC1155.sol\":109:984  contract GameItems is ERC1155 {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_9be393994f02169c966a8f7d954e5f555f9d6fdea83c170362ff79cf2c5ce4f1 68747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e\n\nsub_0: assembly {\n        /* \"msc_token/ERC1155.sol\":109:984  contract GameItems is ERC1155 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5b2725ed\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xd562e204\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xd562e204\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe3e55f08\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x5b2725ed\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6ecf11d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x13dc989f\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x13dc989f\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3e4bee38\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":14200:14225   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":14188:14190   */\n      0x20\n        /* \"#utility.yul\":14173:14191   */\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":9284:9298   */\n      swap1\n      iszero\n        /* \"#utility.yul\":9277:9299   */\n      iszero\n        /* \"#utility.yul\":9259:9300   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9247:9249   */\n      0x20\n        /* \"#utility.yul\":9232:9250   */\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_24\n        /* \"#utility.yul\":9214:9306   */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n        /* \"msc_token/ERC1155.sol\":273:306  uint256 public constant SWORD = 3 */\n    tag_6:\n      tag_20\n        /* \"msc_token/ERC1155.sol\":305:306  3 */\n      0x03\n        /* \"msc_token/ERC1155.sol\":273:306  uint256 public constant SWORD = 3 */\n      dup2\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n    tag_7:\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"msc_token/ERC1155.sol\":146:178  uint256 public constant GOLD = 0 */\n    tag_8:\n      tag_20\n        /* \"msc_token/ERC1155.sol\":177:178  0 */\n      0x00\n        /* \"msc_token/ERC1155.sol\":146:178  uint256 public constant GOLD = 0 */\n      dup2\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_9:\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n        /* \"msc_token/ERC1155.sol\":313:347  uint256 public constant SHIELD = 4 */\n    tag_10:\n      tag_20\n        /* \"msc_token/ERC1155.sol\":346:347  4 */\n      0x04\n        /* \"msc_token/ERC1155.sol\":313:347  uint256 public constant SHIELD = 4 */\n      dup2\n      jump\n        /* \"msc_token/ERC1155.sol\":673:981  function mintBatch() public {\r... */\n    tag_11:\n      tag_41\n      tag_58\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3131:3284  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      tag_41\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n        /* \"msc_token/ERC1155.sol\":226:266  uint256 public constant THORS_HAMMER = 2 */\n    tag_13:\n      tag_20\n        /* \"msc_token/ERC1155.sol\":265:266  2 */\n      0x02\n        /* \"msc_token/ERC1155.sol\":226:266  uint256 public constant THORS_HAMMER = 2 */\n      dup2\n      jump\n        /* \"msc_token/ERC1155.sol\":185:219  uint256 public constant SILVER = 1 */\n    tag_14:\n      tag_20\n        /* \"msc_token/ERC1155.sol\":218:219  1 */\n      0x01\n        /* \"msc_token/ERC1155.sol\":185:219  uint256 public constant SILVER = 1 */\n      dup2\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      tag_26\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3450:3454  bool */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3491  _operatorApprovals */\n      0x01\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3510  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3584:3973  function safeTransferFrom(... */\n    tag_16:\n      tag_41\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_23:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2256:2263  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2283:2304  account != address(0) */\n      dup4\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2275:2352  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10567:10569   */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2275:2352  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10549:10570   */\n      mstore\n        /* \"#utility.yul\":10606:10608   */\n      0x2b\n        /* \"#utility.yul\":10586:10604   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10579:10609   */\n      mstore\n        /* \"#utility.yul\":10645:10679   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":10625:10643   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10618:10680   */\n      mstore\n      shl(0xa8, 0x65726f2061646472657373)\n        /* \"#utility.yul\":10696:10714   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10689:10730   */\n      mstore\n        /* \"#utility.yul\":10747:10766   */\n      0x84\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2275:2352  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2378  _balances */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2382  _balances[id] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2391  _balances[id][account] */\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_29:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1323:1327  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1399  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1467  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_84\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1415:1467  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1467  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_84:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1519  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_86\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1483:1519  super.supportsInterface(interfaceId) */\n    tag_86:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1339:1519  return... */\n      swap3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_35:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1985:1998  string memory */\n      0x60\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2017:2021  _uri */\n      0x02\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2010:2021  return _uri */\n      dup1\n      sload\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_90\n      jump\t// in\n    tag_91:\n      dup1\n      iszero\n      tag_92\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_93\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_92)\n    tag_93:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_94:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_94\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n    tag_44:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4290  from == _msgSender() */\n      dup6\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4290  from == _msgSender() */\n      eq\n      dup1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4330  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_99\n      jumpi\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4294:4330  isApprovedForAll(from, _msgSender()) */\n      tag_99\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4311:4315  from */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_70\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4294:4330  isApprovedForAll(from, _msgSender()) */\n    tag_99:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11795:11797   */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11777:11798   */\n      mstore\n        /* \"#utility.yul\":11834:11836   */\n      0x32\n        /* \"#utility.yul\":11814:11832   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11807:11837   */\n      mstore\n        /* \"#utility.yul\":11873:11907   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":11853:11871   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11846:11908   */\n      mstore\n      shl(0x72, 0x1bdddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":11924:11942   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11917:11965   */\n      mstore\n        /* \"#utility.yul\":11982:12001   */\n      0x84\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n      tag_81\n        /* \"#utility.yul\":11767:12007   */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n    tag_101:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4468  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_104\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4439:4443  from */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4445:4447  to */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4449:4452  ids */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4454:4461  amounts */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4463:4467  data */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4438  _safeBatchTransferFrom */\n      tag_105\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4468  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_104:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_51:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2706:2722  uint256[] memory */\n      0x60\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2765:2768  ids */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2765:2775  ids.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2754  accounts */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2761  accounts.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2775  accounts.length == ids.length */\n      eq\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13035:13037   */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13017:13038   */\n      mstore\n        /* \"#utility.yul\":13074:13076   */\n      0x29\n        /* \"#utility.yul\":13054:13072   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13047:13077   */\n      mstore\n        /* \"#utility.yul\":13113:13147   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":13093:13111   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13086:13148   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":13164:13182   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13157:13196   */\n      mstore\n        /* \"#utility.yul\":13213:13232   */\n      0x84\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_81\n        /* \"#utility.yul\":13007:13238   */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_107:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2832:2862  uint256[] memory batchBalances */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2879:2887  accounts */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2879:2894  accounts.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2865:2895  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_110\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_110:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_111\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_111:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2832:2895  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2911:2920  uint256 i */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_112:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2930:2938  accounts */\n      dup5\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2930:2945  accounts.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2926:2927  i */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2926:2945  i < accounts.length */\n      lt\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_113\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:3015  balanceOf(accounts[i], ids[i]) */\n      tag_115\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2995:3003  accounts */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3004:3005  i */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2995:3006  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_116\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_116:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3008:3011  ids */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3012:3013  i */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3008:3014  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_117\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_117:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:2994  balanceOf */\n      tag_23\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:3015  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_115:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:2979  batchBalances */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2980:2981  i */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:2982  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_118\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_118:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:3015  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2947:2950  ++i */\n      tag_119\n      dup2\n      tag_120\n      jump\t// in\n    tag_119:\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_112)\n    tag_113:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3043:3056  batchBalances */\n      swap4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/ERC1155.sol\":673:981  function mintBatch() public {\r... */\n    tag_58:\n        /* \"msc_token/ERC1155.sol\":735:754  new uint256[](1000) */\n      0x40\n      dup1\n      mload\n        /* \"msc_token/ERC1155.sol\":749:753  1000 */\n      0x03e8\n        /* \"msc_token/ERC1155.sol\":735:754  new uint256[](1000) */\n      dup1\n      dup3\n      mstore\n      0x7d20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n        /* \"msc_token/ERC1155.sol\":712:732  uint256[] memory ids */\n      0x00\n      swap2\n        /* \"msc_token/ERC1155.sol\":735:754  new uint256[](1000) */\n      0x20\n      dup3\n      add\n      0x7d00\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      pop\n      pop\n        /* \"msc_token/ERC1155.sol\":792:811  new uint256[](1000) */\n      0x40\n      dup1\n      mload\n        /* \"msc_token/ERC1155.sol\":806:810  1000 */\n      0x03e8\n        /* \"msc_token/ERC1155.sol\":792:811  new uint256[](1000) */\n      dup1\n      dup3\n      mstore\n      0x7d20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n        /* \"msc_token/ERC1155.sol\":712:754  uint256[] memory ids = new uint256[](1000) */\n      swap3\n      swap4\n      pop\n        /* \"msc_token/ERC1155.sol\":765:789  uint256[] memory amounts */\n      0x00\n      swap3\n        /* \"msc_token/ERC1155.sol\":792:811  new uint256[](1000) */\n      swap2\n      pop\n      0x20\n      dup3\n      add\n      0x7d00\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"msc_token/ERC1155.sol\":765:811  uint256[] memory amounts = new uint256[](1000) */\n      swap1\n      pop\n        /* \"msc_token/ERC1155.sol\":827:836  uint256 i */\n      0x00\n        /* \"msc_token/ERC1155.sol\":822:923  for (uint256 i = 0; i < 1000; i++) {\r... */\n    tag_126:\n        /* \"msc_token/ERC1155.sol\":846:850  1000 */\n      0x03e8\n        /* \"msc_token/ERC1155.sol\":842:843  i */\n      dup2\n        /* \"msc_token/ERC1155.sol\":842:850  i < 1000 */\n      lt\n        /* \"msc_token/ERC1155.sol\":822:923  for (uint256 i = 0; i < 1000; i++) {\r... */\n      iszero\n      tag_127\n      jumpi\n        /* \"msc_token/ERC1155.sol\":881:882  i */\n      dup1\n        /* \"msc_token/ERC1155.sol\":872:875  ids */\n      dup4\n        /* \"msc_token/ERC1155.sol\":876:877  i */\n      dup3\n        /* \"msc_token/ERC1155.sol\":872:878  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_129\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_129:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"msc_token/ERC1155.sol\":872:882  ids[i] = i */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"msc_token/ERC1155.sol\":910:911  1 */\n      0x01\n        /* \"msc_token/ERC1155.sol\":897:904  amounts */\n      dup3\n        /* \"msc_token/ERC1155.sol\":905:906  i */\n      dup3\n        /* \"msc_token/ERC1155.sol\":897:907  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_130\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_130:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"msc_token/ERC1155.sol\":897:911  amounts[i] = 1 */\n      mstore\n        /* \"msc_token/ERC1155.sol\":852:855  i++ */\n      dup1\n      tag_131\n      dup2\n      tag_120\n      jump\t// in\n    tag_131:\n      swap2\n      pop\n      pop\n        /* \"msc_token/ERC1155.sol\":822:923  for (uint256 i = 0; i < 1000; i++) {\r... */\n      jump(tag_126)\n    tag_127:\n      pop\n        /* \"msc_token/ERC1155.sol\":933:973  _mintBatch(msg.sender, ids, amounts, \"\") */\n      tag_132\n        /* \"msc_token/ERC1155.sol\":944:954  msg.sender */\n      caller\n        /* \"msc_token/ERC1155.sol\":956:959  ids */\n      dup4\n        /* \"msc_token/ERC1155.sol\":961:968  amounts */\n      dup4\n        /* \"msc_token/ERC1155.sol\":933:973  _mintBatch(msg.sender, ids, amounts, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"msc_token/ERC1155.sol\":933:943  _mintBatch */\n      tag_133\n        /* \"msc_token/ERC1155.sol\":933:973  _mintBatch(msg.sender, ids, amounts, \"\") */\n      jump\t// in\n    tag_132:\n        /* \"msc_token/ERC1155.sol\":673:981  function mintBatch() public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3131:3284  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_62:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3277  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_132\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3258:3266  operator */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3268:3276  approved */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3243  _setApprovalForAll */\n      tag_137\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3277  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3584:3973  function safeTransferFrom(... */\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3804  from == _msgSender() */\n      dup6\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3804  from == _msgSender() */\n      eq\n      dup1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3844  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_142\n      jumpi\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3808:3844  isApprovedForAll(from, _msgSender()) */\n      tag_142\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3825:3829  from */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_70\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3808:3844  isApprovedForAll(from, _msgSender()) */\n    tag_142:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3763:3911  require(... */\n      tag_144\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10979:10981   */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3763:3911  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10961:10982   */\n      mstore\n        /* \"#utility.yul\":11018:11020   */\n      0x29\n        /* \"#utility.yul\":10998:11016   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10991:11021   */\n      mstore\n        /* \"#utility.yul\":11057:11091   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":11037:11055   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11030:11092   */\n      mstore\n      shl(0xba, 0x08185c1c1c9bdd9959)\n        /* \"#utility.yul\":11108:11126   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11101:11140   */\n      mstore\n        /* \"#utility.yul\":11157:11176   */\n      0x84\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3763:3911  require(... */\n      tag_81\n        /* \"#utility.yul\":10951:11182   */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3763:3911  require(... */\n    tag_144:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3966  _safeTransferFrom(from, to, id, amount, data) */\n      tag_104\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3939:3943  from */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3945:3947  to */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3949:3951  id */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3953:3959  amount */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3961:3965  data */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3938  _safeTransferFrom */\n      tag_148\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3966  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":771:1148  function isContract(address account) internal view returns (bool) {... */\n    tag_78:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":1087:1107  extcodesize(account) */\n      extcodesize\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":1133:1141  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":771:1148  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6068:7113  function _safeBatchTransferFrom(... */\n    tag_105:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6288:6295  amounts */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6288:6302  amounts.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6277  ids */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6284  ids.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6302  ids.length == amounts.length */\n      eq\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6266:6347  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_155\n      jump\t// in\n    tag_153:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6365:6381  to != address(0) */\n      dup5\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6357:6423  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_158\n      jump\t// in\n    tag_156:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6434:6450  address operator */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_162:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6571:6574  ids */\n      dup5\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6571:6581  ids.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6567:6568  i */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6567:6581  i < ids.length */\n      lt\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_163\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6602:6612  uint256 id */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6615:6618  ids */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6619:6620  i */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6615:6621  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_165\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_165:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6602:6621  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6635:6649  uint256 amount */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6659  amounts */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6660:6661  i */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6662  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_166\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_166:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6677:6696  uint256 fromBalance */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6699:6712  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6699:6718  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6662  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6740:6761  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6732:6808  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_169\n      jump\t// in\n    tag_167:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6859  _balances */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6863  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6869  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6892  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6892  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6937  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6947  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6892  fromBalance - amount */\n      dup5\n      swap3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6859  _balances */\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6947  _balances[id][to] += amount */\n      tag_170\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6892  fromBalance - amount */\n      dup5\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6947  _balances[id][to] += amount */\n      tag_171\n      jump\t// in\n    tag_170:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n      pop\n      pop\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6583:6586  ++i */\n      dup1\n      tag_172\n      swap1\n      tag_120\n      jump\t// in\n    tag_172:\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_162)\n    tag_163:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7003:7005  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6997:7001  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6987:6995  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7007:7010  ids */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7012:7019  amounts */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_173\n      swap3\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7106  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_175\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7067:7075  operator */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7077:7081  from */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7083:7085  to */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7090  ids */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7092:7099  amounts */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7101:7105  data */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7066  _doSafeBatchTransferAcceptanceCheck */\n      tag_176\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7106  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_175:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6068:7113  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9293:10008  function _mintBatch(... */\n    tag_133:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9465:9481  to != address(0) */\n      dup5\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9457:9519  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13854:13856   */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9457:9519  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13836:13857   */\n      mstore\n        /* \"#utility.yul\":13893:13895   */\n      0x21\n        /* \"#utility.yul\":13873:13891   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13866:13896   */\n      mstore\n        /* \"#utility.yul\":13932:13966   */\n      0x455243313135353a206d696e7420746f20746865207a65726f20616464726573\n        /* \"#utility.yul\":13912:13930   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13905:13967   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":13983:14001   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13976:14007   */\n      mstore\n        /* \"#utility.yul\":14024:14043   */\n      0x84\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9457:9519  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":13826:14049   */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9457:9519  require(to != address(0), \"ERC1155: mint to the zero address\") */\n    tag_178:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9551:9558  amounts */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9551:9565  amounts.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9537:9540  ids */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9537:9547  ids.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9537:9565  ids.length == amounts.length */\n      eq\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9529:9610  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_155\n      jump\t// in\n    tag_181:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9621:9637  address operator */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9740:9841  for (uint256 i = 0; i < ids.length; i++) {... */\n    tag_185:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9764:9767  ids */\n      dup5\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9764:9774  ids.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9760:9761  i */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9760:9774  i < ids.length */\n      lt\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9740:9841  for (uint256 i = 0; i < ids.length; i++) {... */\n      iszero\n      tag_186\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9820:9827  amounts */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9828:9829  i */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9820:9830  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_188\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_188:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9795:9804  _balances */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9795:9812  _balances[ids[i]] */\n      dup1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9805:9808  ids */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9809:9810  i */\n      dup5\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9805:9811  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_189\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_189:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9795:9812  _balances[ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9795:9816  _balances[ids[i]][to] */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9813:9815  to */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9795:9816  _balances[ids[i]][to] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9795:9830  _balances[ids[i]][to] += amounts[i] */\n      dup3\n      dup3\n      sload\n      tag_190\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_190:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9776:9779  i++ */\n      dup2\n      swap1\n      pop\n      tag_191\n      dup2\n      tag_120\n      jump\t// in\n    tag_191:\n      swap2\n      pop\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9740:9841  for (uint256 i = 0; i < ids.length; i++) {... */\n      jump(tag_185)\n    tag_186:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9892:9894  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9856:9909  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9888:9889  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9856:9909  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9870:9878  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9856:9909  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9896:9899  ids */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9901:9908  amounts */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9856:9909  TransferBatch(operator, address(0), to, ids, amounts) */\n      mload(0x40)\n      tag_192\n      swap3\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9920:10001  _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data) */\n      tag_104\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9956:9964  operator */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9974:9975  0 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9978:9980  to */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9982:9985  ids */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9987:9994  amounts */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9996:10000  data */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9920:9955  _doSafeBatchTransferAcceptanceCheck */\n      tag_176\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9920:10001  _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data) */\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12074:12397  function _setApprovalForAll(... */\n    tag_137:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12224:12232  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12232  owner != operator */\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12220  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12232  owner != operator */\n      and\n      eq\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12625:12627   */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12607:12628   */\n      mstore\n        /* \"#utility.yul\":12664:12666   */\n      0x29\n        /* \"#utility.yul\":12644:12662   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12637:12667   */\n      mstore\n        /* \"#utility.yul\":12703:12737   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":12683:12701   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12676:12738   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":12754:12772   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12747:12786   */\n      mstore\n        /* \"#utility.yul\":12803:12822   */\n      0x84\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_81\n        /* \"#utility.yul\":12597:12828   */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_195:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12313  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12306  _operatorApprovals */\n      0x01\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12313  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12323  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12334  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12349:12390  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":9259:9300   */\n      swap2\n      dup3\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12349:12390  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":9232:9250   */\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12349:12390  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12074:12397  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4925:5722  function _safeTransferFrom(... */\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5106:5122  to != address(0) */\n      dup5\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5098:5164  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_158\n      jump\t// in\n    tag_200:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5217:5313  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_203\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5248:5252  from */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5256  to */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5279  _asSingletonArray(id) */\n      tag_204\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5276:5278  id */\n      dup9\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5275  _asSingletonArray */\n      tag_205\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5279  _asSingletonArray(id) */\n      jump\t// in\n    tag_204:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5281:5306  _asSingletonArray(amount) */\n      tag_104\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5299:5305  amount */\n      dup9\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5281:5298  _asSingletonArray */\n      tag_205\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5281:5306  _asSingletonArray(amount) */\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5217:5313  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n    tag_203:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5324:5343  uint256 fromBalance */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5346:5359  _balances[id] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5346:5365  _balances[id][from] */\n      dup11\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5383:5404  fromBalance >= amount */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5375:5451  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_169\n      jump\t// in\n    tag_207:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5494  _balances */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5498  _balances[id] */\n      dup6\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5504  _balances[id][from] */\n      dup12\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5527  fromBalance - amount */\n      dup8\n      dup6\n      sub\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5527  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5564  _balances[id][to] */\n      swap1\n      dup9\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5574  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5527  fromBalance - amount */\n      dup7\n      swap3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5494  _balances */\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5574  _balances[id][to] += amount */\n      tag_209\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5527  fromBalance - amount */\n      dup5\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5574  _balances[id][to] += amount */\n      tag_171\n      jump\t// in\n    tag_209:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":14410:14435   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":14466:14468   */\n      0x20\n        /* \"#utility.yul\":14451:14469   */\n      dup2\n      add\n        /* \"#utility.yul\":14444:14478   */\n      dup7\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      dup10\n      and\n      swap3\n      dup11\n      dup3\n      and\n      swap3\n      swap2\n      dup7\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":14383:14401   */\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5715  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_212\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5678:5686  operator */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5688:5692  from */\n      dup9\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5694:5696  to */\n      dup9\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5698:5700  id */\n      dup9\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5702:5708  amount */\n      dup9\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5710:5714  data */\n      dup9\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5677  _doSafeTransferAcceptanceCheck */\n      tag_213\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5715  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_212:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4925:5722  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14282:15074  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14514:14527  to.isContract */\n      dup5\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":1087:1107  extcodesize(account) */\n      extcodesize\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":1133:1141  size > 0 */\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14510:15068  if (to.isContract()) {... */\n      tag_175\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14628  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14592  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14628  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_218\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14593:14601  operator */\n      dup10\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14603:14607  from */\n      dup10\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14609:14612  ids */\n      dup9\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14614:14621  amounts */\n      dup9\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14623:14627  data */\n      dup9\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14628  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_219\n      jump\t// in\n    tag_218:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_220\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_220:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_221\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_222\n      swap2\n      dup2\n      add\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      0x01\n    tag_221:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14545:15058  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_224\n      jumpi\n      tag_228\n      tag_229\n      jump\t// in\n    tag_228:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_227\n      jumpi\n      pop\n      tag_230\n      tag_231\n      jump\t// in\n    tag_230:\n      dup1\n      tag_232\n      jumpi\n      pop\n      jump(tag_226)\n    tag_232:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14934:14940  reason */\n      dup1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14927:14941  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14545:15058  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_227:\n      pop\n    tag_226:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14981:15043  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9737:9739   */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14981:15043  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9719:9740   */\n      mstore\n        /* \"#utility.yul\":9776:9778   */\n      0x34\n        /* \"#utility.yul\":9756:9774   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9749:9779   */\n      mstore\n        /* \"#utility.yul\":9815:9849   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":9795:9813   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9788:9850   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":9866:9884   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9859:9909   */\n      mstore\n        /* \"#utility.yul\":9926:9945   */\n      0x84\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14981:15043  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_81\n        /* \"#utility.yul\":9709:9951   */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14545:15058  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_224:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14707:14767  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14703:14860  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_212\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14791:14841  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_239\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15080:15273  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_205:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15213:15214  1 */\n      0x01\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15146:15162  uint256[] memory */\n      0x60\n      swap2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15174:15196  uint256[] memory array */\n      0x00\n      swap2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15174:15215  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15236:15243  element */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15230  array */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15231:15232  0 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15233  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_243\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_243:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15243  array[0] = element */\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15261:15266  array */\n      swap3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15080:15273  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13551:14276  function _doSafeTransferAcceptanceCheck(... */\n    tag_213:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13758:13771  to.isContract */\n      dup5\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":1087:1107  extcodesize(account) */\n      extcodesize\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":1133:1141  size > 0 */\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13754:14270  if (to.isContract()) {... */\n      tag_175\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13831  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_247\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13832:13840  operator */\n      dup10\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13842:13846  from */\n      dup10\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13848:13850  id */\n      dup9\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13852:13858  amount */\n      dup9\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13860:13864  data */\n      dup9\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_248\n      jump\t// in\n    tag_247:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_249\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_249:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_250\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_251\n      swap2\n      dup2\n      add\n      swap1\n      tag_223\n      jump\t// in\n    tag_251:\n      0x01\n    tag_250:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13789:14260  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_252\n      jumpi\n      tag_228\n      tag_229\n      jump\t// in\n    tag_252:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13914:13969  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13910:14062  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_212\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13993:14043  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_239\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_265:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:113   */\n    tag_267:\n        /* \"#utility.yul\":63:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:947   */\n    tag_268:\n        /* \"#utility.yul\":246:251   */\n      0x00\n        /* \"#utility.yul\":299:302   */\n      dup3\n        /* \"#utility.yul\":292:296   */\n      0x1f\n        /* \"#utility.yul\":284:290   */\n      dup4\n        /* \"#utility.yul\":280:297   */\n      add\n        /* \"#utility.yul\":276:303   */\n      slt\n        /* \"#utility.yul\":266:268   */\n      tag_270\n      jumpi\n        /* \"#utility.yul\":321:326   */\n      dup1\n        /* \"#utility.yul\":314:319   */\n      dup2\n        /* \"#utility.yul\":307:327   */\n      revert\n        /* \"#utility.yul\":266:268   */\n    tag_270:\n        /* \"#utility.yul\":361:367   */\n      dup2\n        /* \"#utility.yul\":348:368   */\n      calldataload\n        /* \"#utility.yul\":387:391   */\n      0x20\n        /* \"#utility.yul\":410:453   */\n      tag_271\n        /* \"#utility.yul\":450:452   */\n      dup3\n        /* \"#utility.yul\":410:453   */\n      tag_272\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":482:484   */\n      0x40\n        /* \"#utility.yul\":476:485   */\n      mload\n        /* \"#utility.yul\":494:525   */\n      tag_273\n        /* \"#utility.yul\":522:524   */\n      dup3\n        /* \"#utility.yul\":514:520   */\n      dup3\n        /* \"#utility.yul\":494:525   */\n      tag_274\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":560:578   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":594:609   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":629:644   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":679:680   */\n      0x05\n        /* \"#utility.yul\":675:685   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":663:686   */\n      dup8\n      add\n        /* \"#utility.yul\":659:691   */\n      dup5\n      add\n        /* \"#utility.yul\":656:697   */\n      dup9\n      lt\n        /* \"#utility.yul\":653:655   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":714:719   */\n      dup6\n        /* \"#utility.yul\":707:712   */\n      dup7\n        /* \"#utility.yul\":700:720   */\n      revert\n        /* \"#utility.yul\":653:655   */\n    tag_275:\n        /* \"#utility.yul\":740:745   */\n      dup6\n        /* \"#utility.yul\":754:917   */\n    tag_276:\n        /* \"#utility.yul\":768:770   */\n      dup6\n        /* \"#utility.yul\":765:766   */\n      dup2\n        /* \"#utility.yul\":762:771   */\n      lt\n        /* \"#utility.yul\":754:917   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":825:842   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":813:843   */\n      dup5\n      mstore\n        /* \"#utility.yul\":863:875   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":895:907   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":786:787   */\n      0x01\n        /* \"#utility.yul\":779:788   */\n      add\n        /* \"#utility.yul\":754:917   */\n      jump(tag_276)\n    tag_278:\n      pop\n        /* \"#utility.yul\":935:941   */\n      swap1\n      swap8\n        /* \"#utility.yul\":256:947   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":952:1527   */\n    tag_279:\n        /* \"#utility.yul\":994:999   */\n      0x00\n        /* \"#utility.yul\":1047:1050   */\n      dup3\n        /* \"#utility.yul\":1040:1044   */\n      0x1f\n        /* \"#utility.yul\":1032:1038   */\n      dup4\n        /* \"#utility.yul\":1028:1045   */\n      add\n        /* \"#utility.yul\":1024:1051   */\n      slt\n        /* \"#utility.yul\":1014:1016   */\n      tag_281\n      jumpi\n        /* \"#utility.yul\":1069:1074   */\n      dup1\n        /* \"#utility.yul\":1062:1067   */\n      dup2\n        /* \"#utility.yul\":1055:1075   */\n      revert\n        /* \"#utility.yul\":1014:1016   */\n    tag_281:\n        /* \"#utility.yul\":1109:1115   */\n      dup2\n        /* \"#utility.yul\":1096:1116   */\n      calldataload\n        /* \"#utility.yul\":1135:1153   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1131:1133   */\n      dup2\n        /* \"#utility.yul\":1128:1154   */\n      gt\n        /* \"#utility.yul\":1125:1127   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":1157:1175   */\n      tag_283\n      tag_284\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":1206:1208   */\n      0x40\n        /* \"#utility.yul\":1200:1209   */\n      mload\n        /* \"#utility.yul\":1218:1285   */\n      tag_285\n        /* \"#utility.yul\":1273:1275   */\n      0x1f\n        /* \"#utility.yul\":1254:1267   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1250:1277   */\n      and\n        /* \"#utility.yul\":1279:1283   */\n      0x20\n        /* \"#utility.yul\":1246:1284   */\n      add\n        /* \"#utility.yul\":1200:1209   */\n      dup3\n        /* \"#utility.yul\":1218:1285   */\n      tag_274\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":1309:1311   */\n      dup2\n        /* \"#utility.yul\":1301:1307   */\n      dup2\n        /* \"#utility.yul\":1294:1312   */\n      mstore\n        /* \"#utility.yul\":1355:1358   */\n      dup5\n        /* \"#utility.yul\":1348:1352   */\n      0x20\n        /* \"#utility.yul\":1343:1345   */\n      dup4\n        /* \"#utility.yul\":1335:1341   */\n      dup7\n        /* \"#utility.yul\":1331:1346   */\n      add\n        /* \"#utility.yul\":1327:1353   */\n      add\n        /* \"#utility.yul\":1324:1359   */\n      gt\n        /* \"#utility.yul\":1321:1323   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":1376:1381   */\n      dup3\n        /* \"#utility.yul\":1369:1374   */\n      dup4\n        /* \"#utility.yul\":1362:1382   */\n      revert\n        /* \"#utility.yul\":1321:1323   */\n    tag_286:\n        /* \"#utility.yul\":1444:1446   */\n      dup2\n        /* \"#utility.yul\":1437:1441   */\n      0x20\n        /* \"#utility.yul\":1429:1435   */\n      dup6\n        /* \"#utility.yul\":1425:1442   */\n      add\n        /* \"#utility.yul\":1418:1422   */\n      0x20\n        /* \"#utility.yul\":1410:1416   */\n      dup4\n        /* \"#utility.yul\":1406:1423   */\n      add\n        /* \"#utility.yul\":1393:1447   */\n      calldatacopy\n        /* \"#utility.yul\":1467:1482   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":1484:1488   */\n      0x20\n        /* \"#utility.yul\":1463:1489   */\n      add\n        /* \"#utility.yul\":1456:1497   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1471:1477   */\n      swap3\n        /* \"#utility.yul\":1004:1527   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1532:1802   */\n    tag_71:\n        /* \"#utility.yul\":1600:1606   */\n      0x00\n        /* \"#utility.yul\":1608:1614   */\n      dup1\n        /* \"#utility.yul\":1661:1663   */\n      0x40\n        /* \"#utility.yul\":1649:1658   */\n      dup4\n        /* \"#utility.yul\":1640:1647   */\n      dup6\n        /* \"#utility.yul\":1636:1659   */\n      sub\n        /* \"#utility.yul\":1632:1664   */\n      slt\n        /* \"#utility.yul\":1629:1631   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":1682:1688   */\n      dup2\n        /* \"#utility.yul\":1674:1680   */\n      dup3\n        /* \"#utility.yul\":1667:1689   */\n      revert\n        /* \"#utility.yul\":1629:1631   */\n    tag_288:\n        /* \"#utility.yul\":1710:1739   */\n      tag_289\n        /* \"#utility.yul\":1729:1738   */\n      dup4\n        /* \"#utility.yul\":1710:1739   */\n      tag_265\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":1700:1739   */\n      swap2\n      pop\n        /* \"#utility.yul\":1758:1796   */\n      tag_290\n        /* \"#utility.yul\":1792:1794   */\n      0x20\n        /* \"#utility.yul\":1781:1790   */\n      dup5\n        /* \"#utility.yul\":1777:1795   */\n      add\n        /* \"#utility.yul\":1758:1796   */\n      tag_265\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":1748:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1619:1802   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1807:2790   */\n    tag_43:\n        /* \"#utility.yul\":1961:1967   */\n      0x00\n        /* \"#utility.yul\":1969:1975   */\n      dup1\n        /* \"#utility.yul\":1977:1983   */\n      0x00\n        /* \"#utility.yul\":1985:1991   */\n      dup1\n        /* \"#utility.yul\":1993:1999   */\n      0x00\n        /* \"#utility.yul\":2046:2049   */\n      0xa0\n        /* \"#utility.yul\":2034:2043   */\n      dup7\n        /* \"#utility.yul\":2025:2032   */\n      dup9\n        /* \"#utility.yul\":2021:2044   */\n      sub\n        /* \"#utility.yul\":2017:2050   */\n      slt\n        /* \"#utility.yul\":2014:2016   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":2068:2074   */\n      dup1\n        /* \"#utility.yul\":2060:2066   */\n      dup2\n        /* \"#utility.yul\":2053:2075   */\n      revert\n        /* \"#utility.yul\":2014:2016   */\n    tag_292:\n        /* \"#utility.yul\":2096:2125   */\n      tag_293\n        /* \"#utility.yul\":2115:2124   */\n      dup7\n        /* \"#utility.yul\":2096:2125   */\n      tag_265\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":2086:2125   */\n      swap5\n      pop\n        /* \"#utility.yul\":2144:2182   */\n      tag_294\n        /* \"#utility.yul\":2178:2180   */\n      0x20\n        /* \"#utility.yul\":2167:2176   */\n      dup8\n        /* \"#utility.yul\":2163:2181   */\n      add\n        /* \"#utility.yul\":2144:2182   */\n      tag_265\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":2134:2182   */\n      swap4\n      pop\n        /* \"#utility.yul\":2233:2235   */\n      0x40\n        /* \"#utility.yul\":2222:2231   */\n      dup7\n        /* \"#utility.yul\":2218:2236   */\n      add\n        /* \"#utility.yul\":2205:2237   */\n      calldataload\n        /* \"#utility.yul\":2256:2274   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2297:2299   */\n      dup1\n        /* \"#utility.yul\":2289:2295   */\n      dup3\n        /* \"#utility.yul\":2286:2300   */\n      gt\n        /* \"#utility.yul\":2283:2285   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":2318:2324   */\n      dup3\n        /* \"#utility.yul\":2310:2316   */\n      dup4\n        /* \"#utility.yul\":2303:2325   */\n      revert\n        /* \"#utility.yul\":2283:2285   */\n    tag_295:\n        /* \"#utility.yul\":2346:2407   */\n      tag_296\n        /* \"#utility.yul\":2399:2406   */\n      dup10\n        /* \"#utility.yul\":2390:2396   */\n      dup4\n        /* \"#utility.yul\":2379:2388   */\n      dup11\n        /* \"#utility.yul\":2375:2397   */\n      add\n        /* \"#utility.yul\":2346:2407   */\n      tag_268\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":2336:2407   */\n      swap5\n      pop\n        /* \"#utility.yul\":2460:2462   */\n      0x60\n        /* \"#utility.yul\":2449:2458   */\n      dup9\n        /* \"#utility.yul\":2445:2463   */\n      add\n        /* \"#utility.yul\":2432:2464   */\n      calldataload\n        /* \"#utility.yul\":2416:2464   */\n      swap2\n      pop\n        /* \"#utility.yul\":2489:2491   */\n      dup1\n        /* \"#utility.yul\":2479:2487   */\n      dup3\n        /* \"#utility.yul\":2476:2492   */\n      gt\n        /* \"#utility.yul\":2473:2475   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":2510:2516   */\n      dup3\n        /* \"#utility.yul\":2502:2508   */\n      dup4\n        /* \"#utility.yul\":2495:2517   */\n      revert\n        /* \"#utility.yul\":2473:2475   */\n    tag_297:\n        /* \"#utility.yul\":2538:2601   */\n      tag_298\n        /* \"#utility.yul\":2593:2600   */\n      dup10\n        /* \"#utility.yul\":2582:2590   */\n      dup4\n        /* \"#utility.yul\":2571:2580   */\n      dup11\n        /* \"#utility.yul\":2567:2591   */\n      add\n        /* \"#utility.yul\":2538:2601   */\n      tag_268\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":2528:2601   */\n      swap4\n      pop\n        /* \"#utility.yul\":2654:2657   */\n      0x80\n        /* \"#utility.yul\":2643:2652   */\n      dup9\n        /* \"#utility.yul\":2639:2658   */\n      add\n        /* \"#utility.yul\":2626:2659   */\n      calldataload\n        /* \"#utility.yul\":2610:2659   */\n      swap2\n      pop\n        /* \"#utility.yul\":2684:2686   */\n      dup1\n        /* \"#utility.yul\":2674:2682   */\n      dup3\n        /* \"#utility.yul\":2671:2687   */\n      gt\n        /* \"#utility.yul\":2668:2670   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":2705:2711   */\n      dup3\n        /* \"#utility.yul\":2697:2703   */\n      dup4\n        /* \"#utility.yul\":2690:2712   */\n      revert\n        /* \"#utility.yul\":2668:2670   */\n    tag_299:\n      pop\n        /* \"#utility.yul\":2733:2784   */\n      tag_300\n        /* \"#utility.yul\":2776:2783   */\n      dup9\n        /* \"#utility.yul\":2765:2773   */\n      dup3\n        /* \"#utility.yul\":2754:2763   */\n      dup10\n        /* \"#utility.yul\":2750:2774   */\n      add\n        /* \"#utility.yul\":2733:2784   */\n      tag_279\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":2723:2784   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2004:2790   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:3421   */\n    tag_76:\n        /* \"#utility.yul\":2899:2905   */\n      0x00\n        /* \"#utility.yul\":2907:2913   */\n      dup1\n        /* \"#utility.yul\":2915:2921   */\n      0x00\n        /* \"#utility.yul\":2923:2929   */\n      dup1\n        /* \"#utility.yul\":2931:2937   */\n      0x00\n        /* \"#utility.yul\":2984:2987   */\n      0xa0\n        /* \"#utility.yul\":2972:2981   */\n      dup7\n        /* \"#utility.yul\":2963:2970   */\n      dup9\n        /* \"#utility.yul\":2959:2982   */\n      sub\n        /* \"#utility.yul\":2955:2988   */\n      slt\n        /* \"#utility.yul\":2952:2954   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":3006:3012   */\n      dup1\n        /* \"#utility.yul\":2998:3004   */\n      dup2\n        /* \"#utility.yul\":2991:3013   */\n      revert\n        /* \"#utility.yul\":2952:2954   */\n    tag_302:\n        /* \"#utility.yul\":3034:3063   */\n      tag_303\n        /* \"#utility.yul\":3053:3062   */\n      dup7\n        /* \"#utility.yul\":3034:3063   */\n      tag_265\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":3024:3063   */\n      swap5\n      pop\n        /* \"#utility.yul\":3082:3120   */\n      tag_304\n        /* \"#utility.yul\":3116:3118   */\n      0x20\n        /* \"#utility.yul\":3105:3114   */\n      dup8\n        /* \"#utility.yul\":3101:3119   */\n      add\n        /* \"#utility.yul\":3082:3120   */\n      tag_265\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":3072:3120   */\n      swap4\n      pop\n        /* \"#utility.yul\":3167:3169   */\n      0x40\n        /* \"#utility.yul\":3156:3165   */\n      dup7\n        /* \"#utility.yul\":3152:3170   */\n      add\n        /* \"#utility.yul\":3139:3171   */\n      calldataload\n        /* \"#utility.yul\":3129:3171   */\n      swap3\n      pop\n        /* \"#utility.yul\":3218:3220   */\n      0x60\n        /* \"#utility.yul\":3207:3216   */\n      dup7\n        /* \"#utility.yul\":3203:3221   */\n      add\n        /* \"#utility.yul\":3190:3222   */\n      calldataload\n        /* \"#utility.yul\":3180:3222   */\n      swap2\n      pop\n        /* \"#utility.yul\":3273:3276   */\n      0x80\n        /* \"#utility.yul\":3262:3271   */\n      dup7\n        /* \"#utility.yul\":3258:3277   */\n      add\n        /* \"#utility.yul\":3245:3278   */\n      calldataload\n        /* \"#utility.yul\":3301:3319   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3293:3299   */\n      dup2\n        /* \"#utility.yul\":3290:3320   */\n      gt\n        /* \"#utility.yul\":3287:3289   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":3338:3344   */\n      dup2\n        /* \"#utility.yul\":3330:3336   */\n      dup3\n        /* \"#utility.yul\":3323:3345   */\n      revert\n        /* \"#utility.yul\":3287:3289   */\n    tag_305:\n        /* \"#utility.yul\":3366:3415   */\n      tag_300\n        /* \"#utility.yul\":3407:3414   */\n      dup9\n        /* \"#utility.yul\":3398:3404   */\n      dup3\n        /* \"#utility.yul\":3387:3396   */\n      dup10\n        /* \"#utility.yul\":3383:3405   */\n      add\n        /* \"#utility.yul\":3366:3415   */\n      tag_279\n      jump\t// in\n        /* \"#utility.yul\":3426:3793   */\n    tag_61:\n        /* \"#utility.yul\":3491:3497   */\n      0x00\n        /* \"#utility.yul\":3499:3505   */\n      dup1\n        /* \"#utility.yul\":3552:3554   */\n      0x40\n        /* \"#utility.yul\":3540:3549   */\n      dup4\n        /* \"#utility.yul\":3531:3538   */\n      dup6\n        /* \"#utility.yul\":3527:3550   */\n      sub\n        /* \"#utility.yul\":3523:3555   */\n      slt\n        /* \"#utility.yul\":3520:3522   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":3573:3579   */\n      dup2\n        /* \"#utility.yul\":3565:3571   */\n      dup3\n        /* \"#utility.yul\":3558:3580   */\n      revert\n        /* \"#utility.yul\":3520:3522   */\n    tag_308:\n        /* \"#utility.yul\":3601:3630   */\n      tag_309\n        /* \"#utility.yul\":3620:3629   */\n      dup4\n        /* \"#utility.yul\":3601:3630   */\n      tag_265\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":3591:3630   */\n      swap2\n      pop\n        /* \"#utility.yul\":3680:3682   */\n      0x20\n        /* \"#utility.yul\":3669:3678   */\n      dup4\n        /* \"#utility.yul\":3665:3683   */\n      add\n        /* \"#utility.yul\":3652:3684   */\n      calldataload\n        /* \"#utility.yul\":3727:3732   */\n      dup1\n        /* \"#utility.yul\":3720:3733   */\n      iszero\n        /* \"#utility.yul\":3713:3734   */\n      iszero\n        /* \"#utility.yul\":3706:3711   */\n      dup2\n        /* \"#utility.yul\":3703:3735   */\n      eq\n        /* \"#utility.yul\":3693:3695   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":3754:3760   */\n      dup2\n        /* \"#utility.yul\":3746:3752   */\n      dup3\n        /* \"#utility.yul\":3739:3761   */\n      revert\n        /* \"#utility.yul\":3693:3695   */\n    tag_310:\n        /* \"#utility.yul\":3782:3787   */\n      dup1\n        /* \"#utility.yul\":3772:3787   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3510:3793   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4062   */\n    tag_22:\n        /* \"#utility.yul\":3866:3872   */\n      0x00\n        /* \"#utility.yul\":3874:3880   */\n      dup1\n        /* \"#utility.yul\":3927:3929   */\n      0x40\n        /* \"#utility.yul\":3915:3924   */\n      dup4\n        /* \"#utility.yul\":3906:3913   */\n      dup6\n        /* \"#utility.yul\":3902:3925   */\n      sub\n        /* \"#utility.yul\":3898:3930   */\n      slt\n        /* \"#utility.yul\":3895:3897   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":3948:3954   */\n      dup2\n        /* \"#utility.yul\":3940:3946   */\n      dup3\n        /* \"#utility.yul\":3933:3955   */\n      revert\n        /* \"#utility.yul\":3895:3897   */\n    tag_312:\n        /* \"#utility.yul\":3976:4005   */\n      tag_313\n        /* \"#utility.yul\":3995:4004   */\n      dup4\n        /* \"#utility.yul\":3976:4005   */\n      tag_265\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":3966:4005   */\n      swap5\n        /* \"#utility.yul\":4052:4054   */\n      0x20\n        /* \"#utility.yul\":4037:4055   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":4024:4056   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3885:4062   */\n      jump\t// out\n        /* \"#utility.yul\":4067:5341   */\n    tag_50:\n        /* \"#utility.yul\":4185:4191   */\n      0x00\n        /* \"#utility.yul\":4193:4199   */\n      dup1\n        /* \"#utility.yul\":4246:4248   */\n      0x40\n        /* \"#utility.yul\":4234:4243   */\n      dup4\n        /* \"#utility.yul\":4225:4232   */\n      dup6\n        /* \"#utility.yul\":4221:4244   */\n      sub\n        /* \"#utility.yul\":4217:4249   */\n      slt\n        /* \"#utility.yul\":4214:4216   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":4267:4273   */\n      dup2\n        /* \"#utility.yul\":4259:4265   */\n      dup3\n        /* \"#utility.yul\":4252:4274   */\n      revert\n        /* \"#utility.yul\":4214:4216   */\n    tag_315:\n        /* \"#utility.yul\":4312:4321   */\n      dup3\n        /* \"#utility.yul\":4299:4322   */\n      calldataload\n        /* \"#utility.yul\":4341:4359   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4382:4384   */\n      dup1\n        /* \"#utility.yul\":4374:4380   */\n      dup3\n        /* \"#utility.yul\":4371:4385   */\n      gt\n        /* \"#utility.yul\":4368:4370   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":4403:4409   */\n      dup4\n        /* \"#utility.yul\":4395:4401   */\n      dup5\n        /* \"#utility.yul\":4388:4410   */\n      revert\n        /* \"#utility.yul\":4368:4370   */\n    tag_316:\n        /* \"#utility.yul\":4446:4452   */\n      dup2\n        /* \"#utility.yul\":4435:4444   */\n      dup6\n        /* \"#utility.yul\":4431:4453   */\n      add\n        /* \"#utility.yul\":4421:4453   */\n      swap2\n      pop\n        /* \"#utility.yul\":4491:4498   */\n      dup6\n        /* \"#utility.yul\":4484:4488   */\n      0x1f\n        /* \"#utility.yul\":4480:4482   */\n      dup4\n        /* \"#utility.yul\":4476:4489   */\n      add\n        /* \"#utility.yul\":4472:4499   */\n      slt\n        /* \"#utility.yul\":4462:4464   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":4518:4524   */\n      dup4\n        /* \"#utility.yul\":4510:4516   */\n      dup5\n        /* \"#utility.yul\":4503:4525   */\n      revert\n        /* \"#utility.yul\":4462:4464   */\n    tag_317:\n        /* \"#utility.yul\":4559:4561   */\n      dup2\n        /* \"#utility.yul\":4546:4562   */\n      calldataload\n        /* \"#utility.yul\":4581:4585   */\n      0x20\n        /* \"#utility.yul\":4604:4647   */\n      tag_318\n        /* \"#utility.yul\":4644:4646   */\n      dup3\n        /* \"#utility.yul\":4604:4647   */\n      tag_272\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":4676:4678   */\n      0x40\n        /* \"#utility.yul\":4670:4679   */\n      mload\n        /* \"#utility.yul\":4688:4719   */\n      tag_319\n        /* \"#utility.yul\":4716:4718   */\n      dup3\n        /* \"#utility.yul\":4708:4714   */\n      dup3\n        /* \"#utility.yul\":4688:4719   */\n      tag_274\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":4754:4772   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":4788:4803   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":4823:4834   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":4865:4866   */\n      0x05\n        /* \"#utility.yul\":4861:4871   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":4853:4872   */\n      dup8\n      add\n        /* \"#utility.yul\":4849:4877   */\n      dup5\n      add\n        /* \"#utility.yul\":4846:4887   */\n      dup12\n      lt\n        /* \"#utility.yul\":4843:4845   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":4905:4911   */\n      dup9\n        /* \"#utility.yul\":4897:4903   */\n      dup10\n        /* \"#utility.yul\":4890:4912   */\n      revert\n        /* \"#utility.yul\":4843:4845   */\n    tag_320:\n        /* \"#utility.yul\":4932:4938   */\n      dup9\n        /* \"#utility.yul\":4923:4938   */\n      swap7\n      pop\n        /* \"#utility.yul\":4947:5116   */\n    tag_321:\n        /* \"#utility.yul\":4961:4963   */\n      dup5\n        /* \"#utility.yul\":4958:4959   */\n      dup8\n        /* \"#utility.yul\":4955:4964   */\n      lt\n        /* \"#utility.yul\":4947:5116   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":5018:5041   */\n      tag_324\n        /* \"#utility.yul\":5037:5040   */\n      dup2\n        /* \"#utility.yul\":5018:5041   */\n      tag_265\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":5006:5042   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4979:4980   */\n      0x01\n        /* \"#utility.yul\":4972:4981   */\n      swap7\n      swap1\n      swap7\n      add\n      swap6\n        /* \"#utility.yul\":5062:5074   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":5094:5106   */\n      dup4\n      add\n        /* \"#utility.yul\":4947:5116   */\n      jump(tag_321)\n    tag_323:\n      pop\n        /* \"#utility.yul\":5135:5141   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":5179:5197   */\n      dup7\n      add\n        /* \"#utility.yul\":5166:5198   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5210:5226   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5207:5209   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":5244:5250   */\n      dup3\n        /* \"#utility.yul\":5236:5242   */\n      dup4\n        /* \"#utility.yul\":5229:5251   */\n      revert\n        /* \"#utility.yul\":5207:5209   */\n    tag_325:\n      pop\n        /* \"#utility.yul\":5272:5335   */\n      tag_326\n        /* \"#utility.yul\":5327:5334   */\n      dup6\n        /* \"#utility.yul\":5316:5324   */\n      dup3\n        /* \"#utility.yul\":5305:5314   */\n      dup7\n        /* \"#utility.yul\":5301:5325   */\n      add\n        /* \"#utility.yul\":5272:5335   */\n      tag_268\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":5262:5335   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4204:5341   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5346:5601   */\n    tag_28:\n        /* \"#utility.yul\":5404:5410   */\n      0x00\n        /* \"#utility.yul\":5457:5459   */\n      0x20\n        /* \"#utility.yul\":5445:5454   */\n      dup3\n        /* \"#utility.yul\":5436:5443   */\n      dup5\n        /* \"#utility.yul\":5432:5455   */\n      sub\n        /* \"#utility.yul\":5428:5460   */\n      slt\n        /* \"#utility.yul\":5425:5427   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":5478:5484   */\n      dup1\n        /* \"#utility.yul\":5470:5476   */\n      dup2\n        /* \"#utility.yul\":5463:5485   */\n      revert\n        /* \"#utility.yul\":5425:5427   */\n    tag_328:\n        /* \"#utility.yul\":5522:5531   */\n      dup2\n        /* \"#utility.yul\":5509:5532   */\n      calldataload\n        /* \"#utility.yul\":5541:5571   */\n      tag_329\n        /* \"#utility.yul\":5565:5570   */\n      dup2\n        /* \"#utility.yul\":5541:5571   */\n      tag_330\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":5590:5595   */\n      swap4\n        /* \"#utility.yul\":5415:5601   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5606:5865   */\n    tag_223:\n        /* \"#utility.yul\":5675:5681   */\n      0x00\n        /* \"#utility.yul\":5728:5730   */\n      0x20\n        /* \"#utility.yul\":5716:5725   */\n      dup3\n        /* \"#utility.yul\":5707:5714   */\n      dup5\n        /* \"#utility.yul\":5703:5726   */\n      sub\n        /* \"#utility.yul\":5699:5731   */\n      slt\n        /* \"#utility.yul\":5696:5698   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":5749:5755   */\n      dup1\n        /* \"#utility.yul\":5741:5747   */\n      dup2\n        /* \"#utility.yul\":5734:5756   */\n      revert\n        /* \"#utility.yul\":5696:5698   */\n    tag_332:\n        /* \"#utility.yul\":5786:5795   */\n      dup2\n        /* \"#utility.yul\":5780:5796   */\n      mload\n        /* \"#utility.yul\":5805:5835   */\n      tag_329\n        /* \"#utility.yul\":5829:5834   */\n      dup2\n        /* \"#utility.yul\":5805:5835   */\n      tag_330\n      jump\t// in\n        /* \"#utility.yul\":5870:6060   */\n    tag_34:\n        /* \"#utility.yul\":5929:5935   */\n      0x00\n        /* \"#utility.yul\":5982:5984   */\n      0x20\n        /* \"#utility.yul\":5970:5979   */\n      dup3\n        /* \"#utility.yul\":5961:5968   */\n      dup5\n        /* \"#utility.yul\":5957:5980   */\n      sub\n        /* \"#utility.yul\":5953:5985   */\n      slt\n        /* \"#utility.yul\":5950:5952   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":6003:6009   */\n      dup1\n        /* \"#utility.yul\":5995:6001   */\n      dup2\n        /* \"#utility.yul\":5988:6010   */\n      revert\n        /* \"#utility.yul\":5950:5952   */\n    tag_335:\n      pop\n        /* \"#utility.yul\":6031:6054   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":5940:6060   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6065:6502   */\n    tag_336:\n        /* \"#utility.yul\":6118:6121   */\n      0x00\n        /* \"#utility.yul\":6156:6161   */\n      dup2\n        /* \"#utility.yul\":6150:6162   */\n      mload\n        /* \"#utility.yul\":6183:6189   */\n      dup1\n        /* \"#utility.yul\":6178:6181   */\n      dup5\n        /* \"#utility.yul\":6171:6190   */\n      mstore\n        /* \"#utility.yul\":6209:6213   */\n      0x20\n        /* \"#utility.yul\":6238:6240   */\n      dup1\n        /* \"#utility.yul\":6233:6236   */\n      dup6\n        /* \"#utility.yul\":6229:6241   */\n      add\n        /* \"#utility.yul\":6222:6241   */\n      swap5\n      pop\n        /* \"#utility.yul\":6275:6277   */\n      dup1\n        /* \"#utility.yul\":6268:6273   */\n      dup5\n        /* \"#utility.yul\":6264:6278   */\n      add\n        /* \"#utility.yul\":6296:6299   */\n      dup4\n        /* \"#utility.yul\":6308:6477   */\n    tag_338:\n        /* \"#utility.yul\":6322:6328   */\n      dup4\n        /* \"#utility.yul\":6319:6320   */\n      dup2\n        /* \"#utility.yul\":6316:6329   */\n      lt\n        /* \"#utility.yul\":6308:6477   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":6383:6396   */\n      dup2\n      mload\n        /* \"#utility.yul\":6371:6397   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6417:6429   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6452:6467   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6344:6345   */\n      0x01\n        /* \"#utility.yul\":6337:6346   */\n      add\n        /* \"#utility.yul\":6308:6477   */\n      jump(tag_338)\n    tag_340:\n      pop\n        /* \"#utility.yul\":6493:6496   */\n      swap5\n      swap6\n        /* \"#utility.yul\":6126:6502   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6507:6982   */\n    tag_341:\n        /* \"#utility.yul\":6548:6551   */\n      0x00\n        /* \"#utility.yul\":6586:6591   */\n      dup2\n        /* \"#utility.yul\":6580:6592   */\n      mload\n        /* \"#utility.yul\":6613:6619   */\n      dup1\n        /* \"#utility.yul\":6608:6611   */\n      dup5\n        /* \"#utility.yul\":6601:6620   */\n      mstore\n        /* \"#utility.yul\":6638:6641   */\n      dup2\n        /* \"#utility.yul\":6650:6812   */\n    tag_343:\n        /* \"#utility.yul\":6664:6670   */\n      dup2\n        /* \"#utility.yul\":6661:6662   */\n      dup2\n        /* \"#utility.yul\":6658:6671   */\n      lt\n        /* \"#utility.yul\":6650:6812   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":6726:6730   */\n      0x20\n        /* \"#utility.yul\":6782:6795   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":6778:6800   */\n      dup2\n      add\n        /* \"#utility.yul\":6772:6801   */\n      mload\n        /* \"#utility.yul\":6754:6765   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":6750:6770   */\n      dup3\n      add\n        /* \"#utility.yul\":6743:6802   */\n      mstore\n        /* \"#utility.yul\":6679:6691   */\n      add\n        /* \"#utility.yul\":6650:6812   */\n      jump(tag_343)\n    tag_345:\n        /* \"#utility.yul\":6830:6836   */\n      dup2\n        /* \"#utility.yul\":6827:6828   */\n      dup2\n        /* \"#utility.yul\":6824:6837   */\n      gt\n        /* \"#utility.yul\":6821:6823   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":6896:6899   */\n      dup3\n        /* \"#utility.yul\":6889:6893   */\n      0x20\n        /* \"#utility.yul\":6880:6886   */\n      dup4\n        /* \"#utility.yul\":6875:6878   */\n      dup8\n        /* \"#utility.yul\":6871:6887   */\n      add\n        /* \"#utility.yul\":6867:6894   */\n      add\n        /* \"#utility.yul\":6860:6900   */\n      mstore\n        /* \"#utility.yul\":6821:6823   */\n    tag_346:\n      pop\n        /* \"#utility.yul\":6964:6966   */\n      0x1f\n        /* \"#utility.yul\":6943:6958   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":6939:6968   */\n      and\n        /* \"#utility.yul\":6930:6969   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":6971:6975   */\n      0x20\n        /* \"#utility.yul\":6926:6976   */\n      add\n      swap3\n        /* \"#utility.yul\":6556:6982   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6987:7813   */\n    tag_219:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7384:7399   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":7366:7400   */\n      dup3\n      mstore\n        /* \"#utility.yul\":7436:7451   */\n      dup6\n      and\n        /* \"#utility.yul\":7431:7433   */\n      0x20\n        /* \"#utility.yul\":7416:7434   */\n      dup3\n      add\n        /* \"#utility.yul\":7409:7452   */\n      mstore\n        /* \"#utility.yul\":7346:7349   */\n      0xa0\n        /* \"#utility.yul\":7483:7485   */\n      0x40\n        /* \"#utility.yul\":7468:7486   */\n      dup3\n      add\n        /* \"#utility.yul\":7461:7492   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7309:7313   */\n      0x00\n      swap1\n        /* \"#utility.yul\":7515:7572   */\n      tag_348\n      swap1\n        /* \"#utility.yul\":7552:7571   */\n      dup4\n      add\n        /* \"#utility.yul\":7544:7550   */\n      dup7\n        /* \"#utility.yul\":7515:7572   */\n      tag_336\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":7620:7629   */\n      dup3\n        /* \"#utility.yul\":7612:7618   */\n      dup2\n        /* \"#utility.yul\":7608:7630   */\n      sub\n        /* \"#utility.yul\":7603:7605   */\n      0x60\n        /* \"#utility.yul\":7592:7601   */\n      dup5\n        /* \"#utility.yul\":7588:7606   */\n      add\n        /* \"#utility.yul\":7581:7631   */\n      mstore\n        /* \"#utility.yul\":7654:7698   */\n      tag_349\n        /* \"#utility.yul\":7691:7697   */\n      dup2\n        /* \"#utility.yul\":7683:7689   */\n      dup7\n        /* \"#utility.yul\":7654:7698   */\n      tag_336\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":7640:7698   */\n      swap1\n      pop\n        /* \"#utility.yul\":7747:7756   */\n      dup3\n        /* \"#utility.yul\":7739:7745   */\n      dup2\n        /* \"#utility.yul\":7735:7757   */\n      sub\n        /* \"#utility.yul\":7729:7732   */\n      0x80\n        /* \"#utility.yul\":7718:7727   */\n      dup5\n        /* \"#utility.yul\":7714:7733   */\n      add\n        /* \"#utility.yul\":7707:7758   */\n      mstore\n        /* \"#utility.yul\":7775:7807   */\n      tag_350\n        /* \"#utility.yul\":7800:7806   */\n      dup2\n        /* \"#utility.yul\":7792:7798   */\n      dup6\n        /* \"#utility.yul\":7775:7807   */\n      tag_341\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":7767:7807   */\n      swap9\n        /* \"#utility.yul\":7318:7813   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7818:8378   */\n    tag_248:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8115:8130   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":8097:8131   */\n      dup3\n      mstore\n        /* \"#utility.yul\":8167:8182   */\n      dup6\n      and\n        /* \"#utility.yul\":8162:8164   */\n      0x20\n        /* \"#utility.yul\":8147:8165   */\n      dup3\n      add\n        /* \"#utility.yul\":8140:8183   */\n      mstore\n        /* \"#utility.yul\":8214:8216   */\n      0x40\n        /* \"#utility.yul\":8199:8217   */\n      dup2\n      add\n        /* \"#utility.yul\":8192:8226   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":8257:8259   */\n      0x60\n        /* \"#utility.yul\":8242:8260   */\n      dup2\n      add\n        /* \"#utility.yul\":8235:8269   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":8077:8080   */\n      0xa0\n        /* \"#utility.yul\":8300:8303   */\n      0x80\n        /* \"#utility.yul\":8285:8304   */\n      dup3\n      add\n        /* \"#utility.yul\":8278:8310   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8040:8044   */\n      0x00\n      swap1\n        /* \"#utility.yul\":8327:8372   */\n      tag_352\n      swap1\n        /* \"#utility.yul\":8352:8371   */\n      dup4\n      add\n        /* \"#utility.yul\":8344:8350   */\n      dup5\n        /* \"#utility.yul\":8327:8372   */\n      tag_341\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":8319:8372   */\n      swap8\n        /* \"#utility.yul\":8049:8378   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8383:8644   */\n    tag_53:\n        /* \"#utility.yul\":8562:8564   */\n      0x20\n        /* \"#utility.yul\":8551:8560   */\n      dup2\n        /* \"#utility.yul\":8544:8565   */\n      mstore\n        /* \"#utility.yul\":8525:8529   */\n      0x00\n        /* \"#utility.yul\":8582:8638   */\n      tag_329\n        /* \"#utility.yul\":8634:8636   */\n      0x20\n        /* \"#utility.yul\":8623:8632   */\n      dup4\n        /* \"#utility.yul\":8619:8637   */\n      add\n        /* \"#utility.yul\":8611:8617   */\n      dup5\n        /* \"#utility.yul\":8582:8638   */\n      tag_336\n      jump\t// in\n        /* \"#utility.yul\":8649:9114   */\n    tag_174:\n        /* \"#utility.yul\":8906:8908   */\n      0x40\n        /* \"#utility.yul\":8895:8904   */\n      dup2\n        /* \"#utility.yul\":8888:8909   */\n      mstore\n        /* \"#utility.yul\":8869:8873   */\n      0x00\n        /* \"#utility.yul\":8932:8988   */\n      tag_356\n        /* \"#utility.yul\":8984:8986   */\n      0x40\n        /* \"#utility.yul\":8973:8982   */\n      dup4\n        /* \"#utility.yul\":8969:8987   */\n      add\n        /* \"#utility.yul\":8961:8967   */\n      dup6\n        /* \"#utility.yul\":8932:8988   */\n      tag_336\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":9036:9045   */\n      dup3\n        /* \"#utility.yul\":9028:9034   */\n      dup2\n        /* \"#utility.yul\":9024:9046   */\n      sub\n        /* \"#utility.yul\":9019:9021   */\n      0x20\n        /* \"#utility.yul\":9008:9017   */\n      dup5\n        /* \"#utility.yul\":9004:9022   */\n      add\n        /* \"#utility.yul\":8997:9047   */\n      mstore\n        /* \"#utility.yul\":9064:9108   */\n      tag_357\n        /* \"#utility.yul\":9101:9107   */\n      dup2\n        /* \"#utility.yul\":9093:9099   */\n      dup6\n        /* \"#utility.yul\":9064:9108   */\n      tag_336\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":9056:9108   */\n      swap6\n        /* \"#utility.yul\":8878:9114   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9311:9530   */\n    tag_37:\n        /* \"#utility.yul\":9460:9462   */\n      0x20\n        /* \"#utility.yul\":9449:9458   */\n      dup2\n        /* \"#utility.yul\":9442:9463   */\n      mstore\n        /* \"#utility.yul\":9423:9427   */\n      0x00\n        /* \"#utility.yul\":9480:9524   */\n      tag_329\n        /* \"#utility.yul\":9520:9522   */\n      0x20\n        /* \"#utility.yul\":9509:9518   */\n      dup4\n        /* \"#utility.yul\":9505:9523   */\n      add\n        /* \"#utility.yul\":9497:9503   */\n      dup5\n        /* \"#utility.yul\":9480:9524   */\n      tag_341\n      jump\t// in\n        /* \"#utility.yul\":9956:10360   */\n    tag_239:\n        /* \"#utility.yul\":10158:10160   */\n      0x20\n        /* \"#utility.yul\":10140:10161   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10197:10199   */\n      0x28\n        /* \"#utility.yul\":10177:10195   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10170:10200   */\n      mstore\n        /* \"#utility.yul\":10236:10270   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":10231:10233   */\n      0x40\n        /* \"#utility.yul\":10216:10234   */\n      dup3\n      add\n        /* \"#utility.yul\":10209:10271   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":10302:10304   */\n      0x60\n        /* \"#utility.yul\":10287:10305   */\n      dup3\n      add\n        /* \"#utility.yul\":10280:10318   */\n      mstore\n        /* \"#utility.yul\":10350:10353   */\n      0x80\n        /* \"#utility.yul\":10335:10354   */\n      add\n      swap1\n        /* \"#utility.yul\":10130:10360   */\n      jump\t// out\n        /* \"#utility.yul\":11187:11588   */\n    tag_158:\n        /* \"#utility.yul\":11389:11391   */\n      0x20\n        /* \"#utility.yul\":11371:11392   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11428:11430   */\n      0x25\n        /* \"#utility.yul\":11408:11426   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11401:11431   */\n      mstore\n        /* \"#utility.yul\":11467:11501   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":11462:11464   */\n      0x40\n        /* \"#utility.yul\":11447:11465   */\n      dup3\n      add\n        /* \"#utility.yul\":11440:11502   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":11533:11535   */\n      0x60\n        /* \"#utility.yul\":11518:11536   */\n      dup3\n      add\n        /* \"#utility.yul\":11511:11546   */\n      mstore\n        /* \"#utility.yul\":11578:11581   */\n      0x80\n        /* \"#utility.yul\":11563:11582   */\n      add\n      swap1\n        /* \"#utility.yul\":11361:11588   */\n      jump\t// out\n        /* \"#utility.yul\":12012:12418   */\n    tag_169:\n        /* \"#utility.yul\":12214:12216   */\n      0x20\n        /* \"#utility.yul\":12196:12217   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12253:12255   */\n      0x2a\n        /* \"#utility.yul\":12233:12251   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12226:12256   */\n      mstore\n        /* \"#utility.yul\":12292:12326   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":12287:12289   */\n      0x40\n        /* \"#utility.yul\":12272:12290   */\n      dup3\n      add\n        /* \"#utility.yul\":12265:12327   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":12358:12360   */\n      0x60\n        /* \"#utility.yul\":12343:12361   */\n      dup3\n      add\n        /* \"#utility.yul\":12336:12376   */\n      mstore\n        /* \"#utility.yul\":12408:12411   */\n      0x80\n        /* \"#utility.yul\":12393:12412   */\n      add\n      swap1\n        /* \"#utility.yul\":12186:12418   */\n      jump\t// out\n        /* \"#utility.yul\":13243:13647   */\n    tag_155:\n        /* \"#utility.yul\":13445:13447   */\n      0x20\n        /* \"#utility.yul\":13427:13448   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13484:13486   */\n      0x28\n        /* \"#utility.yul\":13464:13482   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13457:13487   */\n      mstore\n        /* \"#utility.yul\":13523:13557   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":13518:13520   */\n      0x40\n        /* \"#utility.yul\":13503:13521   */\n      dup3\n      add\n        /* \"#utility.yul\":13496:13558   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":13589:13591   */\n      0x60\n        /* \"#utility.yul\":13574:13592   */\n      dup3\n      add\n        /* \"#utility.yul\":13567:13605   */\n      mstore\n        /* \"#utility.yul\":13637:13640   */\n      0x80\n        /* \"#utility.yul\":13622:13641   */\n      add\n      swap1\n        /* \"#utility.yul\":13417:13647   */\n      jump\t// out\n        /* \"#utility.yul\":14489:14672   */\n    tag_272:\n        /* \"#utility.yul\":14549:14553   */\n      0x00\n        /* \"#utility.yul\":14582:14600   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14574:14580   */\n      dup3\n        /* \"#utility.yul\":14571:14601   */\n      gt\n        /* \"#utility.yul\":14568:14570   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":14604:14622   */\n      tag_376\n      tag_284\n      jump\t// in\n    tag_376:\n      pop\n        /* \"#utility.yul\":14649:14650   */\n      0x05\n        /* \"#utility.yul\":14645:14659   */\n      shl\n        /* \"#utility.yul\":14661:14665   */\n      0x20\n        /* \"#utility.yul\":14641:14666   */\n      add\n      swap1\n        /* \"#utility.yul\":14558:14672   */\n      jump\t// out\n        /* \"#utility.yul\":14677:14805   */\n    tag_171:\n        /* \"#utility.yul\":14717:14720   */\n      0x00\n        /* \"#utility.yul\":14748:14749   */\n      dup3\n        /* \"#utility.yul\":14744:14750   */\n      not\n        /* \"#utility.yul\":14741:14742   */\n      dup3\n        /* \"#utility.yul\":14738:14751   */\n      gt\n        /* \"#utility.yul\":14735:14737   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":14754:14772   */\n      tag_379\n      tag_380\n      jump\t// in\n    tag_379:\n      pop\n        /* \"#utility.yul\":14790:14799   */\n      add\n      swap1\n        /* \"#utility.yul\":14725:14805   */\n      jump\t// out\n        /* \"#utility.yul\":14810:15190   */\n    tag_90:\n        /* \"#utility.yul\":14889:14890   */\n      0x01\n        /* \"#utility.yul\":14885:14897   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":14932:14944   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":14953:14955   */\n      tag_382\n      jumpi\n        /* \"#utility.yul\":15007:15011   */\n      0x7f\n        /* \"#utility.yul\":14999:15005   */\n      dup3\n        /* \"#utility.yul\":14995:15012   */\n      and\n        /* \"#utility.yul\":14985:15012   */\n      swap2\n      pop\n        /* \"#utility.yul\":14953:14955   */\n    tag_382:\n        /* \"#utility.yul\":15060:15062   */\n      0x20\n        /* \"#utility.yul\":15052:15058   */\n      dup3\n        /* \"#utility.yul\":15049:15063   */\n      lt\n        /* \"#utility.yul\":15029:15047   */\n      dup2\n        /* \"#utility.yul\":15026:15064   */\n      eq\n        /* \"#utility.yul\":15023:15025   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":15106:15116   */\n      0x4e487b71\n        /* \"#utility.yul\":15101:15104   */\n      0xe0\n        /* \"#utility.yul\":15097:15117   */\n      shl\n        /* \"#utility.yul\":15094:15095   */\n      0x00\n        /* \"#utility.yul\":15087:15118   */\n      mstore\n        /* \"#utility.yul\":15141:15145   */\n      0x22\n        /* \"#utility.yul\":15138:15139   */\n      0x04\n        /* \"#utility.yul\":15131:15146   */\n      mstore\n        /* \"#utility.yul\":15169:15173   */\n      0x24\n        /* \"#utility.yul\":15166:15167   */\n      0x00\n        /* \"#utility.yul\":15159:15174   */\n      revert\n        /* \"#utility.yul\":15023:15025   */\n    tag_383:\n      pop\n        /* \"#utility.yul\":14865:15190   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15195:15444   */\n    tag_274:\n        /* \"#utility.yul\":15305:15307   */\n      0x1f\n        /* \"#utility.yul\":15286:15299   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":15282:15309   */\n      and\n        /* \"#utility.yul\":15270:15310   */\n      dup2\n      add\n        /* \"#utility.yul\":15340:15358   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15325:15359   */\n      dup2\n      gt\n        /* \"#utility.yul\":15361:15383   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":15322:15384   */\n      or\n        /* \"#utility.yul\":15319:15321   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":15387:15405   */\n      tag_386\n      tag_284\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":15423:15425   */\n      0x40\n        /* \"#utility.yul\":15416:15438   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":15242:15444   */\n      jump\t// out\n        /* \"#utility.yul\":15449:15584   */\n    tag_120:\n        /* \"#utility.yul\":15488:15491   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":15509:15526   */\n      dup3\n      eq\n        /* \"#utility.yul\":15506:15508   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":15529:15547   */\n      tag_389\n      tag_380\n      jump\t// in\n    tag_389:\n      pop\n        /* \"#utility.yul\":15576:15577   */\n      0x01\n        /* \"#utility.yul\":15565:15578   */\n      add\n      swap1\n        /* \"#utility.yul\":15496:15584   */\n      jump\t// out\n        /* \"#utility.yul\":15589:15716   */\n    tag_380:\n        /* \"#utility.yul\":15650:15660   */\n      0x4e487b71\n        /* \"#utility.yul\":15645:15648   */\n      0xe0\n        /* \"#utility.yul\":15641:15661   */\n      shl\n        /* \"#utility.yul\":15638:15639   */\n      0x00\n        /* \"#utility.yul\":15631:15662   */\n      mstore\n        /* \"#utility.yul\":15681:15685   */\n      0x11\n        /* \"#utility.yul\":15678:15679   */\n      0x04\n        /* \"#utility.yul\":15671:15686   */\n      mstore\n        /* \"#utility.yul\":15705:15709   */\n      0x24\n        /* \"#utility.yul\":15702:15703   */\n      0x00\n        /* \"#utility.yul\":15695:15710   */\n      revert\n        /* \"#utility.yul\":15721:15848   */\n    tag_284:\n        /* \"#utility.yul\":15782:15792   */\n      0x4e487b71\n        /* \"#utility.yul\":15777:15780   */\n      0xe0\n        /* \"#utility.yul\":15773:15793   */\n      shl\n        /* \"#utility.yul\":15770:15771   */\n      0x00\n        /* \"#utility.yul\":15763:15794   */\n      mstore\n        /* \"#utility.yul\":15813:15817   */\n      0x41\n        /* \"#utility.yul\":15810:15811   */\n      0x04\n        /* \"#utility.yul\":15803:15818   */\n      mstore\n        /* \"#utility.yul\":15837:15841   */\n      0x24\n        /* \"#utility.yul\":15834:15835   */\n      0x00\n        /* \"#utility.yul\":15827:15842   */\n      revert\n        /* \"#utility.yul\":15853:16038   */\n    tag_229:\n        /* \"#utility.yul\":15888:15891   */\n      0x00\n        /* \"#utility.yul\":15930:15931   */\n      0x03\n        /* \"#utility.yul\":15912:15928   */\n      returndatasize\n        /* \"#utility.yul\":15909:15932   */\n      gt\n        /* \"#utility.yul\":15906:15908   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":15980:15981   */\n      0x04\n        /* \"#utility.yul\":15975:15978   */\n      dup2\n        /* \"#utility.yul\":15970:15973   */\n      dup3\n        /* \"#utility.yul\":15955:15982   */\n      returndatacopy\n        /* \"#utility.yul\":16011:16021   */\n      mload\n        /* \"#utility.yul\":16006:16009   */\n      0xe0\n        /* \"#utility.yul\":16002:16022   */\n      shr\n        /* \"#utility.yul\":15906:15908   */\n    tag_393:\n        /* \"#utility.yul\":15896:16038   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16043:16714   */\n    tag_231:\n        /* \"#utility.yul\":16082:16085   */\n      0x00\n        /* \"#utility.yul\":16124:16128   */\n      0x44\n        /* \"#utility.yul\":16106:16122   */\n      returndatasize\n        /* \"#utility.yul\":16103:16129   */\n      lt\n        /* \"#utility.yul\":16100:16102   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":16090:16714   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16100:16102   */\n    tag_395:\n        /* \"#utility.yul\":16166:16168   */\n      0x40\n        /* \"#utility.yul\":16160:16169   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":16231:16247   */\n      returndatasize\n        /* \"#utility.yul\":16227:16252   */\n      dup2\n      add\n        /* \"#utility.yul\":16224:16225   */\n      0x04\n        /* \"#utility.yul\":16160:16169   */\n      dup4\n        /* \"#utility.yul\":16203:16253   */\n      returndatacopy\n        /* \"#utility.yul\":16282:16286   */\n      dup2\n        /* \"#utility.yul\":16276:16287   */\n      mload\n        /* \"#utility.yul\":16306:16322   */\n      returndatasize\n        /* \"#utility.yul\":16341:16359   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16412:16414   */\n      dup2\n        /* \"#utility.yul\":16405:16409   */\n      0x24\n        /* \"#utility.yul\":16397:16403   */\n      dup5\n        /* \"#utility.yul\":16393:16410   */\n      add\n        /* \"#utility.yul\":16390:16415   */\n      gt\n        /* \"#utility.yul\":16385:16387   */\n      dup2\n        /* \"#utility.yul\":16377:16383   */\n      dup5\n        /* \"#utility.yul\":16374:16388   */\n      gt\n        /* \"#utility.yul\":16371:16416   */\n      or\n        /* \"#utility.yul\":16368:16370   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":16419:16424   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16090:16714   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16368:16370   */\n    tag_396:\n        /* \"#utility.yul\":16456:16462   */\n      dup3\n        /* \"#utility.yul\":16450:16454   */\n      dup6\n        /* \"#utility.yul\":16446:16463   */\n      add\n        /* \"#utility.yul\":16435:16463   */\n      swap2\n      pop\n        /* \"#utility.yul\":16492:16495   */\n      dup2\n        /* \"#utility.yul\":16486:16496   */\n      mload\n        /* \"#utility.yul\":16519:16521   */\n      dup2\n        /* \"#utility.yul\":16511:16517   */\n      dup2\n        /* \"#utility.yul\":16508:16522   */\n      gt\n        /* \"#utility.yul\":16505:16507   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":16525:16530   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16090:16714   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16505:16507   */\n    tag_397:\n        /* \"#utility.yul\":16609:16611   */\n      dup5\n        /* \"#utility.yul\":16590:16606   */\n      returndatasize\n        /* \"#utility.yul\":16584:16588   */\n      dup8\n        /* \"#utility.yul\":16580:16607   */\n      add\n        /* \"#utility.yul\":16576:16612   */\n      add\n        /* \"#utility.yul\":16569:16573   */\n      0x20\n        /* \"#utility.yul\":16560:16566   */\n      dup3\n        /* \"#utility.yul\":16555:16558   */\n      dup6\n        /* \"#utility.yul\":16551:16567   */\n      add\n        /* \"#utility.yul\":16547:16574   */\n      add\n        /* \"#utility.yul\":16544:16613   */\n      gt\n        /* \"#utility.yul\":16541:16543   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":16616:16621   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16090:16714   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16541:16543   */\n    tag_398:\n        /* \"#utility.yul\":16632:16689   */\n      tag_399\n        /* \"#utility.yul\":16683:16687   */\n      0x20\n        /* \"#utility.yul\":16674:16680   */\n      dup3\n        /* \"#utility.yul\":16666:16672   */\n      dup7\n        /* \"#utility.yul\":16662:16681   */\n      add\n        /* \"#utility.yul\":16658:16688   */\n      add\n        /* \"#utility.yul\":16652:16656   */\n      dup8\n        /* \"#utility.yul\":16632:16689   */\n      tag_274\n      jump\t// in\n    tag_399:\n      pop\n        /* \"#utility.yul\":16705:16708   */\n      swap1\n      swap6\n        /* \"#utility.yul\":16090:16714   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16719:16850   */\n    tag_330:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":16793:16825   */\n      dup2\n      and\n        /* \"#utility.yul\":16783:16826   */\n      dup2\n      eq\n        /* \"#utility.yul\":16773:16775   */\n      tag_401\n      jumpi\n        /* \"#utility.yul\":16840:16841   */\n      0x00\n        /* \"#utility.yul\":16837:16838   */\n      dup1\n        /* \"#utility.yul\":16830:16842   */\n      revert\n        /* \"#utility.yul\":16773:16775   */\n    tag_401:\n        /* \"#utility.yul\":16763:16850   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122028acca33a5b86c3129fa946ddb58cea8ac395c7c4d68582ad23a5eac6016a2c864736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4916:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "94:230:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "140:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "149:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "157:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "142:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "142:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "142:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "115:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "124:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "111:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "111:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "136:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "107:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:32:9"
															},
															"nodeType": "YulIf",
															"src": "104:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "175:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "194:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "188:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "188:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "179:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "268:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "277:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "285:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "270:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "270:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "270:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "226:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "237:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:3:9",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "253:10:9",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "244:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "244:20:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "233:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "233:32:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "223:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "223:43:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "216:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "216:51:9"
															},
															"nodeType": "YulIf",
															"src": "213:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "303:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "313:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "303:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "60:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "71:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "83:6:9",
														"type": ""
													}
												],
												"src": "14:310:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:426:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "388:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "408:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "402:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "402:12:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "392:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "430:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "435:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "423:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "423:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "423:19:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "451:12:9",
															"value": {
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "460:3:9"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "455:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "524:110:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "538:14:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "548:4:9",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "542:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "580:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "585:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "576:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "576:11:9"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "589:2:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "572:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "572:20:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "608:5:9"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "615:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "604:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "604:13:9"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "619:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "600:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "600:22:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "594:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "594:29:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "565:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "565:59:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "565:59:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "483:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "486:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "480:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "480:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "494:21:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "496:17:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "505:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "508:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "501:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "501:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "496:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "476:3:9",
																"statements": []
															},
															"src": "472:162:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:64:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "697:3:9"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "702:6:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "693:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "693:16:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "711:4:9",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "689:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "689:27:9"
																				},
																				{
																					"name": "end",
																					"nodeType": "YulIdentifier",
																					"src": "718:3:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "682:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "682:40:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "682:40:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "649:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "652:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "646:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "646:13:9"
															},
															"nodeType": "YulIf",
															"src": "643:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "741:57:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "756:3:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "769:6:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "777:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "765:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "765:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "786:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "782:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "782:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "761:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "761:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "752:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "752:39:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "793:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "748:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "748:50:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "741:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "355:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "362:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "370:3:9",
														"type": ""
													}
												],
												"src": "329:475:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:329:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1050:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1068:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1073:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1064:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1064:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1077:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1060:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1060:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1054:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1095:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1110:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1118:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1106:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1106:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1088:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1088:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1088:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1142:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1153:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1138:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1138:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1162:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1170:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1158:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1158:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1131:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1131:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1131:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1194:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1205:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1190:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1190:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1210:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1183:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1183:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1183:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1237:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1248:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:18:9"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "1253:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1226:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1226:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1226:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1280:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1291:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1276:19:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1297:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1269:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1269:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1269:32:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1310:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "1335:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1347:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1358:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1343:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1343:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "1318:16:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1318:45:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1310:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "977:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "988:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "996:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1004:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1012:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1020:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1031:4:9",
														"type": ""
													}
												],
												"src": "809:560:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1495:98:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1512:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1523:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1505:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1505:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1505:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1535:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1560:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1572:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1583:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1568:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1568:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "1543:16:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1543:44:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1535:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1464:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1475:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1486:4:9",
														"type": ""
													}
												],
												"src": "1374:219:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1772:242:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1789:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1800:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1782:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1782:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1782:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1823:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1834:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1819:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1819:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1839:2:9",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1812:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1812:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1812:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1862:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1873:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1858:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1858:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1878:34:9",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1851:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1851:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1851:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1933:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1944:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1929:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1929:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1949:22:9",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1922:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1922:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1922:50:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1981:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1993:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2004:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1989:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1989:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1981:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1749:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1763:4:9",
														"type": ""
													}
												],
												"src": "1598:416:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2193:230:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2210:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2221:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2203:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2203:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2203:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2244:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2255:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2240:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2240:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2260:2:9",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2233:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2233:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2233:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2283:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2294:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2279:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2279:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2299:34:9",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2272:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2272:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2272:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2354:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2365:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2350:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2350:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2370:10:9",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2343:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2343:38:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2343:38:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2390:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2402:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2413:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2398:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2398:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2390:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2170:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2184:4:9",
														"type": ""
													}
												],
												"src": "2019:404:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2602:223:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2619:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2630:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2612:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2612:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2612:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2653:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2664:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2649:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2649:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2669:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2642:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2642:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2642:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2692:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2703:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2688:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2688:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2708:34:9",
																		"type": "",
																		"value": "ERC1155: mint to the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2681:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2681:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2681:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2763:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2774:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2759:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2759:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2779:3:9",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2752:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2752:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2752:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2792:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2804:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2815:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2800:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2800:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2792:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2579:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2593:4:9",
														"type": ""
													}
												],
												"src": "2428:397:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2959:119:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2969:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2981:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2992:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2977:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2977:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2969:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3011:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3022:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3004:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3004:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3004:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3049:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3060:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3045:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3045:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3065:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3038:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3038:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3038:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2920:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2931:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2939:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2950:4:9",
														"type": ""
													}
												],
												"src": "2830:248:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3131:181:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3166:115:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "3187:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3196:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3201:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3192:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3192:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3180:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3180:33:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3180:33:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3233:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3236:4:9",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3226:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3226:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3226:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "3261:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3266:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3254:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3254:17:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3254:17:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3147:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3154:1:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3150:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3150:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3144:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3144:13:9"
															},
															"nodeType": "YulIf",
															"src": "3141:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3290:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3301:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3304:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3297:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3297:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3290:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3114:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3117:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3123:3:9",
														"type": ""
													}
												],
												"src": "3083:229:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3372:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3382:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3396:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3399:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3392:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3392:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3382:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3413:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3443:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3449:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3439:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3439:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3417:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3490:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3492:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3506:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3514:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3502:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3502:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3492:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3470:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3463:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3463:26:9"
															},
															"nodeType": "YulIf",
															"src": "3460:2:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3580:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3601:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3608:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3613:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3604:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3604:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3594:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3594:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3594:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3645:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3648:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3638:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3638:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3638:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3673:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3676:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3666:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3666:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3666:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3536:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3559:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3567:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3556:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3556:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3533:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3533:38:9"
															},
															"nodeType": "YulIf",
															"src": "3530:2:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3352:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3361:6:9",
														"type": ""
													}
												],
												"src": "3317:380:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3749:299:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3759:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3781:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "3797:4:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3803:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3793:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3793:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3812:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3808:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3808:7:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3789:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3789:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3777:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3777:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3763:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3900:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3921:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3928:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3933:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3924:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3924:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3914:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3914:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3914:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3965:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3968:4:9",
																					"type": "",
																					"value": "0x41"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3958:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3958:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3958:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3993:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3996:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3986:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3986:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3986:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3835:10:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3855:2:9",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3859:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3851:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3851:10:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3863:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3847:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3847:18:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3832:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3832:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3871:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3883:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3868:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3868:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3829:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3829:62:9"
															},
															"nodeType": "YulIf",
															"src": "3826:2:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4027:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4031:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4020:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4020:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4020:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3731:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3739:4:9",
														"type": ""
													}
												],
												"src": "3702:346:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4096:142:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4141:91:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sig",
																					"nodeType": "YulIdentifier",
																					"src": "4170:3:9"
																				},
																				{
																					"name": "sig",
																					"nodeType": "YulIdentifier",
																					"src": "4175:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4180:1:9",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "4155:14:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4155:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4155:27:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4195:27:9",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4206:3:9",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"name": "sig",
																							"nodeType": "YulIdentifier",
																							"src": "4217:3:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4211:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4211:10:9"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "4202:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4202:20:9"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "4195:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "4112:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4112:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4130:1:9",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4109:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4109:23:9"
															},
															"nodeType": "YulIf",
															"src": "4106:2:9"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "4088:3:9",
														"type": ""
													}
												],
												"src": "4053:185:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4290:624:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4330:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "4332:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "4306:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4306:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4324:4:9",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4303:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4303:26:9"
															},
															"nodeType": "YulIf",
															"src": "4300:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4348:21:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4366:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4360:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4360:9:9"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "4352:4:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4378:16:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4392:1:9",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4388:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4388:6:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4382:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4418:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4424:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "4431:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4431:16:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4449:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4427:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4427:25:9"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4403:14:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4403:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4403:50:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4462:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4482:4:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4476:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4476:11:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4466:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4496:26:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "4506:14:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:16:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4500:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4531:28:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4549:2:9",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4553:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4545:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4545:10:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4557:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4541:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4541:18:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "4535:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4617:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "4619:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4577:6:9"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "4585:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4574:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4574:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4597:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4605:4:9",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4593:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4593:17:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4612:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4590:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4590:25:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4571:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4571:45:9"
															},
															"nodeType": "YulIf",
															"src": "4568:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4635:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4650:4:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4656:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4646:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4646:17:9"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "4639:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4672:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "4692:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4686:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4686:10:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4676:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4723:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "4725:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4711:6:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4719:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4708:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4708:14:9"
															},
															"nodeType": "YulIf",
															"src": "4705:2:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4814:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "4816:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "4755:3:9"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "4760:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4751:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4751:16:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4769:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4747:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4747:27:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "4784:4:9"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "4790:14:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4790:16:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4780:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4780:27:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4809:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4776:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4776:36:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4744:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4744:69:9"
															},
															"nodeType": "YulIf",
															"src": "4741:2:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4852:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4866:6:9"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "4874:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4862:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4862:19:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4883:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4858:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4858:30:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "4832:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4832:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4832:57:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4898:10:9",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "4905:3:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4898:3:9"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4282:3:9",
														"type": ""
													}
												],
												"src": "4243:671:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), end)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_bytes(value4, add(headStart, 160))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(sig, sig, 4)\n            sig := shr(224, mload(sig))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := sub(shl(64, 1), 1)\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x1EA2 PUSH1 0x27 SWAP2 CODECOPY PUSH3 0x37 DUP2 PUSH3 0x10F JUMP JUMPDEST POP PUSH3 0x64 CALLER PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x128 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x94 CALLER PUSH1 0x1 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x128 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xB9 CALLER PUSH1 0x2 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x128 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xE1 CALLER PUSH1 0x3 PUSH4 0x3B9ACA00 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x128 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x109 CALLER PUSH1 0x4 PUSH4 0x3B9ACA00 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x128 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x75C JUMP JUMPDEST DUP1 MLOAD PUSH3 0x124 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x496 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x18E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH3 0x1B4 DUP2 PUSH1 0x0 DUP8 PUSH3 0x1A2 DUP9 PUSH3 0x248 JUMP JUMPDEST PUSH3 0x1AD DUP9 PUSH3 0x248 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH3 0x1E6 SWAP1 DUP5 SWAP1 PUSH3 0x617 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH3 0x1AD DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH3 0x2AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH3 0x291 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x2C9 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x490 PUSH1 0x20 SHL PUSH3 0x70C OR PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH3 0x2A2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH3 0x305 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH3 0x5BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH3 0x353 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH3 0x350 SWAP2 DUP2 ADD SWAP1 PUSH3 0x53C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH3 0x414 JUMPI PUSH3 0x362 PUSH3 0x6B4 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH3 0x3A3 JUMPI POP PUSH3 0x37A PUSH3 0x6CD JUMP JUMPDEST DUP1 PUSH3 0x387 JUMPI POP PUSH3 0x3A5 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x185 SWAP2 SWAP1 PUSH3 0x602 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x185 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH3 0x487 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x185 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x4A4 SWAP1 PUSH3 0x63C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x4C8 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x513 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x4E3 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x513 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x513 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x513 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x4F6 JUMP JUMPDEST POP PUSH3 0x521 SWAP3 SWAP2 POP PUSH3 0x525 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x521 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x526 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x54E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH3 0x566 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x594 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH3 0x576 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH3 0x5A6 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH3 0x5F7 SWAP1 DUP4 ADD DUP5 PUSH3 0x56D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH3 0x566 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x56D JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x637 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x651 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x673 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH3 0x6AD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH3 0x6CA JUMPI PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH3 0x6DC JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 GT PUSH1 0x24 DUP5 ADD DUP4 LT OR ISZERO PUSH3 0x70C JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x725 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH3 0x740 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH3 0x751 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH3 0x679 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1736 DUP1 PUSH3 0x76C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5B2725ED GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xD562E204 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD562E204 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xE3E55F08 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5B2725ED EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x6ECF11D7 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13DC989F GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x13DC989F EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x3E4BEE38 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x137 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x101 PUSH2 0xFC CALLDATASIZE PUSH1 0x4 PUSH2 0x1174 JUMP JUMPDEST PUSH2 0x21E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x122 CALLDATASIZE PUSH1 0x4 PUSH2 0x1268 JUMP JUMPDEST PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10B JUMP JUMPDEST PUSH2 0x14A PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A7 JUMP JUMPDEST PUSH2 0x307 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x1428 JUMP JUMPDEST PUSH2 0x101 PUSH1 0x3 DUP2 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0x1031 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x101 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x18F PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0x119D JUMP JUMPDEST PUSH2 0x432 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x13E7 JUMP JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP2 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x594 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0x113A JUMP JUMPDEST PUSH2 0x67A JUMP JUMPDEST PUSH2 0x101 PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH2 0x101 PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH2 0x127 PUSH2 0x1DD CALLDATASIZE PUSH1 0x4 PUSH2 0xFFF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x10D7 JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x28F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x2E6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x301 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x316 SWAP1 PUSH2 0x1596 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x342 SWAP1 PUSH2 0x1596 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x38F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x364 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x38F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x372 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x3B7 JUMPI POP PUSH2 0x3B7 DUP6 CALLER PUSH2 0x1DD JUMP JUMPDEST PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x286 JUMP JUMPDEST PUSH2 0x42B DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x712 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x497 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x286 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4C1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4EA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x58C JUMPI PUSH2 0x551 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x51C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x544 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x21E JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x571 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x585 DUP2 PUSH2 0x15FE JUMP JUMPDEST SWAP1 POP PUSH2 0x4F0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x3E8 DUP1 DUP3 MSTORE PUSH2 0x7D20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x20 DUP3 ADD PUSH2 0x7D00 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x3E8 DUP1 DUP3 MSTORE PUSH2 0x7D20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 POP PUSH1 0x20 DUP3 ADD PUSH2 0x7D00 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH2 0x3E8 DUP2 LT ISZERO PUSH2 0x65A JUMPI DUP1 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x60F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x63D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x652 DUP2 PUSH2 0x15FE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5E4 JUMP JUMPDEST POP PUSH2 0x676 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8CA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x676 CALLER DUP4 DUP4 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x6A1 JUMPI POP PUSH2 0x6A1 DUP6 CALLER PUSH2 0x1DD JUMP JUMPDEST PUSH2 0x6FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x286 JUMP JUMPDEST PUSH2 0x42B DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xB4C JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x733 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x286 SWAP1 PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x759 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x286 SWAP1 PUSH2 0x1483 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x85C JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x788 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7B4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x804 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x286 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x841 SWAP1 DUP5 SWAP1 PUSH2 0x157E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x855 SWAP1 PUSH2 0x15FE JUMP JUMPDEST SWAP1 POP PUSH2 0x75D JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x8AC SWAP3 SWAP2 SWAP1 PUSH2 0x13FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x8C2 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xC72 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x92A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x286 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x94B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x286 SWAP1 PUSH2 0x1512 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA03 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x978 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x9A3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9EB SWAP2 SWAP1 PUSH2 0x157E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0x9FB DUP2 PUSH2 0x15FE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x94F JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA54 SWAP3 SWAP2 SWAP1 PUSH2 0x13FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x42B DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0xC72 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xADF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x286 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x286 SWAP1 PUSH2 0x1483 JUMP JUMPDEST CALLER PUSH2 0xB8B DUP2 DUP8 DUP8 PUSH2 0xB82 DUP9 PUSH2 0xDDD JUMP JUMPDEST PUSH2 0x42B DUP9 PUSH2 0xDDD JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0xBCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x286 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xC09 SWAP1 DUP5 SWAP1 PUSH2 0x157E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xC69 DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xE36 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x8C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xCB6 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD00 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCFD SWAP2 DUP2 ADD SWAP1 PUSH2 0x128B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xDAD JUMPI PUSH2 0xD0C PUSH2 0x1645 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xD46 JUMPI POP PUSH2 0xD21 PUSH2 0x165D JUMP JUMPDEST DUP1 PUSH2 0xD2C JUMPI POP PUSH2 0xD48 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x1428 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x286 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xC69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x286 SWAP1 PUSH2 0x143B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xE25 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x8C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xE7A SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xEC4 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xEC1 SWAP2 DUP2 ADD SWAP1 PUSH2 0x128B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xED0 JUMPI PUSH2 0xD0C PUSH2 0x1645 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xC69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x286 SWAP1 PUSH2 0x143B JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF2C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xF39 DUP3 PUSH2 0x155A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF46 DUP3 DUP3 PUSH2 0x15D1 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0xF65 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xF83 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF67 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFA0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFBA JUMPI PUSH2 0xFBA PUSH2 0x162F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFD1 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x15D1 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xFE5 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1011 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x101A DUP4 PUSH2 0xF00 JUMP JUMPDEST SWAP2 POP PUSH2 0x1028 PUSH1 0x20 DUP5 ADD PUSH2 0xF00 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1048 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1051 DUP7 PUSH2 0xF00 JUMP JUMPDEST SWAP5 POP PUSH2 0x105F PUSH1 0x20 DUP8 ADD PUSH2 0xF00 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x107B JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x1087 DUP10 DUP4 DUP11 ADD PUSH2 0xF1C JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x109C JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x10A8 DUP10 DUP4 DUP11 ADD PUSH2 0xF1C JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x10BD JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x10CA DUP9 DUP3 DUP10 ADD PUSH2 0xF90 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x10EE JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x10F7 DUP7 PUSH2 0xF00 JUMP JUMPDEST SWAP5 POP PUSH2 0x1105 PUSH1 0x20 DUP8 ADD PUSH2 0xF00 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x112E JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x10CA DUP9 DUP3 DUP10 ADD PUSH2 0xF90 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x114C JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1155 DUP4 PUSH2 0xF00 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1169 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1186 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x118F DUP4 PUSH2 0xF00 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11AF JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11C6 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11D9 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x11E6 DUP3 PUSH2 0x155A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F3 DUP3 DUP3 PUSH2 0x15D1 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0x1212 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x123B JUMPI PUSH2 0x1227 DUP2 PUSH2 0xF00 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1216 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1251 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x125E DUP6 DUP3 DUP7 ADD PUSH2 0xF1C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1279 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1284 DUP2 PUSH2 0x16E7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x129C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1284 DUP2 PUSH2 0x16E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12B8 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12EE JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x12D2 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x131E JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1302 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x132F JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1370 SWAP1 DUP4 ADD DUP7 PUSH2 0x12BF JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1382 DUP2 DUP7 PUSH2 0x12BF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1396 DUP2 DUP6 PUSH2 0x12F9 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x13DC SWAP1 DUP4 ADD DUP5 PUSH2 0x12F9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1284 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12BF JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x140D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x12BF JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x141F DUP2 DUP6 PUSH2 0x12BF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1284 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12F9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1574 JUMPI PUSH2 0x1574 PUSH2 0x162F JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1591 JUMPI PUSH2 0x1591 PUSH2 0x1619 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x15AA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x15CB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x15F7 JUMPI PUSH2 0x15F7 PUSH2 0x162F JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1612 JUMPI PUSH2 0x1612 PUSH2 0x1619 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x165A JUMPI PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x166B JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x169B JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x16B3 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x16CD JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x16DC PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x15D1 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x16FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0xAC 0xCA CALLER 0xA5 0xB8 PUSH13 0x3129FA946DDB58CEA8AC395C7C 0x4D PUSH9 0x582AD23A5EAC6016A2 0xC8 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER PUSH9 0x747470733A2F2F6761 PUSH14 0x652E6578616D706C652F6170692F PUSH10 0x74656D2F7B69647D2E6A PUSH20 0x6F6E000000000000000000000000000000000000 ",
							"sourceMap": "109:875:0:-:0;;;356:309;;;;;;;;;;1092:62:1;;;;;;;;;;;;;;;;;1134:13;1142:4;1134:7;:13::i;:::-;1092:62;432:35:0::1;438:10;177:1;456:6;432:35;;;;;;;;;;;::::0;:5:::1;;;:35;;:::i;:::-;478:37;484:10;218:1;504:6;478:37;;;;;;;;;;;::::0;:5:::1;;;:37;;:::i;:::-;526:38;532:10;265:1;558;526:38;;;;;;;;;;;::::0;:5:::1;;;:38;;:::i;:::-;575:35;581:10;305:1;600:5;575:35;;;;;;;;;;;::::0;:5:::1;;;:35;;:::i;:::-;621:36;627:10;346:1;647:5;621:36;;;;;;;;;;;::::0;:5:::1;;;:36;;:::i;:::-;109:875:::0;;7936:86:1;8002:13;;;;:4;;:13;;;;;:::i;:::-;;7936:86;:::o;8395:553::-;-1:-1:-1;;;;;8542:16:1;;8534:62;;;;-1:-1:-1;;;8534:62:1;;2630:2:9;8534:62:1;;;2612:21:9;2669:2;2649:18;;;2642:30;2708:34;2688:18;;;2681:62;-1:-1:-1;;;2759:18:9;;;2752:31;2800:19;;8534:62:1;;;;;;;;;719:10:6;8649:102:1;719:10:6;8607:16:1;8692:2;8696:21;8714:2;8696:17;:21::i;:::-;8719:25;8737:6;8719:17;:25::i;:::-;13331:214;;;;;;8649:102;8762:9;:13;;;;;;;;;;;-1:-1:-1;;;;;8762:17:1;;;;;;;;;:27;;8783:6;;8762:9;:27;;8783:6;;8762:27;:::i;:::-;;;;-1:-1:-1;;8804:52:1;;;3004:25:9;;;3060:2;3045:18;;3038:34;;;-1:-1:-1;;;;;8804:52:1;;;;8837:1;;8804:52;;;;;;2977:18:9;8804:52:1;;;;;;;8867:74;8898:8;8916:1;8920:2;8924;8928:6;8936:4;8867:30;:74::i;15080:193::-;15199:16;;;15213:1;15199:16;;;;;;;;;15146;;15174:22;;15199:16;;;;;;;;;;;;-1:-1:-1;15199:16:1;15174:41;;15236:7;15225:5;15231:1;15225:8;;;;;;-1:-1:-1;;;15225:8:1;;;;;;;;;;;;;;;;;;:18;15261:5;15080:193;-1:-1:-1;;15080:193:1:o;13331:214::-;;;;;;;:::o;13551:725::-;13758:15;:2;-1:-1:-1;;;;;13758:13:1;;;;;;:15;;:::i;:::-;13754:516;;;13793:72;;-1:-1:-1;;;13793:72:1;;-1:-1:-1;;;;;13793:38:1;;;;;:72;;13832:8;;13842:4;;13848:2;;13852:6;;13860:4;;13793:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13793:72:1;;;;;;;;-1:-1:-1;;13793:72:1;;;;;;;;;;;;:::i;:::-;;;13789:471;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;14136:6;14129:14;;-1:-1:-1;;;14129:14:1;;;;;;;;:::i;13789:471::-;;;14183:62;;-1:-1:-1;;;14183:62:1;;1800:2:9;14183:62:1;;;1782:21:9;1839:2;1819:18;;;1812:30;1878:34;1858:18;;;1851:62;1949:22;1929:18;;;1922:50;1989:19;;14183:62:1;1772:242:9;13789:471:1;-1:-1:-1;;;;;;13914:55:1;;-1:-1:-1;;;13914:55:1;13910:152;;13993:50;;-1:-1:-1;;;13993:50:1;;2221:2:9;13993:50:1;;;2203:21:9;2260:2;2240:18;;;2233:30;2299:34;2279:18;;;2272:62;-1:-1:-1;;;2350:18:9;;;2343:38;2398:19;;13993:50:1;2193:230:9;13910:152:1;13866:210;13551:725;;;;;;:::o;771:377:5:-;1087:20;1133:8;;;771:377::o;109:875:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;109:875:0;;;-1:-1:-1;109:875:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:310:9;83:6;136:2;124:9;115:7;111:23;107:32;104:2;;;157:6;149;142:22;104:2;188:16;;-1:-1:-1;;;;;;233:32:9;;223:43;;213:2;;285:6;277;270:22;213:2;313:5;94:230;-1:-1:-1;;;94:230:9:o;329:475::-;370:3;408:5;402:12;435:6;430:3;423:19;460:3;472:162;486:6;483:1;480:13;472:162;;;548:4;604:13;;;600:22;;594:29;576:11;;;572:20;;565:59;501:12;472:162;;;652:6;649:1;646:13;643:2;;;718:3;711:4;702:6;697:3;693:16;689:27;682:40;643:2;-1:-1:-1;786:2:9;765:15;-1:-1:-1;;761:29:9;752:39;;;;793:4;748:50;;378:426;-1:-1:-1;;378:426:9:o;809:560::-;-1:-1:-1;;;;;1106:15:9;;;1088:34;;1158:15;;1153:2;1138:18;;1131:43;1205:2;1190:18;;1183:34;;;1248:2;1233:18;;1226:34;;;1068:3;1291;1276:19;;1269:32;;;1031:4;;1318:45;;1343:19;;1335:6;1318:45;:::i;:::-;1310:53;1040:329;-1:-1:-1;;;;;;;1040:329:9:o;1374:219::-;1523:2;1512:9;1505:21;1486:4;1543:44;1583:2;1572:9;1568:18;1560:6;1543:44;:::i;3083:229::-;3123:3;3154:1;3150:6;3147:1;3144:13;3141:2;;;-1:-1:-1;;;3180:33:9;;3236:4;3233:1;3226:15;3266:4;3187:3;3254:17;3141:2;-1:-1:-1;3297:9:9;;3131:181::o;3317:380::-;3396:1;3392:12;;;;3439;;;3460:2;;3514:4;3506:6;3502:17;3492:27;;3460:2;3567;3559:6;3556:14;3536:18;3533:38;3530:2;;;3613:10;3608:3;3604:20;3601:1;3594:31;3648:4;3645:1;3638:15;3676:4;3673:1;3666:15;3530:2;;3372:325;;;:::o;3702:346::-;3812:2;3793:13;;-1:-1:-1;;3789:27:9;3777:40;;-1:-1:-1;;;;;3832:34:9;;3868:22;;;3829:62;3826:2;;;3933:10;3928:3;3924:20;3921:1;3914:31;3968:4;3965:1;3958:15;3996:4;3993:1;3986:15;3826:2;4027;4020:22;-1:-1:-1;;3749:299:9:o;4053:185::-;4088:3;4130:1;4112:16;4109:23;4106:2;;;4180:1;4175:3;4170;4155:27;4211:10;4206:3;4202:20;4106:2;4096:142;:::o;4243:671::-;4282:3;4324:4;4306:16;4303:26;4300:2;;;4290:624;:::o;4300:2::-;4366;4360:9;-1:-1:-1;;4431:16:9;4427:25;;4424:1;4360:9;4403:50;4476:11;;4506:16;-1:-1:-1;;;;;4574:14:9;;;4605:4;4593:17;;4590:25;-1:-1:-1;4571:45:9;4568:2;;;4619:5;;;;;4290:624;:::o;4568:2::-;4656:6;4650:4;4646:17;4635:28;;4692:3;4686:10;4719:2;4711:6;4708:14;4705:2;;;4725:5;;;;;;4290:624;:::o;4705:2::-;4809;4790:16;4784:4;4780:27;4776:36;4769:4;4760:6;4755:3;4751:16;4747:27;4744:69;4741:2;;;4816:5;;;;;;4290:624;:::o;4741:2::-;4832:57;4883:4;4874:6;4866;4862:19;4858:30;4852:4;4832:57;:::i;:::-;-1:-1:-1;4905:3:9;;4290:624;-1:-1:-1;;;;;4290:624:9:o;:::-;109:875:0;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16852:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:9"
															},
															"nodeType": "YulIf",
															"src": "111:2:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:9",
														"type": ""
													}
												],
												"src": "14:173:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "256:691:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "305:24:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "314:5:9"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "321:5:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "307:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "307:20:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "307:20:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "284:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "292:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "280:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "280:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "299:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "276:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "276:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "269:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "269:35:9"
															},
															"nodeType": "YulIf",
															"src": "266:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "338:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "361:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "348:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "348:20:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "342:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "377:14:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "387:4:9",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "381:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "400:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "450:2:9"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "410:39:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "410:43:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "404:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "462:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "482:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "476:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "476:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "466:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "514:6:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "522:2:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "494:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "494:31:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "534:17:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "545:6:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "538:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "567:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "575:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "560:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "560:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "560:18:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "587:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "598:6:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "606:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "594:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "594:15:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "587:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "618:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "641:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "629:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "629:15:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "622:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "698:24:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "707:5:9"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "714:5:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "700:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "700:20:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "700:20:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "667:6:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "679:1:9",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "682:2:9"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "675:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "675:10:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "663:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "663:23:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "688:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "659:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "659:32:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "693:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "656:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "656:41:9"
															},
															"nodeType": "YulIf",
															"src": "653:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "731:14:9",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "740:5:9"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "735:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "799:118:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "820:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "838:3:9"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "825:12:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "825:17:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "813:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "813:30:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "813:30:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "856:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "867:3:9"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "872:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "863:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "863:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "856:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "888:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "899:3:9"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "904:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "895:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "895:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "888:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "765:1:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "768:2:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "762:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:9:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "772:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "774:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "783:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "786:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "779:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "779:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "774:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "758:3:9",
																"statements": []
															},
															"src": "754:163:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "926:15:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "935:6:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "926:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "230:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "238:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "246:5:9",
														"type": ""
													}
												],
												"src": "192:755:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1004:523:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1053:24:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1062:5:9"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1069:5:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1055:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1055:20:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1055:20:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1032:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1040:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1028:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1028:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1047:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1024:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1024:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1017:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1017:35:9"
															},
															"nodeType": "YulIf",
															"src": "1014:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1086:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1109:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1096:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1096:20:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1090:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1157:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1131:2:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1135:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1128:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1128:26:9"
															},
															"nodeType": "YulIf",
															"src": "1125:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1186:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1206:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1200:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1200:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1190:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1238:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1258:2:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1262:4:9",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1254:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1254:13:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1273:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1269:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1269:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1250:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1250:27:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1279:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1246:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1246:38:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1218:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1218:67:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1218:67:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1301:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1309:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1294:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1294:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1294:18:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1360:24:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1369:5:9"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1376:5:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1362:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1362:20:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1362:20:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1335:6:9"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1343:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1331:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1331:15:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1348:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1327:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1327:26:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1355:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1324:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1324:35:9"
															},
															"nodeType": "YulIf",
															"src": "1321:2:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1410:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1418:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1406:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1406:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1429:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1437:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1425:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1425:17:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1444:2:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1393:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1393:54:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1393:54:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1471:6:9"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1479:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1467:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1467:15:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1484:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1463:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1463:26:9"
																	},
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1491:5:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1456:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1456:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1456:41:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1506:15:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1515:6:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1506:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "978:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "986:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "994:5:9",
														"type": ""
													}
												],
												"src": "952:575:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1619:183:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1665:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1674:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1682:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1667:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1667:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1667:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1640:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1649:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1636:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1661:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1632:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1632:32:9"
															},
															"nodeType": "YulIf",
															"src": "1629:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1700:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1729:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1710:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1710:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1700:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1748:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1781:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1792:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1777:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1777:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1758:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1758:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1748:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1577:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1588:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1600:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1608:6:9",
														"type": ""
													}
												],
												"src": "1532:270:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2004:786:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2051:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2060:6:9"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2068:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2053:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2053:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2053:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2025:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2034:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2021:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2021:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2046:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2017:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2017:33:9"
															},
															"nodeType": "YulIf",
															"src": "2014:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2086:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2115:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2096:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2096:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2086:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2134:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2167:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2178:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2163:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2163:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2144:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2144:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2134:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2191:46:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2222:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2233:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2218:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2218:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2205:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2205:32:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2195:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2246:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2256:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2250:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2301:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2310:6:9"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2318:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2303:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2303:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2303:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2289:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2297:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2286:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:14:9"
															},
															"nodeType": "YulIf",
															"src": "2283:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2336:71:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:9"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2390:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:22:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2399:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2346:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2346:61:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2336:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2416:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2449:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2460:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2445:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2445:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2432:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2432:32:9"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "2420:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2493:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2502:6:9"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2510:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2495:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2495:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2495:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2479:8:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2489:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2476:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2476:16:9"
															},
															"nodeType": "YulIf",
															"src": "2473:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2528:73:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2571:9:9"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "2582:8:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2567:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2567:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2593:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2538:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2538:63:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2528:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2610:49:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2643:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2654:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2626:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2626:33:9"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "2614:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2688:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2697:6:9"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2705:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2690:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2690:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2690:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "2674:8:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2684:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2671:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2671:16:9"
															},
															"nodeType": "YulIf",
															"src": "2668:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2723:61:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2754:9:9"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "2765:8:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2750:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2750:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2776:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2733:16:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2733:51:9"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2723:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1938:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1949:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1961:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1969:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1977:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1985:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1993:6:9",
														"type": ""
													}
												],
												"src": "1807:983:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2942:479:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2989:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2998:6:9"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3006:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2991:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2991:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2991:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2963:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2972:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2959:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2984:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2955:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2955:33:9"
															},
															"nodeType": "YulIf",
															"src": "2952:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3024:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3053:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3034:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3034:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3024:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3072:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3116:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3101:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3082:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3072:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3129:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3156:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3167:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3152:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3152:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3139:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3139:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3129:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3180:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3207:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3218:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3203:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3203:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3190:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3190:32:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3180:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3231:47:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3262:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3273:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3258:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3258:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3245:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3245:33:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3235:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3321:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3330:6:9"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3338:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3323:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3323:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3323:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3293:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3301:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3290:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3290:30:9"
															},
															"nodeType": "YulIf",
															"src": "3287:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3356:59:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3387:9:9"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3398:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3383:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3383:22:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3407:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3366:16:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3366:49:9"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3356:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2876:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2887:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2899:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2907:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2915:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2923:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2931:6:9",
														"type": ""
													}
												],
												"src": "2795:626:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3510:283:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3556:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3565:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3573:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3558:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3558:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3558:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3531:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3540:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3527:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3527:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3552:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3523:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3523:32:9"
															},
															"nodeType": "YulIf",
															"src": "3520:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3591:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3620:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3601:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3601:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3591:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3639:45:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3669:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3680:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3665:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3665:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3652:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3652:32:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3643:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3737:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "3746:6:9"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "3754:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3739:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3739:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3739:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3706:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3727:5:9"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3720:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3720:13:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3713:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3713:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3703:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3703:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3696:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3696:40:9"
															},
															"nodeType": "YulIf",
															"src": "3693:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3772:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3782:5:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3772:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3468:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3479:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3491:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3499:6:9",
														"type": ""
													}
												],
												"src": "3426:367:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3885:177:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3931:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3940:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3948:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3933:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3933:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3933:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3906:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3915:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3902:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3902:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3927:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:32:9"
															},
															"nodeType": "YulIf",
															"src": "3895:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3966:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3995:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3976:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3976:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3966:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4014:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4041:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4052:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4037:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4037:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4024:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4024:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4014:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3843:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3854:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3866:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3874:6:9",
														"type": ""
													}
												],
												"src": "3798:264:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4204:1137:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4250:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4259:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4267:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4252:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4252:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4252:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4225:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4234:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4221:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4221:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4246:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4217:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4217:32:9"
															},
															"nodeType": "YulIf",
															"src": "4214:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4285:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4312:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4299:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4299:23:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4289:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4331:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4341:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4335:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4386:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4395:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4403:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4388:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4388:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4388:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4374:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4382:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4371:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4371:14:9"
															},
															"nodeType": "YulIf",
															"src": "4368:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4421:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4435:9:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4446:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4431:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4431:22:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4425:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4501:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4510:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4518:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4503:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4503:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4503:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4480:2:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4484:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4476:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4476:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4491:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4472:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4472:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4465:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4465:35:9"
															},
															"nodeType": "YulIf",
															"src": "4462:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4536:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4559:2:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4546:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4546:16:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "4540:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4571:14:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4581:4:9",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4575:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4594:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4644:2:9"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4604:39:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4604:43:9"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "4598:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4656:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4676:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4670:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4670:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4660:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4708:6:9"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "4716:2:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "4688:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4688:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4688:31:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4728:17:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4739:6:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4732:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4761:6:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4769:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4754:18:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4781:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4792:6:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4800:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4788:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4788:15:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4781:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4812:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4827:2:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4831:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4823:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4823:11:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "4816:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4888:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4897:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4905:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4890:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4890:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4890:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4857:2:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4865:1:9",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "4868:2:9"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4861:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4861:10:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4853:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4853:19:9"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4874:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4849:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4849:28:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4879:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4846:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4846:41:9"
															},
															"nodeType": "YulIf",
															"src": "4843:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4923:15:9",
															"value": {
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "4932:6:9"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4927:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4992:124:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5013:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5037:3:9"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "5018:18:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5018:23:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5006:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5006:36:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5006:36:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5055:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5066:3:9"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5071:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5062:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5062:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5055:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5087:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5098:3:9"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5103:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5094:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5094:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5087:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4958:1:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4961:2:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4955:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4955:9:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4965:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4967:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4976:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4979:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4972:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4972:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4967:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4951:3:9",
																"statements": []
															},
															"src": "4947:169:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5125:16:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5135:6:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5125:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5150:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5183:9:9"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5194:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5179:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5179:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5166:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5166:32:9"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5154:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5227:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "5236:6:9"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "5244:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5229:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5229:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5229:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5213:8:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5223:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5210:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5210:16:9"
															},
															"nodeType": "YulIf",
															"src": "5207:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5262:73:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5305:9:9"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "5316:8:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5301:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5301:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5327:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5272:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5272:63:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5262:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4162:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4173:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4185:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4193:6:9",
														"type": ""
													}
												],
												"src": "4067:1274:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5415:186:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5461:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5470:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5478:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5463:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5463:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5463:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5436:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5445:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5432:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5432:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5457:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5428:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5428:32:9"
															},
															"nodeType": "YulIf",
															"src": "5425:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5496:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5522:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5509:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5509:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5500:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5565:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "5541:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5541:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5541:30:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5580:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5590:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5580:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5381:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5392:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5404:6:9",
														"type": ""
													}
												],
												"src": "5346:255:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5686:179:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5732:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5741:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5749:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5734:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5734:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5734:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5707:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5716:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5703:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5703:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5728:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5699:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5699:32:9"
															},
															"nodeType": "YulIf",
															"src": "5696:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5767:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5786:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5780:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5780:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5771:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5829:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "5805:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5805:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5805:30:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5844:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5854:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5844:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5652:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5663:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5675:6:9",
														"type": ""
													}
												],
												"src": "5606:259:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5940:120:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5986:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5995:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "6003:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5988:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5988:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5988:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5961:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5970:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5957:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5957:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5982:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5953:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5953:32:9"
															},
															"nodeType": "YulIf",
															"src": "5950:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6021:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6044:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6031:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6031:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6021:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5906:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5917:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5929:6:9",
														"type": ""
													}
												],
												"src": "5870:190:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6126:376:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6136:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6156:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6150:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6150:12:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6140:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6178:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6183:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6171:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6171:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6171:19:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6199:14:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6209:4:9",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6203:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6222:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6233:3:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6238:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6229:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6229:12:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6222:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6250:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6268:5:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6275:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6264:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6264:14:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6254:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6287:12:9",
															"value": {
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "6296:3:9"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6291:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6357:120:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6378:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6389:6:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6383:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6383:13:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6371:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6371:26:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6371:26:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6410:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6421:3:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6426:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6417:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6417:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6410:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6442:25:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6456:6:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6464:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6452:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6452:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6442:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6319:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6322:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6316:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6316:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6330:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6332:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6341:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6344:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6337:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6337:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6332:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6312:3:9",
																"statements": []
															},
															"src": "6308:169:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6486:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6493:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6486:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6103:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6110:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6118:3:9",
														"type": ""
													}
												],
												"src": "6065:437:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6556:426:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6566:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6586:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6580:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6580:12:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6570:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6608:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6613:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6601:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6601:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6601:19:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6629:12:9",
															"value": {
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "6638:3:9"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6633:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6702:110:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6716:14:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6726:4:9",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "6720:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "6758:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6763:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6754:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6754:11:9"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "6767:2:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6750:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6750:20:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "6786:5:9"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "6793:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "6782:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6782:13:9"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "6797:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6778:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6778:22:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6772:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6772:29:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6743:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6743:59:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6743:59:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6661:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6664:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6658:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6658:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6672:21:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6674:17:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6683:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6686:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6679:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6679:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6674:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6654:3:9",
																"statements": []
															},
															"src": "6650:162:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6846:64:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "6875:3:9"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "6880:6:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6871:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6871:16:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6889:4:9",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6867:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6867:27:9"
																				},
																				{
																					"name": "end",
																					"nodeType": "YulIdentifier",
																					"src": "6896:3:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6860:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6860:40:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6860:40:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6827:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6830:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6824:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6824:13:9"
															},
															"nodeType": "YulIf",
															"src": "6821:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6919:57:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6934:3:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "6947:6:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6955:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6943:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6943:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6964:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6960:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6960:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6939:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6939:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6930:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6930:39:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6971:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6926:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6926:50:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6919:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6533:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6540:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6548:3:9",
														"type": ""
													}
												],
												"src": "6507:475:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7318:495:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7328:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7346:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7351:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7342:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7342:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7355:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7338:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7338:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7332:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7373:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7388:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7396:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7384:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7384:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7366:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7366:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7366:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7420:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7431:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7416:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7416:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7440:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7448:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7436:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7436:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7409:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7409:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7409:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7472:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7483:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7468:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7468:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7488:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7461:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7461:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7461:31:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7501:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7544:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7556:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7567:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7552:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7552:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7515:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7515:57:9"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "7505:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7592:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7603:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7588:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7588:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "7612:6:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7620:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7608:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7608:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7581:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7581:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7581:50:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7640:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7683:6:9"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "7691:6:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7654:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7654:44:9"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "7644:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7718:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7729:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7714:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7714:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "7739:6:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7747:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7735:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7735:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7707:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7707:51:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7767:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "7792:6:9"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "7800:6:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7775:16:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7775:32:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7767:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7255:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7266:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7274:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7282:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7290:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7298:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7309:4:9",
														"type": ""
													}
												],
												"src": "6987:826:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8049:329:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8059:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8077:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8082:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8073:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8073:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8086:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8069:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8069:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8063:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8104:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8119:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8127:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8115:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8115:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8097:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8097:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8097:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8151:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8162:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8147:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8147:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8171:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8179:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8167:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8167:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8140:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8140:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8140:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8203:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8214:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8199:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8199:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8219:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8192:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8192:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8192:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8246:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8257:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8242:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8242:18:9"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8262:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8235:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8235:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8235:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8289:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8300:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8285:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8285:19:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8306:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8278:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8278:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8278:32:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8319:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "8344:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8356:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8367:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8352:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8352:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "8327:16:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8327:45:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8319:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7986:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7997:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8005:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8013:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8021:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8029:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8040:4:9",
														"type": ""
													}
												],
												"src": "7818:560:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8534:110:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8551:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8562:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8544:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8544:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8544:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8574:64:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8611:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8623:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8634:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8619:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8619:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8582:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8582:56:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8574:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8503:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8514:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8525:4:9",
														"type": ""
													}
												],
												"src": "8383:261:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8878:236:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8895:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8906:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8888:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8888:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8888:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8918:70:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8961:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8973:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8984:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8969:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8969:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8932:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8932:56:9"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "8922:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9008:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9019:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9004:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9004:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "9028:6:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9036:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9024:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9024:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8997:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8997:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8997:50:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9056:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9093:6:9"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "9101:6:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "9064:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9064:44:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9056:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8839:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8850:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8858:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8869:4:9",
														"type": ""
													}
												],
												"src": "8649:465:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9214:92:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9224:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9236:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9247:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9232:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9232:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9224:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9266:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "9291:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9284:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9284:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9277:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9277:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9259:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9259:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9259:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9183:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9194:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9205:4:9",
														"type": ""
													}
												],
												"src": "9119:187:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9432:98:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9449:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9460:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9442:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9442:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9442:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9472:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9497:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9509:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9520:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9505:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9505:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "9480:16:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9480:44:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9472:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9401:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9412:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9423:4:9",
														"type": ""
													}
												],
												"src": "9311:219:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9709:242:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9726:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9737:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9719:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9719:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9719:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9760:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9771:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9756:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9756:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9776:2:9",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9749:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9749:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9749:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9799:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9810:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9795:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9795:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9815:34:9",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9788:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9788:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9788:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9870:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9881:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9866:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9866:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9886:22:9",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9859:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9859:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9859:50:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9918:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9930:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9941:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9926:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9926:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9918:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9686:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9700:4:9",
														"type": ""
													}
												],
												"src": "9535:416:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10130:230:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10147:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10158:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10140:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10140:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10140:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10181:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10192:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10177:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10177:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10197:2:9",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10170:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10170:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10170:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10220:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10231:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10216:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10216:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10236:34:9",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10209:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10209:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10209:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10291:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10302:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10287:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10287:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10307:10:9",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10280:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10280:38:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10280:38:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10327:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10339:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10350:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10335:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10335:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10327:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10107:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10121:4:9",
														"type": ""
													}
												],
												"src": "9956:404:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10539:233:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10556:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10567:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10549:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10549:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10549:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10590:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10601:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10586:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10586:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10606:2:9",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10579:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10579:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10579:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10629:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10640:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10625:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10625:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10645:34:9",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10618:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10618:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10618:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10700:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10711:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10696:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10696:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10716:13:9",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10689:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10689:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10689:41:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10739:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10751:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10762:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10747:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10747:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10739:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10516:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10530:4:9",
														"type": ""
													}
												],
												"src": "10365:407:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10951:231:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10968:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10979:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10961:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10961:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10961:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11002:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11013:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10998:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10998:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11018:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10991:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10991:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10991:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11041:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11052:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11037:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11037:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11057:34:9",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11030:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11030:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11030:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11112:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11123:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11108:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11108:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11128:11:9",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11101:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11101:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11101:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11149:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11161:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11172:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11157:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11157:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11149:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10928:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10942:4:9",
														"type": ""
													}
												],
												"src": "10777:405:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11361:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11378:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11389:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11371:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11371:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11371:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11412:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11423:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11408:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11408:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11428:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11401:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11401:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11401:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11451:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11462:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11447:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11447:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11467:34:9",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11440:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11440:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11440:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11522:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11533:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11518:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11518:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11538:7:9",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11511:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11511:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11511:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11555:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11567:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11578:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11563:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11563:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11555:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11338:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11352:4:9",
														"type": ""
													}
												],
												"src": "11187:401:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11767:240:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11784:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11795:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11777:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11777:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11777:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11818:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11829:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11814:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11814:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11834:2:9",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11807:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11807:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11807:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11857:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11868:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11853:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11853:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11873:34:9",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11846:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11846:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11846:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11928:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11939:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11924:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11924:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11944:20:9",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11917:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11917:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11917:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11974:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11986:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11997:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11982:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11982:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11974:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11744:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11758:4:9",
														"type": ""
													}
												],
												"src": "11593:414:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12186:232:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12203:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12214:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12196:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12196:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12196:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12237:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12248:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12233:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12233:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12253:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12226:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12226:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12226:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12276:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12287:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12272:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12272:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12292:34:9",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12265:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12265:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12265:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12347:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12358:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12343:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12343:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12363:12:9",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12336:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12336:40:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12336:40:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12385:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12397:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12408:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12393:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12393:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12385:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12163:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12177:4:9",
														"type": ""
													}
												],
												"src": "12012:406:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12597:231:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12614:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12625:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12607:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12607:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12607:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12648:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12659:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12644:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12644:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12664:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12637:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12637:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12637:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12687:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12698:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12683:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12683:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12703:34:9",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12676:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12676:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12676:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12758:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12769:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12754:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12754:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12774:11:9",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12747:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12747:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12747:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12795:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12807:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12818:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12803:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12803:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12795:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12574:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12588:4:9",
														"type": ""
													}
												],
												"src": "12423:405:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13007:231:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13024:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13035:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13017:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13017:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13017:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13058:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13069:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13054:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13054:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13074:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13047:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13047:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13047:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13097:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13108:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13093:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13093:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13113:34:9",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13086:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13086:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13086:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13168:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13179:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13164:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13164:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13184:11:9",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13157:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13157:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13157:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13205:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13217:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13228:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13213:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13213:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13205:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12984:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12998:4:9",
														"type": ""
													}
												],
												"src": "12833:405:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13417:230:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13434:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13445:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13427:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13427:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13427:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13468:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13479:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13464:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13464:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13484:2:9",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13457:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13457:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13457:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13507:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13518:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13503:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13503:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13523:34:9",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13496:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13496:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13496:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13578:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13589:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13574:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13574:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13594:10:9",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13567:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13567:38:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13567:38:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13614:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13626:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13637:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13622:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13622:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13614:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13394:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13408:4:9",
														"type": ""
													}
												],
												"src": "13243:404:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13826:223:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13843:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13854:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13836:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13836:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13836:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13877:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13888:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13873:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13873:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13893:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13866:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13866:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13866:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13916:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13927:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13912:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13912:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13932:34:9",
																		"type": "",
																		"value": "ERC1155: mint to the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13905:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13905:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13905:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13987:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13998:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13983:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13983:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14003:3:9",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13976:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13976:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13976:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14016:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14028:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14039:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14024:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14024:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14016:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13803:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13817:4:9",
														"type": ""
													}
												],
												"src": "13652:397:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14155:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14165:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14177:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14188:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14173:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14173:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14165:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14207:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14218:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14200:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14200:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14200:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14124:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14135:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14146:4:9",
														"type": ""
													}
												],
												"src": "14054:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14365:119:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14375:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14387:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14398:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14383:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14383:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14375:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14417:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14428:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14410:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14410:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14410:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14455:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14466:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14451:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14451:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14471:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14444:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14444:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14444:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14326:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14337:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14345:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14356:4:9",
														"type": ""
													}
												],
												"src": "14236:248:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14558:114:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14602:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "14604:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14604:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14604:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14574:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14582:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14571:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14571:30:9"
															},
															"nodeType": "YulIf",
															"src": "14568:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14633:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14649:1:9",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14652:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14645:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14645:14:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14661:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14641:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14641:25:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "14633:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14538:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "14549:4:9",
														"type": ""
													}
												],
												"src": "14489:183:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14725:80:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14752:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14754:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14754:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14754:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14741:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "14748:1:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14744:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14744:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14738:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14738:13:9"
															},
															"nodeType": "YulIf",
															"src": "14735:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14783:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14794:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14797:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14790:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14790:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "14783:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14708:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14711:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "14717:3:9",
														"type": ""
													}
												],
												"src": "14677:128:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14865:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14875:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14889:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14892:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "14885:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14885:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14875:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14906:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14936:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14942:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14932:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14932:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "14910:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14983:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14985:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "14999:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15007:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "14995:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14995:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14985:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "14963:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14956:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14956:26:9"
															},
															"nodeType": "YulIf",
															"src": "14953:2:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15073:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15094:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "15101:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "15106:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "15097:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15097:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15087:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15087:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15087:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15138:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15141:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15131:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15131:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15131:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15166:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15169:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15159:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15159:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15159:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "15029:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15052:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15060:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "15049:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15049:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15026:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15026:38:9"
															},
															"nodeType": "YulIf",
															"src": "15023:2:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "14845:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14854:6:9",
														"type": ""
													}
												],
												"src": "14810:380:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15242:202:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15252:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "15274:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "15290:4:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15296:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15286:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15286:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15305:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "15301:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15301:7:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15282:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15282:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15270:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15270:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "15256:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15385:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "15387:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15387:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15387:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "15328:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15340:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15325:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15325:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "15364:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15376:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "15361:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15361:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "15322:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15322:62:9"
															},
															"nodeType": "YulIf",
															"src": "15319:2:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15423:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "15427:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15416:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15416:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15416:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15224:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "15232:4:9",
														"type": ""
													}
												],
												"src": "15195:249:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15496:88:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15527:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15529:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15529:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15529:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15512:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15523:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "15519:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15519:6:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15509:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15509:17:9"
															},
															"nodeType": "YulIf",
															"src": "15506:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15558:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15569:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15576:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15565:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15565:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15558:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15478:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15488:3:9",
														"type": ""
													}
												],
												"src": "15449:135:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15621:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15638:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15645:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15650:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15641:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15641:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15631:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15631:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15631:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15678:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15681:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15671:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15671:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15671:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15702:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15705:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15695:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15695:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15695:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "15589:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15753:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15770:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15777:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15782:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15773:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15773:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15763:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15763:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15763:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15810:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15813:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15803:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15803:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15803:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15834:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15837:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15827:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15827:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15827:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "15721:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15896:142:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15941:91:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sig",
																					"nodeType": "YulIdentifier",
																					"src": "15970:3:9"
																				},
																				{
																					"name": "sig",
																					"nodeType": "YulIdentifier",
																					"src": "15975:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15980:1:9",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "15955:14:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15955:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15955:27:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "15995:27:9",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16006:3:9",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"name": "sig",
																							"nodeType": "YulIdentifier",
																							"src": "16017:3:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "16011:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16011:10:9"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "16002:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16002:20:9"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "15995:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "15912:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15912:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15930:1:9",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15909:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15909:23:9"
															},
															"nodeType": "YulIf",
															"src": "15906:2:9"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "15888:3:9",
														"type": ""
													}
												],
												"src": "15853:185:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16090:624:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16130:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "16132:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "16106:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16106:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16124:4:9",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "16103:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16103:26:9"
															},
															"nodeType": "YulIf",
															"src": "16100:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16148:21:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16166:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16160:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16160:9:9"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "16152:4:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16178:16:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16192:1:9",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "16188:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16188:6:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "16182:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16218:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16224:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "16231:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16231:16:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16249:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16227:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16227:25:9"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "16203:14:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16203:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16203:50:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16262:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16282:4:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16276:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16276:11:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "16266:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16296:26:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "16306:14:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16306:16:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "16300:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16331:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16341:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "16335:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16417:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "16419:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "16377:6:9"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "16385:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16374:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16374:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16397:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16405:4:9",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16393:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16393:17:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "16412:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16390:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16390:25:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "16371:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16371:45:9"
															},
															"nodeType": "YulIf",
															"src": "16368:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16435:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16450:4:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "16456:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16446:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16446:17:9"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "16439:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16472:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "16492:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16486:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16486:10:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16476:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16523:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "16525:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16511:6:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "16519:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16508:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16508:14:9"
															},
															"nodeType": "YulIf",
															"src": "16505:2:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16614:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "16616:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "16555:3:9"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "16560:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16551:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16551:16:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16569:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16547:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16547:27:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "16584:4:9"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "16590:14:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16590:16:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16580:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16580:27:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16609:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16576:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16576:36:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16544:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16544:69:9"
															},
															"nodeType": "YulIf",
															"src": "16541:2:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16652:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16666:6:9"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "16674:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16662:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16662:19:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16683:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16658:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16658:30:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "16632:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16632:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16632:57:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16698:10:9",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "16705:3:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16698:3:9"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "16082:3:9",
														"type": ""
													}
												],
												"src": "16043:671:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16763:87:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16828:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16837:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16840:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16830:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16830:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16830:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16786:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16797:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16808:3:9",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16813:10:9",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "16804:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16804:20:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "16793:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16793:32:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16783:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16783:43:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16776:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16776:51:9"
															},
															"nodeType": "YulIf",
															"src": "16773:2:9"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16752:5:9",
														"type": ""
													}
												],
												"src": "16719:131:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_address_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), array)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(value4, value4) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(value4, value4) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value1, value1) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_address_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let src := add(_2, _4)\n        if gt(add(add(_2, shl(5, _3)), _4), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _3) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n            src := add(src, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), end)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_bytes(value4, tail_2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_bytes(value4, add(headStart, 160))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(sig, sig, 4)\n            sig := shr(224, mload(sig))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100e95760003560e01c80635b2725ed1161008c578063d562e20411610066578063d562e204146101bf578063e3e55f08146101c7578063e985e9c5146101cf578063f242432a1461020b57600080fd5b80635b2725ed1461019c5780636ecf11d7146101a4578063a22cb465146101ac57600080fd5b806313dc989f116100c857806313dc989f146101575780632eb2c2d61461015f5780633e4bee38146101745780634e1273f41461017c57600080fd5b8062fdd58e146100ee57806301ffc9a7146101145780630e89341c14610137575b600080fd5b6101016100fc366004611174565b61021e565b6040519081526020015b60405180910390f35b610127610122366004611268565b6102b5565b604051901515815260200161010b565b61014a6101453660046112a7565b610307565b60405161010b9190611428565b610101600381565b61017261016d366004611031565b61039b565b005b610101600081565b61018f61018a36600461119d565b610432565b60405161010b91906113e7565b610101600481565b610172610594565b6101726101ba36600461113a565b61067a565b610101600281565b610101600181565b6101276101dd366004610fff565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101726102193660046110d7565b610685565b60006001600160a01b03831661028f5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806102e657506001600160e01b031982166303a24d0760e21b145b8061030157506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461031690611596565b80601f016020809104026020016040519081016040528092919081815260200182805461034290611596565b801561038f5780601f106103645761010080835404028352916020019161038f565b820191906000526020600020905b81548152906001019060200180831161037257829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103b757506103b785336101dd565b61041e5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610286565b61042b8585858585610712565b5050505050565b606081518351146104975760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610286565b6000835167ffffffffffffffff8111156104c157634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156104ea578160200160208202803683370190505b50905060005b845181101561058c5761055185828151811061051c57634e487b7160e01b600052603260045260246000fd5b602002602001015185838151811061054457634e487b7160e01b600052603260045260246000fd5b602002602001015161021e565b82828151811061057157634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610585816115fe565b90506104f0565b509392505050565b604080516103e8808252617d20820190925260009160208201617d00803683375050604080516103e8808252617d208201909252929350600092915060208201617d008036833701905050905060005b6103e881101561065a578083828151811061060f57634e487b7160e01b600052603260045260246000fd5b602002602001018181525050600182828151811061063d57634e487b7160e01b600052603260045260246000fd5b602090810291909101015280610652816115fe565b9150506105e4565b50610676338383604051806020016040528060008152506108ca565b5050565b610676338383610a6b565b6001600160a01b0385163314806106a157506106a185336101dd565b6106ff5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610286565b61042b8585858585610b4c565b3b151590565b81518351146107335760405162461bcd60e51b815260040161028690611512565b6001600160a01b0384166107595760405162461bcd60e51b815260040161028690611483565b3360005b845181101561085c57600085828151811061078857634e487b7160e01b600052603260045260246000fd5b6020026020010151905060008583815181106107b457634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156108045760405162461bcd60e51b8152600401610286906114c8565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061084190849061157e565b9250508190555050505080610855906115fe565b905061075d565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516108ac9291906113fa565b60405180910390a46108c2818787878787610c72565b505050505050565b6001600160a01b03841661092a5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610286565b815183511461094b5760405162461bcd60e51b815260040161028690611512565b3360005b8451811015610a035783818151811061097857634e487b7160e01b600052603260045260246000fd5b60200260200101516000808784815181106109a357634e487b7160e01b600052603260045260246000fd5b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546109eb919061157e565b909155508190506109fb816115fe565b91505061094f565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a549291906113fa565b60405180910390a461042b81600087878787610c72565b816001600160a01b0316836001600160a01b03161415610adf5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610286565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610b725760405162461bcd60e51b815260040161028690611483565b33610b8b818787610b8288610ddd565b61042b88610ddd565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015610bcc5760405162461bcd60e51b8152600401610286906114c8565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290610c0990849061157e565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610c69828888888888610e36565b50505050505050565b6001600160a01b0384163b156108c25760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610cb69089908990889088908890600401611344565b602060405180830381600087803b158015610cd057600080fd5b505af1925050508015610d00575060408051601f3d908101601f19168201909252610cfd9181019061128b565b60015b610dad57610d0c611645565b806308c379a01415610d465750610d2161165d565b80610d2c5750610d48565b8060405162461bcd60e51b81526004016102869190611428565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610286565b6001600160e01b0319811663bc197c8160e01b14610c695760405162461bcd60e51b81526004016102869061143b565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610e2557634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b156108c25760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610e7a90899089908890889088906004016113a2565b602060405180830381600087803b158015610e9457600080fd5b505af1925050508015610ec4575060408051601f3d908101601f19168201909252610ec19181019061128b565b60015b610ed057610d0c611645565b6001600160e01b0319811663f23a6e6160e01b14610c695760405162461bcd60e51b81526004016102869061143b565b80356001600160a01b0381168114610f1757600080fd5b919050565b600082601f830112610f2c578081fd5b81356020610f398261155a565b604051610f4682826115d1565b8381528281019150858301600585901b87018401881015610f65578586fd5b855b85811015610f8357813584529284019290840190600101610f67565b5090979650505050505050565b600082601f830112610fa0578081fd5b813567ffffffffffffffff811115610fba57610fba61162f565b604051610fd1601f8301601f1916602001826115d1565b818152846020838601011115610fe5578283fd5b816020850160208301379081016020019190915292915050565b60008060408385031215611011578182fd5b61101a83610f00565b915061102860208401610f00565b90509250929050565b600080600080600060a08688031215611048578081fd5b61105186610f00565b945061105f60208701610f00565b9350604086013567ffffffffffffffff8082111561107b578283fd5b61108789838a01610f1c565b9450606088013591508082111561109c578283fd5b6110a889838a01610f1c565b935060808801359150808211156110bd578283fd5b506110ca88828901610f90565b9150509295509295909350565b600080600080600060a086880312156110ee578081fd5b6110f786610f00565b945061110560208701610f00565b93506040860135925060608601359150608086013567ffffffffffffffff81111561112e578182fd5b6110ca88828901610f90565b6000806040838503121561114c578182fd5b61115583610f00565b915060208301358015158114611169578182fd5b809150509250929050565b60008060408385031215611186578182fd5b61118f83610f00565b946020939093013593505050565b600080604083850312156111af578182fd5b823567ffffffffffffffff808211156111c6578384fd5b818501915085601f8301126111d9578384fd5b813560206111e68261155a565b6040516111f382826115d1565b8381528281019150858301600585901b870184018b1015611212578889fd5b8896505b8487101561123b5761122781610f00565b835260019690960195918301918301611216565b5096505086013592505080821115611251578283fd5b5061125e85828601610f1c565b9150509250929050565b600060208284031215611279578081fd5b8135611284816116e7565b9392505050565b60006020828403121561129c578081fd5b8151611284816116e7565b6000602082840312156112b8578081fd5b5035919050565b6000815180845260208085019450808401835b838110156112ee578151875295820195908201906001016112d2565b509495945050505050565b60008151808452815b8181101561131e57602081850181015186830182015201611302565b8181111561132f5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a060408201819052600090611370908301866112bf565b828103606084015261138281866112bf565b9050828103608084015261139681856112f9565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906113dc908301846112f9565b979650505050505050565b60208152600061128460208301846112bf565b60408152600061140d60408301856112bf565b828103602084015261141f81856112bf565b95945050505050565b60208152600061128460208301846112f9565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b600067ffffffffffffffff8211156115745761157461162f565b5060051b60200190565b6000821982111561159157611591611619565b500190565b600181811c908216806115aa57607f821691505b602082108114156115cb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff811182821017156115f7576115f761162f565b6040525050565b600060001982141561161257611612611619565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561165a57600481823e5160e01c5b90565b600060443d101561166b5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561169b57505050505090565b82850191508151818111156116b35750505050505090565b843d87010160208285010111156116cd5750505050505090565b6116dc602082860101876115d1565b509095945050505050565b6001600160e01b0319811681146116fd57600080fd5b5056fea264697066735822122028acca33a5b86c3129fa946ddb58cea8ac395c7c4d68582ad23a5eac6016a2c864736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5B2725ED GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xD562E204 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD562E204 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xE3E55F08 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5B2725ED EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x6ECF11D7 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13DC989F GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x13DC989F EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x3E4BEE38 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x137 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x101 PUSH2 0xFC CALLDATASIZE PUSH1 0x4 PUSH2 0x1174 JUMP JUMPDEST PUSH2 0x21E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x122 CALLDATASIZE PUSH1 0x4 PUSH2 0x1268 JUMP JUMPDEST PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10B JUMP JUMPDEST PUSH2 0x14A PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A7 JUMP JUMPDEST PUSH2 0x307 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x1428 JUMP JUMPDEST PUSH2 0x101 PUSH1 0x3 DUP2 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0x1031 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x101 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x18F PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0x119D JUMP JUMPDEST PUSH2 0x432 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x13E7 JUMP JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP2 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x594 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0x113A JUMP JUMPDEST PUSH2 0x67A JUMP JUMPDEST PUSH2 0x101 PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH2 0x101 PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH2 0x127 PUSH2 0x1DD CALLDATASIZE PUSH1 0x4 PUSH2 0xFFF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x10D7 JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x28F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x2E6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x301 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x316 SWAP1 PUSH2 0x1596 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x342 SWAP1 PUSH2 0x1596 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x38F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x364 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x38F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x372 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x3B7 JUMPI POP PUSH2 0x3B7 DUP6 CALLER PUSH2 0x1DD JUMP JUMPDEST PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x286 JUMP JUMPDEST PUSH2 0x42B DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x712 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x497 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x286 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4C1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4EA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x58C JUMPI PUSH2 0x551 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x51C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x544 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x21E JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x571 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x585 DUP2 PUSH2 0x15FE JUMP JUMPDEST SWAP1 POP PUSH2 0x4F0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x3E8 DUP1 DUP3 MSTORE PUSH2 0x7D20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x20 DUP3 ADD PUSH2 0x7D00 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x3E8 DUP1 DUP3 MSTORE PUSH2 0x7D20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 POP PUSH1 0x20 DUP3 ADD PUSH2 0x7D00 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH2 0x3E8 DUP2 LT ISZERO PUSH2 0x65A JUMPI DUP1 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x60F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x63D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x652 DUP2 PUSH2 0x15FE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5E4 JUMP JUMPDEST POP PUSH2 0x676 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8CA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x676 CALLER DUP4 DUP4 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x6A1 JUMPI POP PUSH2 0x6A1 DUP6 CALLER PUSH2 0x1DD JUMP JUMPDEST PUSH2 0x6FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x286 JUMP JUMPDEST PUSH2 0x42B DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xB4C JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x733 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x286 SWAP1 PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x759 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x286 SWAP1 PUSH2 0x1483 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x85C JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x788 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7B4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x804 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x286 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x841 SWAP1 DUP5 SWAP1 PUSH2 0x157E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x855 SWAP1 PUSH2 0x15FE JUMP JUMPDEST SWAP1 POP PUSH2 0x75D JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x8AC SWAP3 SWAP2 SWAP1 PUSH2 0x13FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x8C2 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xC72 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x92A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x286 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x94B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x286 SWAP1 PUSH2 0x1512 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA03 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x978 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x9A3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9EB SWAP2 SWAP1 PUSH2 0x157E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0x9FB DUP2 PUSH2 0x15FE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x94F JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA54 SWAP3 SWAP2 SWAP1 PUSH2 0x13FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x42B DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0xC72 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xADF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x286 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x286 SWAP1 PUSH2 0x1483 JUMP JUMPDEST CALLER PUSH2 0xB8B DUP2 DUP8 DUP8 PUSH2 0xB82 DUP9 PUSH2 0xDDD JUMP JUMPDEST PUSH2 0x42B DUP9 PUSH2 0xDDD JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0xBCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x286 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xC09 SWAP1 DUP5 SWAP1 PUSH2 0x157E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xC69 DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xE36 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x8C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xCB6 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD00 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCFD SWAP2 DUP2 ADD SWAP1 PUSH2 0x128B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xDAD JUMPI PUSH2 0xD0C PUSH2 0x1645 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xD46 JUMPI POP PUSH2 0xD21 PUSH2 0x165D JUMP JUMPDEST DUP1 PUSH2 0xD2C JUMPI POP PUSH2 0xD48 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x1428 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x286 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xC69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x286 SWAP1 PUSH2 0x143B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xE25 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x8C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xE7A SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x13A2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xEC4 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xEC1 SWAP2 DUP2 ADD SWAP1 PUSH2 0x128B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xED0 JUMPI PUSH2 0xD0C PUSH2 0x1645 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xC69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x286 SWAP1 PUSH2 0x143B JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF2C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xF39 DUP3 PUSH2 0x155A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF46 DUP3 DUP3 PUSH2 0x15D1 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0xF65 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xF83 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF67 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFA0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFBA JUMPI PUSH2 0xFBA PUSH2 0x162F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFD1 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x15D1 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xFE5 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1011 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x101A DUP4 PUSH2 0xF00 JUMP JUMPDEST SWAP2 POP PUSH2 0x1028 PUSH1 0x20 DUP5 ADD PUSH2 0xF00 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1048 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1051 DUP7 PUSH2 0xF00 JUMP JUMPDEST SWAP5 POP PUSH2 0x105F PUSH1 0x20 DUP8 ADD PUSH2 0xF00 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x107B JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x1087 DUP10 DUP4 DUP11 ADD PUSH2 0xF1C JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x109C JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x10A8 DUP10 DUP4 DUP11 ADD PUSH2 0xF1C JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x10BD JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x10CA DUP9 DUP3 DUP10 ADD PUSH2 0xF90 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x10EE JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x10F7 DUP7 PUSH2 0xF00 JUMP JUMPDEST SWAP5 POP PUSH2 0x1105 PUSH1 0x20 DUP8 ADD PUSH2 0xF00 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x112E JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x10CA DUP9 DUP3 DUP10 ADD PUSH2 0xF90 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x114C JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1155 DUP4 PUSH2 0xF00 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1169 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1186 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x118F DUP4 PUSH2 0xF00 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11AF JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11C6 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11D9 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x11E6 DUP3 PUSH2 0x155A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F3 DUP3 DUP3 PUSH2 0x15D1 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0x1212 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x123B JUMPI PUSH2 0x1227 DUP2 PUSH2 0xF00 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1216 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1251 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x125E DUP6 DUP3 DUP7 ADD PUSH2 0xF1C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1279 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1284 DUP2 PUSH2 0x16E7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x129C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1284 DUP2 PUSH2 0x16E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12B8 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12EE JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x12D2 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x131E JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1302 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x132F JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1370 SWAP1 DUP4 ADD DUP7 PUSH2 0x12BF JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1382 DUP2 DUP7 PUSH2 0x12BF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1396 DUP2 DUP6 PUSH2 0x12F9 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x13DC SWAP1 DUP4 ADD DUP5 PUSH2 0x12F9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1284 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12BF JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x140D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x12BF JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x141F DUP2 DUP6 PUSH2 0x12BF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1284 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12F9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1574 JUMPI PUSH2 0x1574 PUSH2 0x162F JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1591 JUMPI PUSH2 0x1591 PUSH2 0x1619 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x15AA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x15CB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x15F7 JUMPI PUSH2 0x15F7 PUSH2 0x162F JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1612 JUMPI PUSH2 0x1612 PUSH2 0x1619 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x165A JUMPI PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x166B JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x169B JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x16B3 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x16CD JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x16DC PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x15D1 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x16FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0xAC 0xCA CALLER 0xA5 0xB8 PUSH13 0x3129FA946DDB58CEA8AC395C7C 0x4D PUSH9 0x582AD23A5EAC6016A2 0xC8 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "109:875:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2170:228:1;;;;;;:::i;:::-;;:::i;:::-;;;14200:25:9;;;14188:2;14173:18;2170:228:1;;;;;;;;1221:305;;;;;;:::i;:::-;;:::i;:::-;;;9284:14:9;;9277:22;9259:41;;9247:2;9232:18;1221:305:1;9214:92:9;1925:103:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;273:33:0:-;;305:1;273:33;;4045:430:1;;;;;;:::i;:::-;;:::i;:::-;;146:32:0;;177:1;146:32;;2555:508:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;313:34:0:-;;346:1;313:34;;673:308;;;:::i;3131:153:1:-;;;;;;:::i;:::-;;:::i;226:40:0:-;;265:1;226:40;;185:34;;218:1;185:34;;3351:166:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3473:27:1;;;3450:4;3473:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3351:166;3584:389;;;;;;:::i;:::-;;:::i;2170:228::-;2256:7;-1:-1:-1;;;;;2283:21:1;;2275:77;;;;-1:-1:-1;;;2275:77:1;;10567:2:9;2275:77:1;;;10549:21:9;10606:2;10586:18;;;10579:30;10645:34;10625:18;;;10618:62;-1:-1:-1;;;10696:18:9;;;10689:41;10747:19;;2275:77:1;;;;;;;;;-1:-1:-1;2369:9:1;:13;;;;;;;;;;;-1:-1:-1;;;;;2369:22:1;;;;;;;;;;;;2170:228::o;1221:305::-;1323:4;-1:-1:-1;;;;;;1358:41:1;;-1:-1:-1;;;1358:41:1;;:109;;-1:-1:-1;;;;;;;1415:52:1;;-1:-1:-1;;;1415:52:1;1358:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:7;;;1483:36:1;1339:180;1221:305;-1:-1:-1;;1221:305:1:o;1925:103::-;1985:13;2017:4;2010:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1925:103;;;:::o;4045:430::-;-1:-1:-1;;;;;4270:20:1;;719:10:6;4270:20:1;;:60;;-1:-1:-1;4294:36:1;4311:4;719:10:6;3351:166:1;:::i;4294:36::-;4249:157;;;;-1:-1:-1;;;4249:157:1;;11795:2:9;4249:157:1;;;11777:21:9;11834:2;11814:18;;;11807:30;11873:34;11853:18;;;11846:62;-1:-1:-1;;;11924:18:9;;;11917:48;11982:19;;4249:157:1;11767:240:9;4249:157:1;4416:52;4439:4;4445:2;4449:3;4454:7;4463:4;4416:22;:52::i;:::-;4045:430;;;;;:::o;2555:508::-;2706:16;2765:3;:10;2746:8;:15;:29;2738:83;;;;-1:-1:-1;;;2738:83:1;;13035:2:9;2738:83:1;;;13017:21:9;13074:2;13054:18;;;13047:30;13113:34;13093:18;;;13086:62;-1:-1:-1;;;13164:18:9;;;13157:39;13213:19;;2738:83:1;13007:231:9;2738:83:1;2832:30;2879:8;:15;2865:30;;;;;;-1:-1:-1;;;2865:30:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2865:30:1;;2832:63;;2911:9;2906:120;2930:8;:15;2926:1;:19;2906:120;;;2985:30;2995:8;3004:1;2995:11;;;;;;-1:-1:-1;;;2995:11:1;;;;;;;;;;;;;;;3008:3;3012:1;3008:6;;;;;;-1:-1:-1;;;3008:6:1;;;;;;;;;;;;;;;2985:9;:30::i;:::-;2966:13;2980:1;2966:16;;;;;;-1:-1:-1;;;2966:16:1;;;;;;;;;;;;;;;;;;:49;2947:3;;;:::i;:::-;;;2906:120;;;-1:-1:-1;3043:13:1;2555:508;-1:-1:-1;;;2555:508:1:o;673:308:0:-;735:19;;;749:4;735:19;;;;;;;;;712:20;;735:19;;;;;;;;-1:-1:-1;;792:19:0;;;806:4;792:19;;;;;;;;;712:42;;-1:-1:-1;765:24:0;;792:19;-1:-1:-1;792:19:0;;;;;;;;;;-1:-1:-1;792:19:0;765:46;;827:9;822:101;846:4;842:1;:8;822:101;;;881:1;872:3;876:1;872:6;;;;;;-1:-1:-1;;;872:6:0;;;;;;;;;;;;;;:10;;;;;910:1;897:7;905:1;897:10;;;;;;-1:-1:-1;;;897:10:0;;;;;;;;;;;;;;;;;;:14;852:3;;;;:::i;:::-;;;;822:101;;;;933:40;944:10;956:3;961:7;933:40;;;;;;;;;;;;:10;:40::i;:::-;673:308;;:::o;3131:153:1:-;3225:52;719:10:6;3258:8:1;3268;3225:18;:52::i;3584:389::-;-1:-1:-1;;;;;3784:20:1;;719:10:6;3784:20:1;;:60;;-1:-1:-1;3808:36:1;3825:4;719:10:6;3351:166:1;:::i;3808:36::-;3763:148;;;;-1:-1:-1;;;3763:148:1;;10979:2:9;3763:148:1;;;10961:21:9;11018:2;10998:18;;;10991:30;11057:34;11037:18;;;11030:62;-1:-1:-1;;;11108:18:9;;;11101:39;11157:19;;3763:148:1;10951:231:9;3763:148:1;3921:45;3939:4;3945:2;3949;3953:6;3961:4;3921:17;:45::i;771:377:5:-;1087:20;1133:8;;;771:377::o;6068:1045:1:-;6288:7;:14;6274:3;:10;:28;6266:81;;;;-1:-1:-1;;;6266:81:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;6365:16:1;;6357:66;;;;-1:-1:-1;;;6357:66:1;;;;;;;:::i;:::-;719:10:6;6434:16:1;6547:411;6571:3;:10;6567:1;:14;6547:411;;;6602:10;6615:3;6619:1;6615:6;;;;;;-1:-1:-1;;;6615:6:1;;;;;;;;;;;;;;;6602:19;;6635:14;6652:7;6660:1;6652:10;;;;;;-1:-1:-1;;;6652:10:1;;;;;;;;;;;;;;;;;;;;6677:19;6699:13;;;;;;;;;;-1:-1:-1;;;;;6699:19:1;;;;;;;;;;;;6652:10;;-1:-1:-1;6740:21:1;;;;6732:76;;;;-1:-1:-1;;;6732:76:1;;;;;;;:::i;:::-;6850:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6850:19:1;;;;;;;;;;6872:20;;;6850:42;;6920:17;;;;;;;:27;;6872:20;;6850:9;6920:27;;6872:20;;6920:27;:::i;:::-;;;;;;;;6547:411;;;6583:3;;;;:::i;:::-;;;6547:411;;;;7003:2;-1:-1:-1;;;;;6973:47:1;6997:4;-1:-1:-1;;;;;6973:47:1;6987:8;-1:-1:-1;;;;;6973:47:1;;7007:3;7012:7;6973:47;;;;;;;:::i;:::-;;;;;;;;7031:75;7067:8;7077:4;7083:2;7087:3;7092:7;7101:4;7031:35;:75::i;:::-;6068:1045;;;;;;:::o;9293:715::-;-1:-1:-1;;;;;9465:16:1;;9457:62;;;;-1:-1:-1;;;9457:62:1;;13854:2:9;9457:62:1;;;13836:21:9;13893:2;13873:18;;;13866:30;13932:34;13912:18;;;13905:62;-1:-1:-1;;;13983:18:9;;;13976:31;14024:19;;9457:62:1;13826:223:9;9457:62:1;9551:7;:14;9537:3;:10;:28;9529:81;;;;-1:-1:-1;;;9529:81:1;;;;;;;:::i;:::-;719:10:6;9621:16:1;9740:101;9764:3;:10;9760:1;:14;9740:101;;;9820:7;9828:1;9820:10;;;;;;-1:-1:-1;;;9820:10:1;;;;;;;;;;;;;;;9795:9;:17;9805:3;9809:1;9805:6;;;;;;-1:-1:-1;;;9805:6:1;;;;;;;;;;;;;;;9795:17;;;;;;;;;;;:21;9813:2;-1:-1:-1;;;;;9795:21:1;-1:-1:-1;;;;;9795:21:1;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;9776:3:1;;-1:-1:-1;9776:3:1;;;:::i;:::-;;;;9740:101;;;;9892:2;-1:-1:-1;;;;;9856:53:1;9888:1;-1:-1:-1;;;;;9856:53:1;9870:8;-1:-1:-1;;;;;9856:53:1;;9896:3;9901:7;9856:53;;;;;;;:::i;:::-;;;;;;;;9920:81;9956:8;9974:1;9978:2;9982:3;9987:7;9996:4;9920:35;:81::i;12074:323::-;12224:8;-1:-1:-1;;;;;12215:17:1;:5;-1:-1:-1;;;;;12215:17:1;;;12207:71;;;;-1:-1:-1;;;12207:71:1;;12625:2:9;12207:71:1;;;12607:21:9;12664:2;12644:18;;;12637:30;12703:34;12683:18;;;12676:62;-1:-1:-1;;;12754:18:9;;;12747:39;12803:19;;12207:71:1;12597:231:9;12207:71:1;-1:-1:-1;;;;;12288:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12288:46:1;;;;;;;;;;12349:41;;9259::9;;;12349::1;;9232:18:9;12349:41:1;;;;;;;12074:323;;;:::o;4925:797::-;-1:-1:-1;;;;;5106:16:1;;5098:66;;;;-1:-1:-1;;;5098:66:1;;;;;;;:::i;:::-;719:10:6;5217:96:1;719:10:6;5248:4:1;5254:2;5258:21;5276:2;5258:17;:21::i;:::-;5281:25;5299:6;5281:17;:25::i;5217:96::-;5324:19;5346:13;;;;;;;;;;;-1:-1:-1;;;;;5346:19:1;;;;;;;;;;5383:21;;;;5375:76;;;;-1:-1:-1;;;5375:76:1;;;;;;;:::i;:::-;5485:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5485:19:1;;;;;;;;;;5507:20;;;5485:42;;5547:17;;;;;;;:27;;5507:20;;5485:9;5547:27;;5507:20;;5547:27;:::i;:::-;;;;-1:-1:-1;;5590:46:1;;;14410:25:9;;;14466:2;14451:18;;14444:34;;;-1:-1:-1;;;;;5590:46:1;;;;;;;;;;;;;;14383:18:9;5590:46:1;;;;;;;5647:68;5678:8;5688:4;5694:2;5698;5702:6;5710:4;5647:30;:68::i;:::-;4925:797;;;;;;;:::o;14282:792::-;-1:-1:-1;;;;;14514:13:1;;1087:20:5;1133:8;14510:558:1;;14549:79;;-1:-1:-1;;;14549:79:1;;-1:-1:-1;;;;;14549:43:1;;;;;:79;;14593:8;;14603:4;;14609:3;;14614:7;;14623:4;;14549:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14549:79:1;;;;;;;;-1:-1:-1;;14549:79:1;;;;;;;;;;;;:::i;:::-;;;14545:513;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;14934:6;14927:14;;-1:-1:-1;;;14927:14:1;;;;;;;;:::i;14545:513::-;;;14981:62;;-1:-1:-1;;;14981:62:1;;9737:2:9;14981:62:1;;;9719:21:9;9776:2;9756:18;;;9749:30;9815:34;9795:18;;;9788:62;-1:-1:-1;;;9866:18:9;;;9859:50;9926:19;;14981:62:1;9709:242:9;14545:513:1;-1:-1:-1;;;;;;14707:60:1;;-1:-1:-1;;;14707:60:1;14703:157;;14791:50;;-1:-1:-1;;;14791:50:1;;;;;;;:::i;15080:193::-;15199:16;;;15213:1;15199:16;;;;;;;;;15146;;15174:22;;15199:16;;;;;;;;;;;;-1:-1:-1;15199:16:1;15174:41;;15236:7;15225:5;15231:1;15225:8;;;;;;-1:-1:-1;;;15225:8:1;;;;;;;;;;;;;;;;;;:18;15261:5;15080:193;-1:-1:-1;;15080:193:1:o;13551:725::-;-1:-1:-1;;;;;13758:13:1;;1087:20:5;1133:8;13754:516:1;;13793:72;;-1:-1:-1;;;13793:72:1;;-1:-1:-1;;;;;13793:38:1;;;;;:72;;13832:8;;13842:4;;13848:2;;13852:6;;13860:4;;13793:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13793:72:1;;;;;;;;-1:-1:-1;;13793:72:1;;;;;;;;;;;;:::i;:::-;;;13789:471;;;;:::i;:::-;-1:-1:-1;;;;;;13914:55:1;;-1:-1:-1;;;13914:55:1;13910:152;;13993:50;;-1:-1:-1;;;13993:50:1;;;;;;;:::i;14:173:9:-;82:20;;-1:-1:-1;;;;;131:31:9;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:755::-;246:5;299:3;292:4;284:6;280:17;276:27;266:2;;321:5;314;307:20;266:2;361:6;348:20;387:4;410:43;450:2;410:43;:::i;:::-;482:2;476:9;494:31;522:2;514:6;494:31;:::i;:::-;560:18;;;594:15;;;;-1:-1:-1;629:15:9;;;679:1;675:10;;;663:23;;659:32;;656:41;-1:-1:-1;653:2:9;;;714:5;707;700:20;653:2;740:5;754:163;768:2;765:1;762:9;754:163;;;825:17;;813:30;;863:12;;;;895;;;;786:1;779:9;754:163;;;-1:-1:-1;935:6:9;;256:691;-1:-1:-1;;;;;;;256:691:9:o;952:575::-;994:5;1047:3;1040:4;1032:6;1028:17;1024:27;1014:2;;1069:5;1062;1055:20;1014:2;1109:6;1096:20;1135:18;1131:2;1128:26;1125:2;;;1157:18;;:::i;:::-;1206:2;1200:9;1218:67;1273:2;1254:13;;-1:-1:-1;;1250:27:9;1279:4;1246:38;1200:9;1218:67;:::i;:::-;1309:2;1301:6;1294:18;1355:3;1348:4;1343:2;1335:6;1331:15;1327:26;1324:35;1321:2;;;1376:5;1369;1362:20;1321:2;1444;1437:4;1429:6;1425:17;1418:4;1410:6;1406:17;1393:54;1467:15;;;1484:4;1463:26;1456:41;;;;1471:6;1004:523;-1:-1:-1;;1004:523:9:o;1532:270::-;1600:6;1608;1661:2;1649:9;1640:7;1636:23;1632:32;1629:2;;;1682:6;1674;1667:22;1629:2;1710:29;1729:9;1710:29;:::i;:::-;1700:39;;1758:38;1792:2;1781:9;1777:18;1758:38;:::i;:::-;1748:48;;1619:183;;;;;:::o;1807:983::-;1961:6;1969;1977;1985;1993;2046:3;2034:9;2025:7;2021:23;2017:33;2014:2;;;2068:6;2060;2053:22;2014:2;2096:29;2115:9;2096:29;:::i;:::-;2086:39;;2144:38;2178:2;2167:9;2163:18;2144:38;:::i;:::-;2134:48;;2233:2;2222:9;2218:18;2205:32;2256:18;2297:2;2289:6;2286:14;2283:2;;;2318:6;2310;2303:22;2283:2;2346:61;2399:7;2390:6;2379:9;2375:22;2346:61;:::i;:::-;2336:71;;2460:2;2449:9;2445:18;2432:32;2416:48;;2489:2;2479:8;2476:16;2473:2;;;2510:6;2502;2495:22;2473:2;2538:63;2593:7;2582:8;2571:9;2567:24;2538:63;:::i;:::-;2528:73;;2654:3;2643:9;2639:19;2626:33;2610:49;;2684:2;2674:8;2671:16;2668:2;;;2705:6;2697;2690:22;2668:2;;2733:51;2776:7;2765:8;2754:9;2750:24;2733:51;:::i;:::-;2723:61;;;2004:786;;;;;;;;:::o;2795:626::-;2899:6;2907;2915;2923;2931;2984:3;2972:9;2963:7;2959:23;2955:33;2952:2;;;3006:6;2998;2991:22;2952:2;3034:29;3053:9;3034:29;:::i;:::-;3024:39;;3082:38;3116:2;3105:9;3101:18;3082:38;:::i;:::-;3072:48;;3167:2;3156:9;3152:18;3139:32;3129:42;;3218:2;3207:9;3203:18;3190:32;3180:42;;3273:3;3262:9;3258:19;3245:33;3301:18;3293:6;3290:30;3287:2;;;3338:6;3330;3323:22;3287:2;3366:49;3407:7;3398:6;3387:9;3383:22;3366:49;:::i;3426:367::-;3491:6;3499;3552:2;3540:9;3531:7;3527:23;3523:32;3520:2;;;3573:6;3565;3558:22;3520:2;3601:29;3620:9;3601:29;:::i;:::-;3591:39;;3680:2;3669:9;3665:18;3652:32;3727:5;3720:13;3713:21;3706:5;3703:32;3693:2;;3754:6;3746;3739:22;3693:2;3782:5;3772:15;;;3510:283;;;;;:::o;3798:264::-;3866:6;3874;3927:2;3915:9;3906:7;3902:23;3898:32;3895:2;;;3948:6;3940;3933:22;3895:2;3976:29;3995:9;3976:29;:::i;:::-;3966:39;4052:2;4037:18;;;;4024:32;;-1:-1:-1;;;3885:177:9:o;4067:1274::-;4185:6;4193;4246:2;4234:9;4225:7;4221:23;4217:32;4214:2;;;4267:6;4259;4252:22;4214:2;4312:9;4299:23;4341:18;4382:2;4374:6;4371:14;4368:2;;;4403:6;4395;4388:22;4368:2;4446:6;4435:9;4431:22;4421:32;;4491:7;4484:4;4480:2;4476:13;4472:27;4462:2;;4518:6;4510;4503:22;4462:2;4559;4546:16;4581:4;4604:43;4644:2;4604:43;:::i;:::-;4676:2;4670:9;4688:31;4716:2;4708:6;4688:31;:::i;:::-;4754:18;;;4788:15;;;;-1:-1:-1;4823:11:9;;;4865:1;4861:10;;;4853:19;;4849:28;;4846:41;-1:-1:-1;4843:2:9;;;4905:6;4897;4890:22;4843:2;4932:6;4923:15;;4947:169;4961:2;4958:1;4955:9;4947:169;;;5018:23;5037:3;5018:23;:::i;:::-;5006:36;;4979:1;4972:9;;;;;5062:12;;;;5094;;4947:169;;;-1:-1:-1;5135:6:9;-1:-1:-1;;5179:18:9;;5166:32;;-1:-1:-1;;5210:16:9;;;5207:2;;;5244:6;5236;5229:22;5207:2;;5272:63;5327:7;5316:8;5305:9;5301:24;5272:63;:::i;:::-;5262:73;;;4204:1137;;;;;:::o;5346:255::-;5404:6;5457:2;5445:9;5436:7;5432:23;5428:32;5425:2;;;5478:6;5470;5463:22;5425:2;5522:9;5509:23;5541:30;5565:5;5541:30;:::i;:::-;5590:5;5415:186;-1:-1:-1;;;5415:186:9:o;5606:259::-;5675:6;5728:2;5716:9;5707:7;5703:23;5699:32;5696:2;;;5749:6;5741;5734:22;5696:2;5786:9;5780:16;5805:30;5829:5;5805:30;:::i;5870:190::-;5929:6;5982:2;5970:9;5961:7;5957:23;5953:32;5950:2;;;6003:6;5995;5988:22;5950:2;-1:-1:-1;6031:23:9;;5940:120;-1:-1:-1;5940:120:9:o;6065:437::-;6118:3;6156:5;6150:12;6183:6;6178:3;6171:19;6209:4;6238:2;6233:3;6229:12;6222:19;;6275:2;6268:5;6264:14;6296:3;6308:169;6322:6;6319:1;6316:13;6308:169;;;6383:13;;6371:26;;6417:12;;;;6452:15;;;;6344:1;6337:9;6308:169;;;-1:-1:-1;6493:3:9;;6126:376;-1:-1:-1;;;;;6126:376:9:o;6507:475::-;6548:3;6586:5;6580:12;6613:6;6608:3;6601:19;6638:3;6650:162;6664:6;6661:1;6658:13;6650:162;;;6726:4;6782:13;;;6778:22;;6772:29;6754:11;;;6750:20;;6743:59;6679:12;6650:162;;;6830:6;6827:1;6824:13;6821:2;;;6896:3;6889:4;6880:6;6875:3;6871:16;6867:27;6860:40;6821:2;-1:-1:-1;6964:2:9;6943:15;-1:-1:-1;;6939:29:9;6930:39;;;;6971:4;6926:50;;6556:426;-1:-1:-1;;6556:426:9:o;6987:826::-;-1:-1:-1;;;;;7384:15:9;;;7366:34;;7436:15;;7431:2;7416:18;;7409:43;7346:3;7483:2;7468:18;;7461:31;;;7309:4;;7515:57;;7552:19;;7544:6;7515:57;:::i;:::-;7620:9;7612:6;7608:22;7603:2;7592:9;7588:18;7581:50;7654:44;7691:6;7683;7654:44;:::i;:::-;7640:58;;7747:9;7739:6;7735:22;7729:3;7718:9;7714:19;7707:51;7775:32;7800:6;7792;7775:32;:::i;:::-;7767:40;7318:495;-1:-1:-1;;;;;;;;7318:495:9:o;7818:560::-;-1:-1:-1;;;;;8115:15:9;;;8097:34;;8167:15;;8162:2;8147:18;;8140:43;8214:2;8199:18;;8192:34;;;8257:2;8242:18;;8235:34;;;8077:3;8300;8285:19;;8278:32;;;8040:4;;8327:45;;8352:19;;8344:6;8327:45;:::i;:::-;8319:53;8049:329;-1:-1:-1;;;;;;;8049:329:9:o;8383:261::-;8562:2;8551:9;8544:21;8525:4;8582:56;8634:2;8623:9;8619:18;8611:6;8582:56;:::i;8649:465::-;8906:2;8895:9;8888:21;8869:4;8932:56;8984:2;8973:9;8969:18;8961:6;8932:56;:::i;:::-;9036:9;9028:6;9024:22;9019:2;9008:9;9004:18;8997:50;9064:44;9101:6;9093;9064:44;:::i;:::-;9056:52;8878:236;-1:-1:-1;;;;;8878:236:9:o;9311:219::-;9460:2;9449:9;9442:21;9423:4;9480:44;9520:2;9509:9;9505:18;9497:6;9480:44;:::i;9956:404::-;10158:2;10140:21;;;10197:2;10177:18;;;10170:30;10236:34;10231:2;10216:18;;10209:62;-1:-1:-1;;;10302:2:9;10287:18;;10280:38;10350:3;10335:19;;10130:230::o;11187:401::-;11389:2;11371:21;;;11428:2;11408:18;;;11401:30;11467:34;11462:2;11447:18;;11440:62;-1:-1:-1;;;11533:2:9;11518:18;;11511:35;11578:3;11563:19;;11361:227::o;12012:406::-;12214:2;12196:21;;;12253:2;12233:18;;;12226:30;12292:34;12287:2;12272:18;;12265:62;-1:-1:-1;;;12358:2:9;12343:18;;12336:40;12408:3;12393:19;;12186:232::o;13243:404::-;13445:2;13427:21;;;13484:2;13464:18;;;13457:30;13523:34;13518:2;13503:18;;13496:62;-1:-1:-1;;;13589:2:9;13574:18;;13567:38;13637:3;13622:19;;13417:230::o;14489:183::-;14549:4;14582:18;14574:6;14571:30;14568:2;;;14604:18;;:::i;:::-;-1:-1:-1;14649:1:9;14645:14;14661:4;14641:25;;14558:114::o;14677:128::-;14717:3;14748:1;14744:6;14741:1;14738:13;14735:2;;;14754:18;;:::i;:::-;-1:-1:-1;14790:9:9;;14725:80::o;14810:380::-;14889:1;14885:12;;;;14932;;;14953:2;;15007:4;14999:6;14995:17;14985:27;;14953:2;15060;15052:6;15049:14;15029:18;15026:38;15023:2;;;15106:10;15101:3;15097:20;15094:1;15087:31;15141:4;15138:1;15131:15;15169:4;15166:1;15159:15;15023:2;;14865:325;;;:::o;15195:249::-;15305:2;15286:13;;-1:-1:-1;;15282:27:9;15270:40;;15340:18;15325:34;;15361:22;;;15322:62;15319:2;;;15387:18;;:::i;:::-;15423:2;15416:22;-1:-1:-1;;15242:202:9:o;15449:135::-;15488:3;-1:-1:-1;;15509:17:9;;15506:2;;;15529:18;;:::i;:::-;-1:-1:-1;15576:1:9;15565:13;;15496:88::o;15589:127::-;15650:10;15645:3;15641:20;15638:1;15631:31;15681:4;15678:1;15671:15;15705:4;15702:1;15695:15;15721:127;15782:10;15777:3;15773:20;15770:1;15763:31;15813:4;15810:1;15803:15;15837:4;15834:1;15827:15;15853:185;15888:3;15930:1;15912:16;15909:23;15906:2;;;15980:1;15975:3;15970;15955:27;16011:10;16006:3;16002:20;15906:2;15896:142;:::o;16043:671::-;16082:3;16124:4;16106:16;16103:26;16100:2;;;16090:624;:::o;16100:2::-;16166;16160:9;-1:-1:-1;;16231:16:9;16227:25;;16224:1;16160:9;16203:50;16282:4;16276:11;16306:16;16341:18;16412:2;16405:4;16397:6;16393:17;16390:25;16385:2;16377:6;16374:14;16371:45;16368:2;;;16419:5;;;;;16090:624;:::o;16368:2::-;16456:6;16450:4;16446:17;16435:28;;16492:3;16486:10;16519:2;16511:6;16508:14;16505:2;;;16525:5;;;;;;16090:624;:::o;16505:2::-;16609;16590:16;16584:4;16580:27;16576:36;16569:4;16560:6;16555:3;16551:16;16547:27;16544:69;16541:2;;;16616:5;;;;;;16090:624;:::o;16541:2::-;16632:57;16683:4;16674:6;16666;16662:19;16658:30;16652:4;16632:57;:::i;:::-;-1:-1:-1;16705:3:9;;16090:624;-1:-1:-1;;;;;16090:624:9:o;16719:131::-;-1:-1:-1;;;;;;16793:32:9;;16783:43;;16773:2;;16840:1;16837;16830:12;16773:2;16763:87;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1188400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"GOLD()": "251",
								"SHIELD()": "207",
								"SILVER()": "228",
								"SWORD()": "207",
								"THORS_HAMMER()": "206",
								"balanceOf(address,uint256)": "1395",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mintBatch()": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "23353",
								"supportsInterface(bytes4)": "567",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 356,
									"end": 665,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 356,
									"end": 665,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 356,
									"end": 665,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 356,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 356,
									"end": 665,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 356,
									"end": 665,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 356,
									"end": 665,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 356,
									"end": 665,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 356,
									"end": 665,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 356,
									"end": 665,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 356,
									"end": 665,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH data",
									"source": 1,
									"value": "9BE393994F02169C966A8F7D954E5F555F9D6FDEA83C170362FF79CF2C5CE4F1"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1142,
									"end": 1146,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1134,
									"end": 1141,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 432,
									"end": 467,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 438,
									"end": 448,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 177,
									"end": 178,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 456,
									"end": 462,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 432,
									"end": 467,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 432,
									"end": 467,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 432,
									"end": 467,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 432,
									"end": 467,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 432,
									"end": 467,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 432,
									"end": 467,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 432,
									"end": 467,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 432,
									"end": 467,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 432,
									"end": 467,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 467,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 432,
									"end": 467,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 432,
									"end": 467,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 432,
									"end": 437,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 432,
									"end": 437,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 432,
									"end": 437,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 432,
									"end": 467,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 432,
									"end": 467,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 432,
									"end": 467,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 432,
									"end": 467,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 432,
									"end": 467,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 478,
									"end": 515,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 484,
									"end": 494,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 218,
									"end": 219,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 504,
									"end": 510,
									"name": "PUSH",
									"source": 0,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 478,
									"end": 515,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 478,
									"end": 515,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 478,
									"end": 515,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 478,
									"end": 515,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 478,
									"end": 515,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 478,
									"end": 515,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 478,
									"end": 515,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 478,
									"end": 515,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 478,
									"end": 515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 478,
									"end": 515,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 478,
									"end": 515,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 478,
									"end": 515,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 478,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 478,
									"end": 483,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 478,
									"end": 483,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 478,
									"end": 515,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 478,
									"end": 515,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 478,
									"end": 515,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 478,
									"end": 515,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 478,
									"end": 515,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 526,
									"end": 564,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 532,
									"end": 542,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 265,
									"end": 266,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 558,
									"end": 559,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 526,
									"end": 564,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 526,
									"end": 564,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 526,
									"end": 564,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 526,
									"end": 564,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 526,
									"end": 564,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 526,
									"end": 564,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 526,
									"end": 564,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 526,
									"end": 564,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 526,
									"end": 564,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 564,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 526,
									"end": 564,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 526,
									"end": 564,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 526,
									"end": 531,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 526,
									"end": 531,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 526,
									"end": 531,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 526,
									"end": 564,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 526,
									"end": 564,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 526,
									"end": 564,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 526,
									"end": 564,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 526,
									"end": 564,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 575,
									"end": 610,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 581,
									"end": 591,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 305,
									"end": 306,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 600,
									"end": 605,
									"name": "PUSH",
									"source": 0,
									"value": "3B9ACA00"
								},
								{
									"begin": 575,
									"end": 610,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 575,
									"end": 610,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 575,
									"end": 610,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 575,
									"end": 610,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 575,
									"end": 610,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 575,
									"end": 610,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 575,
									"end": 610,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 575,
									"end": 610,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 575,
									"end": 610,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 575,
									"end": 610,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 575,
									"end": 610,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 575,
									"end": 610,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 575,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 575,
									"end": 580,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 575,
									"end": 580,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 575,
									"end": 610,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 575,
									"end": 610,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 575,
									"end": 610,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 575,
									"end": 610,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 575,
									"end": 610,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 621,
									"end": 657,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 627,
									"end": 637,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 346,
									"end": 347,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 647,
									"end": 652,
									"name": "PUSH",
									"source": 0,
									"value": "3B9ACA00"
								},
								{
									"begin": 621,
									"end": 657,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 621,
									"end": 657,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 621,
									"end": 657,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 621,
									"end": 657,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 621,
									"end": 657,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 621,
									"end": 657,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 621,
									"end": 657,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 621,
									"end": 657,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 621,
									"end": 657,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 621,
									"end": 657,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 621,
									"end": 657,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 621,
									"end": 657,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 621,
									"end": 626,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 621,
									"end": 626,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 621,
									"end": 626,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 621,
									"end": 657,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 621,
									"end": 657,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 621,
									"end": 657,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 621,
									"end": 657,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 621,
									"end": 657,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8006,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8002,
									"end": 8006,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 8395,
									"end": 8948,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 8395,
									"end": 8948,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8542,
									"end": 8558,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8542,
									"end": 8558,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2630,
									"end": 2632,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2633,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2669,
									"end": 2671,
									"name": "PUSH",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 2649,
									"end": 2667,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2649,
									"end": 2667,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2649,
									"end": 2667,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2642,
									"end": 2672,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2708,
									"end": 2742,
									"name": "PUSH",
									"source": 9,
									"value": "455243313135353A206D696E7420746F20746865207A65726F20616464726573"
								},
								{
									"begin": 2688,
									"end": 2706,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 2688,
									"end": 2706,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2688,
									"end": 2706,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2681,
									"end": 2743,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2759,
									"end": 2777,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 2759,
									"end": 2777,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2759,
									"end": 2777,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2752,
									"end": 2783,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2800,
									"end": 2819,
									"name": "PUSH",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 2800,
									"end": 2819,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 8649,
									"end": 8751,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8607,
									"end": 8623,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8692,
									"end": 8694,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 8696,
									"end": 8717,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 8714,
									"end": 8716,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 8696,
									"end": 8713,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 8696,
									"end": 8717,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 8696,
									"end": 8717,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 8696,
									"end": 8717,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8719,
									"end": 8744,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 8737,
									"end": 8743,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 8719,
									"end": 8736,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 8719,
									"end": 8744,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 8719,
									"end": 8744,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 8719,
									"end": 8744,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8649,
									"end": 8751,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 8649,
									"end": 8751,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8771,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8762,
									"end": 8775,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8775,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8775,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8775,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8762,
									"end": 8775,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8775,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8775,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8775,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8762,
									"end": 8775,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8775,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8775,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8762,
									"end": 8779,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8779,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8779,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8779,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8779,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8779,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8779,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8789,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8789,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 8783,
									"end": 8789,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 8783,
									"end": 8789,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8771,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8789,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 8762,
									"end": 8789,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8783,
									"end": 8789,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8783,
									"end": 8789,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8789,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 8762,
									"end": 8789,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 8762,
									"end": 8789,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 8762,
									"end": 8789,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8789,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8789,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8789,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3029,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3004,
									"end": 3029,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3004,
									"end": 3029,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3060,
									"end": 3062,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3045,
									"end": 3063,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3045,
									"end": 3063,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3038,
									"end": 3072,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3038,
									"end": 3072,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3038,
									"end": 3072,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8837,
									"end": 8838,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8837,
									"end": 8838,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "PUSH",
									"source": 1,
									"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2977,
									"end": 2995,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "LOG4",
									"source": 1
								},
								{
									"begin": 8867,
									"end": 8941,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 8898,
									"end": 8906,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8916,
									"end": 8917,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8920,
									"end": 8922,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 8924,
									"end": 8926,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 8928,
									"end": 8934,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 8936,
									"end": 8940,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 8867,
									"end": 8897,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 8867,
									"end": 8941,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 15080,
									"end": 15273,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 15080,
									"end": 15273,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 15213,
									"end": 15214,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 15146,
									"end": 15162,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 15146,
									"end": 15162,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 15174,
									"end": 15196,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 15174,
									"end": 15196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "CALLDATASIZE",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "CALLDATACOPY",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 15174,
									"end": 15215,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 15174,
									"end": 15215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 15236,
									"end": 15243,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15230,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15231,
									"end": 15232,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "PUSH",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15243,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 15261,
									"end": 15266,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 15080,
									"end": 15273,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 15080,
									"end": 15273,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 13551,
									"end": 14276,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 13551,
									"end": 14276,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13758,
									"end": 13773,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 13758,
									"end": 13760,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13758,
									"end": 13771,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 13758,
									"end": 13771,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 13758,
									"end": 13771,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13758,
									"end": 13771,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 13758,
									"end": 13771,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18446744073709551694"
								},
								{
									"begin": 13758,
									"end": 13771,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 13758,
									"end": 13773,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13758,
									"end": 13773,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 13758,
									"end": 13773,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 13758,
									"end": 13773,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 13758,
									"end": 13773,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13754,
									"end": 14270,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 13754,
									"end": 14270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 13754,
									"end": 14270,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F23A6E61"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13793,
									"end": 13831,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13831,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13831,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13831,
									"name": "PUSH",
									"source": 1,
									"value": "F23A6E61"
								},
								{
									"begin": 13793,
									"end": 13831,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13832,
									"end": 13840,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 13832,
									"end": 13840,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13842,
									"end": 13846,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 13842,
									"end": 13846,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13848,
									"end": 13850,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 13848,
									"end": 13850,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13852,
									"end": 13858,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 13852,
									"end": 13858,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13860,
									"end": 13864,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 13860,
									"end": 13864,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "EXTCODESIZE",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "GAS",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "CALL",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "PUSH",
									"source": 1,
									"value": "8C379A0"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14136,
									"end": 14142,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 14129,
									"end": 14143,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 14129,
									"end": 14143,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 14129,
									"end": 14143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14129,
									"end": 14143,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 14129,
									"end": 14143,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 14129,
									"end": 14143,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 14129,
									"end": 14143,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 14129,
									"end": 14143,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14129,
									"end": 14143,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14129,
									"end": 14143,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 14129,
									"end": 14143,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14183,
									"end": 14245,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 14183,
									"end": 14245,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 14183,
									"end": 14245,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14183,
									"end": 14245,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1802,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 14183,
									"end": 14245,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 14183,
									"end": 14245,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 14183,
									"end": 14245,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1782,
									"end": 1803,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1839,
									"end": 1841,
									"name": "PUSH",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 1819,
									"end": 1837,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1819,
									"end": 1837,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1819,
									"end": 1837,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1812,
									"end": 1842,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1878,
									"end": 1912,
									"name": "PUSH",
									"source": 9,
									"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
								},
								{
									"begin": 1858,
									"end": 1876,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1858,
									"end": 1876,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1858,
									"end": 1876,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1851,
									"end": 1913,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1949,
									"end": 1971,
									"name": "PUSH",
									"source": 9,
									"value": "526563656976657220696D706C656D656E746572000000000000000000000000"
								},
								{
									"begin": 1929,
									"end": 1947,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1929,
									"end": 1947,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1929,
									"end": 1947,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1922,
									"end": 1972,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1989,
									"end": 2008,
									"name": "PUSH",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 1989,
									"end": 2008,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 14183,
									"end": 14245,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1772,
									"end": 2014,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 13914,
									"end": 13969,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 13914,
									"end": 13969,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F23A6E61"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 13914,
									"end": 13969,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 13910,
									"end": 14062,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 13910,
									"end": 14062,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 13993,
									"end": 14043,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 13993,
									"end": 14043,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 13993,
									"end": 14043,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 13993,
									"end": 14043,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2223,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 13993,
									"end": 14043,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 13993,
									"end": 14043,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13993,
									"end": 14043,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2203,
									"end": 2224,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2260,
									"end": 2262,
									"name": "PUSH",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 2240,
									"end": 2258,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2240,
									"end": 2258,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2240,
									"end": 2258,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2233,
									"end": 2263,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2299,
									"end": 2333,
									"name": "PUSH",
									"source": 9,
									"value": "455243313135353A204552433131353552656365697665722072656A65637465"
								},
								{
									"begin": 2279,
									"end": 2297,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 2279,
									"end": 2297,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2279,
									"end": 2297,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2272,
									"end": 2334,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6420746F6B656E73"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2350,
									"end": 2368,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 2350,
									"end": 2368,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2350,
									"end": 2368,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2343,
									"end": 2381,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2398,
									"end": 2417,
									"name": "PUSH",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 2398,
									"end": 2417,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 13993,
									"end": 14043,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2193,
									"end": 2423,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13910,
									"end": 14062,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 13910,
									"end": 14062,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13866,
									"end": 14076,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13551,
									"end": 14276,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13551,
									"end": 14276,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13551,
									"end": 14276,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13551,
									"end": 14276,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13551,
									"end": 14276,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13551,
									"end": 14276,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13551,
									"end": 14276,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 771,
									"end": 1148,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 771,
									"end": 1148,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1087,
									"end": 1107,
									"name": "EXTCODESIZE",
									"source": 5
								},
								{
									"begin": 1133,
									"end": 1141,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1133,
									"end": 1141,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1133,
									"end": 1141,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 771,
									"end": 1148,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "69"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "70"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "tag",
									"source": 0,
									"value": "69"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "72"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "75"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "tag",
									"source": 0,
									"value": "72"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "75"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "tag",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "75"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "tag",
									"source": 0,
									"value": "74"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "75"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "74"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "tag",
									"source": 0,
									"value": "75"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "76"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "77"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "tag",
									"source": 0,
									"value": "76"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "tag",
									"source": 0,
									"value": "77"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "tag",
									"source": 0,
									"value": "78"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "76"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "78"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 324,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 14,
									"end": 324,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 83,
									"end": 89,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 138,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 124,
									"end": 133,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 115,
									"end": 122,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 111,
									"end": 134,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 107,
									"end": 139,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 104,
									"end": 106,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 104,
									"end": 106,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 104,
									"end": 106,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 157,
									"end": 163,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 149,
									"end": 155,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 142,
									"end": 164,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 104,
									"end": 106,
									"name": "tag",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 104,
									"end": 106,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 188,
									"end": 204,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 188,
									"end": 204,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 233,
									"end": 265,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 233,
									"end": 265,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 223,
									"end": 266,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 223,
									"end": 266,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 213,
									"end": 215,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 213,
									"end": 215,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 285,
									"end": 291,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 270,
									"end": 292,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 213,
									"end": 215,
									"name": "tag",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 213,
									"end": 215,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 313,
									"end": 318,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 94,
									"end": 324,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 94,
									"end": 324,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 329,
									"end": 804,
									"name": "tag",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 329,
									"end": 804,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 370,
									"end": 373,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 408,
									"end": 413,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 402,
									"end": 414,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 435,
									"end": 441,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 430,
									"end": 433,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 423,
									"end": 442,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 460,
									"end": 463,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 472,
									"end": 634,
									"name": "tag",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 472,
									"end": 634,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 486,
									"end": 492,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 483,
									"end": 484,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 480,
									"end": 493,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 472,
									"end": 634,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 472,
									"end": 634,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 472,
									"end": 634,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 548,
									"end": 552,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 604,
									"end": 617,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 604,
									"end": 617,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 604,
									"end": 617,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 600,
									"end": 622,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 600,
									"end": 622,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 594,
									"end": 623,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 576,
									"end": 587,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 576,
									"end": 587,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 576,
									"end": 587,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 572,
									"end": 592,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 572,
									"end": 592,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 565,
									"end": 624,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 501,
									"end": 513,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 472,
									"end": 634,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 472,
									"end": 634,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 472,
									"end": 634,
									"name": "tag",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 472,
									"end": 634,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 652,
									"end": 658,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 649,
									"end": 650,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 646,
									"end": 659,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 643,
									"end": 645,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 643,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 643,
									"end": 645,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 718,
									"end": 721,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 711,
									"end": 715,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 702,
									"end": 708,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 697,
									"end": 700,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 693,
									"end": 709,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 689,
									"end": 716,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 682,
									"end": 722,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 643,
									"end": 645,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 643,
									"end": 645,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 786,
									"end": 788,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 765,
									"end": 780,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 761,
									"end": 790,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 752,
									"end": 791,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 752,
									"end": 791,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 752,
									"end": 791,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 752,
									"end": 791,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 793,
									"end": 797,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 748,
									"end": 798,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 748,
									"end": 798,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 378,
									"end": 804,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 378,
									"end": 804,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 809,
									"end": 1369,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 809,
									"end": 1369,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1106,
									"end": 1121,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1106,
									"end": 1121,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1106,
									"end": 1121,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1088,
									"end": 1122,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1088,
									"end": 1122,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1158,
									"end": 1173,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1158,
									"end": 1173,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1153,
									"end": 1155,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1138,
									"end": 1156,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1138,
									"end": 1156,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1131,
									"end": 1174,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1205,
									"end": 1207,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1190,
									"end": 1208,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1190,
									"end": 1208,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1183,
									"end": 1217,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1183,
									"end": 1217,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1183,
									"end": 1217,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1248,
									"end": 1250,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1233,
									"end": 1251,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1233,
									"end": 1251,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 1260,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 1260,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 1260,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1068,
									"end": 1071,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 1291,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1276,
									"end": 1295,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1276,
									"end": 1295,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1269,
									"end": 1301,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1269,
									"end": 1301,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1269,
									"end": 1301,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1031,
									"end": 1035,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1031,
									"end": 1035,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1318,
									"end": 1363,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 1318,
									"end": 1363,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1343,
									"end": 1362,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1343,
									"end": 1362,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1335,
									"end": 1341,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1318,
									"end": 1363,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 1318,
									"end": 1363,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1318,
									"end": 1363,
									"name": "tag",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 1318,
									"end": 1363,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1310,
									"end": 1363,
									"name": "SWAP8",
									"source": 9
								},
								{
									"begin": 1040,
									"end": 1369,
									"name": "SWAP7",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1040,
									"end": 1369,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1374,
									"end": 1593,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 1374,
									"end": 1593,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1523,
									"end": 1525,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1512,
									"end": 1521,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1505,
									"end": 1526,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1486,
									"end": 1490,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1543,
									"end": 1587,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 1583,
									"end": 1585,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1572,
									"end": 1581,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1568,
									"end": 1586,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1560,
									"end": 1566,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1543,
									"end": 1587,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 1543,
									"end": 1587,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 3083,
									"end": 3312,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 3083,
									"end": 3312,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3123,
									"end": 3126,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3154,
									"end": 3155,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3150,
									"end": 3156,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3147,
									"end": 3148,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3144,
									"end": 3157,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3141,
									"end": 3143,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3141,
									"end": 3143,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 3141,
									"end": 3143,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3180,
									"end": 3213,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3180,
									"end": 3213,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3236,
									"end": 3240,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 3233,
									"end": 3234,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3226,
									"end": 3241,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3266,
									"end": 3270,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3187,
									"end": 3190,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3254,
									"end": 3271,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3141,
									"end": 3143,
									"name": "tag",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 3141,
									"end": 3143,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3297,
									"end": 3306,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3297,
									"end": 3306,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3131,
									"end": 3312,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 3317,
									"end": 3697,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 3317,
									"end": 3697,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3396,
									"end": 3397,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3392,
									"end": 3404,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3392,
									"end": 3404,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3392,
									"end": 3404,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 3392,
									"end": 3404,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3439,
									"end": 3451,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3439,
									"end": 3451,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3439,
									"end": 3451,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3460,
									"end": 3462,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 3460,
									"end": 3462,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3514,
									"end": 3518,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 3506,
									"end": 3512,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3502,
									"end": 3519,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3492,
									"end": 3519,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3492,
									"end": 3519,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3460,
									"end": 3462,
									"name": "tag",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 3460,
									"end": 3462,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3567,
									"end": 3569,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3559,
									"end": 3565,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3556,
									"end": 3570,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3536,
									"end": 3554,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3533,
									"end": 3571,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 3530,
									"end": 3532,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3530,
									"end": 3532,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 3530,
									"end": 3532,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3613,
									"end": 3623,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 3608,
									"end": 3611,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 3604,
									"end": 3624,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3601,
									"end": 3602,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3594,
									"end": 3625,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3648,
									"end": 3652,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 3645,
									"end": 3646,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3638,
									"end": 3653,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3676,
									"end": 3680,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3673,
									"end": 3674,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3666,
									"end": 3681,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3530,
									"end": 3532,
									"name": "tag",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 3530,
									"end": 3532,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3530,
									"end": 3532,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3372,
									"end": 3697,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3372,
									"end": 3697,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3372,
									"end": 3697,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3372,
									"end": 3697,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 3702,
									"end": 4048,
									"name": "tag",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 3702,
									"end": 4048,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3812,
									"end": 3814,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3793,
									"end": 3806,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3793,
									"end": 3806,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3789,
									"end": 3816,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3777,
									"end": 3817,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3777,
									"end": 3817,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3832,
									"end": 3866,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3832,
									"end": 3866,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3868,
									"end": 3890,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3868,
									"end": 3890,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3868,
									"end": 3890,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3829,
									"end": 3891,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 3826,
									"end": 3828,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3826,
									"end": 3828,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 3826,
									"end": 3828,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3933,
									"end": 3943,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 3928,
									"end": 3931,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 3924,
									"end": 3944,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3921,
									"end": 3922,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3914,
									"end": 3945,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3968,
									"end": 3972,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 3965,
									"end": 3966,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3958,
									"end": 3973,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3996,
									"end": 4000,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3993,
									"end": 3994,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3986,
									"end": 4001,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3826,
									"end": 3828,
									"name": "tag",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 3826,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4027,
									"end": 4029,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4020,
									"end": 4042,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3749,
									"end": 4048,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 4053,
									"end": 4238,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 4053,
									"end": 4238,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4088,
									"end": 4091,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4130,
									"end": 4131,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 4112,
									"end": 4128,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 4109,
									"end": 4132,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 4106,
									"end": 4108,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4106,
									"end": 4108,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 4106,
									"end": 4108,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4180,
									"end": 4181,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 4175,
									"end": 4178,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4170,
									"end": 4173,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4155,
									"end": 4182,
									"name": "RETURNDATACOPY",
									"source": 9
								},
								{
									"begin": 4211,
									"end": 4221,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4206,
									"end": 4209,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 4202,
									"end": 4222,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 4106,
									"end": 4108,
									"name": "tag",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 4106,
									"end": 4108,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4096,
									"end": 4238,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4096,
									"end": 4238,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 4243,
									"end": 4914,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 4243,
									"end": 4914,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4282,
									"end": 4285,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4324,
									"end": 4328,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 4306,
									"end": 4322,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 4303,
									"end": 4329,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4300,
									"end": 4302,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4300,
									"end": 4302,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 4300,
									"end": 4302,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4290,
									"end": 4914,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4290,
									"end": 4914,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 4300,
									"end": 4302,
									"name": "tag",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 4300,
									"end": 4302,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4366,
									"end": 4368,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4360,
									"end": 4369,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4431,
									"end": 4447,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 4427,
									"end": 4452,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4427,
									"end": 4452,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4424,
									"end": 4425,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 4360,
									"end": 4369,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4403,
									"end": 4453,
									"name": "RETURNDATACOPY",
									"source": 9
								},
								{
									"begin": 4476,
									"end": 4487,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4476,
									"end": 4487,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4506,
									"end": 4522,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4574,
									"end": 4588,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4574,
									"end": 4588,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4574,
									"end": 4588,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 4605,
									"end": 4609,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 4593,
									"end": 4610,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4593,
									"end": 4610,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4590,
									"end": 4615,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 4571,
									"end": 4616,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 4568,
									"end": 4570,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4568,
									"end": 4570,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 4568,
									"end": 4570,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4619,
									"end": 4624,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4619,
									"end": 4624,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4619,
									"end": 4624,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4619,
									"end": 4624,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4619,
									"end": 4624,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4290,
									"end": 4914,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4290,
									"end": 4914,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 4568,
									"end": 4570,
									"name": "tag",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 4568,
									"end": 4570,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4656,
									"end": 4662,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4650,
									"end": 4654,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4646,
									"end": 4663,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4635,
									"end": 4663,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4635,
									"end": 4663,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4692,
									"end": 4695,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4686,
									"end": 4696,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4719,
									"end": 4721,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4711,
									"end": 4717,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4708,
									"end": 4722,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 4705,
									"end": 4707,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4705,
									"end": 4707,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 4705,
									"end": 4707,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4725,
									"end": 4730,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4725,
									"end": 4730,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4725,
									"end": 4730,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4725,
									"end": 4730,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4725,
									"end": 4730,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4725,
									"end": 4730,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4290,
									"end": 4914,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4290,
									"end": 4914,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 4705,
									"end": 4707,
									"name": "tag",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 4705,
									"end": 4707,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4809,
									"end": 4811,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4790,
									"end": 4806,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 4784,
									"end": 4788,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 4780,
									"end": 4807,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4776,
									"end": 4812,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4769,
									"end": 4773,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4755,
									"end": 4758,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4751,
									"end": 4767,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4747,
									"end": 4774,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4744,
									"end": 4813,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 4741,
									"end": 4743,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4741,
									"end": 4743,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 4741,
									"end": 4743,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4816,
									"end": 4821,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4816,
									"end": 4821,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4816,
									"end": 4821,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4816,
									"end": 4821,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4816,
									"end": 4821,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4816,
									"end": 4821,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4290,
									"end": 4914,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4290,
									"end": 4914,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 4741,
									"end": 4743,
									"name": "tag",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 4741,
									"end": 4743,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4832,
									"end": 4889,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 4883,
									"end": 4887,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4874,
									"end": 4880,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4866,
									"end": 4872,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4862,
									"end": 4881,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4858,
									"end": 4888,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4852,
									"end": 4856,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 4832,
									"end": 4889,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 4832,
									"end": 4889,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 4832,
									"end": 4889,
									"name": "tag",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 4832,
									"end": 4889,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4905,
									"end": 4908,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4905,
									"end": 4908,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 4290,
									"end": 4914,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4290,
									"end": 4914,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 4290,
									"end": 4914,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 4290,
									"end": 4914,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 109,
									"end": 984,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 984,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122028acca33a5b86c3129fa946ddb58cea8ac395c7c4d68582ad23a5eac6016a2c864736f6c63430008040033",
									".code": [
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "5B2725ED"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "D562E204"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "D562E204"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "E3E55F08"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "5B2725ED"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "6ECF11D7"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "13DC989F"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "13DC989F"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "3E4BEE38"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 109,
											"end": 984,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14200,
											"end": 14225,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14200,
											"end": 14225,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14200,
											"end": 14225,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14188,
											"end": 14190,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14173,
											"end": 14191,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9284,
											"end": 9298,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9284,
											"end": 9298,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9277,
											"end": 9299,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9259,
											"end": 9300,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9259,
											"end": 9300,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9247,
											"end": 9249,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9232,
											"end": 9250,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9214,
											"end": 9306,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 273,
											"end": 306,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 273,
											"end": 306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 273,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 305,
											"end": 306,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 273,
											"end": 306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 273,
											"end": 306,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 146,
											"end": 178,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 146,
											"end": 178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 146,
											"end": 178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 146,
											"end": 178,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 313,
											"end": 347,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 313,
											"end": 347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 313,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 346,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 313,
											"end": 347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 313,
											"end": 347,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 673,
											"end": 981,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 673,
											"end": 981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 673,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 673,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 673,
											"end": 981,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 185,
											"end": 219,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 185,
											"end": 219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 185,
											"end": 219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 218,
											"end": 219,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 185,
											"end": 219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 185,
											"end": 219,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3491,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2263,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2283,
											"end": 2304,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2304,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 10569,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10549,
											"end": 10570,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10606,
											"end": 10608,
											"name": "PUSH",
											"source": 9,
											"value": "2B"
										},
										{
											"begin": 10586,
											"end": 10604,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10586,
											"end": 10604,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10586,
											"end": 10604,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10579,
											"end": 10609,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10645,
											"end": 10679,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 10625,
											"end": 10643,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10625,
											"end": 10643,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10625,
											"end": 10643,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10618,
											"end": 10680,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10696,
											"end": 10714,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10696,
											"end": 10714,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10714,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10689,
											"end": 10730,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10747,
											"end": 10766,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 10747,
											"end": 10766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2369,
											"end": 2378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1519,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1483,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1519,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 1998,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2017,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4311,
											"end": 4315,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11797,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11777,
											"end": 11798,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11834,
											"end": 11836,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 11814,
											"end": 11832,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11814,
											"end": 11832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11814,
											"end": 11832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11807,
											"end": 11837,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11873,
											"end": 11907,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 11853,
											"end": 11871,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 11853,
											"end": 11871,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11853,
											"end": 11871,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11908,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11924,
											"end": 11942,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11924,
											"end": 11942,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11924,
											"end": 11942,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11917,
											"end": 11965,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11982,
											"end": 12001,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 11982,
											"end": 12001,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 11767,
											"end": 12007,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4439,
											"end": 4443,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4447,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4449,
											"end": 4452,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4454,
											"end": 4461,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4467,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 2722,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2765,
											"end": 2768,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2754,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13035,
											"end": 13037,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13017,
											"end": 13038,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13074,
											"end": 13076,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 13054,
											"end": 13072,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 13054,
											"end": 13072,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13054,
											"end": 13072,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13047,
											"end": 13077,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13113,
											"end": 13147,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 13093,
											"end": 13111,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 13093,
											"end": 13111,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13093,
											"end": 13111,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13086,
											"end": 13148,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13164,
											"end": 13182,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 13164,
											"end": 13182,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13164,
											"end": 13182,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13157,
											"end": 13196,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13213,
											"end": 13232,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 13213,
											"end": 13232,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 13007,
											"end": 13238,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2879,
											"end": 2887,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2879,
											"end": 2894,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2938,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2945,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2927,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2945,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2995,
											"end": 3003,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3005,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3011,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3012,
											"end": 3013,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 2981,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 3015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3043,
											"end": 3056,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 673,
											"end": 981,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 673,
											"end": 981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 735,
											"end": 754,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 735,
											"end": 754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 754,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 749,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 735,
											"end": 754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 735,
											"end": 754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 754,
											"name": "PUSH",
											"source": 0,
											"value": "7D20"
										},
										{
											"begin": 735,
											"end": 754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 735,
											"end": 754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 735,
											"end": 754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 754,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 735,
											"end": 754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 712,
											"end": 732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 712,
											"end": 732,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 735,
											"end": 754,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 735,
											"end": 754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 735,
											"end": 754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 735,
											"end": 754,
											"name": "PUSH",
											"source": 0,
											"value": "7D00"
										},
										{
											"begin": 735,
											"end": 754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 754,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 754,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 735,
											"end": 754,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 792,
											"end": 811,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 792,
											"end": 811,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 811,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 806,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 792,
											"end": 811,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 811,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 792,
											"end": 811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 792,
											"end": 811,
											"name": "PUSH",
											"source": 0,
											"value": "7D20"
										},
										{
											"begin": 792,
											"end": 811,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 792,
											"end": 811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 792,
											"end": 811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 811,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 792,
											"end": 811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 712,
											"end": 754,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 712,
											"end": 754,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 765,
											"end": 789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 765,
											"end": 789,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 792,
											"end": 811,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 792,
											"end": 811,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 792,
											"end": 811,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 792,
											"end": 811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 792,
											"end": 811,
											"name": "PUSH",
											"source": 0,
											"value": "7D00"
										},
										{
											"begin": 792,
											"end": 811,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 792,
											"end": 811,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 792,
											"end": 811,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 792,
											"end": 811,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 792,
											"end": 811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 792,
											"end": 811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 792,
											"end": 811,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 765,
											"end": 811,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 923,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 822,
											"end": 923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 846,
											"end": 850,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 842,
											"end": 843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 842,
											"end": 850,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 822,
											"end": 923,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 822,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 822,
											"end": 923,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 881,
											"end": 882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 872,
											"end": 875,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 876,
											"end": 877,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 872,
											"end": 878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 872,
											"end": 878,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 872,
											"end": 878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 872,
											"end": 878,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 872,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 872,
											"end": 878,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 872,
											"end": 878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 872,
											"end": 878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 872,
											"end": 878,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 872,
											"end": 878,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 872,
											"end": 878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 872,
											"end": 878,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 872,
											"end": 878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 872,
											"end": 878,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 872,
											"end": 878,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 872,
											"end": 878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 872,
											"end": 878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 872,
											"end": 878,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 872,
											"end": 878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 872,
											"end": 878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 872,
											"end": 878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 872,
											"end": 882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 872,
											"end": 882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 872,
											"end": 882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 872,
											"end": 882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 872,
											"end": 882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 910,
											"end": 911,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 897,
											"end": 904,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 905,
											"end": 906,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 897,
											"end": 907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 897,
											"end": 907,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 897,
											"end": 907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 897,
											"end": 907,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 897,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 897,
											"end": 907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 897,
											"end": 907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 897,
											"end": 907,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 897,
											"end": 907,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 897,
											"end": 907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 897,
											"end": 907,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 897,
											"end": 907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 907,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 897,
											"end": 907,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 897,
											"end": 907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 897,
											"end": 907,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 897,
											"end": 907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 897,
											"end": 907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 897,
											"end": 907,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 897,
											"end": 907,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 897,
											"end": 907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 897,
											"end": 907,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 897,
											"end": 907,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 897,
											"end": 907,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 897,
											"end": 911,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 852,
											"end": 855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 852,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 852,
											"end": 855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 852,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 852,
											"end": 855,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 852,
											"end": 855,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 852,
											"end": 855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 852,
											"end": 855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 852,
											"end": 855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 852,
											"end": 855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 822,
											"end": 923,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 923,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 822,
											"end": 923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 822,
											"end": 923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 933,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 944,
											"end": 954,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 956,
											"end": 959,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 961,
											"end": 968,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 933,
											"end": 973,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 973,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 933,
											"end": 973,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 933,
											"end": 973,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 933,
											"end": 973,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 933,
											"end": 973,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 933,
											"end": 973,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 933,
											"end": 973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 933,
											"end": 973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 933,
											"end": 973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 933,
											"end": 973,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 933,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 933,
											"end": 973,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 933,
											"end": 973,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 933,
											"end": 973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 673,
											"end": 981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 673,
											"end": 981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 673,
											"end": 981,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3258,
											"end": 3266,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3276,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3825,
											"end": 3829,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10979,
											"end": 10981,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10961,
											"end": 10982,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11018,
											"end": 11020,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 10998,
											"end": 11016,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10998,
											"end": 11016,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10998,
											"end": 11016,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10991,
											"end": 11021,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11057,
											"end": 11091,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 11037,
											"end": 11055,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 11037,
											"end": 11055,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11037,
											"end": 11055,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11030,
											"end": 11092,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11108,
											"end": 11126,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11108,
											"end": 11126,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11108,
											"end": 11126,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11101,
											"end": 11140,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11157,
											"end": 11176,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 11157,
											"end": 11176,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 10951,
											"end": 11182,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3939,
											"end": 3943,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3947,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3949,
											"end": 3951,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 3959,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3961,
											"end": 3965,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 3921,
											"end": 3966,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6295,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6302,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6274,
											"end": 6277,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6274,
											"end": 6284,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6274,
											"end": 6302,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6365,
											"end": 6381,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6365,
											"end": 6381,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6434,
											"end": 6450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6574,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6581,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6567,
											"end": 6568,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6567,
											"end": 6581,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6612,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6618,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6619,
											"end": 6620,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6635,
											"end": 6649,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6659,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6677,
											"end": 6696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "DUP15",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP15",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6892,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7003,
											"end": 7005,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6997,
											"end": 7001,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 6995,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 1,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7007,
											"end": 7010,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7012,
											"end": 7019,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 7067,
											"end": 7075,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7081,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7085,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7087,
											"end": 7090,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7099,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7105,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9293,
											"end": 10008,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 9293,
											"end": 10008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9465,
											"end": 9481,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9465,
											"end": 9481,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13854,
											"end": 13856,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13836,
											"end": 13857,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13893,
											"end": 13895,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 13873,
											"end": 13891,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 13873,
											"end": 13891,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13873,
											"end": 13891,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13866,
											"end": 13896,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13932,
											"end": 13966,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A206D696E7420746F20746865207A65726F20616464726573"
										},
										{
											"begin": 13912,
											"end": 13930,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 13912,
											"end": 13930,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13912,
											"end": 13930,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13905,
											"end": 13967,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13983,
											"end": 14001,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 13983,
											"end": 14001,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13983,
											"end": 14001,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13976,
											"end": 14007,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14024,
											"end": 14043,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 14024,
											"end": 14043,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 13826,
											"end": 14049,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9551,
											"end": 9558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9551,
											"end": 9565,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 9540,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 9547,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 9565,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 9621,
											"end": 9637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9764,
											"end": 9767,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9764,
											"end": 9774,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9760,
											"end": 9761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9760,
											"end": 9774,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9827,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9828,
											"end": 9829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9805,
											"end": 9808,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9810,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9815,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9894,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9870,
											"end": 9878,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "PUSH",
											"source": 1,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 9896,
											"end": 9899,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9901,
											"end": 9908,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 9920,
											"end": 10001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 9956,
											"end": 9964,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9974,
											"end": 9975,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9978,
											"end": 9980,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9982,
											"end": 9985,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 9994,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9996,
											"end": 10000,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9920,
											"end": 9955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 9920,
											"end": 10001,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12224,
											"end": 12232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12215,
											"end": 12220,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12625,
											"end": 12627,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12607,
											"end": 12628,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12664,
											"end": 12666,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 12644,
											"end": 12662,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12644,
											"end": 12662,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12644,
											"end": 12662,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12637,
											"end": 12667,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12703,
											"end": 12737,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 12683,
											"end": 12701,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 12683,
											"end": 12701,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12683,
											"end": 12701,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12676,
											"end": 12738,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12754,
											"end": 12772,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12754,
											"end": 12772,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12754,
											"end": 12772,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12747,
											"end": 12786,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12803,
											"end": 12822,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 12803,
											"end": 12822,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 12597,
											"end": 12828,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12306,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9259,
											"end": 9300,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9259,
											"end": 9300,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9259,
											"end": 9300,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9232,
											"end": 9250,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5106,
											"end": 5122,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5122,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5248,
											"end": 5252,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5256,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 5276,
											"end": 5278,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5281,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5299,
											"end": 5305,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5281,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 5281,
											"end": 5306,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5324,
											"end": 5343,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5527,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14410,
											"end": 14435,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 14410,
											"end": 14435,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14410,
											"end": 14435,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14466,
											"end": 14468,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14451,
											"end": 14469,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14451,
											"end": 14469,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14444,
											"end": 14478,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 14444,
											"end": 14478,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14444,
											"end": 14478,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 1,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14383,
											"end": 14401,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 5678,
											"end": 5686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5692,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5694,
											"end": 5696,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5698,
											"end": 5700,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5702,
											"end": 5708,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5710,
											"end": 5714,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14282,
											"end": 15074,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 14282,
											"end": 15074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14514,
											"end": 14527,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14514,
											"end": 14527,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14510,
											"end": 15068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 14510,
											"end": 15068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "PUSH",
											"source": 1,
											"value": "BC197C81"
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14593,
											"end": 14601,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 14593,
											"end": 14601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14609,
											"end": 14612,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14609,
											"end": 14612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14614,
											"end": 14621,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14614,
											"end": 14621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14623,
											"end": 14627,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14623,
											"end": 14627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A0"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14934,
											"end": 14940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9737,
											"end": 9739,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9719,
											"end": 9740,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9776,
											"end": 9778,
											"name": "PUSH",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 9756,
											"end": 9774,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9756,
											"end": 9774,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9756,
											"end": 9774,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9749,
											"end": 9779,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9815,
											"end": 9849,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 9795,
											"end": 9813,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9795,
											"end": 9813,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9795,
											"end": 9813,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9788,
											"end": 9850,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9866,
											"end": 9884,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9866,
											"end": 9884,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9866,
											"end": 9884,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9859,
											"end": 9909,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9926,
											"end": 9945,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 9926,
											"end": 9945,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 9709,
											"end": 9951,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14703,
											"end": 14860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 14703,
											"end": 14860,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15213,
											"end": 15214,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15146,
											"end": 15162,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15146,
											"end": 15162,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15174,
											"end": 15196,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15174,
											"end": 15196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15174,
											"end": 15215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15174,
											"end": 15215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15236,
											"end": 15243,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15231,
											"end": 15232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15243,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15261,
											"end": 15266,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13551,
											"end": 14276,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 13551,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13758,
											"end": 13771,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13758,
											"end": 13771,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13754,
											"end": 14270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 13754,
											"end": 14270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "PUSH",
											"source": 1,
											"value": "F23A6E61"
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13832,
											"end": 13840,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 13832,
											"end": 13840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13842,
											"end": 13846,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 13842,
											"end": 13846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13848,
											"end": 13850,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 13848,
											"end": 13850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13852,
											"end": 13858,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 13852,
											"end": 13858,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13860,
											"end": 13864,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 13860,
											"end": 13864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 13910,
											"end": 14062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 13910,
											"end": 14062,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 111,
											"end": 113,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 63,
											"end": 187,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 63,
											"end": 187,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 947,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 192,
											"end": 947,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 246,
											"end": 251,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 302,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 292,
											"end": 296,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 280,
											"end": 297,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 276,
											"end": 303,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 266,
											"end": 268,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 266,
											"end": 268,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 321,
											"end": 326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 314,
											"end": 319,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 307,
											"end": 327,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 266,
											"end": 268,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 266,
											"end": 268,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 361,
											"end": 367,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 348,
											"end": 368,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 387,
											"end": 391,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 410,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 450,
											"end": 452,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 410,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 410,
											"end": 453,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 410,
											"end": 453,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 410,
											"end": 453,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 482,
											"end": 484,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 476,
											"end": 485,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 494,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 522,
											"end": 524,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 514,
											"end": 520,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 494,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 494,
											"end": 525,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 494,
											"end": 525,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 494,
											"end": 525,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 560,
											"end": 578,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 560,
											"end": 578,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 560,
											"end": 578,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 594,
											"end": 609,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 594,
											"end": 609,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 594,
											"end": 609,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 594,
											"end": 609,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 629,
											"end": 644,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 629,
											"end": 644,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 629,
											"end": 644,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 679,
											"end": 680,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 675,
											"end": 685,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 675,
											"end": 685,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 675,
											"end": 685,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 663,
											"end": 686,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 663,
											"end": 686,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 659,
											"end": 691,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 659,
											"end": 691,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 656,
											"end": 697,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 653,
											"end": 655,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 653,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 653,
											"end": 655,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 714,
											"end": 719,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 707,
											"end": 712,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 700,
											"end": 720,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 653,
											"end": 655,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 653,
											"end": 655,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 754,
											"end": 917,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 754,
											"end": 917,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 768,
											"end": 770,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 765,
											"end": 766,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 762,
											"end": 771,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 754,
											"end": 917,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 754,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 754,
											"end": 917,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 825,
											"end": 842,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 825,
											"end": 842,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 813,
											"end": 843,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 813,
											"end": 843,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 863,
											"end": 875,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 863,
											"end": 875,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 863,
											"end": 875,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 863,
											"end": 875,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 895,
											"end": 907,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 895,
											"end": 907,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 895,
											"end": 907,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 895,
											"end": 907,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 786,
											"end": 787,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 779,
											"end": 788,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 754,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 754,
											"end": 917,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 754,
											"end": 917,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 754,
											"end": 917,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 935,
											"end": 941,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 935,
											"end": 941,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 256,
											"end": 947,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 256,
											"end": 947,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 952,
											"end": 1527,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 952,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 994,
											"end": 999,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1050,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1040,
											"end": 1044,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1032,
											"end": 1038,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1028,
											"end": 1045,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1014,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 1014,
											"end": 1016,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1067,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1075,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1014,
											"end": 1016,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 1014,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1115,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1096,
											"end": 1116,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1135,
											"end": 1153,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1125,
											"end": 1127,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1125,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 1125,
											"end": 1127,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1206,
											"end": 1208,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1200,
											"end": 1209,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 1273,
											"end": 1275,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1254,
											"end": 1267,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1267,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1250,
											"end": 1277,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1283,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1246,
											"end": 1284,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1200,
											"end": 1209,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 1218,
											"end": 1285,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1285,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 1218,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1309,
											"end": 1311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1301,
											"end": 1307,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1358,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1352,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1345,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1324,
											"end": 1359,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1321,
											"end": 1323,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1321,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 1321,
											"end": 1323,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1376,
											"end": 1381,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1369,
											"end": 1374,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1382,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1321,
											"end": 1323,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 1321,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1441,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1429,
											"end": 1435,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1418,
											"end": 1422,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1410,
											"end": 1416,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1406,
											"end": 1423,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1393,
											"end": 1447,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1482,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1482,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1482,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1488,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1463,
											"end": 1489,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1497,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1497,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1497,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1497,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1004,
											"end": 1527,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1004,
											"end": 1527,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1532,
											"end": 1802,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1532,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1606,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1614,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1661,
											"end": 1663,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1658,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1647,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1636,
											"end": 1659,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1664,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1674,
											"end": 1680,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1667,
											"end": 1689,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 1729,
											"end": 1738,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1700,
											"end": 1739,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1700,
											"end": 1739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1758,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 1792,
											"end": 1794,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1781,
											"end": 1790,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 1795,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1758,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 1758,
											"end": 1796,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1758,
											"end": 1796,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 1758,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1796,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1802,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1802,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1802,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1802,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1802,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1807,
											"end": 2790,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1807,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1967,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 1975,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1983,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 1991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2049,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 2034,
											"end": 2043,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2025,
											"end": 2032,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2021,
											"end": 2044,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2017,
											"end": 2050,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2016,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 2014,
											"end": 2016,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2068,
											"end": 2074,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2060,
											"end": 2066,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2053,
											"end": 2075,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2016,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 2014,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 2115,
											"end": 2124,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 2096,
											"end": 2125,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2096,
											"end": 2125,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 2096,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 2178,
											"end": 2180,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2167,
											"end": 2176,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 2144,
											"end": 2182,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2144,
											"end": 2182,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 2144,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2134,
											"end": 2182,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2134,
											"end": 2182,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2233,
											"end": 2235,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2222,
											"end": 2231,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2218,
											"end": 2236,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2205,
											"end": 2237,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2256,
											"end": 2274,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2289,
											"end": 2295,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2300,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2283,
											"end": 2285,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2283,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 2283,
											"end": 2285,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2318,
											"end": 2324,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2310,
											"end": 2316,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2325,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2283,
											"end": 2285,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 2283,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2346,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 2399,
											"end": 2406,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2396,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 2375,
											"end": 2397,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2346,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 2346,
											"end": 2407,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2346,
											"end": 2407,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 2346,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2407,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2407,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2462,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2449,
											"end": 2458,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2445,
											"end": 2463,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2464,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2416,
											"end": 2464,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2416,
											"end": 2464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2489,
											"end": 2491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2479,
											"end": 2487,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2476,
											"end": 2492,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2473,
											"end": 2475,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2473,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 2473,
											"end": 2475,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2510,
											"end": 2516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2502,
											"end": 2508,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2495,
											"end": 2517,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2473,
											"end": 2475,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 2473,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2538,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 2593,
											"end": 2600,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 2582,
											"end": 2590,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2571,
											"end": 2580,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 2567,
											"end": 2591,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2538,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 2538,
											"end": 2601,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2538,
											"end": 2601,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 2538,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2601,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2601,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2657,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2643,
											"end": 2652,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2658,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2626,
											"end": 2659,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2684,
											"end": 2686,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2674,
											"end": 2682,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2671,
											"end": 2687,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2711,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2697,
											"end": 2703,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2690,
											"end": 2712,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 2776,
											"end": 2783,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2765,
											"end": 2773,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 2750,
											"end": 2774,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 2733,
											"end": 2784,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2733,
											"end": 2784,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 2733,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 2784,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 2784,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 2784,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2790,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2790,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2790,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2790,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2790,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2790,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2790,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2790,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2790,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2795,
											"end": 3421,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 2795,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2907,
											"end": 2913,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2915,
											"end": 2921,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2929,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2931,
											"end": 2937,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2984,
											"end": 2987,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2963,
											"end": 2970,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 2982,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2955,
											"end": 2988,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 2954,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 2952,
											"end": 2954,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3012,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2998,
											"end": 3004,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2991,
											"end": 3013,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 2954,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 2952,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 3053,
											"end": 3062,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 3034,
											"end": 3063,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3034,
											"end": 3063,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 3034,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3063,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3063,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 3116,
											"end": 3118,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 3082,
											"end": 3120,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3082,
											"end": 3120,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 3082,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3072,
											"end": 3120,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3072,
											"end": 3120,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3167,
											"end": 3169,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3156,
											"end": 3165,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3152,
											"end": 3170,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3139,
											"end": 3171,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3171,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3171,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3218,
											"end": 3220,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3207,
											"end": 3216,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3203,
											"end": 3221,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3190,
											"end": 3222,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3222,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3222,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3273,
											"end": 3276,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3262,
											"end": 3271,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3258,
											"end": 3277,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3245,
											"end": 3278,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3301,
											"end": 3319,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3293,
											"end": 3299,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3290,
											"end": 3320,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3289,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 3287,
											"end": 3289,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3338,
											"end": 3344,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3336,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3323,
											"end": 3345,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3289,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 3287,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3366,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3398,
											"end": 3404,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3387,
											"end": 3396,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3405,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3366,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 3366,
											"end": 3415,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3426,
											"end": 3793,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3426,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3491,
											"end": 3497,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3505,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3554,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3540,
											"end": 3549,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3531,
											"end": 3538,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3527,
											"end": 3550,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3555,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3520,
											"end": 3522,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3520,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 3520,
											"end": 3522,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3573,
											"end": 3579,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3565,
											"end": 3571,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3558,
											"end": 3580,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3520,
											"end": 3522,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 3520,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3601,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 3620,
											"end": 3629,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3601,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 3601,
											"end": 3630,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3601,
											"end": 3630,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 3601,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3630,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3630,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3680,
											"end": 3682,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3669,
											"end": 3678,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3684,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 3732,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3720,
											"end": 3733,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3713,
											"end": 3734,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3706,
											"end": 3711,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3703,
											"end": 3735,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 3693,
											"end": 3695,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3754,
											"end": 3760,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3739,
											"end": 3761,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 3695,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 3693,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3782,
											"end": 3787,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3510,
											"end": 3793,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3510,
											"end": 3793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3510,
											"end": 3793,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3510,
											"end": 3793,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3510,
											"end": 3793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3510,
											"end": 3793,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3798,
											"end": 4062,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3798,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3866,
											"end": 3872,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3880,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3927,
											"end": 3929,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3915,
											"end": 3924,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3906,
											"end": 3913,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3902,
											"end": 3925,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3898,
											"end": 3930,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3895,
											"end": 3897,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3895,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 3895,
											"end": 3897,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3940,
											"end": 3946,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3933,
											"end": 3955,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3895,
											"end": 3897,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 3895,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3976,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 3995,
											"end": 4004,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3976,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 3976,
											"end": 4005,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4005,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 3976,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3966,
											"end": 4005,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4052,
											"end": 4054,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4037,
											"end": 4055,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4037,
											"end": 4055,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4037,
											"end": 4055,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4037,
											"end": 4055,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 4056,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 4056,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3885,
											"end": 4062,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4067,
											"end": 5341,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 4067,
											"end": 5341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4191,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4193,
											"end": 4199,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4246,
											"end": 4248,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4234,
											"end": 4243,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4225,
											"end": 4232,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4221,
											"end": 4244,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4217,
											"end": 4249,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4267,
											"end": 4273,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4259,
											"end": 4265,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4274,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4312,
											"end": 4321,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4299,
											"end": 4322,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4341,
											"end": 4359,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4382,
											"end": 4384,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4374,
											"end": 4380,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4371,
											"end": 4385,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4368,
											"end": 4370,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4368,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 4368,
											"end": 4370,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4403,
											"end": 4409,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4395,
											"end": 4401,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4388,
											"end": 4410,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4368,
											"end": 4370,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 4368,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4446,
											"end": 4452,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4435,
											"end": 4444,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4431,
											"end": 4453,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4421,
											"end": 4453,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4421,
											"end": 4453,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4491,
											"end": 4498,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4484,
											"end": 4488,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4480,
											"end": 4482,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4489,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4472,
											"end": 4499,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4462,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 4462,
											"end": 4464,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4518,
											"end": 4524,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4516,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4503,
											"end": 4525,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4462,
											"end": 4464,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 4462,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4559,
											"end": 4561,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4546,
											"end": 4562,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4581,
											"end": 4585,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4604,
											"end": 4647,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 4644,
											"end": 4646,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4604,
											"end": 4647,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 4604,
											"end": 4647,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4604,
											"end": 4647,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 4604,
											"end": 4647,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4676,
											"end": 4678,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4670,
											"end": 4679,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4688,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 4716,
											"end": 4718,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4714,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4688,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 4688,
											"end": 4719,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4688,
											"end": 4719,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 4688,
											"end": 4719,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4754,
											"end": 4772,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4754,
											"end": 4772,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4754,
											"end": 4772,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 4803,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 4803,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 4803,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 4803,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4823,
											"end": 4834,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4823,
											"end": 4834,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4823,
											"end": 4834,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4865,
											"end": 4866,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4861,
											"end": 4871,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 4871,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 4871,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4872,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4872,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4849,
											"end": 4877,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4849,
											"end": 4877,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4887,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4905,
											"end": 4911,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4897,
											"end": 4903,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4932,
											"end": 4938,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4938,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4938,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4947,
											"end": 5116,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 4947,
											"end": 5116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4958,
											"end": 4959,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4955,
											"end": 4964,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4947,
											"end": 5116,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4947,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 4947,
											"end": 5116,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5018,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 5037,
											"end": 5040,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5018,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 5018,
											"end": 5041,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5018,
											"end": 5041,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 5018,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5006,
											"end": 5042,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5006,
											"end": 5042,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4979,
											"end": 4980,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4972,
											"end": 4981,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 4972,
											"end": 4981,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4972,
											"end": 4981,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 4972,
											"end": 4981,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4972,
											"end": 4981,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5094,
											"end": 5106,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5094,
											"end": 5106,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4947,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 4947,
											"end": 5116,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4947,
											"end": 5116,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 4947,
											"end": 5116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5135,
											"end": 5141,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5179,
											"end": 5197,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5179,
											"end": 5197,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5166,
											"end": 5198,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5166,
											"end": 5198,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5210,
											"end": 5226,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5210,
											"end": 5226,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5210,
											"end": 5226,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5244,
											"end": 5250,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5236,
											"end": 5242,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5229,
											"end": 5251,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 5327,
											"end": 5334,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5316,
											"end": 5324,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5305,
											"end": 5314,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 5272,
											"end": 5335,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5272,
											"end": 5335,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 5272,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5262,
											"end": 5335,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5262,
											"end": 5335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5262,
											"end": 5335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 5341,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 5341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 5341,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 5341,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 5341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 5341,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5346,
											"end": 5601,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 5346,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5410,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5459,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5445,
											"end": 5454,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5436,
											"end": 5443,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5432,
											"end": 5455,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5428,
											"end": 5460,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5425,
											"end": 5427,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5425,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 5425,
											"end": 5427,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5484,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5470,
											"end": 5476,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5463,
											"end": 5485,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5425,
											"end": 5427,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 5425,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5531,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 5565,
											"end": 5570,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 5541,
											"end": 5571,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5541,
											"end": 5571,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 5541,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5590,
											"end": 5595,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5415,
											"end": 5601,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5415,
											"end": 5601,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5606,
											"end": 5865,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 5606,
											"end": 5865,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5728,
											"end": 5730,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5716,
											"end": 5725,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5707,
											"end": 5714,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5703,
											"end": 5726,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5699,
											"end": 5731,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5696,
											"end": 5698,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5696,
											"end": 5698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 5696,
											"end": 5698,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5755,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5741,
											"end": 5747,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5734,
											"end": 5756,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5696,
											"end": 5698,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 5696,
											"end": 5698,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5786,
											"end": 5795,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5780,
											"end": 5796,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5805,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 5829,
											"end": 5834,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5805,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 5805,
											"end": 5835,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5870,
											"end": 6060,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 5870,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5935,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5982,
											"end": 5984,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5970,
											"end": 5979,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5961,
											"end": 5968,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5957,
											"end": 5980,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5953,
											"end": 5985,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5950,
											"end": 5952,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5950,
											"end": 5952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 5950,
											"end": 5952,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6009,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5995,
											"end": 6001,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5988,
											"end": 6010,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5950,
											"end": 5952,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 5950,
											"end": 5952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6031,
											"end": 6054,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6031,
											"end": 6054,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 6060,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5940,
											"end": 6060,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6065,
											"end": 6502,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 6065,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6118,
											"end": 6121,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6156,
											"end": 6161,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6162,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6183,
											"end": 6189,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6178,
											"end": 6181,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6171,
											"end": 6190,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6209,
											"end": 6213,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6238,
											"end": 6240,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6236,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6229,
											"end": 6241,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6241,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6241,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6275,
											"end": 6277,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6268,
											"end": 6273,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6264,
											"end": 6278,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6296,
											"end": 6299,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6308,
											"end": 6477,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 6308,
											"end": 6477,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6322,
											"end": 6328,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6319,
											"end": 6320,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6316,
											"end": 6329,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6308,
											"end": 6477,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6308,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 6308,
											"end": 6477,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6383,
											"end": 6396,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6383,
											"end": 6396,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6371,
											"end": 6397,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6371,
											"end": 6397,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6429,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6429,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6429,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6429,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6452,
											"end": 6467,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6452,
											"end": 6467,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6452,
											"end": 6467,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6452,
											"end": 6467,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6344,
											"end": 6345,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6337,
											"end": 6346,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6308,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 6308,
											"end": 6477,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6308,
											"end": 6477,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 6308,
											"end": 6477,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6493,
											"end": 6496,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6493,
											"end": 6496,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6502,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6126,
											"end": 6502,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6507,
											"end": 6982,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 6507,
											"end": 6982,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6551,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6586,
											"end": 6591,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6580,
											"end": 6592,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6613,
											"end": 6619,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6608,
											"end": 6611,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6620,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6641,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6650,
											"end": 6812,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 6650,
											"end": 6812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6664,
											"end": 6670,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6658,
											"end": 6671,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6650,
											"end": 6812,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6650,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 6650,
											"end": 6812,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6726,
											"end": 6730,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6782,
											"end": 6795,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6795,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6795,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6778,
											"end": 6800,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6778,
											"end": 6800,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6772,
											"end": 6801,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6765,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6765,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6765,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6770,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6770,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6743,
											"end": 6802,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6679,
											"end": 6691,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6650,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 6650,
											"end": 6812,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6650,
											"end": 6812,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 6650,
											"end": 6812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6830,
											"end": 6836,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6827,
											"end": 6828,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6824,
											"end": 6837,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6821,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6821,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 6821,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6896,
											"end": 6899,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 6893,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6880,
											"end": 6886,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6875,
											"end": 6878,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6871,
											"end": 6887,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6867,
											"end": 6894,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6860,
											"end": 6900,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6821,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 6821,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6964,
											"end": 6966,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6943,
											"end": 6958,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6939,
											"end": 6968,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6930,
											"end": 6969,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6930,
											"end": 6969,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6930,
											"end": 6969,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6930,
											"end": 6969,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6971,
											"end": 6975,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6926,
											"end": 6976,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6926,
											"end": 6976,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6556,
											"end": 6982,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6556,
											"end": 6982,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6987,
											"end": 7813,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 6987,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7384,
											"end": 7399,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7384,
											"end": 7399,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7384,
											"end": 7399,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7366,
											"end": 7400,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7366,
											"end": 7400,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7436,
											"end": 7451,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7436,
											"end": 7451,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7431,
											"end": 7433,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7416,
											"end": 7434,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7434,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7409,
											"end": 7452,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7346,
											"end": 7349,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 7483,
											"end": 7485,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7468,
											"end": 7486,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7468,
											"end": 7486,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7461,
											"end": 7492,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7461,
											"end": 7492,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7461,
											"end": 7492,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7309,
											"end": 7313,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7309,
											"end": 7313,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7515,
											"end": 7572,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 7515,
											"end": 7572,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7552,
											"end": 7571,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7552,
											"end": 7571,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7550,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7515,
											"end": 7572,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 7515,
											"end": 7572,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7515,
											"end": 7572,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 7515,
											"end": 7572,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7620,
											"end": 7629,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7612,
											"end": 7618,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7630,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7605,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7592,
											"end": 7601,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7588,
											"end": 7606,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7581,
											"end": 7631,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7654,
											"end": 7698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 7691,
											"end": 7697,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7683,
											"end": 7689,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7654,
											"end": 7698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 7654,
											"end": 7698,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7654,
											"end": 7698,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 7654,
											"end": 7698,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7640,
											"end": 7698,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7640,
											"end": 7698,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7747,
											"end": 7756,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7745,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7735,
											"end": 7757,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7729,
											"end": 7732,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 7718,
											"end": 7727,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7733,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7707,
											"end": 7758,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7775,
											"end": 7807,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 7800,
											"end": 7806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7792,
											"end": 7798,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7775,
											"end": 7807,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 7775,
											"end": 7807,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7775,
											"end": 7807,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 7775,
											"end": 7807,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7767,
											"end": 7807,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 7318,
											"end": 7813,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7318,
											"end": 7813,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7818,
											"end": 8378,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 7818,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8115,
											"end": 8130,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8115,
											"end": 8130,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8115,
											"end": 8130,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8097,
											"end": 8131,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8097,
											"end": 8131,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8167,
											"end": 8182,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8167,
											"end": 8182,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8162,
											"end": 8164,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8147,
											"end": 8165,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8147,
											"end": 8165,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8140,
											"end": 8183,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8216,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8199,
											"end": 8217,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8199,
											"end": 8217,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8192,
											"end": 8226,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8192,
											"end": 8226,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8192,
											"end": 8226,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8257,
											"end": 8259,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8242,
											"end": 8260,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8242,
											"end": 8260,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8235,
											"end": 8269,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8235,
											"end": 8269,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8235,
											"end": 8269,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8077,
											"end": 8080,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 8300,
											"end": 8303,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 8285,
											"end": 8304,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8285,
											"end": 8304,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8040,
											"end": 8044,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8040,
											"end": 8044,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8327,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 8327,
											"end": 8372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8352,
											"end": 8371,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8352,
											"end": 8371,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8344,
											"end": 8350,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8327,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 8327,
											"end": 8372,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8327,
											"end": 8372,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 8327,
											"end": 8372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8319,
											"end": 8372,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 8049,
											"end": 8378,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8049,
											"end": 8378,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8383,
											"end": 8644,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 8383,
											"end": 8644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8562,
											"end": 8564,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8551,
											"end": 8560,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8544,
											"end": 8565,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8525,
											"end": 8529,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8582,
											"end": 8638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 8634,
											"end": 8636,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8623,
											"end": 8632,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8619,
											"end": 8637,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8611,
											"end": 8617,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8582,
											"end": 8638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 8582,
											"end": 8638,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8649,
											"end": 9114,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 8649,
											"end": 9114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8906,
											"end": 8908,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8895,
											"end": 8904,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8888,
											"end": 8909,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8869,
											"end": 8873,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8932,
											"end": 8988,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 8984,
											"end": 8986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8973,
											"end": 8982,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8969,
											"end": 8987,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8961,
											"end": 8967,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8932,
											"end": 8988,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 8932,
											"end": 8988,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8932,
											"end": 8988,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 8932,
											"end": 8988,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9036,
											"end": 9045,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9028,
											"end": 9034,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9024,
											"end": 9046,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9019,
											"end": 9021,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9008,
											"end": 9017,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9004,
											"end": 9022,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8997,
											"end": 9047,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9064,
											"end": 9108,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 9101,
											"end": 9107,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9093,
											"end": 9099,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9064,
											"end": 9108,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 9064,
											"end": 9108,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9064,
											"end": 9108,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 9064,
											"end": 9108,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9056,
											"end": 9108,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 9114,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8878,
											"end": 9114,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9311,
											"end": 9530,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 9311,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9460,
											"end": 9462,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9449,
											"end": 9458,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9442,
											"end": 9463,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9423,
											"end": 9427,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9480,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 9520,
											"end": 9522,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9509,
											"end": 9518,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9505,
											"end": 9523,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9497,
											"end": 9503,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9480,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 9480,
											"end": 9524,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9956,
											"end": 10360,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 9956,
											"end": 10360,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10158,
											"end": 10160,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10140,
											"end": 10161,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10140,
											"end": 10161,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10140,
											"end": 10161,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10199,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 10177,
											"end": 10195,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10177,
											"end": 10195,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10177,
											"end": 10195,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10170,
											"end": 10200,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10236,
											"end": 10270,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 10231,
											"end": 10233,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10216,
											"end": 10234,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10216,
											"end": 10234,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10209,
											"end": 10271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10302,
											"end": 10304,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 10287,
											"end": 10305,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10287,
											"end": 10305,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10280,
											"end": 10318,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10350,
											"end": 10353,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 10335,
											"end": 10354,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10335,
											"end": 10354,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10130,
											"end": 10360,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11187,
											"end": 11588,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 11187,
											"end": 11588,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11389,
											"end": 11391,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11371,
											"end": 11392,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11392,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11392,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11428,
											"end": 11430,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 11408,
											"end": 11426,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11426,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11426,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11401,
											"end": 11431,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11467,
											"end": 11501,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 11462,
											"end": 11464,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11447,
											"end": 11465,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11447,
											"end": 11465,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11440,
											"end": 11502,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11533,
											"end": 11535,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 11518,
											"end": 11536,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11536,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11511,
											"end": 11546,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11581,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 11563,
											"end": 11582,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11563,
											"end": 11582,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11361,
											"end": 11588,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12012,
											"end": 12418,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 12012,
											"end": 12418,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12214,
											"end": 12216,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12196,
											"end": 12217,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12196,
											"end": 12217,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12196,
											"end": 12217,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12253,
											"end": 12255,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 12233,
											"end": 12251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12233,
											"end": 12251,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12233,
											"end": 12251,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12226,
											"end": 12256,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12292,
											"end": 12326,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 12287,
											"end": 12289,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12272,
											"end": 12290,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12272,
											"end": 12290,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12265,
											"end": 12327,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12358,
											"end": 12360,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 12343,
											"end": 12361,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12343,
											"end": 12361,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12336,
											"end": 12376,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12408,
											"end": 12411,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 12393,
											"end": 12412,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12393,
											"end": 12412,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12186,
											"end": 12418,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13243,
											"end": 13647,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 13243,
											"end": 13647,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13445,
											"end": 13447,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13427,
											"end": 13448,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13427,
											"end": 13448,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13427,
											"end": 13448,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13484,
											"end": 13486,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 13464,
											"end": 13482,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13464,
											"end": 13482,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13464,
											"end": 13482,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13457,
											"end": 13487,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13523,
											"end": 13557,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 13518,
											"end": 13520,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13503,
											"end": 13521,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13503,
											"end": 13521,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13496,
											"end": 13558,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13589,
											"end": 13591,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 13574,
											"end": 13592,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13574,
											"end": 13592,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13567,
											"end": 13605,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13637,
											"end": 13640,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 13622,
											"end": 13641,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13622,
											"end": 13641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13417,
											"end": 13647,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14489,
											"end": 14672,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 14489,
											"end": 14672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14549,
											"end": 14553,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14582,
											"end": 14600,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14574,
											"end": 14580,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14571,
											"end": 14601,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 14570,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 14570,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 14568,
											"end": 14570,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14604,
											"end": 14622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 14604,
											"end": 14622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 14604,
											"end": 14622,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14604,
											"end": 14622,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 14604,
											"end": 14622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14649,
											"end": 14650,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 14645,
											"end": 14659,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 14661,
											"end": 14665,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14641,
											"end": 14666,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14641,
											"end": 14666,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14558,
											"end": 14672,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14677,
											"end": 14805,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 14677,
											"end": 14805,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14717,
											"end": 14720,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14748,
											"end": 14749,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14750,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 14741,
											"end": 14742,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14738,
											"end": 14751,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 14735,
											"end": 14737,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14735,
											"end": 14737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 14735,
											"end": 14737,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14754,
											"end": 14772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 14754,
											"end": 14772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 14754,
											"end": 14772,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14754,
											"end": 14772,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 14754,
											"end": 14772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14790,
											"end": 14799,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14790,
											"end": 14799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14725,
											"end": 14805,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14810,
											"end": 15190,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 14810,
											"end": 15190,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14889,
											"end": 14890,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 14885,
											"end": 14897,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14885,
											"end": 14897,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14885,
											"end": 14897,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 14885,
											"end": 14897,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14932,
											"end": 14944,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14932,
											"end": 14944,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14932,
											"end": 14944,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14953,
											"end": 14955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 14953,
											"end": 14955,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15007,
											"end": 15011,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 14999,
											"end": 15005,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14995,
											"end": 15012,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14985,
											"end": 15012,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14985,
											"end": 15012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14953,
											"end": 14955,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 14953,
											"end": 14955,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15060,
											"end": 15062,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15052,
											"end": 15058,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15049,
											"end": 15063,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 15029,
											"end": 15047,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15026,
											"end": 15064,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 15023,
											"end": 15025,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15023,
											"end": 15025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 15023,
											"end": 15025,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15106,
											"end": 15116,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 15101,
											"end": 15104,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 15097,
											"end": 15117,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 15094,
											"end": 15095,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15087,
											"end": 15118,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15141,
											"end": 15145,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 15138,
											"end": 15139,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15131,
											"end": 15146,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15169,
											"end": 15173,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 15166,
											"end": 15167,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15159,
											"end": 15174,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15023,
											"end": 15025,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 15023,
											"end": 15025,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15023,
											"end": 15025,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14865,
											"end": 15190,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14865,
											"end": 15190,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14865,
											"end": 15190,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14865,
											"end": 15190,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15195,
											"end": 15444,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 15195,
											"end": 15444,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15305,
											"end": 15307,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 15286,
											"end": 15299,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15286,
											"end": 15299,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15282,
											"end": 15309,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15310,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15270,
											"end": 15310,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15340,
											"end": 15358,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15325,
											"end": 15359,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15325,
											"end": 15359,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 15361,
											"end": 15383,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15361,
											"end": 15383,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15361,
											"end": 15383,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 15322,
											"end": 15384,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 15319,
											"end": 15321,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15319,
											"end": 15321,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 15319,
											"end": 15321,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15387,
											"end": 15405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 15387,
											"end": 15405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 15387,
											"end": 15405,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15387,
											"end": 15405,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 15387,
											"end": 15405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15423,
											"end": 15425,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15416,
											"end": 15438,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15242,
											"end": 15444,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15449,
											"end": 15584,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 15449,
											"end": 15584,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15488,
											"end": 15491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15509,
											"end": 15526,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15509,
											"end": 15526,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 15506,
											"end": 15508,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15506,
											"end": 15508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 15506,
											"end": 15508,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 15529,
											"end": 15547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 15529,
											"end": 15547,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15529,
											"end": 15547,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 15529,
											"end": 15547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15576,
											"end": 15577,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 15565,
											"end": 15578,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15565,
											"end": 15578,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15496,
											"end": 15584,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15589,
											"end": 15716,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 15589,
											"end": 15716,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15650,
											"end": 15660,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 15645,
											"end": 15648,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 15641,
											"end": 15661,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 15638,
											"end": 15639,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15631,
											"end": 15662,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15681,
											"end": 15685,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 15678,
											"end": 15679,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15671,
											"end": 15686,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15705,
											"end": 15709,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 15702,
											"end": 15703,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15695,
											"end": 15710,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15721,
											"end": 15848,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 15721,
											"end": 15848,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15782,
											"end": 15792,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 15777,
											"end": 15780,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 15773,
											"end": 15793,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 15770,
											"end": 15771,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15763,
											"end": 15794,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15813,
											"end": 15817,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 15810,
											"end": 15811,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15803,
											"end": 15818,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15837,
											"end": 15841,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 15834,
											"end": 15835,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15827,
											"end": 15842,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15853,
											"end": 16038,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 15853,
											"end": 16038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15888,
											"end": 15891,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15930,
											"end": 15931,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 15912,
											"end": 15928,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 15909,
											"end": 15932,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 15906,
											"end": 15908,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15906,
											"end": 15908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 15906,
											"end": 15908,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15980,
											"end": 15981,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15975,
											"end": 15978,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15970,
											"end": 15973,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15955,
											"end": 15982,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 16011,
											"end": 16021,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16006,
											"end": 16009,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 16002,
											"end": 16022,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 15906,
											"end": 15908,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 15906,
											"end": 15908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15896,
											"end": 16038,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15896,
											"end": 16038,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16043,
											"end": 16714,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 16043,
											"end": 16714,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16082,
											"end": 16085,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16124,
											"end": 16128,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 16106,
											"end": 16122,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 16103,
											"end": 16129,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 16100,
											"end": 16102,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16100,
											"end": 16102,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 16100,
											"end": 16102,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16090,
											"end": 16714,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16090,
											"end": 16714,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16100,
											"end": 16102,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 16100,
											"end": 16102,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16166,
											"end": 16168,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16160,
											"end": 16169,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16231,
											"end": 16247,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 16227,
											"end": 16252,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16227,
											"end": 16252,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16224,
											"end": 16225,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 16160,
											"end": 16169,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16203,
											"end": 16253,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 16282,
											"end": 16286,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16276,
											"end": 16287,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16306,
											"end": 16322,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 16341,
											"end": 16359,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16412,
											"end": 16414,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16405,
											"end": 16409,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 16397,
											"end": 16403,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16393,
											"end": 16410,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16390,
											"end": 16415,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 16385,
											"end": 16387,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16377,
											"end": 16383,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16374,
											"end": 16388,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 16371,
											"end": 16416,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 16368,
											"end": 16370,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16368,
											"end": 16370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 16368,
											"end": 16370,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16419,
											"end": 16424,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16419,
											"end": 16424,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16419,
											"end": 16424,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16419,
											"end": 16424,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16419,
											"end": 16424,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16090,
											"end": 16714,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16090,
											"end": 16714,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16368,
											"end": 16370,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 16368,
											"end": 16370,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16456,
											"end": 16462,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16450,
											"end": 16454,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16446,
											"end": 16463,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16435,
											"end": 16463,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16435,
											"end": 16463,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16492,
											"end": 16495,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16486,
											"end": 16496,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16519,
											"end": 16521,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16511,
											"end": 16517,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16508,
											"end": 16522,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 16505,
											"end": 16507,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16505,
											"end": 16507,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 16505,
											"end": 16507,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16530,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16530,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16530,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16530,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16530,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16530,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16090,
											"end": 16714,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16090,
											"end": 16714,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16505,
											"end": 16507,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 16505,
											"end": 16507,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16609,
											"end": 16611,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16590,
											"end": 16606,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 16584,
											"end": 16588,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 16580,
											"end": 16607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16576,
											"end": 16612,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16569,
											"end": 16573,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16560,
											"end": 16566,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16555,
											"end": 16558,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16551,
											"end": 16567,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16547,
											"end": 16574,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16544,
											"end": 16613,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 16541,
											"end": 16543,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16541,
											"end": 16543,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 16541,
											"end": 16543,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16616,
											"end": 16621,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16616,
											"end": 16621,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16616,
											"end": 16621,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16616,
											"end": 16621,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16616,
											"end": 16621,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16616,
											"end": 16621,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16090,
											"end": 16714,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16090,
											"end": 16714,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16541,
											"end": 16543,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 16541,
											"end": 16543,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16632,
											"end": 16689,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 16683,
											"end": 16687,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16674,
											"end": 16680,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16666,
											"end": 16672,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16662,
											"end": 16681,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16658,
											"end": 16688,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16652,
											"end": 16656,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 16632,
											"end": 16689,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 16632,
											"end": 16689,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16632,
											"end": 16689,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 16632,
											"end": 16689,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16705,
											"end": 16708,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16705,
											"end": 16708,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 16090,
											"end": 16714,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16090,
											"end": 16714,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16719,
											"end": 16850,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 16719,
											"end": 16850,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16793,
											"end": 16825,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16793,
											"end": 16825,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16783,
											"end": 16826,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16783,
											"end": 16826,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 16773,
											"end": 16775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 16773,
											"end": 16775,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16840,
											"end": 16841,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16837,
											"end": 16838,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16830,
											"end": 16842,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16773,
											"end": 16775,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 16773,
											"end": 16775,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16763,
											"end": 16850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16763,
											"end": 16850,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								},
								"9BE393994F02169C966A8F7D954E5F555F9D6FDEA83C170362FF79CF2C5CE4F1": "68747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e"
							}
						},
						"methodIdentifiers": {
							"GOLD()": "3e4bee38",
							"SHIELD()": "5b2725ed",
							"SILVER()": "e3e55f08",
							"SWORD()": "13dc989f",
							"THORS_HAMMER()": "d562e204",
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mintBatch()": "6ecf11d7",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SHIELD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SILVER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SWORD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"THORS_HAMMER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"msc_token/ERC1155.sol\":\"GameItems\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/ERC1155.sol\":{\"keccak256\":\"0xd8ac99293968b8bf64f40775bb5841933d772df81fa3607657fd9cf957d1fba8\",\"urls\":[\"bzz-raw://6d413ba5fcdfea0d8f082d579555b5d20fd9cdcbbec9ca16d75c38d811168d6d\",\"dweb:/ipfs/QmcNiExQGC3a1AWDd9sbPYdD1LmLWmREernbUomKJiGJkq\"]},\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x04d6d1342ece664085921a4fabc928a7bcf1cf2873fa81780f61a54dc2b9b66e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6d2b052effa2e9a7479b0fea53b46f4cbbd91947848ef632aadad20ae2e9275\",\"dweb:/ipfs/QmcZp7f5cooGZrhHE8RC1yQR53RFZt19d5fyVqNfbHmPgY\"]},\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "msc_token/ERC1155.sol:GameItems",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 165,
								"contract": "msc_token/ERC1155.sol:GameItems",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 167,
								"contract": "msc_token/ERC1155.sol:GameItems",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1092:1154  constructor(string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1147  _setURI(uri_) */\n  tag_6\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1142:1146  uri_ */\n  dup2\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1141  _setURI */\n  tag_7\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1147  _setURI(uri_) */\n  jump\t// in\ntag_6:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1092:1154  constructor(string memory uri_) {... */\n  pop\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_23)\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7936:8022  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8015  _uri = newuri */\n  dup1\n  mload\n  tag_10\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8006  _uri */\n  0x02\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8015  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7936:8022  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_15\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_18)\ntag_15:\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_18)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_21)\n    /* \"#utility.yul\":14:1151   */\ntag_3:\n    /* \"#utility.yul\":94:100   */\n  0x00\n    /* \"#utility.yul\":125:127   */\n  0x20\n    /* \"#utility.yul\":168:170   */\n  dup1\n    /* \"#utility.yul\":156:165   */\n  dup4\n    /* \"#utility.yul\":147:154   */\n  dup6\n    /* \"#utility.yul\":143:166   */\n  sub\n    /* \"#utility.yul\":139:171   */\n  slt\n    /* \"#utility.yul\":136:138   */\n  iszero\n  tag_25\n  jumpi\n    /* \"#utility.yul\":189:195   */\n  dup2\n    /* \"#utility.yul\":181:187   */\n  dup3\n    /* \"#utility.yul\":174:196   */\n  revert\n    /* \"#utility.yul\":136:138   */\ntag_25:\n    /* \"#utility.yul\":221:237   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":286:300   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":283:285   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":318:324   */\n  dup4\n    /* \"#utility.yul\":310:316   */\n  dup5\n    /* \"#utility.yul\":303:325   */\n  revert\n    /* \"#utility.yul\":283:285   */\ntag_26:\n    /* \"#utility.yul\":361:367   */\n  dup2\n    /* \"#utility.yul\":350:359   */\n  dup6\n    /* \"#utility.yul\":346:368   */\n  add\n    /* \"#utility.yul\":336:368   */\n  swap2\n  pop\n    /* \"#utility.yul\":406:413   */\n  dup6\n    /* \"#utility.yul\":399:403   */\n  0x1f\n    /* \"#utility.yul\":395:397   */\n  dup4\n    /* \"#utility.yul\":391:404   */\n  add\n    /* \"#utility.yul\":387:414   */\n  slt\n    /* \"#utility.yul\":377:379   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":433:439   */\n  dup4\n    /* \"#utility.yul\":425:431   */\n  dup5\n    /* \"#utility.yul\":418:440   */\n  revert\n    /* \"#utility.yul\":377:379   */\ntag_27:\n    /* \"#utility.yul\":467:469   */\n  dup2\n    /* \"#utility.yul\":461:470   */\n  mload\n    /* \"#utility.yul\":489:491   */\n  dup2\n    /* \"#utility.yul\":485:487   */\n  dup2\n    /* \"#utility.yul\":482:492   */\n  gt\n    /* \"#utility.yul\":479:481   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":495:513   */\n  tag_29\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":570:572   */\n  0x40\n    /* \"#utility.yul\":564:573   */\n  mload\n    /* \"#utility.yul\":538:540   */\n  0x1f\n    /* \"#utility.yul\":624:637   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":620:642   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":644:646   */\n  0x3f\n    /* \"#utility.yul\":616:647   */\n  add\n    /* \"#utility.yul\":612:652   */\n  and\n    /* \"#utility.yul\":600:653   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":668:686   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":688:710   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":665:711   */\n  or\n    /* \"#utility.yul\":662:664   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":714:732   */\n  tag_32\n  tag_30\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":754:764   */\n  dup2\n    /* \"#utility.yul\":750:752   */\n  0x40\n    /* \"#utility.yul\":743:765   */\n  mstore\n    /* \"#utility.yul\":789:791   */\n  dup3\n    /* \"#utility.yul\":781:787   */\n  dup2\n    /* \"#utility.yul\":774:792   */\n  mstore\n    /* \"#utility.yul\":829:836   */\n  dup9\n    /* \"#utility.yul\":824:826   */\n  dup7\n    /* \"#utility.yul\":819:821   */\n  dup5\n    /* \"#utility.yul\":815:817   */\n  dup8\n    /* \"#utility.yul\":811:822   */\n  add\n    /* \"#utility.yul\":807:827   */\n  add\n    /* \"#utility.yul\":804:837   */\n  gt\n    /* \"#utility.yul\":801:803   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":855:861   */\n  dup7\n    /* \"#utility.yul\":847:853   */\n  dup8\n    /* \"#utility.yul\":840:862   */\n  revert\n    /* \"#utility.yul\":801:803   */\ntag_33:\n    /* \"#utility.yul\":882:888   */\n  dup7\n    /* \"#utility.yul\":873:888   */\n  swap4\n  pop\n    /* \"#utility.yul\":897:1026   */\ntag_34:\n    /* \"#utility.yul\":911:913   */\n  dup3\n    /* \"#utility.yul\":908:909   */\n  dup5\n    /* \"#utility.yul\":905:914   */\n  lt\n    /* \"#utility.yul\":897:1026   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":999:1009   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":995:1014   */\n  dup7\n  add\n    /* \"#utility.yul\":989:1015   */\n  mload\n    /* \"#utility.yul\":968:982   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":964:987   */\n  dup8\n  add\n    /* \"#utility.yul\":957:1016   */\n  mstore\n    /* \"#utility.yul\":922:932   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":897:1026   */\n  jump(tag_34)\ntag_36:\n    /* \"#utility.yul\":1044:1046   */\n  dup3\n    /* \"#utility.yul\":1041:1042   */\n  dup5\n    /* \"#utility.yul\":1038:1047   */\n  gt\n    /* \"#utility.yul\":1035:1037   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1103:1109   */\n  dup7\n    /* \"#utility.yul\":1098:1100   */\n  dup7\n    /* \"#utility.yul\":1093:1095   */\n  dup5\n    /* \"#utility.yul\":1085:1091   */\n  dup4\n    /* \"#utility.yul\":1081:1096   */\n  add\n    /* \"#utility.yul\":1077:1101   */\n  add\n    /* \"#utility.yul\":1070:1110   */\n  mstore\n    /* \"#utility.yul\":1035:1037   */\ntag_37:\n    /* \"#utility.yul\":1139:1145   */\n  swap9\n    /* \"#utility.yul\":105:1151   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1156:1536   */\ntag_13:\n    /* \"#utility.yul\":1235:1236   */\n  0x01\n    /* \"#utility.yul\":1231:1243   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1278:1290   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1299:1301   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1353:1357   */\n  0x7f\n    /* \"#utility.yul\":1345:1351   */\n  dup3\n    /* \"#utility.yul\":1341:1358   */\n  and\n    /* \"#utility.yul\":1331:1358   */\n  swap2\n  pop\n    /* \"#utility.yul\":1299:1301   */\ntag_39:\n    /* \"#utility.yul\":1406:1408   */\n  0x20\n    /* \"#utility.yul\":1398:1404   */\n  dup3\n    /* \"#utility.yul\":1395:1409   */\n  lt\n    /* \"#utility.yul\":1375:1393   */\n  dup2\n    /* \"#utility.yul\":1372:1410   */\n  eq\n    /* \"#utility.yul\":1369:1371   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1452:1462   */\n  0x4e487b71\n    /* \"#utility.yul\":1447:1450   */\n  0xe0\n    /* \"#utility.yul\":1443:1463   */\n  shl\n    /* \"#utility.yul\":1440:1441   */\n  0x00\n    /* \"#utility.yul\":1433:1464   */\n  mstore\n    /* \"#utility.yul\":1487:1491   */\n  0x22\n    /* \"#utility.yul\":1484:1485   */\n  0x04\n    /* \"#utility.yul\":1477:1492   */\n  mstore\n    /* \"#utility.yul\":1515:1519   */\n  0x24\n    /* \"#utility.yul\":1512:1513   */\n  0x00\n    /* \"#utility.yul\":1505:1520   */\n  revert\n    /* \"#utility.yul\":1369:1371   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1211:1536   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1541:1668   */\ntag_30:\n    /* \"#utility.yul\":1602:1612   */\n  0x4e487b71\n    /* \"#utility.yul\":1597:1600   */\n  0xe0\n    /* \"#utility.yul\":1593:1613   */\n  shl\n    /* \"#utility.yul\":1590:1591   */\n  0x00\n    /* \"#utility.yul\":1583:1614   */\n  mstore\n    /* \"#utility.yul\":1633:1637   */\n  0x41\n    /* \"#utility.yul\":1630:1631   */\n  0x04\n    /* \"#utility.yul\":1623:1638   */\n  mstore\n    /* \"#utility.yul\":1657:1661   */\n  0x24\n    /* \"#utility.yul\":1654:1655   */\n  0x00\n    /* \"#utility.yul\":1647:1662   */\n  revert\n    /* \"#utility.yul\":1573:1668   */\ntag_23:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":13798:13823   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":13786:13788   */\n      0x20\n        /* \"#utility.yul\":13771:13789   */\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":9284:9298   */\n      swap1\n      iszero\n        /* \"#utility.yul\":9277:9299   */\n      iszero\n        /* \"#utility.yul\":9259:9300   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9247:9249   */\n      0x20\n        /* \"#utility.yul\":9232:9250   */\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_16\n        /* \"#utility.yul\":9214:9306   */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_7:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3131:3284  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_9:\n      tag_18\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3450:3454  bool */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3491  _operatorApprovals */\n      0x01\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3510  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3584:3973  function safeTransferFrom(... */\n    tag_10:\n      tag_30\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_15:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2256:2263  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2283:2304  account != address(0) */\n      dup4\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2275:2352  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10567:10569   */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2275:2352  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10549:10570   */\n      mstore\n        /* \"#utility.yul\":10606:10608   */\n      0x2b\n        /* \"#utility.yul\":10586:10604   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10579:10609   */\n      mstore\n        /* \"#utility.yul\":10645:10679   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":10625:10643   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10618:10680   */\n      mstore\n      shl(0xa8, 0x65726f2061646472657373)\n        /* \"#utility.yul\":10696:10714   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10689:10730   */\n      mstore\n        /* \"#utility.yul\":10747:10766   */\n      0x84\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2275:2352  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2378  _balances */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2382  _balances[id] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2391  _balances[id][account] */\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1323:1327  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1399  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1467  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_58\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1415:1467  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1467  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_58:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1519  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_60\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1483:1519  super.supportsInterface(interfaceId) */\n    tag_60:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1339:1519  return... */\n      swap3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1985:1998  string memory */\n      0x60\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2017:2021  _uri */\n      0x02\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2010:2021  return _uri */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4290  from == _msgSender() */\n      dup6\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4290  from == _msgSender() */\n      eq\n      dup1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4330  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_73\n      jumpi\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4294:4330  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4311:4315  from */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4294:4330  isApprovedForAll(from, _msgSender()) */\n    tag_73:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11795:11797   */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11777:11798   */\n      mstore\n        /* \"#utility.yul\":11834:11836   */\n      0x32\n        /* \"#utility.yul\":11814:11832   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11807:11837   */\n      mstore\n        /* \"#utility.yul\":11873:11907   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":11853:11871   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11846:11908   */\n      mstore\n      shl(0x72, 0x1bdddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":11924:11942   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11917:11965   */\n      mstore\n        /* \"#utility.yul\":11982:12001   */\n      0x84\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n      tag_55\n        /* \"#utility.yul\":11767:12007   */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n    tag_75:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4468  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4439:4443  from */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4445:4447  to */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4449:4452  ids */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4454:4461  amounts */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4463:4467  data */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4438  _safeBatchTransferFrom */\n      tag_79\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4468  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_37:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2706:2722  uint256[] memory */\n      0x60\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2765:2768  ids */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2765:2775  ids.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2754  accounts */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2761  accounts.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2775  accounts.length == ids.length */\n      eq\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13035:13037   */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13017:13038   */\n      mstore\n        /* \"#utility.yul\":13074:13076   */\n      0x29\n        /* \"#utility.yul\":13054:13072   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13047:13077   */\n      mstore\n        /* \"#utility.yul\":13113:13147   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":13093:13111   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13086:13148   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":13164:13182   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13157:13196   */\n      mstore\n        /* \"#utility.yul\":13213:13232   */\n      0x84\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":13007:13238   */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_81:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2832:2862  uint256[] memory batchBalances */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2879:2887  accounts */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2879:2894  accounts.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2865:2895  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_84\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_84:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_85\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_85:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2832:2895  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2911:2920  uint256 i */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_86:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2930:2938  accounts */\n      dup5\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2930:2945  accounts.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2926:2927  i */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2926:2945  i < accounts.length */\n      lt\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_87\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:3015  balanceOf(accounts[i], ids[i]) */\n      tag_89\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2995:3003  accounts */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3004:3005  i */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2995:3006  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_90\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_90:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3008:3011  ids */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3012:3013  i */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3008:3014  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_91\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_91:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:2994  balanceOf */\n      tag_15\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:3015  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_89:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:2979  batchBalances */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2980:2981  i */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:2982  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_92\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_92:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:3015  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2947:2950  ++i */\n      tag_93\n      dup2\n      tag_94\n      jump\t// in\n    tag_93:\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_86)\n    tag_87:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3043:3056  batchBalances */\n      swap4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3131:3284  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_43:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3277  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_96\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3258:3266  operator */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3268:3276  approved */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3243  _setApprovalForAll */\n      tag_98\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3277  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_96:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3131:3284  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3584:3973  function safeTransferFrom(... */\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3804  from == _msgSender() */\n      dup6\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3804  from == _msgSender() */\n      eq\n      dup1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3844  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_103\n      jumpi\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3808:3844  isApprovedForAll(from, _msgSender()) */\n      tag_103\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3825:3829  from */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3808:3844  isApprovedForAll(from, _msgSender()) */\n    tag_103:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3763:3911  require(... */\n      tag_105\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10979:10981   */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3763:3911  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10961:10982   */\n      mstore\n        /* \"#utility.yul\":11018:11020   */\n      0x29\n        /* \"#utility.yul\":10998:11016   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10991:11021   */\n      mstore\n        /* \"#utility.yul\":11057:11091   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":11037:11055   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11030:11092   */\n      mstore\n      shl(0xba, 0x08185c1c1c9bdd9959)\n        /* \"#utility.yul\":11108:11126   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11101:11140   */\n      mstore\n        /* \"#utility.yul\":11157:11176   */\n      0x84\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3763:3911  require(... */\n      tag_55\n        /* \"#utility.yul\":10951:11182   */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3763:3911  require(... */\n    tag_105:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3966  _safeTransferFrom(from, to, id, amount, data) */\n      tag_78\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3939:3943  from */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3945:3947  to */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3949:3951  id */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3953:3959  amount */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3961:3965  data */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3938  _safeTransferFrom */\n      tag_109\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3966  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6068:7113  function _safeBatchTransferFrom(... */\n    tag_79:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6288:6295  amounts */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6288:6302  amounts.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6277  ids */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6284  ids.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6302  ids.length == amounts.length */\n      eq\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6266:6347  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13445:13447   */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6266:6347  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13427:13448   */\n      mstore\n        /* \"#utility.yul\":13484:13486   */\n      0x28\n        /* \"#utility.yul\":13464:13482   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13457:13487   */\n      mstore\n        /* \"#utility.yul\":13523:13557   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":13503:13521   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13496:13558   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":13574:13592   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13567:13605   */\n      mstore\n        /* \"#utility.yul\":13622:13641   */\n      0x84\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6266:6347  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":13417:13647   */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6266:6347  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6365:6381  to != address(0) */\n      dup5\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6357:6423  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_118\n      jump\t// in\n    tag_116:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6434:6450  address operator */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_122:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6571:6574  ids */\n      dup5\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6571:6581  ids.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6567:6568  i */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6567:6581  i < ids.length */\n      lt\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_123\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6602:6612  uint256 id */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6615:6618  ids */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6619:6620  i */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6615:6621  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_125\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_125:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6602:6621  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6635:6649  uint256 amount */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6659  amounts */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6660:6661  i */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6662  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_126\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_126:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6677:6696  uint256 fromBalance */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6699:6712  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6699:6718  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6662  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6740:6761  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6732:6808  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_129\n      jump\t// in\n    tag_127:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6859  _balances */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6863  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6869  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6892  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6892  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6937  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6947  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6892  fromBalance - amount */\n      dup5\n      swap3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6859  _balances */\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6947  _balances[id][to] += amount */\n      tag_130\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6892  fromBalance - amount */\n      dup5\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6947  _balances[id][to] += amount */\n      tag_131\n      jump\t// in\n    tag_130:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n      pop\n      pop\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6583:6586  ++i */\n      dup1\n      tag_132\n      swap1\n      tag_94\n      jump\t// in\n    tag_132:\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_122)\n    tag_123:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7003:7005  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6997:7001  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6987:6995  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7007:7010  ids */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7012:7019  amounts */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_133\n      swap3\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7106  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_135\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7067:7075  operator */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7077:7081  from */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7083:7085  to */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7090  ids */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7092:7099  amounts */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7101:7105  data */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7066  _doSafeBatchTransferAcceptanceCheck */\n      tag_136\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7106  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_135:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6068:7113  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12074:12397  function _setApprovalForAll(... */\n    tag_98:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12224:12232  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12232  owner != operator */\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12220  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12232  owner != operator */\n      and\n      eq\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12625:12627   */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12607:12628   */\n      mstore\n        /* \"#utility.yul\":12664:12666   */\n      0x29\n        /* \"#utility.yul\":12644:12662   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12637:12667   */\n      mstore\n        /* \"#utility.yul\":12703:12737   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":12683:12701   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12676:12738   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":12754:12772   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12747:12786   */\n      mstore\n        /* \"#utility.yul\":12803:12822   */\n      0x84\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_55\n        /* \"#utility.yul\":12597:12828   */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12313  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12306  _operatorApprovals */\n      0x01\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12313  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12323  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12334  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12349:12390  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":9259:9300   */\n      swap2\n      dup3\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12349:12390  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":9232:9250   */\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12349:12390  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12074:12397  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4925:5722  function _safeTransferFrom(... */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5106:5122  to != address(0) */\n      dup5\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5098:5164  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_118\n      jump\t// in\n    tag_143:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5217:5313  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_146\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5248:5252  from */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5256  to */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5279  _asSingletonArray(id) */\n      tag_147\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5276:5278  id */\n      dup9\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5275  _asSingletonArray */\n      tag_148\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5279  _asSingletonArray(id) */\n      jump\t// in\n    tag_147:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5281:5306  _asSingletonArray(amount) */\n      tag_78\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5299:5305  amount */\n      dup9\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5281:5298  _asSingletonArray */\n      tag_148\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5281:5306  _asSingletonArray(amount) */\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5217:5313  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n    tag_146:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5324:5343  uint256 fromBalance */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5346:5359  _balances[id] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5346:5365  _balances[id][from] */\n      dup11\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5383:5404  fromBalance >= amount */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5375:5451  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_129\n      jump\t// in\n    tag_150:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5494  _balances */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5498  _balances[id] */\n      dup6\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5504  _balances[id][from] */\n      dup12\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5527  fromBalance - amount */\n      dup8\n      dup6\n      sub\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5527  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5564  _balances[id][to] */\n      swap1\n      dup9\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5574  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5527  fromBalance - amount */\n      dup7\n      swap3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5494  _balances */\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5574  _balances[id][to] += amount */\n      tag_152\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5527  fromBalance - amount */\n      dup5\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5574  _balances[id][to] += amount */\n      tag_131\n      jump\t// in\n    tag_152:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":14008:14033   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":14064:14066   */\n      0x20\n        /* \"#utility.yul\":14049:14067   */\n      dup2\n      add\n        /* \"#utility.yul\":14042:14076   */\n      dup7\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      dup10\n      and\n      swap3\n      dup11\n      dup3\n      and\n      swap3\n      swap2\n      dup7\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":13981:13999   */\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5715  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_155\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5678:5686  operator */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5688:5692  from */\n      dup9\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5694:5696  to */\n      dup9\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5698:5700  id */\n      dup9\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5702:5708  amount */\n      dup9\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5710:5714  data */\n      dup9\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5677  _doSafeTransferAcceptanceCheck */\n      tag_156\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5715  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_155:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4925:5722  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14282:15074  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14514:14527  to.isContract */\n      dup5\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":1087:1107  extcodesize(account) */\n      extcodesize\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":1133:1141  size > 0 */\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14510:15068  if (to.isContract()) {... */\n      tag_135\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14628  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14592  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14628  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_162\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14593:14601  operator */\n      dup10\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14603:14607  from */\n      dup10\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14609:14612  ids */\n      dup9\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14614:14621  amounts */\n      dup9\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14623:14627  data */\n      dup9\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14628  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_163\n      jump\t// in\n    tag_162:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_164\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_164:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_165\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_166\n      swap2\n      dup2\n      add\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      0x01\n    tag_165:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14545:15058  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_168\n      jumpi\n      tag_172\n      tag_173\n      jump\t// in\n    tag_172:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_171\n      jumpi\n      pop\n      tag_174\n      tag_175\n      jump\t// in\n    tag_174:\n      dup1\n      tag_176\n      jumpi\n      pop\n      jump(tag_170)\n    tag_176:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14934:14940  reason */\n      dup1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14927:14941  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14545:15058  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_171:\n      pop\n    tag_170:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14981:15043  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9737:9739   */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14981:15043  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9719:9740   */\n      mstore\n        /* \"#utility.yul\":9776:9778   */\n      0x34\n        /* \"#utility.yul\":9756:9774   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9749:9779   */\n      mstore\n        /* \"#utility.yul\":9815:9849   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":9795:9813   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9788:9850   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":9866:9884   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9859:9909   */\n      mstore\n        /* \"#utility.yul\":9926:9945   */\n      0x84\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14981:15043  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_55\n        /* \"#utility.yul\":9709:9951   */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14545:15058  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_168:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14707:14767  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14703:14860  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_155\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14791:14841  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_183\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15080:15273  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_148:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15213:15214  1 */\n      0x01\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15146:15162  uint256[] memory */\n      0x60\n      swap2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15174:15196  uint256[] memory array */\n      0x00\n      swap2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15174:15215  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15236:15243  element */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15230  array */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15231:15232  0 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15233  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_187\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_187:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15243  array[0] = element */\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15261:15266  array */\n      swap3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15080:15273  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13551:14276  function _doSafeTransferAcceptanceCheck(... */\n    tag_156:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13758:13771  to.isContract */\n      dup5\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":1087:1107  extcodesize(account) */\n      extcodesize\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":1133:1141  size > 0 */\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13754:14270  if (to.isContract()) {... */\n      tag_135\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13831  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_191\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13832:13840  operator */\n      dup10\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13842:13846  from */\n      dup10\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13848:13850  id */\n      dup9\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13852:13858  amount */\n      dup9\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13860:13864  data */\n      dup9\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_192\n      jump\t// in\n    tag_191:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_193\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_193:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_194\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_195\n      swap2\n      dup2\n      add\n      swap1\n      tag_167\n      jump\t// in\n    tag_195:\n      0x01\n    tag_194:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13789:14260  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_196\n      jumpi\n      tag_172\n      tag_173\n      jump\t// in\n    tag_196:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13914:13969  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13910:14062  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_155\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13993:14043  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_183\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_210:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_212\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:113   */\n    tag_212:\n        /* \"#utility.yul\":63:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:947   */\n    tag_213:\n        /* \"#utility.yul\":246:251   */\n      0x00\n        /* \"#utility.yul\":299:302   */\n      dup3\n        /* \"#utility.yul\":292:296   */\n      0x1f\n        /* \"#utility.yul\":284:290   */\n      dup4\n        /* \"#utility.yul\":280:297   */\n      add\n        /* \"#utility.yul\":276:303   */\n      slt\n        /* \"#utility.yul\":266:268   */\n      tag_215\n      jumpi\n        /* \"#utility.yul\":321:326   */\n      dup1\n        /* \"#utility.yul\":314:319   */\n      dup2\n        /* \"#utility.yul\":307:327   */\n      revert\n        /* \"#utility.yul\":266:268   */\n    tag_215:\n        /* \"#utility.yul\":361:367   */\n      dup2\n        /* \"#utility.yul\":348:368   */\n      calldataload\n        /* \"#utility.yul\":387:391   */\n      0x20\n        /* \"#utility.yul\":410:453   */\n      tag_216\n        /* \"#utility.yul\":450:452   */\n      dup3\n        /* \"#utility.yul\":410:453   */\n      tag_217\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":482:484   */\n      0x40\n        /* \"#utility.yul\":476:485   */\n      mload\n        /* \"#utility.yul\":494:525   */\n      tag_218\n        /* \"#utility.yul\":522:524   */\n      dup3\n        /* \"#utility.yul\":514:520   */\n      dup3\n        /* \"#utility.yul\":494:525   */\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":560:578   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":594:609   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":629:644   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":679:680   */\n      0x05\n        /* \"#utility.yul\":675:685   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":663:686   */\n      dup8\n      add\n        /* \"#utility.yul\":659:691   */\n      dup5\n      add\n        /* \"#utility.yul\":656:697   */\n      dup9\n      lt\n        /* \"#utility.yul\":653:655   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":714:719   */\n      dup6\n        /* \"#utility.yul\":707:712   */\n      dup7\n        /* \"#utility.yul\":700:720   */\n      revert\n        /* \"#utility.yul\":653:655   */\n    tag_220:\n        /* \"#utility.yul\":740:745   */\n      dup6\n        /* \"#utility.yul\":754:917   */\n    tag_221:\n        /* \"#utility.yul\":768:770   */\n      dup6\n        /* \"#utility.yul\":765:766   */\n      dup2\n        /* \"#utility.yul\":762:771   */\n      lt\n        /* \"#utility.yul\":754:917   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":825:842   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":813:843   */\n      dup5\n      mstore\n        /* \"#utility.yul\":863:875   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":895:907   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":786:787   */\n      0x01\n        /* \"#utility.yul\":779:788   */\n      add\n        /* \"#utility.yul\":754:917   */\n      jump(tag_221)\n    tag_223:\n      pop\n        /* \"#utility.yul\":935:941   */\n      swap1\n      swap8\n        /* \"#utility.yul\":256:947   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":952:1527   */\n    tag_224:\n        /* \"#utility.yul\":994:999   */\n      0x00\n        /* \"#utility.yul\":1047:1050   */\n      dup3\n        /* \"#utility.yul\":1040:1044   */\n      0x1f\n        /* \"#utility.yul\":1032:1038   */\n      dup4\n        /* \"#utility.yul\":1028:1045   */\n      add\n        /* \"#utility.yul\":1024:1051   */\n      slt\n        /* \"#utility.yul\":1014:1016   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":1069:1074   */\n      dup1\n        /* \"#utility.yul\":1062:1067   */\n      dup2\n        /* \"#utility.yul\":1055:1075   */\n      revert\n        /* \"#utility.yul\":1014:1016   */\n    tag_226:\n        /* \"#utility.yul\":1109:1115   */\n      dup2\n        /* \"#utility.yul\":1096:1116   */\n      calldataload\n        /* \"#utility.yul\":1135:1153   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1131:1133   */\n      dup2\n        /* \"#utility.yul\":1128:1154   */\n      gt\n        /* \"#utility.yul\":1125:1127   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":1157:1175   */\n      tag_228\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":1206:1208   */\n      0x40\n        /* \"#utility.yul\":1200:1209   */\n      mload\n        /* \"#utility.yul\":1218:1285   */\n      tag_230\n        /* \"#utility.yul\":1273:1275   */\n      0x1f\n        /* \"#utility.yul\":1254:1267   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1250:1277   */\n      and\n        /* \"#utility.yul\":1279:1283   */\n      0x20\n        /* \"#utility.yul\":1246:1284   */\n      add\n        /* \"#utility.yul\":1200:1209   */\n      dup3\n        /* \"#utility.yul\":1218:1285   */\n      tag_219\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":1309:1311   */\n      dup2\n        /* \"#utility.yul\":1301:1307   */\n      dup2\n        /* \"#utility.yul\":1294:1312   */\n      mstore\n        /* \"#utility.yul\":1355:1358   */\n      dup5\n        /* \"#utility.yul\":1348:1352   */\n      0x20\n        /* \"#utility.yul\":1343:1345   */\n      dup4\n        /* \"#utility.yul\":1335:1341   */\n      dup7\n        /* \"#utility.yul\":1331:1346   */\n      add\n        /* \"#utility.yul\":1327:1353   */\n      add\n        /* \"#utility.yul\":1324:1359   */\n      gt\n        /* \"#utility.yul\":1321:1323   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":1376:1381   */\n      dup3\n        /* \"#utility.yul\":1369:1374   */\n      dup4\n        /* \"#utility.yul\":1362:1382   */\n      revert\n        /* \"#utility.yul\":1321:1323   */\n    tag_231:\n        /* \"#utility.yul\":1444:1446   */\n      dup2\n        /* \"#utility.yul\":1437:1441   */\n      0x20\n        /* \"#utility.yul\":1429:1435   */\n      dup6\n        /* \"#utility.yul\":1425:1442   */\n      add\n        /* \"#utility.yul\":1418:1422   */\n      0x20\n        /* \"#utility.yul\":1410:1416   */\n      dup4\n        /* \"#utility.yul\":1406:1423   */\n      add\n        /* \"#utility.yul\":1393:1447   */\n      calldatacopy\n        /* \"#utility.yul\":1467:1482   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":1484:1488   */\n      0x20\n        /* \"#utility.yul\":1463:1489   */\n      add\n        /* \"#utility.yul\":1456:1497   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1471:1477   */\n      swap3\n        /* \"#utility.yul\":1004:1527   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1532:1802   */\n    tag_46:\n        /* \"#utility.yul\":1600:1606   */\n      0x00\n        /* \"#utility.yul\":1608:1614   */\n      dup1\n        /* \"#utility.yul\":1661:1663   */\n      0x40\n        /* \"#utility.yul\":1649:1658   */\n      dup4\n        /* \"#utility.yul\":1640:1647   */\n      dup6\n        /* \"#utility.yul\":1636:1659   */\n      sub\n        /* \"#utility.yul\":1632:1664   */\n      slt\n        /* \"#utility.yul\":1629:1631   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":1682:1688   */\n      dup2\n        /* \"#utility.yul\":1674:1680   */\n      dup3\n        /* \"#utility.yul\":1667:1689   */\n      revert\n        /* \"#utility.yul\":1629:1631   */\n    tag_233:\n        /* \"#utility.yul\":1710:1739   */\n      tag_234\n        /* \"#utility.yul\":1729:1738   */\n      dup4\n        /* \"#utility.yul\":1710:1739   */\n      tag_210\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":1700:1739   */\n      swap2\n      pop\n        /* \"#utility.yul\":1758:1796   */\n      tag_235\n        /* \"#utility.yul\":1792:1794   */\n      0x20\n        /* \"#utility.yul\":1781:1790   */\n      dup5\n        /* \"#utility.yul\":1777:1795   */\n      add\n        /* \"#utility.yul\":1758:1796   */\n      tag_210\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":1748:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1619:1802   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1807:2790   */\n    tag_32:\n        /* \"#utility.yul\":1961:1967   */\n      0x00\n        /* \"#utility.yul\":1969:1975   */\n      dup1\n        /* \"#utility.yul\":1977:1983   */\n      0x00\n        /* \"#utility.yul\":1985:1991   */\n      dup1\n        /* \"#utility.yul\":1993:1999   */\n      0x00\n        /* \"#utility.yul\":2046:2049   */\n      0xa0\n        /* \"#utility.yul\":2034:2043   */\n      dup7\n        /* \"#utility.yul\":2025:2032   */\n      dup9\n        /* \"#utility.yul\":2021:2044   */\n      sub\n        /* \"#utility.yul\":2017:2050   */\n      slt\n        /* \"#utility.yul\":2014:2016   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":2068:2074   */\n      dup1\n        /* \"#utility.yul\":2060:2066   */\n      dup2\n        /* \"#utility.yul\":2053:2075   */\n      revert\n        /* \"#utility.yul\":2014:2016   */\n    tag_237:\n        /* \"#utility.yul\":2096:2125   */\n      tag_238\n        /* \"#utility.yul\":2115:2124   */\n      dup7\n        /* \"#utility.yul\":2096:2125   */\n      tag_210\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":2086:2125   */\n      swap5\n      pop\n        /* \"#utility.yul\":2144:2182   */\n      tag_239\n        /* \"#utility.yul\":2178:2180   */\n      0x20\n        /* \"#utility.yul\":2167:2176   */\n      dup8\n        /* \"#utility.yul\":2163:2181   */\n      add\n        /* \"#utility.yul\":2144:2182   */\n      tag_210\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":2134:2182   */\n      swap4\n      pop\n        /* \"#utility.yul\":2233:2235   */\n      0x40\n        /* \"#utility.yul\":2222:2231   */\n      dup7\n        /* \"#utility.yul\":2218:2236   */\n      add\n        /* \"#utility.yul\":2205:2237   */\n      calldataload\n        /* \"#utility.yul\":2256:2274   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2297:2299   */\n      dup1\n        /* \"#utility.yul\":2289:2295   */\n      dup3\n        /* \"#utility.yul\":2286:2300   */\n      gt\n        /* \"#utility.yul\":2283:2285   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":2318:2324   */\n      dup3\n        /* \"#utility.yul\":2310:2316   */\n      dup4\n        /* \"#utility.yul\":2303:2325   */\n      revert\n        /* \"#utility.yul\":2283:2285   */\n    tag_240:\n        /* \"#utility.yul\":2346:2407   */\n      tag_241\n        /* \"#utility.yul\":2399:2406   */\n      dup10\n        /* \"#utility.yul\":2390:2396   */\n      dup4\n        /* \"#utility.yul\":2379:2388   */\n      dup11\n        /* \"#utility.yul\":2375:2397   */\n      add\n        /* \"#utility.yul\":2346:2407   */\n      tag_213\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":2336:2407   */\n      swap5\n      pop\n        /* \"#utility.yul\":2460:2462   */\n      0x60\n        /* \"#utility.yul\":2449:2458   */\n      dup9\n        /* \"#utility.yul\":2445:2463   */\n      add\n        /* \"#utility.yul\":2432:2464   */\n      calldataload\n        /* \"#utility.yul\":2416:2464   */\n      swap2\n      pop\n        /* \"#utility.yul\":2489:2491   */\n      dup1\n        /* \"#utility.yul\":2479:2487   */\n      dup3\n        /* \"#utility.yul\":2476:2492   */\n      gt\n        /* \"#utility.yul\":2473:2475   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":2510:2516   */\n      dup3\n        /* \"#utility.yul\":2502:2508   */\n      dup4\n        /* \"#utility.yul\":2495:2517   */\n      revert\n        /* \"#utility.yul\":2473:2475   */\n    tag_242:\n        /* \"#utility.yul\":2538:2601   */\n      tag_243\n        /* \"#utility.yul\":2593:2600   */\n      dup10\n        /* \"#utility.yul\":2582:2590   */\n      dup4\n        /* \"#utility.yul\":2571:2580   */\n      dup11\n        /* \"#utility.yul\":2567:2591   */\n      add\n        /* \"#utility.yul\":2538:2601   */\n      tag_213\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":2528:2601   */\n      swap4\n      pop\n        /* \"#utility.yul\":2654:2657   */\n      0x80\n        /* \"#utility.yul\":2643:2652   */\n      dup9\n        /* \"#utility.yul\":2639:2658   */\n      add\n        /* \"#utility.yul\":2626:2659   */\n      calldataload\n        /* \"#utility.yul\":2610:2659   */\n      swap2\n      pop\n        /* \"#utility.yul\":2684:2686   */\n      dup1\n        /* \"#utility.yul\":2674:2682   */\n      dup3\n        /* \"#utility.yul\":2671:2687   */\n      gt\n        /* \"#utility.yul\":2668:2670   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":2705:2711   */\n      dup3\n        /* \"#utility.yul\":2697:2703   */\n      dup4\n        /* \"#utility.yul\":2690:2712   */\n      revert\n        /* \"#utility.yul\":2668:2670   */\n    tag_244:\n      pop\n        /* \"#utility.yul\":2733:2784   */\n      tag_245\n        /* \"#utility.yul\":2776:2783   */\n      dup9\n        /* \"#utility.yul\":2765:2773   */\n      dup3\n        /* \"#utility.yul\":2754:2763   */\n      dup10\n        /* \"#utility.yul\":2750:2774   */\n      add\n        /* \"#utility.yul\":2733:2784   */\n      tag_224\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":2723:2784   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2004:2790   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:3421   */\n    tag_51:\n        /* \"#utility.yul\":2899:2905   */\n      0x00\n        /* \"#utility.yul\":2907:2913   */\n      dup1\n        /* \"#utility.yul\":2915:2921   */\n      0x00\n        /* \"#utility.yul\":2923:2929   */\n      dup1\n        /* \"#utility.yul\":2931:2937   */\n      0x00\n        /* \"#utility.yul\":2984:2987   */\n      0xa0\n        /* \"#utility.yul\":2972:2981   */\n      dup7\n        /* \"#utility.yul\":2963:2970   */\n      dup9\n        /* \"#utility.yul\":2959:2982   */\n      sub\n        /* \"#utility.yul\":2955:2988   */\n      slt\n        /* \"#utility.yul\":2952:2954   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":3006:3012   */\n      dup1\n        /* \"#utility.yul\":2998:3004   */\n      dup2\n        /* \"#utility.yul\":2991:3013   */\n      revert\n        /* \"#utility.yul\":2952:2954   */\n    tag_247:\n        /* \"#utility.yul\":3034:3063   */\n      tag_248\n        /* \"#utility.yul\":3053:3062   */\n      dup7\n        /* \"#utility.yul\":3034:3063   */\n      tag_210\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":3024:3063   */\n      swap5\n      pop\n        /* \"#utility.yul\":3082:3120   */\n      tag_249\n        /* \"#utility.yul\":3116:3118   */\n      0x20\n        /* \"#utility.yul\":3105:3114   */\n      dup8\n        /* \"#utility.yul\":3101:3119   */\n      add\n        /* \"#utility.yul\":3082:3120   */\n      tag_210\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":3072:3120   */\n      swap4\n      pop\n        /* \"#utility.yul\":3167:3169   */\n      0x40\n        /* \"#utility.yul\":3156:3165   */\n      dup7\n        /* \"#utility.yul\":3152:3170   */\n      add\n        /* \"#utility.yul\":3139:3171   */\n      calldataload\n        /* \"#utility.yul\":3129:3171   */\n      swap3\n      pop\n        /* \"#utility.yul\":3218:3220   */\n      0x60\n        /* \"#utility.yul\":3207:3216   */\n      dup7\n        /* \"#utility.yul\":3203:3221   */\n      add\n        /* \"#utility.yul\":3190:3222   */\n      calldataload\n        /* \"#utility.yul\":3180:3222   */\n      swap2\n      pop\n        /* \"#utility.yul\":3273:3276   */\n      0x80\n        /* \"#utility.yul\":3262:3271   */\n      dup7\n        /* \"#utility.yul\":3258:3277   */\n      add\n        /* \"#utility.yul\":3245:3278   */\n      calldataload\n        /* \"#utility.yul\":3301:3319   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3293:3299   */\n      dup2\n        /* \"#utility.yul\":3290:3320   */\n      gt\n        /* \"#utility.yul\":3287:3289   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":3338:3344   */\n      dup2\n        /* \"#utility.yul\":3330:3336   */\n      dup3\n        /* \"#utility.yul\":3323:3345   */\n      revert\n        /* \"#utility.yul\":3287:3289   */\n    tag_250:\n        /* \"#utility.yul\":3366:3415   */\n      tag_245\n        /* \"#utility.yul\":3407:3414   */\n      dup9\n        /* \"#utility.yul\":3398:3404   */\n      dup3\n        /* \"#utility.yul\":3387:3396   */\n      dup10\n        /* \"#utility.yul\":3383:3405   */\n      add\n        /* \"#utility.yul\":3366:3415   */\n      tag_224\n      jump\t// in\n        /* \"#utility.yul\":3426:3793   */\n    tag_42:\n        /* \"#utility.yul\":3491:3497   */\n      0x00\n        /* \"#utility.yul\":3499:3505   */\n      dup1\n        /* \"#utility.yul\":3552:3554   */\n      0x40\n        /* \"#utility.yul\":3540:3549   */\n      dup4\n        /* \"#utility.yul\":3531:3538   */\n      dup6\n        /* \"#utility.yul\":3527:3550   */\n      sub\n        /* \"#utility.yul\":3523:3555   */\n      slt\n        /* \"#utility.yul\":3520:3522   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":3573:3579   */\n      dup2\n        /* \"#utility.yul\":3565:3571   */\n      dup3\n        /* \"#utility.yul\":3558:3580   */\n      revert\n        /* \"#utility.yul\":3520:3522   */\n    tag_253:\n        /* \"#utility.yul\":3601:3630   */\n      tag_254\n        /* \"#utility.yul\":3620:3629   */\n      dup4\n        /* \"#utility.yul\":3601:3630   */\n      tag_210\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":3591:3630   */\n      swap2\n      pop\n        /* \"#utility.yul\":3680:3682   */\n      0x20\n        /* \"#utility.yul\":3669:3678   */\n      dup4\n        /* \"#utility.yul\":3665:3683   */\n      add\n        /* \"#utility.yul\":3652:3684   */\n      calldataload\n        /* \"#utility.yul\":3727:3732   */\n      dup1\n        /* \"#utility.yul\":3720:3733   */\n      iszero\n        /* \"#utility.yul\":3713:3734   */\n      iszero\n        /* \"#utility.yul\":3706:3711   */\n      dup2\n        /* \"#utility.yul\":3703:3735   */\n      eq\n        /* \"#utility.yul\":3693:3695   */\n      tag_255\n      jumpi\n        /* \"#utility.yul\":3754:3760   */\n      dup2\n        /* \"#utility.yul\":3746:3752   */\n      dup3\n        /* \"#utility.yul\":3739:3761   */\n      revert\n        /* \"#utility.yul\":3693:3695   */\n    tag_255:\n        /* \"#utility.yul\":3782:3787   */\n      dup1\n        /* \"#utility.yul\":3772:3787   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3510:3793   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4062   */\n    tag_14:\n        /* \"#utility.yul\":3866:3872   */\n      0x00\n        /* \"#utility.yul\":3874:3880   */\n      dup1\n        /* \"#utility.yul\":3927:3929   */\n      0x40\n        /* \"#utility.yul\":3915:3924   */\n      dup4\n        /* \"#utility.yul\":3906:3913   */\n      dup6\n        /* \"#utility.yul\":3902:3925   */\n      sub\n        /* \"#utility.yul\":3898:3930   */\n      slt\n        /* \"#utility.yul\":3895:3897   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":3948:3954   */\n      dup2\n        /* \"#utility.yul\":3940:3946   */\n      dup3\n        /* \"#utility.yul\":3933:3955   */\n      revert\n        /* \"#utility.yul\":3895:3897   */\n    tag_257:\n        /* \"#utility.yul\":3976:4005   */\n      tag_258\n        /* \"#utility.yul\":3995:4004   */\n      dup4\n        /* \"#utility.yul\":3976:4005   */\n      tag_210\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":3966:4005   */\n      swap5\n        /* \"#utility.yul\":4052:4054   */\n      0x20\n        /* \"#utility.yul\":4037:4055   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":4024:4056   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3885:4062   */\n      jump\t// out\n        /* \"#utility.yul\":4067:5341   */\n    tag_36:\n        /* \"#utility.yul\":4185:4191   */\n      0x00\n        /* \"#utility.yul\":4193:4199   */\n      dup1\n        /* \"#utility.yul\":4246:4248   */\n      0x40\n        /* \"#utility.yul\":4234:4243   */\n      dup4\n        /* \"#utility.yul\":4225:4232   */\n      dup6\n        /* \"#utility.yul\":4221:4244   */\n      sub\n        /* \"#utility.yul\":4217:4249   */\n      slt\n        /* \"#utility.yul\":4214:4216   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":4267:4273   */\n      dup2\n        /* \"#utility.yul\":4259:4265   */\n      dup3\n        /* \"#utility.yul\":4252:4274   */\n      revert\n        /* \"#utility.yul\":4214:4216   */\n    tag_260:\n        /* \"#utility.yul\":4312:4321   */\n      dup3\n        /* \"#utility.yul\":4299:4322   */\n      calldataload\n        /* \"#utility.yul\":4341:4359   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4382:4384   */\n      dup1\n        /* \"#utility.yul\":4374:4380   */\n      dup3\n        /* \"#utility.yul\":4371:4385   */\n      gt\n        /* \"#utility.yul\":4368:4370   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":4403:4409   */\n      dup4\n        /* \"#utility.yul\":4395:4401   */\n      dup5\n        /* \"#utility.yul\":4388:4410   */\n      revert\n        /* \"#utility.yul\":4368:4370   */\n    tag_261:\n        /* \"#utility.yul\":4446:4452   */\n      dup2\n        /* \"#utility.yul\":4435:4444   */\n      dup6\n        /* \"#utility.yul\":4431:4453   */\n      add\n        /* \"#utility.yul\":4421:4453   */\n      swap2\n      pop\n        /* \"#utility.yul\":4491:4498   */\n      dup6\n        /* \"#utility.yul\":4484:4488   */\n      0x1f\n        /* \"#utility.yul\":4480:4482   */\n      dup4\n        /* \"#utility.yul\":4476:4489   */\n      add\n        /* \"#utility.yul\":4472:4499   */\n      slt\n        /* \"#utility.yul\":4462:4464   */\n      tag_262\n      jumpi\n        /* \"#utility.yul\":4518:4524   */\n      dup4\n        /* \"#utility.yul\":4510:4516   */\n      dup5\n        /* \"#utility.yul\":4503:4525   */\n      revert\n        /* \"#utility.yul\":4462:4464   */\n    tag_262:\n        /* \"#utility.yul\":4559:4561   */\n      dup2\n        /* \"#utility.yul\":4546:4562   */\n      calldataload\n        /* \"#utility.yul\":4581:4585   */\n      0x20\n        /* \"#utility.yul\":4604:4647   */\n      tag_263\n        /* \"#utility.yul\":4644:4646   */\n      dup3\n        /* \"#utility.yul\":4604:4647   */\n      tag_217\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":4676:4678   */\n      0x40\n        /* \"#utility.yul\":4670:4679   */\n      mload\n        /* \"#utility.yul\":4688:4719   */\n      tag_264\n        /* \"#utility.yul\":4716:4718   */\n      dup3\n        /* \"#utility.yul\":4708:4714   */\n      dup3\n        /* \"#utility.yul\":4688:4719   */\n      tag_219\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":4754:4772   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":4788:4803   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":4823:4834   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":4865:4866   */\n      0x05\n        /* \"#utility.yul\":4861:4871   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":4853:4872   */\n      dup8\n      add\n        /* \"#utility.yul\":4849:4877   */\n      dup5\n      add\n        /* \"#utility.yul\":4846:4887   */\n      dup12\n      lt\n        /* \"#utility.yul\":4843:4845   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":4905:4911   */\n      dup9\n        /* \"#utility.yul\":4897:4903   */\n      dup10\n        /* \"#utility.yul\":4890:4912   */\n      revert\n        /* \"#utility.yul\":4843:4845   */\n    tag_265:\n        /* \"#utility.yul\":4932:4938   */\n      dup9\n        /* \"#utility.yul\":4923:4938   */\n      swap7\n      pop\n        /* \"#utility.yul\":4947:5116   */\n    tag_266:\n        /* \"#utility.yul\":4961:4963   */\n      dup5\n        /* \"#utility.yul\":4958:4959   */\n      dup8\n        /* \"#utility.yul\":4955:4964   */\n      lt\n        /* \"#utility.yul\":4947:5116   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":5018:5041   */\n      tag_269\n        /* \"#utility.yul\":5037:5040   */\n      dup2\n        /* \"#utility.yul\":5018:5041   */\n      tag_210\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":5006:5042   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4979:4980   */\n      0x01\n        /* \"#utility.yul\":4972:4981   */\n      swap7\n      swap1\n      swap7\n      add\n      swap6\n        /* \"#utility.yul\":5062:5074   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":5094:5106   */\n      dup4\n      add\n        /* \"#utility.yul\":4947:5116   */\n      jump(tag_266)\n    tag_268:\n      pop\n        /* \"#utility.yul\":5135:5141   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":5179:5197   */\n      dup7\n      add\n        /* \"#utility.yul\":5166:5198   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5210:5226   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5207:5209   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":5244:5250   */\n      dup3\n        /* \"#utility.yul\":5236:5242   */\n      dup4\n        /* \"#utility.yul\":5229:5251   */\n      revert\n        /* \"#utility.yul\":5207:5209   */\n    tag_270:\n      pop\n        /* \"#utility.yul\":5272:5335   */\n      tag_271\n        /* \"#utility.yul\":5327:5334   */\n      dup6\n        /* \"#utility.yul\":5316:5324   */\n      dup3\n        /* \"#utility.yul\":5305:5314   */\n      dup7\n        /* \"#utility.yul\":5301:5325   */\n      add\n        /* \"#utility.yul\":5272:5335   */\n      tag_213\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":5262:5335   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4204:5341   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5346:5601   */\n    tag_20:\n        /* \"#utility.yul\":5404:5410   */\n      0x00\n        /* \"#utility.yul\":5457:5459   */\n      0x20\n        /* \"#utility.yul\":5445:5454   */\n      dup3\n        /* \"#utility.yul\":5436:5443   */\n      dup5\n        /* \"#utility.yul\":5432:5455   */\n      sub\n        /* \"#utility.yul\":5428:5460   */\n      slt\n        /* \"#utility.yul\":5425:5427   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":5478:5484   */\n      dup1\n        /* \"#utility.yul\":5470:5476   */\n      dup2\n        /* \"#utility.yul\":5463:5485   */\n      revert\n        /* \"#utility.yul\":5425:5427   */\n    tag_273:\n        /* \"#utility.yul\":5522:5531   */\n      dup2\n        /* \"#utility.yul\":5509:5532   */\n      calldataload\n        /* \"#utility.yul\":5541:5571   */\n      tag_274\n        /* \"#utility.yul\":5565:5570   */\n      dup2\n        /* \"#utility.yul\":5541:5571   */\n      tag_275\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":5590:5595   */\n      swap4\n        /* \"#utility.yul\":5415:5601   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5606:5865   */\n    tag_167:\n        /* \"#utility.yul\":5675:5681   */\n      0x00\n        /* \"#utility.yul\":5728:5730   */\n      0x20\n        /* \"#utility.yul\":5716:5725   */\n      dup3\n        /* \"#utility.yul\":5707:5714   */\n      dup5\n        /* \"#utility.yul\":5703:5726   */\n      sub\n        /* \"#utility.yul\":5699:5731   */\n      slt\n        /* \"#utility.yul\":5696:5698   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":5749:5755   */\n      dup1\n        /* \"#utility.yul\":5741:5747   */\n      dup2\n        /* \"#utility.yul\":5734:5756   */\n      revert\n        /* \"#utility.yul\":5696:5698   */\n    tag_277:\n        /* \"#utility.yul\":5786:5795   */\n      dup2\n        /* \"#utility.yul\":5780:5796   */\n      mload\n        /* \"#utility.yul\":5805:5835   */\n      tag_274\n        /* \"#utility.yul\":5829:5834   */\n      dup2\n        /* \"#utility.yul\":5805:5835   */\n      tag_275\n      jump\t// in\n        /* \"#utility.yul\":5870:6060   */\n    tag_26:\n        /* \"#utility.yul\":5929:5935   */\n      0x00\n        /* \"#utility.yul\":5982:5984   */\n      0x20\n        /* \"#utility.yul\":5970:5979   */\n      dup3\n        /* \"#utility.yul\":5961:5968   */\n      dup5\n        /* \"#utility.yul\":5957:5980   */\n      sub\n        /* \"#utility.yul\":5953:5985   */\n      slt\n        /* \"#utility.yul\":5950:5952   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":6003:6009   */\n      dup1\n        /* \"#utility.yul\":5995:6001   */\n      dup2\n        /* \"#utility.yul\":5988:6010   */\n      revert\n        /* \"#utility.yul\":5950:5952   */\n    tag_280:\n      pop\n        /* \"#utility.yul\":6031:6054   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":5940:6060   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6065:6502   */\n    tag_281:\n        /* \"#utility.yul\":6118:6121   */\n      0x00\n        /* \"#utility.yul\":6156:6161   */\n      dup2\n        /* \"#utility.yul\":6150:6162   */\n      mload\n        /* \"#utility.yul\":6183:6189   */\n      dup1\n        /* \"#utility.yul\":6178:6181   */\n      dup5\n        /* \"#utility.yul\":6171:6190   */\n      mstore\n        /* \"#utility.yul\":6209:6213   */\n      0x20\n        /* \"#utility.yul\":6238:6240   */\n      dup1\n        /* \"#utility.yul\":6233:6236   */\n      dup6\n        /* \"#utility.yul\":6229:6241   */\n      add\n        /* \"#utility.yul\":6222:6241   */\n      swap5\n      pop\n        /* \"#utility.yul\":6275:6277   */\n      dup1\n        /* \"#utility.yul\":6268:6273   */\n      dup5\n        /* \"#utility.yul\":6264:6278   */\n      add\n        /* \"#utility.yul\":6296:6299   */\n      dup4\n        /* \"#utility.yul\":6308:6477   */\n    tag_283:\n        /* \"#utility.yul\":6322:6328   */\n      dup4\n        /* \"#utility.yul\":6319:6320   */\n      dup2\n        /* \"#utility.yul\":6316:6329   */\n      lt\n        /* \"#utility.yul\":6308:6477   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":6383:6396   */\n      dup2\n      mload\n        /* \"#utility.yul\":6371:6397   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6417:6429   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6452:6467   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6344:6345   */\n      0x01\n        /* \"#utility.yul\":6337:6346   */\n      add\n        /* \"#utility.yul\":6308:6477   */\n      jump(tag_283)\n    tag_285:\n      pop\n        /* \"#utility.yul\":6493:6496   */\n      swap5\n      swap6\n        /* \"#utility.yul\":6126:6502   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6507:6982   */\n    tag_286:\n        /* \"#utility.yul\":6548:6551   */\n      0x00\n        /* \"#utility.yul\":6586:6591   */\n      dup2\n        /* \"#utility.yul\":6580:6592   */\n      mload\n        /* \"#utility.yul\":6613:6619   */\n      dup1\n        /* \"#utility.yul\":6608:6611   */\n      dup5\n        /* \"#utility.yul\":6601:6620   */\n      mstore\n        /* \"#utility.yul\":6638:6641   */\n      dup2\n        /* \"#utility.yul\":6650:6812   */\n    tag_288:\n        /* \"#utility.yul\":6664:6670   */\n      dup2\n        /* \"#utility.yul\":6661:6662   */\n      dup2\n        /* \"#utility.yul\":6658:6671   */\n      lt\n        /* \"#utility.yul\":6650:6812   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":6726:6730   */\n      0x20\n        /* \"#utility.yul\":6782:6795   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":6778:6800   */\n      dup2\n      add\n        /* \"#utility.yul\":6772:6801   */\n      mload\n        /* \"#utility.yul\":6754:6765   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":6750:6770   */\n      dup3\n      add\n        /* \"#utility.yul\":6743:6802   */\n      mstore\n        /* \"#utility.yul\":6679:6691   */\n      add\n        /* \"#utility.yul\":6650:6812   */\n      jump(tag_288)\n    tag_290:\n        /* \"#utility.yul\":6830:6836   */\n      dup2\n        /* \"#utility.yul\":6827:6828   */\n      dup2\n        /* \"#utility.yul\":6824:6837   */\n      gt\n        /* \"#utility.yul\":6821:6823   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":6896:6899   */\n      dup3\n        /* \"#utility.yul\":6889:6893   */\n      0x20\n        /* \"#utility.yul\":6880:6886   */\n      dup4\n        /* \"#utility.yul\":6875:6878   */\n      dup8\n        /* \"#utility.yul\":6871:6887   */\n      add\n        /* \"#utility.yul\":6867:6894   */\n      add\n        /* \"#utility.yul\":6860:6900   */\n      mstore\n        /* \"#utility.yul\":6821:6823   */\n    tag_291:\n      pop\n        /* \"#utility.yul\":6964:6966   */\n      0x1f\n        /* \"#utility.yul\":6943:6958   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":6939:6968   */\n      and\n        /* \"#utility.yul\":6930:6969   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":6971:6975   */\n      0x20\n        /* \"#utility.yul\":6926:6976   */\n      add\n      swap3\n        /* \"#utility.yul\":6556:6982   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6987:7813   */\n    tag_163:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7384:7399   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":7366:7400   */\n      dup3\n      mstore\n        /* \"#utility.yul\":7436:7451   */\n      dup6\n      and\n        /* \"#utility.yul\":7431:7433   */\n      0x20\n        /* \"#utility.yul\":7416:7434   */\n      dup3\n      add\n        /* \"#utility.yul\":7409:7452   */\n      mstore\n        /* \"#utility.yul\":7346:7349   */\n      0xa0\n        /* \"#utility.yul\":7483:7485   */\n      0x40\n        /* \"#utility.yul\":7468:7486   */\n      dup3\n      add\n        /* \"#utility.yul\":7461:7492   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7309:7313   */\n      0x00\n      swap1\n        /* \"#utility.yul\":7515:7572   */\n      tag_293\n      swap1\n        /* \"#utility.yul\":7552:7571   */\n      dup4\n      add\n        /* \"#utility.yul\":7544:7550   */\n      dup7\n        /* \"#utility.yul\":7515:7572   */\n      tag_281\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":7620:7629   */\n      dup3\n        /* \"#utility.yul\":7612:7618   */\n      dup2\n        /* \"#utility.yul\":7608:7630   */\n      sub\n        /* \"#utility.yul\":7603:7605   */\n      0x60\n        /* \"#utility.yul\":7592:7601   */\n      dup5\n        /* \"#utility.yul\":7588:7606   */\n      add\n        /* \"#utility.yul\":7581:7631   */\n      mstore\n        /* \"#utility.yul\":7654:7698   */\n      tag_294\n        /* \"#utility.yul\":7691:7697   */\n      dup2\n        /* \"#utility.yul\":7683:7689   */\n      dup7\n        /* \"#utility.yul\":7654:7698   */\n      tag_281\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":7640:7698   */\n      swap1\n      pop\n        /* \"#utility.yul\":7747:7756   */\n      dup3\n        /* \"#utility.yul\":7739:7745   */\n      dup2\n        /* \"#utility.yul\":7735:7757   */\n      sub\n        /* \"#utility.yul\":7729:7732   */\n      0x80\n        /* \"#utility.yul\":7718:7727   */\n      dup5\n        /* \"#utility.yul\":7714:7733   */\n      add\n        /* \"#utility.yul\":7707:7758   */\n      mstore\n        /* \"#utility.yul\":7775:7807   */\n      tag_295\n        /* \"#utility.yul\":7800:7806   */\n      dup2\n        /* \"#utility.yul\":7792:7798   */\n      dup6\n        /* \"#utility.yul\":7775:7807   */\n      tag_286\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":7767:7807   */\n      swap9\n        /* \"#utility.yul\":7318:7813   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7818:8378   */\n    tag_192:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8115:8130   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":8097:8131   */\n      dup3\n      mstore\n        /* \"#utility.yul\":8167:8182   */\n      dup6\n      and\n        /* \"#utility.yul\":8162:8164   */\n      0x20\n        /* \"#utility.yul\":8147:8165   */\n      dup3\n      add\n        /* \"#utility.yul\":8140:8183   */\n      mstore\n        /* \"#utility.yul\":8214:8216   */\n      0x40\n        /* \"#utility.yul\":8199:8217   */\n      dup2\n      add\n        /* \"#utility.yul\":8192:8226   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":8257:8259   */\n      0x60\n        /* \"#utility.yul\":8242:8260   */\n      dup2\n      add\n        /* \"#utility.yul\":8235:8269   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":8077:8080   */\n      0xa0\n        /* \"#utility.yul\":8300:8303   */\n      0x80\n        /* \"#utility.yul\":8285:8304   */\n      dup3\n      add\n        /* \"#utility.yul\":8278:8310   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8040:8044   */\n      0x00\n      swap1\n        /* \"#utility.yul\":8327:8372   */\n      tag_297\n      swap1\n        /* \"#utility.yul\":8352:8371   */\n      dup4\n      add\n        /* \"#utility.yul\":8344:8350   */\n      dup5\n        /* \"#utility.yul\":8327:8372   */\n      tag_286\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":8319:8372   */\n      swap8\n        /* \"#utility.yul\":8049:8378   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8383:8644   */\n    tag_39:\n        /* \"#utility.yul\":8562:8564   */\n      0x20\n        /* \"#utility.yul\":8551:8560   */\n      dup2\n        /* \"#utility.yul\":8544:8565   */\n      mstore\n        /* \"#utility.yul\":8525:8529   */\n      0x00\n        /* \"#utility.yul\":8582:8638   */\n      tag_274\n        /* \"#utility.yul\":8634:8636   */\n      0x20\n        /* \"#utility.yul\":8623:8632   */\n      dup4\n        /* \"#utility.yul\":8619:8637   */\n      add\n        /* \"#utility.yul\":8611:8617   */\n      dup5\n        /* \"#utility.yul\":8582:8638   */\n      tag_281\n      jump\t// in\n        /* \"#utility.yul\":8649:9114   */\n    tag_134:\n        /* \"#utility.yul\":8906:8908   */\n      0x40\n        /* \"#utility.yul\":8895:8904   */\n      dup2\n        /* \"#utility.yul\":8888:8909   */\n      mstore\n        /* \"#utility.yul\":8869:8873   */\n      0x00\n        /* \"#utility.yul\":8932:8988   */\n      tag_301\n        /* \"#utility.yul\":8984:8986   */\n      0x40\n        /* \"#utility.yul\":8973:8982   */\n      dup4\n        /* \"#utility.yul\":8969:8987   */\n      add\n        /* \"#utility.yul\":8961:8967   */\n      dup6\n        /* \"#utility.yul\":8932:8988   */\n      tag_281\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":9036:9045   */\n      dup3\n        /* \"#utility.yul\":9028:9034   */\n      dup2\n        /* \"#utility.yul\":9024:9046   */\n      sub\n        /* \"#utility.yul\":9019:9021   */\n      0x20\n        /* \"#utility.yul\":9008:9017   */\n      dup5\n        /* \"#utility.yul\":9004:9022   */\n      add\n        /* \"#utility.yul\":8997:9047   */\n      mstore\n        /* \"#utility.yul\":9064:9108   */\n      tag_302\n        /* \"#utility.yul\":9101:9107   */\n      dup2\n        /* \"#utility.yul\":9093:9099   */\n      dup6\n        /* \"#utility.yul\":9064:9108   */\n      tag_281\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":9056:9108   */\n      swap6\n        /* \"#utility.yul\":8878:9114   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9311:9530   */\n    tag_29:\n        /* \"#utility.yul\":9460:9462   */\n      0x20\n        /* \"#utility.yul\":9449:9458   */\n      dup2\n        /* \"#utility.yul\":9442:9463   */\n      mstore\n        /* \"#utility.yul\":9423:9427   */\n      0x00\n        /* \"#utility.yul\":9480:9524   */\n      tag_274\n        /* \"#utility.yul\":9520:9522   */\n      0x20\n        /* \"#utility.yul\":9509:9518   */\n      dup4\n        /* \"#utility.yul\":9505:9523   */\n      add\n        /* \"#utility.yul\":9497:9503   */\n      dup5\n        /* \"#utility.yul\":9480:9524   */\n      tag_286\n      jump\t// in\n        /* \"#utility.yul\":9956:10360   */\n    tag_183:\n        /* \"#utility.yul\":10158:10160   */\n      0x20\n        /* \"#utility.yul\":10140:10161   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10197:10199   */\n      0x28\n        /* \"#utility.yul\":10177:10195   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10170:10200   */\n      mstore\n        /* \"#utility.yul\":10236:10270   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":10231:10233   */\n      0x40\n        /* \"#utility.yul\":10216:10234   */\n      dup3\n      add\n        /* \"#utility.yul\":10209:10271   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":10302:10304   */\n      0x60\n        /* \"#utility.yul\":10287:10305   */\n      dup3\n      add\n        /* \"#utility.yul\":10280:10318   */\n      mstore\n        /* \"#utility.yul\":10350:10353   */\n      0x80\n        /* \"#utility.yul\":10335:10354   */\n      add\n      swap1\n        /* \"#utility.yul\":10130:10360   */\n      jump\t// out\n        /* \"#utility.yul\":11187:11588   */\n    tag_118:\n        /* \"#utility.yul\":11389:11391   */\n      0x20\n        /* \"#utility.yul\":11371:11392   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11428:11430   */\n      0x25\n        /* \"#utility.yul\":11408:11426   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11401:11431   */\n      mstore\n        /* \"#utility.yul\":11467:11501   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":11462:11464   */\n      0x40\n        /* \"#utility.yul\":11447:11465   */\n      dup3\n      add\n        /* \"#utility.yul\":11440:11502   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":11533:11535   */\n      0x60\n        /* \"#utility.yul\":11518:11536   */\n      dup3\n      add\n        /* \"#utility.yul\":11511:11546   */\n      mstore\n        /* \"#utility.yul\":11578:11581   */\n      0x80\n        /* \"#utility.yul\":11563:11582   */\n      add\n      swap1\n        /* \"#utility.yul\":11361:11588   */\n      jump\t// out\n        /* \"#utility.yul\":12012:12418   */\n    tag_129:\n        /* \"#utility.yul\":12214:12216   */\n      0x20\n        /* \"#utility.yul\":12196:12217   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12253:12255   */\n      0x2a\n        /* \"#utility.yul\":12233:12251   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12226:12256   */\n      mstore\n        /* \"#utility.yul\":12292:12326   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":12287:12289   */\n      0x40\n        /* \"#utility.yul\":12272:12290   */\n      dup3\n      add\n        /* \"#utility.yul\":12265:12327   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":12358:12360   */\n      0x60\n        /* \"#utility.yul\":12343:12361   */\n      dup3\n      add\n        /* \"#utility.yul\":12336:12376   */\n      mstore\n        /* \"#utility.yul\":12408:12411   */\n      0x80\n        /* \"#utility.yul\":12393:12412   */\n      add\n      swap1\n        /* \"#utility.yul\":12186:12418   */\n      jump\t// out\n        /* \"#utility.yul\":14087:14270   */\n    tag_217:\n        /* \"#utility.yul\":14147:14151   */\n      0x00\n        /* \"#utility.yul\":14180:14198   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14172:14178   */\n      dup3\n        /* \"#utility.yul\":14169:14199   */\n      gt\n        /* \"#utility.yul\":14166:14168   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":14202:14220   */\n      tag_320\n      tag_229\n      jump\t// in\n    tag_320:\n      pop\n        /* \"#utility.yul\":14247:14248   */\n      0x05\n        /* \"#utility.yul\":14243:14257   */\n      shl\n        /* \"#utility.yul\":14259:14263   */\n      0x20\n        /* \"#utility.yul\":14239:14264   */\n      add\n      swap1\n        /* \"#utility.yul\":14156:14270   */\n      jump\t// out\n        /* \"#utility.yul\":14275:14403   */\n    tag_131:\n        /* \"#utility.yul\":14315:14318   */\n      0x00\n        /* \"#utility.yul\":14346:14347   */\n      dup3\n        /* \"#utility.yul\":14342:14348   */\n      not\n        /* \"#utility.yul\":14339:14340   */\n      dup3\n        /* \"#utility.yul\":14336:14349   */\n      gt\n        /* \"#utility.yul\":14333:14335   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":14352:14370   */\n      tag_323\n      tag_324\n      jump\t// in\n    tag_323:\n      pop\n        /* \"#utility.yul\":14388:14397   */\n      add\n      swap1\n        /* \"#utility.yul\":14323:14403   */\n      jump\t// out\n        /* \"#utility.yul\":14408:14788   */\n    tag_64:\n        /* \"#utility.yul\":14487:14488   */\n      0x01\n        /* \"#utility.yul\":14483:14495   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":14530:14542   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":14551:14553   */\n      tag_326\n      jumpi\n        /* \"#utility.yul\":14605:14609   */\n      0x7f\n        /* \"#utility.yul\":14597:14603   */\n      dup3\n        /* \"#utility.yul\":14593:14610   */\n      and\n        /* \"#utility.yul\":14583:14610   */\n      swap2\n      pop\n        /* \"#utility.yul\":14551:14553   */\n    tag_326:\n        /* \"#utility.yul\":14658:14660   */\n      0x20\n        /* \"#utility.yul\":14650:14656   */\n      dup3\n        /* \"#utility.yul\":14647:14661   */\n      lt\n        /* \"#utility.yul\":14627:14645   */\n      dup2\n        /* \"#utility.yul\":14624:14662   */\n      eq\n        /* \"#utility.yul\":14621:14623   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":14704:14714   */\n      0x4e487b71\n        /* \"#utility.yul\":14699:14702   */\n      0xe0\n        /* \"#utility.yul\":14695:14715   */\n      shl\n        /* \"#utility.yul\":14692:14693   */\n      0x00\n        /* \"#utility.yul\":14685:14716   */\n      mstore\n        /* \"#utility.yul\":14739:14743   */\n      0x22\n        /* \"#utility.yul\":14736:14737   */\n      0x04\n        /* \"#utility.yul\":14729:14744   */\n      mstore\n        /* \"#utility.yul\":14767:14771   */\n      0x24\n        /* \"#utility.yul\":14764:14765   */\n      0x00\n        /* \"#utility.yul\":14757:14772   */\n      revert\n        /* \"#utility.yul\":14621:14623   */\n    tag_327:\n      pop\n        /* \"#utility.yul\":14463:14788   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14793:15042   */\n    tag_219:\n        /* \"#utility.yul\":14903:14905   */\n      0x1f\n        /* \"#utility.yul\":14884:14897   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":14880:14907   */\n      and\n        /* \"#utility.yul\":14868:14908   */\n      dup2\n      add\n        /* \"#utility.yul\":14938:14956   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14923:14957   */\n      dup2\n      gt\n        /* \"#utility.yul\":14959:14981   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":14920:14982   */\n      or\n        /* \"#utility.yul\":14917:14919   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":14985:15003   */\n      tag_330\n      tag_229\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":15021:15023   */\n      0x40\n        /* \"#utility.yul\":15014:15036   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":14840:15042   */\n      jump\t// out\n        /* \"#utility.yul\":15047:15182   */\n    tag_94:\n        /* \"#utility.yul\":15086:15089   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":15107:15124   */\n      dup3\n      eq\n        /* \"#utility.yul\":15104:15106   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":15127:15145   */\n      tag_333\n      tag_324\n      jump\t// in\n    tag_333:\n      pop\n        /* \"#utility.yul\":15174:15175   */\n      0x01\n        /* \"#utility.yul\":15163:15176   */\n      add\n      swap1\n        /* \"#utility.yul\":15094:15182   */\n      jump\t// out\n        /* \"#utility.yul\":15187:15314   */\n    tag_324:\n        /* \"#utility.yul\":15248:15258   */\n      0x4e487b71\n        /* \"#utility.yul\":15243:15246   */\n      0xe0\n        /* \"#utility.yul\":15239:15259   */\n      shl\n        /* \"#utility.yul\":15236:15237   */\n      0x00\n        /* \"#utility.yul\":15229:15260   */\n      mstore\n        /* \"#utility.yul\":15279:15283   */\n      0x11\n        /* \"#utility.yul\":15276:15277   */\n      0x04\n        /* \"#utility.yul\":15269:15284   */\n      mstore\n        /* \"#utility.yul\":15303:15307   */\n      0x24\n        /* \"#utility.yul\":15300:15301   */\n      0x00\n        /* \"#utility.yul\":15293:15308   */\n      revert\n        /* \"#utility.yul\":15319:15446   */\n    tag_229:\n        /* \"#utility.yul\":15380:15390   */\n      0x4e487b71\n        /* \"#utility.yul\":15375:15378   */\n      0xe0\n        /* \"#utility.yul\":15371:15391   */\n      shl\n        /* \"#utility.yul\":15368:15369   */\n      0x00\n        /* \"#utility.yul\":15361:15392   */\n      mstore\n        /* \"#utility.yul\":15411:15415   */\n      0x41\n        /* \"#utility.yul\":15408:15409   */\n      0x04\n        /* \"#utility.yul\":15401:15416   */\n      mstore\n        /* \"#utility.yul\":15435:15439   */\n      0x24\n        /* \"#utility.yul\":15432:15433   */\n      0x00\n        /* \"#utility.yul\":15425:15440   */\n      revert\n        /* \"#utility.yul\":15451:15636   */\n    tag_173:\n        /* \"#utility.yul\":15486:15489   */\n      0x00\n        /* \"#utility.yul\":15528:15529   */\n      0x03\n        /* \"#utility.yul\":15510:15526   */\n      returndatasize\n        /* \"#utility.yul\":15507:15530   */\n      gt\n        /* \"#utility.yul\":15504:15506   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":15578:15579   */\n      0x04\n        /* \"#utility.yul\":15573:15576   */\n      dup2\n        /* \"#utility.yul\":15568:15571   */\n      dup3\n        /* \"#utility.yul\":15553:15580   */\n      returndatacopy\n        /* \"#utility.yul\":15609:15619   */\n      mload\n        /* \"#utility.yul\":15604:15607   */\n      0xe0\n        /* \"#utility.yul\":15600:15620   */\n      shr\n        /* \"#utility.yul\":15504:15506   */\n    tag_337:\n        /* \"#utility.yul\":15494:15636   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15641:16312   */\n    tag_175:\n        /* \"#utility.yul\":15680:15683   */\n      0x00\n        /* \"#utility.yul\":15722:15726   */\n      0x44\n        /* \"#utility.yul\":15704:15720   */\n      returndatasize\n        /* \"#utility.yul\":15701:15727   */\n      lt\n        /* \"#utility.yul\":15698:15700   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":15688:16312   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15698:15700   */\n    tag_339:\n        /* \"#utility.yul\":15764:15766   */\n      0x40\n        /* \"#utility.yul\":15758:15767   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":15829:15845   */\n      returndatasize\n        /* \"#utility.yul\":15825:15850   */\n      dup2\n      add\n        /* \"#utility.yul\":15822:15823   */\n      0x04\n        /* \"#utility.yul\":15758:15767   */\n      dup4\n        /* \"#utility.yul\":15801:15851   */\n      returndatacopy\n        /* \"#utility.yul\":15880:15884   */\n      dup2\n        /* \"#utility.yul\":15874:15885   */\n      mload\n        /* \"#utility.yul\":15904:15920   */\n      returndatasize\n        /* \"#utility.yul\":15939:15957   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16010:16012   */\n      dup2\n        /* \"#utility.yul\":16003:16007   */\n      0x24\n        /* \"#utility.yul\":15995:16001   */\n      dup5\n        /* \"#utility.yul\":15991:16008   */\n      add\n        /* \"#utility.yul\":15988:16013   */\n      gt\n        /* \"#utility.yul\":15983:15985   */\n      dup2\n        /* \"#utility.yul\":15975:15981   */\n      dup5\n        /* \"#utility.yul\":15972:15986   */\n      gt\n        /* \"#utility.yul\":15969:16014   */\n      or\n        /* \"#utility.yul\":15966:15968   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":16017:16022   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15688:16312   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15966:15968   */\n    tag_340:\n        /* \"#utility.yul\":16054:16060   */\n      dup3\n        /* \"#utility.yul\":16048:16052   */\n      dup6\n        /* \"#utility.yul\":16044:16061   */\n      add\n        /* \"#utility.yul\":16033:16061   */\n      swap2\n      pop\n        /* \"#utility.yul\":16090:16093   */\n      dup2\n        /* \"#utility.yul\":16084:16094   */\n      mload\n        /* \"#utility.yul\":16117:16119   */\n      dup2\n        /* \"#utility.yul\":16109:16115   */\n      dup2\n        /* \"#utility.yul\":16106:16120   */\n      gt\n        /* \"#utility.yul\":16103:16105   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":16123:16128   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15688:16312   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16103:16105   */\n    tag_341:\n        /* \"#utility.yul\":16207:16209   */\n      dup5\n        /* \"#utility.yul\":16188:16204   */\n      returndatasize\n        /* \"#utility.yul\":16182:16186   */\n      dup8\n        /* \"#utility.yul\":16178:16205   */\n      add\n        /* \"#utility.yul\":16174:16210   */\n      add\n        /* \"#utility.yul\":16167:16171   */\n      0x20\n        /* \"#utility.yul\":16158:16164   */\n      dup3\n        /* \"#utility.yul\":16153:16156   */\n      dup6\n        /* \"#utility.yul\":16149:16165   */\n      add\n        /* \"#utility.yul\":16145:16172   */\n      add\n        /* \"#utility.yul\":16142:16211   */\n      gt\n        /* \"#utility.yul\":16139:16141   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":16214:16219   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15688:16312   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16139:16141   */\n    tag_342:\n        /* \"#utility.yul\":16230:16287   */\n      tag_343\n        /* \"#utility.yul\":16281:16285   */\n      0x20\n        /* \"#utility.yul\":16272:16278   */\n      dup3\n        /* \"#utility.yul\":16264:16270   */\n      dup7\n        /* \"#utility.yul\":16260:16279   */\n      add\n        /* \"#utility.yul\":16256:16286   */\n      add\n        /* \"#utility.yul\":16250:16254   */\n      dup8\n        /* \"#utility.yul\":16230:16287   */\n      tag_219\n      jump\t// in\n    tag_343:\n      pop\n        /* \"#utility.yul\":16303:16306   */\n      swap1\n      swap6\n        /* \"#utility.yul\":15688:16312   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16317:16448   */\n    tag_275:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":16391:16423   */\n      dup2\n      and\n        /* \"#utility.yul\":16381:16424   */\n      dup2\n      eq\n        /* \"#utility.yul\":16371:16373   */\n      tag_345\n      jumpi\n        /* \"#utility.yul\":16438:16439   */\n      0x00\n        /* \"#utility.yul\":16435:16436   */\n      dup1\n        /* \"#utility.yul\":16428:16440   */\n      revert\n        /* \"#utility.yul\":16371:16373   */\n    tag_345:\n        /* \"#utility.yul\":16361:16448   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c0fc8ca955b70c5b41ac3b2da6d3fd17559aeaeebf54512e938772394ac6aa8b64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1670:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "105:1046:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "115:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "125:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "119:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "172:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "181:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "189:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "174:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "174:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "174:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "147:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "156:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "143:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "143:23:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "168:2:9"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "139:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "139:32:9"
															},
															"nodeType": "YulIf",
															"src": "136:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "207:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "227:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "221:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:16:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "211:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "246:28:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "264:2:9",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "268:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "260:10:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "272:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "256:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "256:18:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "250:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "301:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "310:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "318:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "303:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "303:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "303:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "289:6:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "297:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "286:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "286:14:9"
															},
															"nodeType": "YulIf",
															"src": "283:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "336:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "350:9:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "361:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "346:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "346:22:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "340:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "416:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "425:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "433:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "418:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "418:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "418:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "395:2:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "399:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "391:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "406:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "387:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "387:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "380:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "380:35:9"
															},
															"nodeType": "YulIf",
															"src": "377:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "451:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "467:2:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "461:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "461:9:9"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "455:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "493:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "495:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "485:2:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "489:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "482:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "482:10:9"
															},
															"nodeType": "YulIf",
															"src": "479:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "524:17:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "538:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "534:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:7:9"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "528:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "550:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "570:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "564:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "564:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "554:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "582:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "604:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nodeType": "YulIdentifier",
																										"src": "628:2:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "632:4:9",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "624:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "624:13:9"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "639:2:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "620:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "620:22:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "644:2:9",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "616:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "616:31:9"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "649:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "612:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "612:40:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "600:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "600:53:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "586:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "712:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "714:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "714:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "714:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "671:10:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "683:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "668:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "691:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "703:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "688:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "688:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "665:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "665:46:9"
															},
															"nodeType": "YulIf",
															"src": "662:2:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "750:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "754:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "743:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "743:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "743:22:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "781:6:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "789:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "774:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "774:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "774:18:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "838:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "847:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "855:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "840:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "840:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "840:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "815:2:9"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "819:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "811:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "811:11:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "824:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "807:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "807:20:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "829:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "804:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "804:33:9"
															},
															"nodeType": "YulIf",
															"src": "801:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "873:15:9",
															"value": {
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "882:6:9"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "877:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "943:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "972:6:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "980:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "968:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "968:14:9"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "964:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "964:23:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "1003:2:9"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1007:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "999:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "999:10:9"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1011:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "995:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "995:19:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "989:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "989:26:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "957:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "957:59:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "957:59:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "908:1:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "911:2:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "905:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "905:9:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "915:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "917:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "926:1:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "929:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "922:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "922:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "917:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "901:3:9",
																"statements": []
															},
															"src": "897:129:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1056:64:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1085:6:9"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "1093:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1081:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1081:15:9"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1098:2:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1077:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1077:24:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1103:6:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:40:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:40:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1041:1:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1044:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1038:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1038:9:9"
															},
															"nodeType": "YulIf",
															"src": "1035:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1129:16:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1139:6:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1129:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "71:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "82:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "94:6:9",
														"type": ""
													}
												],
												"src": "14:1137:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1211:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1221:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1235:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1238:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1231:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1221:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1252:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1282:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1278:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1278:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1256:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1329:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1331:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1345:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1353:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1341:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1341:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1331:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1309:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1302:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1302:26:9"
															},
															"nodeType": "YulIf",
															"src": "1299:2:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1419:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1440:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1447:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1452:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1443:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1443:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1433:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1433:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1433:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1484:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1487:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1477:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1477:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1477:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1512:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1515:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1505:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1505:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1505:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1375:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1406:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1395:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1395:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1372:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1372:38:9"
															},
															"nodeType": "YulIf",
															"src": "1369:2:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1191:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1200:6:9",
														"type": ""
													}
												],
												"src": "1156:380:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1573:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1590:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1597:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1602:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1593:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1593:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1583:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1583:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1583:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1630:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1633:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1623:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1623:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1654:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1657:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1647:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1541:127:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(value0, value0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), value0)\n        }\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200165238038062001652833981016040819052620000349162000105565b6200003f8162000046565b506200022e565b80516200005b9060029060208401906200005f565b5050565b8280546200006d90620001db565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b6000602080838503121562000118578182fd5b82516001600160401b03808211156200012f578384fd5b818501915085601f83011262000143578384fd5b81518181111562000158576200015862000218565b604051601f8201601f19908116603f0116810190838211818310171562000183576200018362000218565b8160405282815288868487010111156200019b578687fd5b8693505b82841015620001be57848401860151818501870152928501926200019f565b82841115620001cf57868684830101525b98975050505050505050565b600181811c90821680620001f057607f821691505b602082108114156200021257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b611414806200023e6000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610e9a565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610f8e565b610223565b60405190151581526020016100a9565b6100e86100e3366004610fcd565b610275565b6040516100a9919061114e565b610108610103366004610d57565b610309565b005b61011d610118366004610ec3565b6103a0565b6040516100a9919061110d565b610108610138366004610e60565b610502565b6100c561014b366004610d25565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610108610187366004610dfd565b610511565b60006001600160a01b0383166101fd5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061025457506001600160e01b031982166303a24d0760e21b145b8061026f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461028490611274565b80601f01602080910402602001604051908101604052809291908181526020018280546102b090611274565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103255750610325853361014b565b61038c5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016101f4565b6103998585858585610598565b5050505050565b606081518351146104055760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f4565b6000835167ffffffffffffffff81111561042f57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610458578160200160208202803683370190505b50905060005b84518110156104fa576104bf85828151811061048a57634e487b7160e01b600052603260045260246000fd5b60200260200101518583815181106104b257634e487b7160e01b600052603260045260246000fd5b602002602001015161018c565b8282815181106104df57634e487b7160e01b600052603260045260246000fd5b60209081029190910101526104f3816112dc565b905061045e565b509392505050565b61050d338383610791565b5050565b6001600160a01b03851633148061052d575061052d853361014b565b61058b5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016101f4565b6103998585858585610872565b81518351146105fa5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f4565b6001600160a01b0384166106205760405162461bcd60e51b81526004016101f4906111a9565b3360005b845181101561072357600085828151811061064f57634e487b7160e01b600052603260045260246000fd5b60200260200101519050600085838151811061067b57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156106cb5760405162461bcd60e51b81526004016101f4906111ee565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061070890849061125c565b925050819055505050508061071c906112dc565b9050610624565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610773929190611120565b60405180910390a4610789818787878787610998565b505050505050565b816001600160a01b0316836001600160a01b031614156108055760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f4565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166108985760405162461bcd60e51b81526004016101f4906111a9565b336108b18187876108a888610b03565b61039988610b03565b6000848152602081815260408083206001600160a01b038a168452909152902054838110156108f25760405162461bcd60e51b81526004016101f4906111ee565b6000858152602081815260408083206001600160a01b038b811685529252808320878503905590881682528120805486929061092f90849061125c565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461098f828888888888610b5c565b50505050505050565b6001600160a01b0384163b156107895760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906109dc908990899088908890889060040161106a565b602060405180830381600087803b1580156109f657600080fd5b505af1925050508015610a26575060408051601f3d908101601f19168201909252610a2391810190610fb1565b60015b610ad357610a32611323565b806308c379a01415610a6c5750610a4761133b565b80610a525750610a6e565b8060405162461bcd60e51b81526004016101f4919061114e565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f4565b6001600160e01b0319811663bc197c8160e01b1461098f5760405162461bcd60e51b81526004016101f490611161565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610b4b57634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b156107895760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610ba090899089908890889088906004016110c8565b602060405180830381600087803b158015610bba57600080fd5b505af1925050508015610bea575060408051601f3d908101601f19168201909252610be791810190610fb1565b60015b610bf657610a32611323565b6001600160e01b0319811663f23a6e6160e01b1461098f5760405162461bcd60e51b81526004016101f490611161565b80356001600160a01b0381168114610c3d57600080fd5b919050565b600082601f830112610c52578081fd5b81356020610c5f82611238565b604051610c6c82826112af565b8381528281019150858301600585901b87018401881015610c8b578586fd5b855b85811015610ca957813584529284019290840190600101610c8d565b5090979650505050505050565b600082601f830112610cc6578081fd5b813567ffffffffffffffff811115610ce057610ce061130d565b604051610cf7601f8301601f1916602001826112af565b818152846020838601011115610d0b578283fd5b816020850160208301379081016020019190915292915050565b60008060408385031215610d37578182fd5b610d4083610c26565b9150610d4e60208401610c26565b90509250929050565b600080600080600060a08688031215610d6e578081fd5b610d7786610c26565b9450610d8560208701610c26565b9350604086013567ffffffffffffffff80821115610da1578283fd5b610dad89838a01610c42565b94506060880135915080821115610dc2578283fd5b610dce89838a01610c42565b93506080880135915080821115610de3578283fd5b50610df088828901610cb6565b9150509295509295909350565b600080600080600060a08688031215610e14578081fd5b610e1d86610c26565b9450610e2b60208701610c26565b93506040860135925060608601359150608086013567ffffffffffffffff811115610e54578182fd5b610df088828901610cb6565b60008060408385031215610e72578182fd5b610e7b83610c26565b915060208301358015158114610e8f578182fd5b809150509250929050565b60008060408385031215610eac578182fd5b610eb583610c26565b946020939093013593505050565b60008060408385031215610ed5578182fd5b823567ffffffffffffffff80821115610eec578384fd5b818501915085601f830112610eff578384fd5b81356020610f0c82611238565b604051610f1982826112af565b8381528281019150858301600585901b870184018b1015610f38578889fd5b8896505b84871015610f6157610f4d81610c26565b835260019690960195918301918301610f3c565b5096505086013592505080821115610f77578283fd5b50610f8485828601610c42565b9150509250929050565b600060208284031215610f9f578081fd5b8135610faa816113c5565b9392505050565b600060208284031215610fc2578081fd5b8151610faa816113c5565b600060208284031215610fde578081fd5b5035919050565b6000815180845260208085019450808401835b8381101561101457815187529582019590820190600101610ff8565b509495945050505050565b60008151808452815b8181101561104457602081850181015186830182015201611028565b818111156110555782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a06040820181905260009061109690830186610fe5565b82810360608401526110a88186610fe5565b905082810360808401526110bc818561101f565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906111029083018461101f565b979650505050505050565b602081526000610faa6020830184610fe5565b6040815260006111336040830185610fe5565b82810360208401526111458185610fe5565b95945050505050565b602081526000610faa602083018461101f565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600067ffffffffffffffff8211156112525761125261130d565b5060051b60200190565b6000821982111561126f5761126f6112f7565b500190565b600181811c9082168061128857607f821691505b602082108114156112a957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff811182821017156112d5576112d561130d565b6040525050565b60006000198214156112f0576112f06112f7565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561133857600481823e5160e01c5b90565b600060443d10156113495790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561137957505050505090565b82850191508151818111156113915750505050505090565b843d87010160208285010111156113ab5750505050505090565b6113ba602082860101876112af565b509095945050505050565b6001600160e01b0319811681146113db57600080fd5b5056fea2646970667358221220c0fc8ca955b70c5b41ac3b2da6d3fd17559aeaeebf54512e938772394ac6aa8b64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1652 CODESIZE SUB DUP1 PUSH3 0x1652 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x105 JUMP JUMPDEST PUSH3 0x3F DUP2 PUSH3 0x46 JUMP JUMPDEST POP PUSH3 0x22E JUMP JUMPDEST DUP1 MLOAD PUSH3 0x5B SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x5F JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x6D SWAP1 PUSH3 0x1DB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x91 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xAC JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xDC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xDC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xBF JUMP JUMPDEST POP PUSH3 0xEA SWAP3 SWAP2 POP PUSH3 0xEE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xEA JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xEF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x118 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x12F JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x143 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x158 JUMPI PUSH3 0x158 PUSH3 0x218 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x183 JUMPI PUSH3 0x183 PUSH3 0x218 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x19B JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x1BE JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x19F JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH3 0x1CF JUMPI DUP7 DUP7 DUP5 DUP4 ADD ADD MSTORE JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1F0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x212 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1414 DUP1 PUSH3 0x23E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xE9A JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xF8E JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xFCD JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x114E JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xD57 JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xEC3 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0x502 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xD25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xDFD JUMP JUMPDEST PUSH2 0x511 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x254 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x26F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x284 SWAP1 PUSH2 0x1274 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0x1274 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x325 JUMPI POP PUSH2 0x325 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x38C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x598 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x42F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x458 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4FA JUMPI PUSH2 0x4BF DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x48A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4B2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4DF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4F3 DUP2 PUSH2 0x12DC JUMP JUMPDEST SWAP1 POP PUSH2 0x45E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x50D CALLER DUP4 DUP4 PUSH2 0x791 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x52D JUMPI POP PUSH2 0x52D DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x58B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x872 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x620 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x723 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x64F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x67B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x6CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x11EE JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x708 SWAP1 DUP5 SWAP1 PUSH2 0x125C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x71C SWAP1 PUSH2 0x12DC JUMP JUMPDEST SWAP1 POP PUSH2 0x624 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x773 SWAP3 SWAP2 SWAP1 PUSH2 0x1120 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x789 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x998 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x805 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x898 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST CALLER PUSH2 0x8B1 DUP2 DUP8 DUP8 PUSH2 0x8A8 DUP9 PUSH2 0xB03 JUMP JUMPDEST PUSH2 0x399 DUP9 PUSH2 0xB03 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x8F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x11EE JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x92F SWAP1 DUP5 SWAP1 PUSH2 0x125C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x98F DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xB5C JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x789 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x9DC SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x106A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA26 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xA23 SWAP2 DUP2 ADD SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAD3 JUMPI PUSH2 0xA32 PUSH2 0x1323 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xA6C JUMPI POP PUSH2 0xA47 PUSH2 0x133B JUMP JUMPDEST DUP1 PUSH2 0xA52 JUMPI POP PUSH2 0xA6E JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x114E JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x98F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB4B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x789 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xBA0 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xBEA JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xBE7 SWAP2 DUP2 ADD SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xBF6 JUMPI PUSH2 0xA32 PUSH2 0x1323 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x98F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1161 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC52 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xC5F DUP3 PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6C DUP3 DUP3 PUSH2 0x12AF JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0xC8B JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xCA9 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xC8D JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCC6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCE0 JUMPI PUSH2 0xCE0 PUSH2 0x130D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCF7 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x12AF JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xD0B JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD37 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xD40 DUP4 PUSH2 0xC26 JUMP JUMPDEST SWAP2 POP PUSH2 0xD4E PUSH1 0x20 DUP5 ADD PUSH2 0xC26 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD6E JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xD77 DUP7 PUSH2 0xC26 JUMP JUMPDEST SWAP5 POP PUSH2 0xD85 PUSH1 0x20 DUP8 ADD PUSH2 0xC26 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDA1 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0xDAD DUP10 DUP4 DUP11 ADD PUSH2 0xC42 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDC2 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0xDCE DUP10 DUP4 DUP11 ADD PUSH2 0xC42 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDE3 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0xDF0 DUP9 DUP3 DUP10 ADD PUSH2 0xCB6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xE14 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xE1D DUP7 PUSH2 0xC26 JUMP JUMPDEST SWAP5 POP PUSH2 0xE2B PUSH1 0x20 DUP8 ADD PUSH2 0xC26 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE54 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xDF0 DUP9 DUP3 DUP10 ADD PUSH2 0xCB6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE72 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xE7B DUP4 PUSH2 0xC26 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE8F JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEAC JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xEB5 DUP4 PUSH2 0xC26 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xED5 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEEC JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEFF JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xF0C DUP3 PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF19 DUP3 DUP3 PUSH2 0x12AF JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0xF38 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0xF61 JUMPI PUSH2 0xF4D DUP2 PUSH2 0xC26 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xF3C JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xF77 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0xF84 DUP6 DUP3 DUP7 ADD PUSH2 0xC42 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF9F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFAA DUP2 PUSH2 0x13C5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xFAA DUP2 PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFDE JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1014 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xFF8 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1044 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1028 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1055 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1096 SWAP1 DUP4 ADD DUP7 PUSH2 0xFE5 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x10A8 DUP2 DUP7 PUSH2 0xFE5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x10BC DUP2 DUP6 PUSH2 0x101F JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1102 SWAP1 DUP4 ADD DUP5 PUSH2 0x101F JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xFAA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFE5 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1133 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xFE5 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1145 DUP2 DUP6 PUSH2 0xFE5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xFAA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x101F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1252 JUMPI PUSH2 0x1252 PUSH2 0x130D JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x126F JUMPI PUSH2 0x126F PUSH2 0x12F7 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1288 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x12A9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x12D5 JUMPI PUSH2 0x12D5 PUSH2 0x130D JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x12F0 JUMPI PUSH2 0x12F0 PUSH2 0x12F7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1338 JUMPI PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1349 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1379 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1391 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x13AB JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x13BA PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x12AF JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x13DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0xFC DUP13 0xA9 SSTORE 0xB7 0xC JUMPDEST COINBASE 0xAC EXTCODESIZE 0x2D 0xA6 0xD3 REVERT OR SSTORE SWAP11 0xEA 0xEE 0xBF SLOAD MLOAD 0x2E SWAP4 DUP8 PUSH19 0x394AC6AA8B64736F6C63430008040033000000 ",
							"sourceMap": "555:14720:1:-:0;;;1092:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1134:13;1142:4;1134:7;:13::i;:::-;1092:62;555:14720;;7936:86;8002:13;;;;:4;;:13;;;;;:::i;:::-;;7936:86;:::o;555:14720::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;555:14720:1;;;-1:-1:-1;555:14720:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:1137:9;94:6;125:2;168;156:9;147:7;143:23;139:32;136:2;;;189:6;181;174:22;136:2;221:16;;-1:-1:-1;;;;;286:14:9;;;283:2;;;318:6;310;303:22;283:2;361:6;350:9;346:22;336:32;;406:7;399:4;395:2;391:13;387:27;377:2;;433:6;425;418:22;377:2;467;461:9;489:2;485;482:10;479:2;;;495:18;;:::i;:::-;570:2;564:9;538:2;624:13;;-1:-1:-1;;620:22:9;;;644:2;616:31;612:40;600:53;;;668:18;;;688:22;;;665:46;662:2;;;714:18;;:::i;:::-;754:10;750:2;743:22;789:2;781:6;774:18;829:7;824:2;819;815;811:11;807:20;804:33;801:2;;;855:6;847;840:22;801:2;882:6;873:15;;897:129;911:2;908:1;905:9;897:129;;;999:10;;;995:19;;989:26;968:14;;;964:23;;957:59;922:10;;;;897:129;;;1044:2;1041:1;1038:9;1035:2;;;1103:6;1098:2;1093;1085:6;1081:15;1077:24;1070:40;1035:2;1139:6;105:1046;-1:-1:-1;;;;;;;;105:1046:9:o;1156:380::-;1235:1;1231:12;;;;1278;;;1299:2;;1353:4;1345:6;1341:17;1331:27;;1299:2;1406;1398:6;1395:14;1375:18;1372:38;1369:2;;;1452:10;1447:3;1443:20;1440:1;1433:31;1487:4;1484:1;1477:15;1515:4;1512:1;1505:15;1369:2;;1211:325;;;:::o;1541:127::-;1602:10;1597:3;1593:20;1590:1;1583:31;1633:4;1630:1;1623:15;1657:4;1654:1;1647:15;1573:95;555:14720:1;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16450:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:9"
															},
															"nodeType": "YulIf",
															"src": "111:2:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:9",
														"type": ""
													}
												],
												"src": "14:173:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "256:691:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "305:24:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "314:5:9"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "321:5:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "307:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "307:20:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "307:20:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "284:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "292:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "280:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "280:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "299:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "276:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "276:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "269:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "269:35:9"
															},
															"nodeType": "YulIf",
															"src": "266:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "338:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "361:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "348:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "348:20:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "342:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "377:14:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "387:4:9",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "381:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "400:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "450:2:9"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "410:39:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "410:43:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "404:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "462:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "482:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "476:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "476:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "466:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "514:6:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "522:2:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "494:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "494:31:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "534:17:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "545:6:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "538:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "567:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "575:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "560:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "560:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "560:18:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "587:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "598:6:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "606:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "594:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "594:15:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "587:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "618:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "641:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "629:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "629:15:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "622:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "698:24:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "707:5:9"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "714:5:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "700:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "700:20:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "700:20:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "667:6:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "679:1:9",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "682:2:9"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "675:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "675:10:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "663:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "663:23:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "688:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "659:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "659:32:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "693:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "656:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "656:41:9"
															},
															"nodeType": "YulIf",
															"src": "653:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "731:14:9",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "740:5:9"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "735:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "799:118:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "820:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "838:3:9"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "825:12:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "825:17:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "813:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "813:30:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "813:30:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "856:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "867:3:9"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "872:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "863:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "863:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "856:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "888:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "899:3:9"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "904:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "895:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "895:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "888:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "765:1:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "768:2:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "762:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:9:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "772:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "774:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "783:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "786:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "779:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "779:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "774:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "758:3:9",
																"statements": []
															},
															"src": "754:163:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "926:15:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "935:6:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "926:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "230:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "238:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "246:5:9",
														"type": ""
													}
												],
												"src": "192:755:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1004:523:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1053:24:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1062:5:9"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1069:5:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1055:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1055:20:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1055:20:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1032:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1040:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1028:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1028:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1047:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1024:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1024:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1017:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1017:35:9"
															},
															"nodeType": "YulIf",
															"src": "1014:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1086:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1109:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1096:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1096:20:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1090:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1157:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1131:2:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1135:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1128:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1128:26:9"
															},
															"nodeType": "YulIf",
															"src": "1125:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1186:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1206:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1200:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1200:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1190:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1238:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1258:2:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1262:4:9",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1254:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1254:13:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1273:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1269:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1269:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1250:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1250:27:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1279:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1246:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1246:38:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1218:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1218:67:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1218:67:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1301:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1309:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1294:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1294:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1294:18:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1360:24:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1369:5:9"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1376:5:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1362:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1362:20:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1362:20:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1335:6:9"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1343:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1331:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1331:15:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1348:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1327:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1327:26:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1355:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1324:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1324:35:9"
															},
															"nodeType": "YulIf",
															"src": "1321:2:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1410:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1418:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1406:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1406:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1429:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1437:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1425:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1425:17:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1444:2:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1393:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1393:54:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1393:54:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1471:6:9"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1479:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1467:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1467:15:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1484:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1463:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1463:26:9"
																	},
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1491:5:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1456:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1456:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1456:41:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1506:15:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1515:6:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1506:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "978:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "986:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "994:5:9",
														"type": ""
													}
												],
												"src": "952:575:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1619:183:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1665:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1674:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1682:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1667:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1667:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1667:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1640:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1649:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1636:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1661:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1632:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1632:32:9"
															},
															"nodeType": "YulIf",
															"src": "1629:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1700:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1729:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1710:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1710:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1700:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1748:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1781:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1792:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1777:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1777:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1758:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1758:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1748:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1577:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1588:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1600:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1608:6:9",
														"type": ""
													}
												],
												"src": "1532:270:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2004:786:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2051:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2060:6:9"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2068:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2053:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2053:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2053:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2025:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2034:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2021:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2021:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2046:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2017:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2017:33:9"
															},
															"nodeType": "YulIf",
															"src": "2014:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2086:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2115:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2096:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2096:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2086:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2134:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2167:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2178:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2163:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2163:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2144:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2144:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2134:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2191:46:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2222:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2233:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2218:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2218:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2205:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2205:32:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2195:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2246:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2256:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2250:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2301:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2310:6:9"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2318:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2303:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2303:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2303:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2289:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2297:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2286:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:14:9"
															},
															"nodeType": "YulIf",
															"src": "2283:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2336:71:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:9"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2390:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:22:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2399:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2346:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2346:61:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2336:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2416:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2449:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2460:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2445:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2445:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2432:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2432:32:9"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "2420:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2493:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2502:6:9"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2510:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2495:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2495:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2495:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2479:8:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2489:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2476:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2476:16:9"
															},
															"nodeType": "YulIf",
															"src": "2473:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2528:73:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2571:9:9"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "2582:8:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2567:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2567:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2593:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2538:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2538:63:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2528:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2610:49:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2643:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2654:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2626:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2626:33:9"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "2614:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2688:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2697:6:9"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2705:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2690:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2690:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2690:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "2674:8:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2684:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2671:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2671:16:9"
															},
															"nodeType": "YulIf",
															"src": "2668:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2723:61:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2754:9:9"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "2765:8:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2750:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2750:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2776:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2733:16:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2733:51:9"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2723:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1938:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1949:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1961:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1969:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1977:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1985:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1993:6:9",
														"type": ""
													}
												],
												"src": "1807:983:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2942:479:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2989:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2998:6:9"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3006:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2991:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2991:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2991:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2963:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2972:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2959:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2984:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2955:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2955:33:9"
															},
															"nodeType": "YulIf",
															"src": "2952:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3024:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3053:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3034:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3034:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3024:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3072:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3116:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3101:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3082:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3072:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3129:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3156:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3167:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3152:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3152:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3139:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3139:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3129:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3180:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3207:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3218:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3203:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3203:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3190:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3190:32:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3180:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3231:47:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3262:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3273:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3258:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3258:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3245:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3245:33:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3235:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3321:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3330:6:9"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3338:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3323:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3323:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3323:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3293:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3301:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3290:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3290:30:9"
															},
															"nodeType": "YulIf",
															"src": "3287:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3356:59:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3387:9:9"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3398:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3383:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3383:22:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3407:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3366:16:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3366:49:9"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3356:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2876:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2887:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2899:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2907:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2915:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2923:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2931:6:9",
														"type": ""
													}
												],
												"src": "2795:626:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3510:283:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3556:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3565:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3573:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3558:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3558:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3558:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3531:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3540:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3527:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3527:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3552:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3523:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3523:32:9"
															},
															"nodeType": "YulIf",
															"src": "3520:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3591:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3620:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3601:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3601:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3591:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3639:45:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3669:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3680:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3665:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3665:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3652:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3652:32:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3643:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3737:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "3746:6:9"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "3754:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3739:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3739:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3739:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3706:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3727:5:9"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3720:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3720:13:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3713:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3713:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3703:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3703:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3696:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3696:40:9"
															},
															"nodeType": "YulIf",
															"src": "3693:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3772:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3782:5:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3772:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3468:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3479:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3491:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3499:6:9",
														"type": ""
													}
												],
												"src": "3426:367:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3885:177:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3931:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3940:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3948:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3933:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3933:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3933:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3906:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3915:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3902:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3902:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3927:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:32:9"
															},
															"nodeType": "YulIf",
															"src": "3895:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3966:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3995:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3976:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3976:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3966:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4014:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4041:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4052:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4037:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4037:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4024:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4024:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4014:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3843:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3854:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3866:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3874:6:9",
														"type": ""
													}
												],
												"src": "3798:264:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4204:1137:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4250:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4259:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4267:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4252:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4252:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4252:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4225:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4234:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4221:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4221:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4246:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4217:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4217:32:9"
															},
															"nodeType": "YulIf",
															"src": "4214:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4285:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4312:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4299:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4299:23:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4289:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4331:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4341:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4335:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4386:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4395:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4403:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4388:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4388:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4388:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4374:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4382:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4371:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4371:14:9"
															},
															"nodeType": "YulIf",
															"src": "4368:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4421:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4435:9:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4446:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4431:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4431:22:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4425:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4501:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4510:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4518:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4503:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4503:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4503:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4480:2:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4484:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4476:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4476:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4491:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4472:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4472:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4465:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4465:35:9"
															},
															"nodeType": "YulIf",
															"src": "4462:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4536:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4559:2:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4546:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4546:16:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "4540:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4571:14:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4581:4:9",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4575:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4594:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4644:2:9"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4604:39:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4604:43:9"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "4598:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4656:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4676:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4670:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4670:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4660:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4708:6:9"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "4716:2:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "4688:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4688:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4688:31:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4728:17:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4739:6:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4732:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4761:6:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4769:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4754:18:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4781:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4792:6:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4800:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4788:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4788:15:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4781:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4812:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4827:2:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4831:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4823:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4823:11:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "4816:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4888:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4897:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4905:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4890:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4890:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4890:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4857:2:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4865:1:9",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "4868:2:9"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4861:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4861:10:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4853:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4853:19:9"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4874:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4849:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4849:28:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4879:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4846:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4846:41:9"
															},
															"nodeType": "YulIf",
															"src": "4843:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4923:15:9",
															"value": {
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "4932:6:9"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4927:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4992:124:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5013:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5037:3:9"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "5018:18:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5018:23:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5006:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5006:36:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5006:36:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5055:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5066:3:9"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5071:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5062:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5062:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5055:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5087:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5098:3:9"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5103:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5094:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5094:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5087:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4958:1:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4961:2:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4955:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4955:9:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4965:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4967:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4976:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4979:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4972:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4972:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4967:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4951:3:9",
																"statements": []
															},
															"src": "4947:169:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5125:16:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5135:6:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5125:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5150:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5183:9:9"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5194:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5179:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5179:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5166:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5166:32:9"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5154:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5227:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "5236:6:9"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "5244:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5229:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5229:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5229:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5213:8:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5223:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5210:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5210:16:9"
															},
															"nodeType": "YulIf",
															"src": "5207:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5262:73:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5305:9:9"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "5316:8:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5301:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5301:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5327:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5272:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5272:63:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5262:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4162:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4173:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4185:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4193:6:9",
														"type": ""
													}
												],
												"src": "4067:1274:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5415:186:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5461:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5470:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5478:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5463:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5463:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5463:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5436:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5445:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5432:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5432:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5457:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5428:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5428:32:9"
															},
															"nodeType": "YulIf",
															"src": "5425:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5496:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5522:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5509:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5509:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5500:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5565:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "5541:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5541:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5541:30:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5580:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5590:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5580:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5381:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5392:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5404:6:9",
														"type": ""
													}
												],
												"src": "5346:255:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5686:179:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5732:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5741:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5749:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5734:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5734:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5734:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5707:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5716:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5703:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5703:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5728:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5699:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5699:32:9"
															},
															"nodeType": "YulIf",
															"src": "5696:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5767:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5786:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5780:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5780:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5771:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5829:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "5805:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5805:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5805:30:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5844:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5854:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5844:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5652:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5663:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5675:6:9",
														"type": ""
													}
												],
												"src": "5606:259:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5940:120:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5986:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5995:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "6003:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5988:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5988:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5988:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5961:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5970:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5957:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5957:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5982:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5953:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5953:32:9"
															},
															"nodeType": "YulIf",
															"src": "5950:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6021:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6044:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6031:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6031:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6021:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5906:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5917:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5929:6:9",
														"type": ""
													}
												],
												"src": "5870:190:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6126:376:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6136:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6156:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6150:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6150:12:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6140:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6178:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6183:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6171:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6171:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6171:19:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6199:14:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6209:4:9",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6203:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6222:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6233:3:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6238:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6229:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6229:12:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6222:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6250:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6268:5:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6275:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6264:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6264:14:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6254:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6287:12:9",
															"value": {
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "6296:3:9"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6291:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6357:120:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6378:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6389:6:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6383:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6383:13:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6371:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6371:26:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6371:26:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6410:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6421:3:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6426:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6417:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6417:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6410:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6442:25:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6456:6:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6464:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6452:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6452:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6442:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6319:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6322:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6316:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6316:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6330:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6332:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6341:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6344:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6337:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6337:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6332:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6312:3:9",
																"statements": []
															},
															"src": "6308:169:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6486:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6493:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6486:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6103:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6110:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6118:3:9",
														"type": ""
													}
												],
												"src": "6065:437:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6556:426:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6566:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6586:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6580:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6580:12:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6570:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6608:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6613:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6601:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6601:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6601:19:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6629:12:9",
															"value": {
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "6638:3:9"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6633:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6702:110:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6716:14:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6726:4:9",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "6720:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "6758:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6763:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6754:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6754:11:9"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "6767:2:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6750:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6750:20:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "6786:5:9"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "6793:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "6782:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6782:13:9"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "6797:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6778:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6778:22:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6772:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6772:29:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6743:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6743:59:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6743:59:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6661:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6664:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6658:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6658:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6672:21:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6674:17:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6683:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6686:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6679:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6679:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6674:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6654:3:9",
																"statements": []
															},
															"src": "6650:162:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6846:64:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "6875:3:9"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "6880:6:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6871:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6871:16:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6889:4:9",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6867:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6867:27:9"
																				},
																				{
																					"name": "end",
																					"nodeType": "YulIdentifier",
																					"src": "6896:3:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6860:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6860:40:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6860:40:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6827:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6830:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6824:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6824:13:9"
															},
															"nodeType": "YulIf",
															"src": "6821:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6919:57:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6934:3:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "6947:6:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6955:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6943:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6943:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6964:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6960:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6960:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6939:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6939:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6930:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6930:39:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6971:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6926:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6926:50:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6919:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6533:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6540:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6548:3:9",
														"type": ""
													}
												],
												"src": "6507:475:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7318:495:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7328:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7346:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7351:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7342:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7342:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7355:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7338:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7338:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7332:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7373:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7388:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7396:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7384:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7384:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7366:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7366:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7366:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7420:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7431:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7416:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7416:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7440:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7448:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7436:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7436:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7409:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7409:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7409:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7472:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7483:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7468:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7468:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7488:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7461:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7461:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7461:31:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7501:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7544:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7556:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7567:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7552:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7552:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7515:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7515:57:9"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "7505:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7592:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7603:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7588:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7588:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "7612:6:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7620:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7608:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7608:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7581:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7581:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7581:50:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7640:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7683:6:9"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "7691:6:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7654:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7654:44:9"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "7644:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7718:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7729:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7714:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7714:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "7739:6:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7747:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7735:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7735:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7707:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7707:51:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7767:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "7792:6:9"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "7800:6:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7775:16:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7775:32:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7767:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7255:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7266:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7274:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7282:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7290:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7298:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7309:4:9",
														"type": ""
													}
												],
												"src": "6987:826:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8049:329:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8059:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8077:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8082:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8073:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8073:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8086:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8069:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8069:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8063:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8104:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8119:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8127:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8115:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8115:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8097:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8097:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8097:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8151:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8162:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8147:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8147:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8171:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8179:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8167:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8167:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8140:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8140:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8140:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8203:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8214:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8199:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8199:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8219:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8192:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8192:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8192:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8246:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8257:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8242:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8242:18:9"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8262:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8235:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8235:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8235:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8289:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8300:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8285:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8285:19:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8306:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8278:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8278:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8278:32:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8319:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "8344:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8356:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8367:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8352:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8352:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "8327:16:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8327:45:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8319:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7986:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7997:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8005:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8013:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8021:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8029:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8040:4:9",
														"type": ""
													}
												],
												"src": "7818:560:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8534:110:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8551:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8562:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8544:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8544:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8544:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8574:64:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8611:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8623:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8634:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8619:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8619:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8582:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8582:56:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8574:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8503:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8514:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8525:4:9",
														"type": ""
													}
												],
												"src": "8383:261:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8878:236:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8895:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8906:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8888:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8888:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8888:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8918:70:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8961:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8973:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8984:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8969:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8969:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8932:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8932:56:9"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "8922:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9008:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9019:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9004:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9004:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "9028:6:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9036:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9024:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9024:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8997:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8997:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8997:50:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9056:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9093:6:9"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "9101:6:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "9064:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9064:44:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9056:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8839:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8850:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8858:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8869:4:9",
														"type": ""
													}
												],
												"src": "8649:465:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9214:92:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9224:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9236:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9247:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9232:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9232:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9224:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9266:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "9291:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9284:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9284:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9277:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9277:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9259:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9259:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9259:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9183:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9194:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9205:4:9",
														"type": ""
													}
												],
												"src": "9119:187:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9432:98:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9449:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9460:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9442:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9442:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9442:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9472:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9497:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9509:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9520:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9505:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9505:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "9480:16:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9480:44:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9472:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9401:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9412:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9423:4:9",
														"type": ""
													}
												],
												"src": "9311:219:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9709:242:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9726:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9737:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9719:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9719:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9719:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9760:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9771:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9756:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9756:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9776:2:9",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9749:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9749:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9749:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9799:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9810:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9795:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9795:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9815:34:9",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9788:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9788:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9788:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9870:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9881:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9866:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9866:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9886:22:9",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9859:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9859:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9859:50:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9918:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9930:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9941:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9926:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9926:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9918:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9686:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9700:4:9",
														"type": ""
													}
												],
												"src": "9535:416:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10130:230:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10147:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10158:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10140:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10140:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10140:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10181:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10192:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10177:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10177:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10197:2:9",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10170:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10170:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10170:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10220:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10231:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10216:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10216:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10236:34:9",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10209:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10209:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10209:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10291:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10302:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10287:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10287:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10307:10:9",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10280:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10280:38:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10280:38:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10327:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10339:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10350:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10335:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10335:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10327:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10107:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10121:4:9",
														"type": ""
													}
												],
												"src": "9956:404:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10539:233:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10556:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10567:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10549:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10549:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10549:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10590:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10601:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10586:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10586:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10606:2:9",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10579:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10579:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10579:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10629:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10640:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10625:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10625:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10645:34:9",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10618:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10618:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10618:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10700:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10711:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10696:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10696:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10716:13:9",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10689:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10689:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10689:41:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10739:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10751:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10762:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10747:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10747:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10739:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10516:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10530:4:9",
														"type": ""
													}
												],
												"src": "10365:407:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10951:231:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10968:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10979:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10961:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10961:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10961:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11002:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11013:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10998:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10998:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11018:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10991:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10991:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10991:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11041:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11052:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11037:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11037:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11057:34:9",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11030:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11030:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11030:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11112:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11123:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11108:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11108:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11128:11:9",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11101:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11101:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11101:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11149:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11161:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11172:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11157:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11157:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11149:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10928:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10942:4:9",
														"type": ""
													}
												],
												"src": "10777:405:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11361:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11378:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11389:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11371:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11371:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11371:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11412:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11423:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11408:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11408:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11428:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11401:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11401:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11401:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11451:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11462:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11447:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11447:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11467:34:9",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11440:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11440:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11440:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11522:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11533:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11518:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11518:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11538:7:9",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11511:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11511:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11511:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11555:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11567:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11578:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11563:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11563:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11555:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11338:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11352:4:9",
														"type": ""
													}
												],
												"src": "11187:401:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11767:240:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11784:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11795:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11777:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11777:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11777:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11818:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11829:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11814:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11814:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11834:2:9",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11807:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11807:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11807:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11857:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11868:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11853:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11853:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11873:34:9",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11846:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11846:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11846:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11928:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11939:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11924:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11924:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11944:20:9",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11917:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11917:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11917:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11974:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11986:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11997:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11982:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11982:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11974:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11744:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11758:4:9",
														"type": ""
													}
												],
												"src": "11593:414:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12186:232:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12203:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12214:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12196:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12196:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12196:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12237:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12248:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12233:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12233:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12253:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12226:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12226:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12226:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12276:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12287:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12272:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12272:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12292:34:9",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12265:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12265:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12265:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12347:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12358:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12343:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12343:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12363:12:9",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12336:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12336:40:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12336:40:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12385:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12397:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12408:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12393:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12393:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12385:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12163:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12177:4:9",
														"type": ""
													}
												],
												"src": "12012:406:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12597:231:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12614:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12625:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12607:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12607:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12607:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12648:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12659:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12644:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12644:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12664:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12637:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12637:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12637:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12687:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12698:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12683:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12683:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12703:34:9",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12676:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12676:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12676:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12758:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12769:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12754:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12754:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12774:11:9",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12747:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12747:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12747:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12795:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12807:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12818:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12803:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12803:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12795:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12574:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12588:4:9",
														"type": ""
													}
												],
												"src": "12423:405:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13007:231:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13024:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13035:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13017:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13017:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13017:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13058:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13069:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13054:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13054:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13074:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13047:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13047:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13047:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13097:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13108:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13093:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13093:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13113:34:9",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13086:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13086:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13086:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13168:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13179:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13164:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13164:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13184:11:9",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13157:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13157:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13157:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13205:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13217:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13228:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13213:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13213:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13205:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12984:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12998:4:9",
														"type": ""
													}
												],
												"src": "12833:405:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13417:230:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13434:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13445:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13427:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13427:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13427:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13468:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13479:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13464:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13464:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13484:2:9",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13457:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13457:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13457:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13507:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13518:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13503:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13503:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13523:34:9",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13496:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13496:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13496:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13578:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13589:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13574:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13574:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13594:10:9",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13567:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13567:38:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13567:38:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13614:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13626:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13637:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13622:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13622:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13614:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13394:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13408:4:9",
														"type": ""
													}
												],
												"src": "13243:404:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13753:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13763:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13775:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13786:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13771:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13771:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13763:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13805:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13816:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13798:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13798:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13798:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13722:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13733:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13744:4:9",
														"type": ""
													}
												],
												"src": "13652:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13963:119:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13973:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13985:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13996:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13981:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13981:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13973:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14015:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14026:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14008:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14008:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14008:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14053:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14064:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14049:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14049:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14069:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14042:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14042:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14042:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13924:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13935:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13943:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13954:4:9",
														"type": ""
													}
												],
												"src": "13834:248:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14156:114:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14200:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "14202:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14202:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14202:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14172:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14180:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14169:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14169:30:9"
															},
															"nodeType": "YulIf",
															"src": "14166:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14231:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14247:1:9",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14250:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14243:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14243:14:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14259:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14239:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14239:25:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "14231:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14136:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "14147:4:9",
														"type": ""
													}
												],
												"src": "14087:183:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14323:80:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14350:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14352:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14352:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14352:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14339:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "14346:1:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14342:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14342:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14336:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14336:13:9"
															},
															"nodeType": "YulIf",
															"src": "14333:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14381:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14392:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14395:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14388:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14388:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "14381:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14306:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14309:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "14315:3:9",
														"type": ""
													}
												],
												"src": "14275:128:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14463:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14473:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14487:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14490:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "14483:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14483:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14473:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14504:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14534:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14540:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14530:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14530:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "14508:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14581:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14583:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "14597:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14605:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "14593:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14593:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14583:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "14561:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14554:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14554:26:9"
															},
															"nodeType": "YulIf",
															"src": "14551:2:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14671:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14692:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14699:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14704:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "14695:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14695:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14685:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14685:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14685:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14736:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14739:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14729:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14729:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14729:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14764:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14767:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14757:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14757:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14757:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "14627:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14650:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14658:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "14647:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14647:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14624:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14624:38:9"
															},
															"nodeType": "YulIf",
															"src": "14621:2:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "14443:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14452:6:9",
														"type": ""
													}
												],
												"src": "14408:380:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14840:202:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14850:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "14872:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "14888:4:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14894:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14884:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14884:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14903:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "14899:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14899:7:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14880:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14880:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14868:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14868:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "14854:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14983:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "14985:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14985:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14985:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "14926:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14938:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14923:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14923:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "14962:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14974:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "14959:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14959:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "14920:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14920:62:9"
															},
															"nodeType": "YulIf",
															"src": "14917:2:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15021:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "15025:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15014:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15014:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15014:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14822:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "14830:4:9",
														"type": ""
													}
												],
												"src": "14793:249:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15094:88:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15125:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15127:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15127:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15127:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15110:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15121:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "15117:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15117:6:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15107:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15107:17:9"
															},
															"nodeType": "YulIf",
															"src": "15104:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15156:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15167:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15174:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15163:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15163:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15156:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15076:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15086:3:9",
														"type": ""
													}
												],
												"src": "15047:135:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15219:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15236:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15243:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15248:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15239:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15239:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15229:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15229:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15229:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15276:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15279:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15269:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15269:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15269:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15300:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15303:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15293:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15293:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15293:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "15187:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15351:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15368:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15375:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15380:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15371:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15371:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15361:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15361:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15361:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15408:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15411:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15401:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15401:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15401:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15432:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15435:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15425:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15425:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15425:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "15319:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15494:142:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15539:91:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sig",
																					"nodeType": "YulIdentifier",
																					"src": "15568:3:9"
																				},
																				{
																					"name": "sig",
																					"nodeType": "YulIdentifier",
																					"src": "15573:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15578:1:9",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "15553:14:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15553:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15553:27:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "15593:27:9",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15604:3:9",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"name": "sig",
																							"nodeType": "YulIdentifier",
																							"src": "15615:3:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "15609:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15609:10:9"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "15600:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15600:20:9"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "15593:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "15510:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15510:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15528:1:9",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15507:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15507:23:9"
															},
															"nodeType": "YulIf",
															"src": "15504:2:9"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "15486:3:9",
														"type": ""
													}
												],
												"src": "15451:185:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15688:624:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15728:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "15730:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "15704:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15704:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15722:4:9",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15701:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15701:26:9"
															},
															"nodeType": "YulIf",
															"src": "15698:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15746:21:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15764:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15758:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15758:9:9"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "15750:4:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15776:16:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15790:1:9",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "15786:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15786:6:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "15780:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15816:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15822:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "15829:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15829:16:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15847:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15825:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15825:25:9"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "15801:14:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15801:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15801:50:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15860:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15880:4:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15874:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15874:11:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "15864:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15894:26:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "15904:14:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15904:16:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "15898:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15929:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15939:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "15933:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16015:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "16017:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "15975:6:9"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "15983:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15972:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15972:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15995:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16003:4:9",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15991:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15991:17:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "16010:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15988:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15988:25:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "15969:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15969:45:9"
															},
															"nodeType": "YulIf",
															"src": "15966:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16033:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16048:4:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "16054:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16044:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16044:17:9"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "16037:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16070:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "16090:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16084:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16084:10:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16074:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16121:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "16123:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16109:6:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "16117:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16106:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16106:14:9"
															},
															"nodeType": "YulIf",
															"src": "16103:2:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16212:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "16214:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "16153:3:9"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "16158:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16149:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16149:16:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16167:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16145:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16145:27:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "16182:4:9"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "16188:14:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16188:16:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16178:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16178:27:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16207:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16174:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16174:36:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16142:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16142:69:9"
															},
															"nodeType": "YulIf",
															"src": "16139:2:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16250:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16264:6:9"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "16272:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16260:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16260:19:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16281:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16256:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16256:30:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "16230:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16230:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16230:57:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16296:10:9",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "16303:3:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16296:3:9"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15680:3:9",
														"type": ""
													}
												],
												"src": "15641:671:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16361:87:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16426:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16435:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16438:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16428:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16428:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16428:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16384:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16395:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16406:3:9",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16411:10:9",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "16402:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16402:20:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "16391:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16391:32:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16381:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16381:43:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16374:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16374:51:9"
															},
															"nodeType": "YulIf",
															"src": "16371:2:9"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16350:5:9",
														"type": ""
													}
												],
												"src": "16317:131:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_address_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), array)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(value4, value4) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(value4, value4) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value1, value1) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_address_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let src := add(_2, _4)\n        if gt(add(add(_2, shl(5, _3)), _4), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _3) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n            src := add(src, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), end)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_bytes(value4, tail_2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_bytes(value4, add(headStart, 160))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(sig, sig, 4)\n            sig := shr(224, mload(sig))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xE9A JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xF8E JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xFCD JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x114E JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xD57 JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xEC3 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0x502 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xD25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xDFD JUMP JUMPDEST PUSH2 0x511 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x254 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x26F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x284 SWAP1 PUSH2 0x1274 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0x1274 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x325 JUMPI POP PUSH2 0x325 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x38C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x598 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x42F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x458 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4FA JUMPI PUSH2 0x4BF DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x48A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4B2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4DF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4F3 DUP2 PUSH2 0x12DC JUMP JUMPDEST SWAP1 POP PUSH2 0x45E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x50D CALLER DUP4 DUP4 PUSH2 0x791 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x52D JUMPI POP PUSH2 0x52D DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x58B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x872 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x620 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x723 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x64F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x67B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x6CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x11EE JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x708 SWAP1 DUP5 SWAP1 PUSH2 0x125C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x71C SWAP1 PUSH2 0x12DC JUMP JUMPDEST SWAP1 POP PUSH2 0x624 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x773 SWAP3 SWAP2 SWAP1 PUSH2 0x1120 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x789 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x998 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x805 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x898 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST CALLER PUSH2 0x8B1 DUP2 DUP8 DUP8 PUSH2 0x8A8 DUP9 PUSH2 0xB03 JUMP JUMPDEST PUSH2 0x399 DUP9 PUSH2 0xB03 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x8F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x11EE JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x92F SWAP1 DUP5 SWAP1 PUSH2 0x125C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x98F DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xB5C JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x789 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x9DC SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x106A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA26 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xA23 SWAP2 DUP2 ADD SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAD3 JUMPI PUSH2 0xA32 PUSH2 0x1323 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xA6C JUMPI POP PUSH2 0xA47 PUSH2 0x133B JUMP JUMPDEST DUP1 PUSH2 0xA52 JUMPI POP PUSH2 0xA6E JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x114E JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x98F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB4B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x789 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xBA0 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xBEA JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xBE7 SWAP2 DUP2 ADD SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xBF6 JUMPI PUSH2 0xA32 PUSH2 0x1323 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x98F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1161 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC52 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xC5F DUP3 PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6C DUP3 DUP3 PUSH2 0x12AF JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0xC8B JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xCA9 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xC8D JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCC6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCE0 JUMPI PUSH2 0xCE0 PUSH2 0x130D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCF7 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x12AF JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xD0B JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD37 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xD40 DUP4 PUSH2 0xC26 JUMP JUMPDEST SWAP2 POP PUSH2 0xD4E PUSH1 0x20 DUP5 ADD PUSH2 0xC26 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD6E JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xD77 DUP7 PUSH2 0xC26 JUMP JUMPDEST SWAP5 POP PUSH2 0xD85 PUSH1 0x20 DUP8 ADD PUSH2 0xC26 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDA1 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0xDAD DUP10 DUP4 DUP11 ADD PUSH2 0xC42 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDC2 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0xDCE DUP10 DUP4 DUP11 ADD PUSH2 0xC42 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDE3 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0xDF0 DUP9 DUP3 DUP10 ADD PUSH2 0xCB6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xE14 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xE1D DUP7 PUSH2 0xC26 JUMP JUMPDEST SWAP5 POP PUSH2 0xE2B PUSH1 0x20 DUP8 ADD PUSH2 0xC26 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE54 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xDF0 DUP9 DUP3 DUP10 ADD PUSH2 0xCB6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE72 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xE7B DUP4 PUSH2 0xC26 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE8F JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEAC JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xEB5 DUP4 PUSH2 0xC26 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xED5 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEEC JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEFF JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xF0C DUP3 PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF19 DUP3 DUP3 PUSH2 0x12AF JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0xF38 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0xF61 JUMPI PUSH2 0xF4D DUP2 PUSH2 0xC26 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xF3C JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xF77 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0xF84 DUP6 DUP3 DUP7 ADD PUSH2 0xC42 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF9F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFAA DUP2 PUSH2 0x13C5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xFAA DUP2 PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFDE JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1014 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xFF8 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1044 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1028 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1055 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1096 SWAP1 DUP4 ADD DUP7 PUSH2 0xFE5 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x10A8 DUP2 DUP7 PUSH2 0xFE5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x10BC DUP2 DUP6 PUSH2 0x101F JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1102 SWAP1 DUP4 ADD DUP5 PUSH2 0x101F JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xFAA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFE5 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1133 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xFE5 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1145 DUP2 DUP6 PUSH2 0xFE5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xFAA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x101F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1252 JUMPI PUSH2 0x1252 PUSH2 0x130D JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x126F JUMPI PUSH2 0x126F PUSH2 0x12F7 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1288 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x12A9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x12D5 JUMPI PUSH2 0x12D5 PUSH2 0x130D JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x12F0 JUMPI PUSH2 0x12F0 PUSH2 0x12F7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1338 JUMPI PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1349 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1379 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1391 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x13AB JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x13BA PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x12AF JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x13DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0xFC DUP13 0xA9 SSTORE 0xB7 0xC JUMPDEST COINBASE 0xAC EXTCODESIZE 0x2D 0xA6 0xD3 REVERT OR SSTORE SWAP11 0xEA 0xEE 0xBF SLOAD MLOAD 0x2E SWAP4 DUP8 PUSH19 0x394AC6AA8B64736F6C63430008040033000000 ",
							"sourceMap": "555:14720:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2170:228;;;;;;:::i;:::-;;:::i;:::-;;;13798:25:9;;;13786:2;13771:18;2170:228:1;;;;;;;;1221:305;;;;;;:::i;:::-;;:::i;:::-;;;9284:14:9;;9277:22;9259:41;;9247:2;9232:18;1221:305:1;9214:92:9;1925:103:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4045:430::-;;;;;;:::i;:::-;;:::i;:::-;;2555:508;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3131:153::-;;;;;;:::i;:::-;;:::i;3351:166::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3473:27:1;;;3450:4;3473:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3351:166;3584:389;;;;;;:::i;:::-;;:::i;2170:228::-;2256:7;-1:-1:-1;;;;;2283:21:1;;2275:77;;;;-1:-1:-1;;;2275:77:1;;10567:2:9;2275:77:1;;;10549:21:9;10606:2;10586:18;;;10579:30;10645:34;10625:18;;;10618:62;-1:-1:-1;;;10696:18:9;;;10689:41;10747:19;;2275:77:1;;;;;;;;;-1:-1:-1;2369:9:1;:13;;;;;;;;;;;-1:-1:-1;;;;;2369:22:1;;;;;;;;;;;;2170:228::o;1221:305::-;1323:4;-1:-1:-1;;;;;;1358:41:1;;-1:-1:-1;;;1358:41:1;;:109;;-1:-1:-1;;;;;;;1415:52:1;;-1:-1:-1;;;1415:52:1;1358:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:7;;;1483:36:1;1339:180;1221:305;-1:-1:-1;;1221:305:1:o;1925:103::-;1985:13;2017:4;2010:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1925:103;;;:::o;4045:430::-;-1:-1:-1;;;;;4270:20:1;;719:10:6;4270:20:1;;:60;;-1:-1:-1;4294:36:1;4311:4;719:10:6;3351:166:1;:::i;4294:36::-;4249:157;;;;-1:-1:-1;;;4249:157:1;;11795:2:9;4249:157:1;;;11777:21:9;11834:2;11814:18;;;11807:30;11873:34;11853:18;;;11846:62;-1:-1:-1;;;11924:18:9;;;11917:48;11982:19;;4249:157:1;11767:240:9;4249:157:1;4416:52;4439:4;4445:2;4449:3;4454:7;4463:4;4416:22;:52::i;:::-;4045:430;;;;;:::o;2555:508::-;2706:16;2765:3;:10;2746:8;:15;:29;2738:83;;;;-1:-1:-1;;;2738:83:1;;13035:2:9;2738:83:1;;;13017:21:9;13074:2;13054:18;;;13047:30;13113:34;13093:18;;;13086:62;-1:-1:-1;;;13164:18:9;;;13157:39;13213:19;;2738:83:1;13007:231:9;2738:83:1;2832:30;2879:8;:15;2865:30;;;;;;-1:-1:-1;;;2865:30:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2865:30:1;;2832:63;;2911:9;2906:120;2930:8;:15;2926:1;:19;2906:120;;;2985:30;2995:8;3004:1;2995:11;;;;;;-1:-1:-1;;;2995:11:1;;;;;;;;;;;;;;;3008:3;3012:1;3008:6;;;;;;-1:-1:-1;;;3008:6:1;;;;;;;;;;;;;;;2985:9;:30::i;:::-;2966:13;2980:1;2966:16;;;;;;-1:-1:-1;;;2966:16:1;;;;;;;;;;;;;;;;;;:49;2947:3;;;:::i;:::-;;;2906:120;;;-1:-1:-1;3043:13:1;2555:508;-1:-1:-1;;;2555:508:1:o;3131:153::-;3225:52;719:10:6;3258:8:1;3268;3225:18;:52::i;:::-;3131:153;;:::o;3584:389::-;-1:-1:-1;;;;;3784:20:1;;719:10:6;3784:20:1;;:60;;-1:-1:-1;3808:36:1;3825:4;719:10:6;3351:166:1;:::i;3808:36::-;3763:148;;;;-1:-1:-1;;;3763:148:1;;10979:2:9;3763:148:1;;;10961:21:9;11018:2;10998:18;;;10991:30;11057:34;11037:18;;;11030:62;-1:-1:-1;;;11108:18:9;;;11101:39;11157:19;;3763:148:1;10951:231:9;3763:148:1;3921:45;3939:4;3945:2;3949;3953:6;3961:4;3921:17;:45::i;6068:1045::-;6288:7;:14;6274:3;:10;:28;6266:81;;;;-1:-1:-1;;;6266:81:1;;13445:2:9;6266:81:1;;;13427:21:9;13484:2;13464:18;;;13457:30;13523:34;13503:18;;;13496:62;-1:-1:-1;;;13574:18:9;;;13567:38;13622:19;;6266:81:1;13417:230:9;6266:81:1;-1:-1:-1;;;;;6365:16:1;;6357:66;;;;-1:-1:-1;;;6357:66:1;;;;;;;:::i;:::-;719:10:6;6434:16:1;6547:411;6571:3;:10;6567:1;:14;6547:411;;;6602:10;6615:3;6619:1;6615:6;;;;;;-1:-1:-1;;;6615:6:1;;;;;;;;;;;;;;;6602:19;;6635:14;6652:7;6660:1;6652:10;;;;;;-1:-1:-1;;;6652:10:1;;;;;;;;;;;;;;;;;;;;6677:19;6699:13;;;;;;;;;;-1:-1:-1;;;;;6699:19:1;;;;;;;;;;;;6652:10;;-1:-1:-1;6740:21:1;;;;6732:76;;;;-1:-1:-1;;;6732:76:1;;;;;;;:::i;:::-;6850:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6850:19:1;;;;;;;;;;6872:20;;;6850:42;;6920:17;;;;;;;:27;;6872:20;;6850:9;6920:27;;6872:20;;6920:27;:::i;:::-;;;;;;;;6547:411;;;6583:3;;;;:::i;:::-;;;6547:411;;;;7003:2;-1:-1:-1;;;;;6973:47:1;6997:4;-1:-1:-1;;;;;6973:47:1;6987:8;-1:-1:-1;;;;;6973:47:1;;7007:3;7012:7;6973:47;;;;;;;:::i;:::-;;;;;;;;7031:75;7067:8;7077:4;7083:2;7087:3;7092:7;7101:4;7031:35;:75::i;:::-;6068:1045;;;;;;:::o;12074:323::-;12224:8;-1:-1:-1;;;;;12215:17:1;:5;-1:-1:-1;;;;;12215:17:1;;;12207:71;;;;-1:-1:-1;;;12207:71:1;;12625:2:9;12207:71:1;;;12607:21:9;12664:2;12644:18;;;12637:30;12703:34;12683:18;;;12676:62;-1:-1:-1;;;12754:18:9;;;12747:39;12803:19;;12207:71:1;12597:231:9;12207:71:1;-1:-1:-1;;;;;12288:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12288:46:1;;;;;;;;;;12349:41;;9259::9;;;12349::1;;9232:18:9;12349:41:1;;;;;;;12074:323;;;:::o;4925:797::-;-1:-1:-1;;;;;5106:16:1;;5098:66;;;;-1:-1:-1;;;5098:66:1;;;;;;;:::i;:::-;719:10:6;5217:96:1;719:10:6;5248:4:1;5254:2;5258:21;5276:2;5258:17;:21::i;:::-;5281:25;5299:6;5281:17;:25::i;5217:96::-;5324:19;5346:13;;;;;;;;;;;-1:-1:-1;;;;;5346:19:1;;;;;;;;;;5383:21;;;;5375:76;;;;-1:-1:-1;;;5375:76:1;;;;;;;:::i;:::-;5485:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5485:19:1;;;;;;;;;;5507:20;;;5485:42;;5547:17;;;;;;;:27;;5507:20;;5485:9;5547:27;;5507:20;;5547:27;:::i;:::-;;;;-1:-1:-1;;5590:46:1;;;14008:25:9;;;14064:2;14049:18;;14042:34;;;-1:-1:-1;;;;;5590:46:1;;;;;;;;;;;;;;13981:18:9;5590:46:1;;;;;;;5647:68;5678:8;5688:4;5694:2;5698;5702:6;5710:4;5647:30;:68::i;:::-;4925:797;;;;;;;:::o;14282:792::-;-1:-1:-1;;;;;14514:13:1;;1087:20:5;1133:8;14510:558:1;;14549:79;;-1:-1:-1;;;14549:79:1;;-1:-1:-1;;;;;14549:43:1;;;;;:79;;14593:8;;14603:4;;14609:3;;14614:7;;14623:4;;14549:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14549:79:1;;;;;;;;-1:-1:-1;;14549:79:1;;;;;;;;;;;;:::i;:::-;;;14545:513;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;14934:6;14927:14;;-1:-1:-1;;;14927:14:1;;;;;;;;:::i;14545:513::-;;;14981:62;;-1:-1:-1;;;14981:62:1;;9737:2:9;14981:62:1;;;9719:21:9;9776:2;9756:18;;;9749:30;9815:34;9795:18;;;9788:62;-1:-1:-1;;;9866:18:9;;;9859:50;9926:19;;14981:62:1;9709:242:9;14545:513:1;-1:-1:-1;;;;;;14707:60:1;;-1:-1:-1;;;14707:60:1;14703:157;;14791:50;;-1:-1:-1;;;14791:50:1;;;;;;;:::i;15080:193::-;15199:16;;;15213:1;15199:16;;;;;;;;;15146;;15174:22;;15199:16;;;;;;;;;;;;-1:-1:-1;15199:16:1;15174:41;;15236:7;15225:5;15231:1;15225:8;;;;;;-1:-1:-1;;;15225:8:1;;;;;;;;;;;;;;;;;;:18;15261:5;15080:193;-1:-1:-1;;15080:193:1:o;13551:725::-;-1:-1:-1;;;;;13758:13:1;;1087:20:5;1133:8;13754:516:1;;13793:72;;-1:-1:-1;;;13793:72:1;;-1:-1:-1;;;;;13793:38:1;;;;;:72;;13832:8;;13842:4;;13848:2;;13852:6;;13860:4;;13793:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13793:72:1;;;;;;;;-1:-1:-1;;13793:72:1;;;;;;;;;;;;:::i;:::-;;;13789:471;;;;:::i;:::-;-1:-1:-1;;;;;;13914:55:1;;-1:-1:-1;;;13914:55:1;13910:152;;13993:50;;-1:-1:-1;;;13993:50:1;;;;;;;:::i;14:173:9:-;82:20;;-1:-1:-1;;;;;131:31:9;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:755::-;246:5;299:3;292:4;284:6;280:17;276:27;266:2;;321:5;314;307:20;266:2;361:6;348:20;387:4;410:43;450:2;410:43;:::i;:::-;482:2;476:9;494:31;522:2;514:6;494:31;:::i;:::-;560:18;;;594:15;;;;-1:-1:-1;629:15:9;;;679:1;675:10;;;663:23;;659:32;;656:41;-1:-1:-1;653:2:9;;;714:5;707;700:20;653:2;740:5;754:163;768:2;765:1;762:9;754:163;;;825:17;;813:30;;863:12;;;;895;;;;786:1;779:9;754:163;;;-1:-1:-1;935:6:9;;256:691;-1:-1:-1;;;;;;;256:691:9:o;952:575::-;994:5;1047:3;1040:4;1032:6;1028:17;1024:27;1014:2;;1069:5;1062;1055:20;1014:2;1109:6;1096:20;1135:18;1131:2;1128:26;1125:2;;;1157:18;;:::i;:::-;1206:2;1200:9;1218:67;1273:2;1254:13;;-1:-1:-1;;1250:27:9;1279:4;1246:38;1200:9;1218:67;:::i;:::-;1309:2;1301:6;1294:18;1355:3;1348:4;1343:2;1335:6;1331:15;1327:26;1324:35;1321:2;;;1376:5;1369;1362:20;1321:2;1444;1437:4;1429:6;1425:17;1418:4;1410:6;1406:17;1393:54;1467:15;;;1484:4;1463:26;1456:41;;;;1471:6;1004:523;-1:-1:-1;;1004:523:9:o;1532:270::-;1600:6;1608;1661:2;1649:9;1640:7;1636:23;1632:32;1629:2;;;1682:6;1674;1667:22;1629:2;1710:29;1729:9;1710:29;:::i;:::-;1700:39;;1758:38;1792:2;1781:9;1777:18;1758:38;:::i;:::-;1748:48;;1619:183;;;;;:::o;1807:983::-;1961:6;1969;1977;1985;1993;2046:3;2034:9;2025:7;2021:23;2017:33;2014:2;;;2068:6;2060;2053:22;2014:2;2096:29;2115:9;2096:29;:::i;:::-;2086:39;;2144:38;2178:2;2167:9;2163:18;2144:38;:::i;:::-;2134:48;;2233:2;2222:9;2218:18;2205:32;2256:18;2297:2;2289:6;2286:14;2283:2;;;2318:6;2310;2303:22;2283:2;2346:61;2399:7;2390:6;2379:9;2375:22;2346:61;:::i;:::-;2336:71;;2460:2;2449:9;2445:18;2432:32;2416:48;;2489:2;2479:8;2476:16;2473:2;;;2510:6;2502;2495:22;2473:2;2538:63;2593:7;2582:8;2571:9;2567:24;2538:63;:::i;:::-;2528:73;;2654:3;2643:9;2639:19;2626:33;2610:49;;2684:2;2674:8;2671:16;2668:2;;;2705:6;2697;2690:22;2668:2;;2733:51;2776:7;2765:8;2754:9;2750:24;2733:51;:::i;:::-;2723:61;;;2004:786;;;;;;;;:::o;2795:626::-;2899:6;2907;2915;2923;2931;2984:3;2972:9;2963:7;2959:23;2955:33;2952:2;;;3006:6;2998;2991:22;2952:2;3034:29;3053:9;3034:29;:::i;:::-;3024:39;;3082:38;3116:2;3105:9;3101:18;3082:38;:::i;:::-;3072:48;;3167:2;3156:9;3152:18;3139:32;3129:42;;3218:2;3207:9;3203:18;3190:32;3180:42;;3273:3;3262:9;3258:19;3245:33;3301:18;3293:6;3290:30;3287:2;;;3338:6;3330;3323:22;3287:2;3366:49;3407:7;3398:6;3387:9;3383:22;3366:49;:::i;3426:367::-;3491:6;3499;3552:2;3540:9;3531:7;3527:23;3523:32;3520:2;;;3573:6;3565;3558:22;3520:2;3601:29;3620:9;3601:29;:::i;:::-;3591:39;;3680:2;3669:9;3665:18;3652:32;3727:5;3720:13;3713:21;3706:5;3703:32;3693:2;;3754:6;3746;3739:22;3693:2;3782:5;3772:15;;;3510:283;;;;;:::o;3798:264::-;3866:6;3874;3927:2;3915:9;3906:7;3902:23;3898:32;3895:2;;;3948:6;3940;3933:22;3895:2;3976:29;3995:9;3976:29;:::i;:::-;3966:39;4052:2;4037:18;;;;4024:32;;-1:-1:-1;;;3885:177:9:o;4067:1274::-;4185:6;4193;4246:2;4234:9;4225:7;4221:23;4217:32;4214:2;;;4267:6;4259;4252:22;4214:2;4312:9;4299:23;4341:18;4382:2;4374:6;4371:14;4368:2;;;4403:6;4395;4388:22;4368:2;4446:6;4435:9;4431:22;4421:32;;4491:7;4484:4;4480:2;4476:13;4472:27;4462:2;;4518:6;4510;4503:22;4462:2;4559;4546:16;4581:4;4604:43;4644:2;4604:43;:::i;:::-;4676:2;4670:9;4688:31;4716:2;4708:6;4688:31;:::i;:::-;4754:18;;;4788:15;;;;-1:-1:-1;4823:11:9;;;4865:1;4861:10;;;4853:19;;4849:28;;4846:41;-1:-1:-1;4843:2:9;;;4905:6;4897;4890:22;4843:2;4932:6;4923:15;;4947:169;4961:2;4958:1;4955:9;4947:169;;;5018:23;5037:3;5018:23;:::i;:::-;5006:36;;4979:1;4972:9;;;;;5062:12;;;;5094;;4947:169;;;-1:-1:-1;5135:6:9;-1:-1:-1;;5179:18:9;;5166:32;;-1:-1:-1;;5210:16:9;;;5207:2;;;5244:6;5236;5229:22;5207:2;;5272:63;5327:7;5316:8;5305:9;5301:24;5272:63;:::i;:::-;5262:73;;;4204:1137;;;;;:::o;5346:255::-;5404:6;5457:2;5445:9;5436:7;5432:23;5428:32;5425:2;;;5478:6;5470;5463:22;5425:2;5522:9;5509:23;5541:30;5565:5;5541:30;:::i;:::-;5590:5;5415:186;-1:-1:-1;;;5415:186:9:o;5606:259::-;5675:6;5728:2;5716:9;5707:7;5703:23;5699:32;5696:2;;;5749:6;5741;5734:22;5696:2;5786:9;5780:16;5805:30;5829:5;5805:30;:::i;5870:190::-;5929:6;5982:2;5970:9;5961:7;5957:23;5953:32;5950:2;;;6003:6;5995;5988:22;5950:2;-1:-1:-1;6031:23:9;;5940:120;-1:-1:-1;5940:120:9:o;6065:437::-;6118:3;6156:5;6150:12;6183:6;6178:3;6171:19;6209:4;6238:2;6233:3;6229:12;6222:19;;6275:2;6268:5;6264:14;6296:3;6308:169;6322:6;6319:1;6316:13;6308:169;;;6383:13;;6371:26;;6417:12;;;;6452:15;;;;6344:1;6337:9;6308:169;;;-1:-1:-1;6493:3:9;;6126:376;-1:-1:-1;;;;;6126:376:9:o;6507:475::-;6548:3;6586:5;6580:12;6613:6;6608:3;6601:19;6638:3;6650:162;6664:6;6661:1;6658:13;6650:162;;;6726:4;6782:13;;;6778:22;;6772:29;6754:11;;;6750:20;;6743:59;6679:12;6650:162;;;6830:6;6827:1;6824:13;6821:2;;;6896:3;6889:4;6880:6;6875:3;6871:16;6867:27;6860:40;6821:2;-1:-1:-1;6964:2:9;6943:15;-1:-1:-1;;6939:29:9;6930:39;;;;6971:4;6926:50;;6556:426;-1:-1:-1;;6556:426:9:o;6987:826::-;-1:-1:-1;;;;;7384:15:9;;;7366:34;;7436:15;;7431:2;7416:18;;7409:43;7346:3;7483:2;7468:18;;7461:31;;;7309:4;;7515:57;;7552:19;;7544:6;7515:57;:::i;:::-;7620:9;7612:6;7608:22;7603:2;7592:9;7588:18;7581:50;7654:44;7691:6;7683;7654:44;:::i;:::-;7640:58;;7747:9;7739:6;7735:22;7729:3;7718:9;7714:19;7707:51;7775:32;7800:6;7792;7775:32;:::i;:::-;7767:40;7318:495;-1:-1:-1;;;;;;;;7318:495:9:o;7818:560::-;-1:-1:-1;;;;;8115:15:9;;;8097:34;;8167:15;;8162:2;8147:18;;8140:43;8214:2;8199:18;;8192:34;;;8257:2;8242:18;;8235:34;;;8077:3;8300;8285:19;;8278:32;;;8040:4;;8327:45;;8352:19;;8344:6;8327:45;:::i;:::-;8319:53;8049:329;-1:-1:-1;;;;;;;8049:329:9:o;8383:261::-;8562:2;8551:9;8544:21;8525:4;8582:56;8634:2;8623:9;8619:18;8611:6;8582:56;:::i;8649:465::-;8906:2;8895:9;8888:21;8869:4;8932:56;8984:2;8973:9;8969:18;8961:6;8932:56;:::i;:::-;9036:9;9028:6;9024:22;9019:2;9008:9;9004:18;8997:50;9064:44;9101:6;9093;9064:44;:::i;:::-;9056:52;8878:236;-1:-1:-1;;;;;8878:236:9:o;9311:219::-;9460:2;9449:9;9442:21;9423:4;9480:44;9520:2;9509:9;9505:18;9497:6;9480:44;:::i;9956:404::-;10158:2;10140:21;;;10197:2;10177:18;;;10170:30;10236:34;10231:2;10216:18;;10209:62;-1:-1:-1;;;10302:2:9;10287:18;;10280:38;10350:3;10335:19;;10130:230::o;11187:401::-;11389:2;11371:21;;;11428:2;11408:18;;;11401:30;11467:34;11462:2;11447:18;;11440:62;-1:-1:-1;;;11533:2:9;11518:18;;11511:35;11578:3;11563:19;;11361:227::o;12012:406::-;12214:2;12196:21;;;12253:2;12233:18;;;12226:30;12292:34;12287:2;12272:18;;12265:62;-1:-1:-1;;;12358:2:9;12343:18;;12336:40;12408:3;12393:19;;12186:232::o;14087:183::-;14147:4;14180:18;14172:6;14169:30;14166:2;;;14202:18;;:::i;:::-;-1:-1:-1;14247:1:9;14243:14;14259:4;14239:25;;14156:114::o;14275:128::-;14315:3;14346:1;14342:6;14339:1;14336:13;14333:2;;;14352:18;;:::i;:::-;-1:-1:-1;14388:9:9;;14323:80::o;14408:380::-;14487:1;14483:12;;;;14530;;;14551:2;;14605:4;14597:6;14593:17;14583:27;;14551:2;14658;14650:6;14647:14;14627:18;14624:38;14621:2;;;14704:10;14699:3;14695:20;14692:1;14685:31;14739:4;14736:1;14729:15;14767:4;14764:1;14757:15;14621:2;;14463:325;;;:::o;14793:249::-;14903:2;14884:13;;-1:-1:-1;;14880:27:9;14868:40;;14938:18;14923:34;;14959:22;;;14920:62;14917:2;;;14985:18;;:::i;:::-;15021:2;15014:22;-1:-1:-1;;14840:202:9:o;15047:135::-;15086:3;-1:-1:-1;;15107:17:9;;15104:2;;;15127:18;;:::i;:::-;-1:-1:-1;15174:1:9;15163:13;;15094:88::o;15187:127::-;15248:10;15243:3;15239:20;15236:1;15229:31;15279:4;15276:1;15269:15;15303:4;15300:1;15293:15;15319:127;15380:10;15375:3;15371:20;15368:1;15361:31;15411:4;15408:1;15401:15;15435:4;15432:1;15425:15;15451:185;15486:3;15528:1;15510:16;15507:23;15504:2;;;15578:1;15573:3;15568;15553:27;15609:10;15604:3;15600:20;15504:2;15494:142;:::o;15641:671::-;15680:3;15722:4;15704:16;15701:26;15698:2;;;15688:624;:::o;15698:2::-;15764;15758:9;-1:-1:-1;;15829:16:9;15825:25;;15822:1;15758:9;15801:50;15880:4;15874:11;15904:16;15939:18;16010:2;16003:4;15995:6;15991:17;15988:25;15983:2;15975:6;15972:14;15969:45;15966:2;;;16017:5;;;;;15688:624;:::o;15966:2::-;16054:6;16048:4;16044:17;16033:28;;16090:3;16084:10;16117:2;16109:6;16106:14;16103:2;;;16123:5;;;;;;15688:624;:::o;16103:2::-;16207;16188:16;16182:4;16178:27;16174:36;16167:4;16158:6;16153:3;16149:16;16145:27;16142:69;16139:2;;;16214:5;;;;;;15688:624;:::o;16139:2::-;16230:57;16281:4;16272:6;16264;16260:19;16256:30;16250:4;16230:57;:::i;:::-;-1:-1:-1;16303:3:9;;15688:624;-1:-1:-1;;;;;15688:624:9:o;16317:131::-;-1:-1:-1;;;;;;16391:32:9;;16381:43;;16371:2;;16438:1;16435;16428:12;16371:2;16361:87;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1028000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "1372",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "23308",
								"supportsInterface(bytes4)": "544",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1142,
									"end": 1146,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1134,
									"end": 1141,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8006,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8002,
									"end": 8006,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 1151,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 1151,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 94,
									"end": 100,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 127,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 168,
									"end": 170,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 156,
									"end": 165,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 147,
									"end": 154,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 143,
									"end": 166,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 139,
									"end": 171,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 136,
									"end": 138,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 136,
									"end": 138,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 136,
									"end": 138,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 189,
									"end": 195,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 181,
									"end": 187,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 174,
									"end": 196,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 136,
									"end": 138,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 136,
									"end": 138,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 221,
									"end": 237,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 221,
									"end": 237,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 286,
									"end": 300,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 286,
									"end": 300,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 286,
									"end": 300,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 283,
									"end": 285,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 283,
									"end": 285,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 283,
									"end": 285,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 318,
									"end": 324,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 310,
									"end": 316,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 303,
									"end": 325,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 283,
									"end": 285,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 283,
									"end": 285,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 361,
									"end": 367,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 350,
									"end": 359,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 346,
									"end": 368,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 336,
									"end": 368,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 336,
									"end": 368,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 406,
									"end": 413,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 399,
									"end": 403,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 395,
									"end": 397,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 391,
									"end": 404,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 387,
									"end": 414,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 377,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 377,
									"end": 379,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 433,
									"end": 439,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 425,
									"end": 431,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 418,
									"end": 440,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 377,
									"end": 379,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 377,
									"end": 379,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 467,
									"end": 469,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 461,
									"end": 470,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 489,
									"end": 491,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 485,
									"end": 487,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 482,
									"end": 492,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 479,
									"end": 481,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 495,
									"end": 513,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 495,
									"end": 513,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 495,
									"end": 513,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 495,
									"end": 513,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 495,
									"end": 513,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 570,
									"end": 572,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 564,
									"end": 573,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 538,
									"end": 540,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 624,
									"end": 637,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 624,
									"end": 637,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 620,
									"end": 642,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 620,
									"end": 642,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 620,
									"end": 642,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 644,
									"end": 646,
									"name": "PUSH",
									"source": 9,
									"value": "3F"
								},
								{
									"begin": 616,
									"end": 647,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 612,
									"end": 652,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 600,
									"end": 653,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 600,
									"end": 653,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 600,
									"end": 653,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 668,
									"end": 686,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 668,
									"end": 686,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 668,
									"end": 686,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 688,
									"end": 710,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 688,
									"end": 710,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 688,
									"end": 710,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 665,
									"end": 711,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 662,
									"end": 664,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 662,
									"end": 664,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 662,
									"end": 664,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 714,
									"end": 732,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 714,
									"end": 732,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 714,
									"end": 732,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 714,
									"end": 732,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 714,
									"end": 732,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 754,
									"end": 764,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 750,
									"end": 752,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 743,
									"end": 765,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 789,
									"end": 791,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 781,
									"end": 787,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 774,
									"end": 792,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 829,
									"end": 836,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 824,
									"end": 826,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 819,
									"end": 821,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 815,
									"end": 817,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 811,
									"end": 822,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 807,
									"end": 827,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 804,
									"end": 837,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 801,
									"end": 803,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 801,
									"end": 803,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 801,
									"end": 803,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 855,
									"end": 861,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 847,
									"end": 853,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 840,
									"end": 862,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 801,
									"end": 803,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 801,
									"end": 803,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 882,
									"end": 888,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 873,
									"end": 888,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 873,
									"end": 888,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 897,
									"end": 1026,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 897,
									"end": 1026,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 911,
									"end": 913,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 908,
									"end": 909,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 905,
									"end": 914,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 897,
									"end": 1026,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 897,
									"end": 1026,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 897,
									"end": 1026,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 999,
									"end": 1009,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 999,
									"end": 1009,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 999,
									"end": 1009,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 995,
									"end": 1014,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 995,
									"end": 1014,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 989,
									"end": 1015,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 968,
									"end": 982,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 968,
									"end": 982,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 968,
									"end": 982,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 964,
									"end": 987,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 964,
									"end": 987,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 957,
									"end": 1016,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 922,
									"end": 932,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 922,
									"end": 932,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 922,
									"end": 932,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 922,
									"end": 932,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 897,
									"end": 1026,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 897,
									"end": 1026,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 897,
									"end": 1026,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 897,
									"end": 1026,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1044,
									"end": 1046,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1041,
									"end": 1042,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1038,
									"end": 1047,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1035,
									"end": 1037,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1035,
									"end": 1037,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 1035,
									"end": 1037,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1103,
									"end": 1109,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1098,
									"end": 1100,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1093,
									"end": 1095,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1085,
									"end": 1091,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1081,
									"end": 1096,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1101,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1070,
									"end": 1110,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1035,
									"end": 1037,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 1035,
									"end": 1037,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1139,
									"end": 1145,
									"name": "SWAP9",
									"source": 9
								},
								{
									"begin": 105,
									"end": 1151,
									"name": "SWAP8",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 105,
									"end": 1151,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1156,
									"end": 1536,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 1156,
									"end": 1536,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1235,
									"end": 1236,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1231,
									"end": 1243,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1243,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1243,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1243,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1278,
									"end": 1290,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1278,
									"end": 1290,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1278,
									"end": 1290,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1299,
									"end": 1301,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 1299,
									"end": 1301,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1353,
									"end": 1357,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 1345,
									"end": 1351,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1341,
									"end": 1358,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1331,
									"end": 1358,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1331,
									"end": 1358,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1299,
									"end": 1301,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 1299,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1406,
									"end": 1408,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1398,
									"end": 1404,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1395,
									"end": 1409,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1375,
									"end": 1393,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1372,
									"end": 1410,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1369,
									"end": 1371,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1369,
									"end": 1371,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1369,
									"end": 1371,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1452,
									"end": 1462,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 1447,
									"end": 1450,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 1443,
									"end": 1463,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1440,
									"end": 1441,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1433,
									"end": 1464,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1487,
									"end": 1491,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1477,
									"end": 1492,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1515,
									"end": 1519,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1512,
									"end": 1513,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 1520,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1369,
									"end": 1371,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1369,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1369,
									"end": 1371,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1211,
									"end": 1536,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1211,
									"end": 1536,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1211,
									"end": 1536,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1211,
									"end": 1536,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1541,
									"end": 1668,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 1541,
									"end": 1668,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1602,
									"end": 1612,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 1597,
									"end": 1600,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 1593,
									"end": 1613,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1590,
									"end": 1591,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1583,
									"end": 1614,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1633,
									"end": 1637,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1630,
									"end": 1631,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1623,
									"end": 1638,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1657,
									"end": 1661,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1654,
									"end": 1655,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1647,
									"end": 1662,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1573,
									"end": 1668,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1573,
									"end": 1668,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c0fc8ca955b70c5b41ac3b2da6d3fd17559aeaeebf54512e938772394ac6aa8b64736f6c63430008040033",
									".code": [
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "4E1273F4"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "4E1273F4"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "E985E9C5"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "F242432A"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "FDD58E"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "E89341C"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "2EB2C2D6"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13798,
											"end": 13823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13798,
											"end": 13823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13798,
											"end": 13823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13786,
											"end": 13788,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13771,
											"end": 13789,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9284,
											"end": 9298,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9284,
											"end": 9298,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9277,
											"end": 9299,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9259,
											"end": 9300,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9259,
											"end": 9300,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9247,
											"end": 9249,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9232,
											"end": 9250,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 9214,
											"end": 9306,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3491,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2263,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2283,
											"end": 2304,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2304,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 10569,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10549,
											"end": 10570,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10606,
											"end": 10608,
											"name": "PUSH",
											"source": 9,
											"value": "2B"
										},
										{
											"begin": 10586,
											"end": 10604,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10586,
											"end": 10604,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10586,
											"end": 10604,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10579,
											"end": 10609,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10645,
											"end": 10679,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 10625,
											"end": 10643,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10625,
											"end": 10643,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10625,
											"end": 10643,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10618,
											"end": 10680,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10696,
											"end": 10714,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10696,
											"end": 10714,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10714,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10689,
											"end": 10730,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10747,
											"end": 10766,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 10747,
											"end": 10766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2369,
											"end": 2378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1519,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1483,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1519,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 1998,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2017,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4311,
											"end": 4315,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11797,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11777,
											"end": 11798,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11834,
											"end": 11836,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 11814,
											"end": 11832,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11814,
											"end": 11832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11814,
											"end": 11832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11807,
											"end": 11837,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11873,
											"end": 11907,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 11853,
											"end": 11871,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 11853,
											"end": 11871,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11853,
											"end": 11871,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11908,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11924,
											"end": 11942,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11924,
											"end": 11942,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11924,
											"end": 11942,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11917,
											"end": 11965,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11982,
											"end": 12001,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 11982,
											"end": 12001,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 11767,
											"end": 12007,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4439,
											"end": 4443,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4447,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4449,
											"end": 4452,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4454,
											"end": 4461,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4467,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 2722,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2765,
											"end": 2768,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2754,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13035,
											"end": 13037,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13017,
											"end": 13038,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13074,
											"end": 13076,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 13054,
											"end": 13072,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 13054,
											"end": 13072,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13054,
											"end": 13072,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13047,
											"end": 13077,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13113,
											"end": 13147,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 13093,
											"end": 13111,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 13093,
											"end": 13111,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13093,
											"end": 13111,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13086,
											"end": 13148,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13164,
											"end": 13182,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 13164,
											"end": 13182,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13164,
											"end": 13182,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13157,
											"end": 13196,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13213,
											"end": 13232,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 13213,
											"end": 13232,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 13007,
											"end": 13238,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2879,
											"end": 2887,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2879,
											"end": 2894,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2938,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2945,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2927,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2945,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2995,
											"end": 3003,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3005,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3011,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3012,
											"end": 3013,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 2981,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 3015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3043,
											"end": 3056,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3258,
											"end": 3266,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3276,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3825,
											"end": 3829,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10979,
											"end": 10981,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10961,
											"end": 10982,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11018,
											"end": 11020,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 10998,
											"end": 11016,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10998,
											"end": 11016,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10998,
											"end": 11016,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10991,
											"end": 11021,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11057,
											"end": 11091,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 11037,
											"end": 11055,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 11037,
											"end": 11055,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11037,
											"end": 11055,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11030,
											"end": 11092,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11108,
											"end": 11126,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11108,
											"end": 11126,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11108,
											"end": 11126,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11101,
											"end": 11140,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11157,
											"end": 11176,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 11157,
											"end": 11176,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 10951,
											"end": 11182,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3939,
											"end": 3943,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3947,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3949,
											"end": 3951,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 3959,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3961,
											"end": 3965,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3921,
											"end": 3966,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6295,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6302,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6274,
											"end": 6277,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6274,
											"end": 6284,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6274,
											"end": 6302,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13445,
											"end": 13447,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13427,
											"end": 13448,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13484,
											"end": 13486,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 13464,
											"end": 13482,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 13464,
											"end": 13482,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13464,
											"end": 13482,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13457,
											"end": 13487,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13523,
											"end": 13557,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 13503,
											"end": 13521,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 13503,
											"end": 13521,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13503,
											"end": 13521,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13496,
											"end": 13558,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13574,
											"end": 13592,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 13574,
											"end": 13592,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13574,
											"end": 13592,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13567,
											"end": 13605,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13622,
											"end": 13641,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 13622,
											"end": 13641,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 13417,
											"end": 13647,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6365,
											"end": 6381,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6365,
											"end": 6381,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6434,
											"end": 6450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6574,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6581,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6567,
											"end": 6568,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6567,
											"end": 6581,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6612,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6618,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6619,
											"end": 6620,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6635,
											"end": 6649,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6659,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6677,
											"end": 6696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "DUP15",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP15",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6892,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7003,
											"end": 7005,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6997,
											"end": 7001,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 6995,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 1,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7007,
											"end": 7010,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7012,
											"end": 7019,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 7067,
											"end": 7075,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7081,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7085,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7087,
											"end": 7090,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7099,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7105,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12224,
											"end": 12232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12215,
											"end": 12220,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12625,
											"end": 12627,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12607,
											"end": 12628,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12664,
											"end": 12666,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 12644,
											"end": 12662,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12644,
											"end": 12662,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12644,
											"end": 12662,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12637,
											"end": 12667,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12703,
											"end": 12737,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 12683,
											"end": 12701,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 12683,
											"end": 12701,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12683,
											"end": 12701,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12676,
											"end": 12738,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12754,
											"end": 12772,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12754,
											"end": 12772,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12754,
											"end": 12772,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12747,
											"end": 12786,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12803,
											"end": 12822,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 12803,
											"end": 12822,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 12597,
											"end": 12828,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12306,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9259,
											"end": 9300,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9259,
											"end": 9300,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9259,
											"end": 9300,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9232,
											"end": 9250,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5106,
											"end": 5122,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5122,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5248,
											"end": 5252,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5256,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 5276,
											"end": 5278,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5281,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5299,
											"end": 5305,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5281,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 5281,
											"end": 5306,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5324,
											"end": 5343,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5527,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14008,
											"end": 14033,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 14008,
											"end": 14033,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14008,
											"end": 14033,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14064,
											"end": 14066,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14049,
											"end": 14067,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14049,
											"end": 14067,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14042,
											"end": 14076,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 14042,
											"end": 14076,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14042,
											"end": 14076,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 1,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13981,
											"end": 13999,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5678,
											"end": 5686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5692,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5694,
											"end": 5696,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5698,
											"end": 5700,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5702,
											"end": 5708,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5710,
											"end": 5714,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14282,
											"end": 15074,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 14282,
											"end": 15074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14514,
											"end": 14527,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14514,
											"end": 14527,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14510,
											"end": 15068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 14510,
											"end": 15068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "PUSH",
											"source": 1,
											"value": "BC197C81"
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14593,
											"end": 14601,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 14593,
											"end": 14601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14609,
											"end": 14612,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14609,
											"end": 14612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14614,
											"end": 14621,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14614,
											"end": 14621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14623,
											"end": 14627,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14623,
											"end": 14627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A0"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14934,
											"end": 14940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9737,
											"end": 9739,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9719,
											"end": 9740,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9776,
											"end": 9778,
											"name": "PUSH",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 9756,
											"end": 9774,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9756,
											"end": 9774,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9756,
											"end": 9774,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9749,
											"end": 9779,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9815,
											"end": 9849,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 9795,
											"end": 9813,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9795,
											"end": 9813,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9795,
											"end": 9813,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9788,
											"end": 9850,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9866,
											"end": 9884,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9866,
											"end": 9884,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9866,
											"end": 9884,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9859,
											"end": 9909,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9926,
											"end": 9945,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 9926,
											"end": 9945,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 9709,
											"end": 9951,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14703,
											"end": 14860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 14703,
											"end": 14860,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15213,
											"end": 15214,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15146,
											"end": 15162,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15146,
											"end": 15162,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15174,
											"end": 15196,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15174,
											"end": 15196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15174,
											"end": 15215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15174,
											"end": 15215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15236,
											"end": 15243,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15231,
											"end": 15232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15243,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15261,
											"end": 15266,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13551,
											"end": 14276,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 13551,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13758,
											"end": 13771,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13758,
											"end": 13771,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13754,
											"end": 14270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 13754,
											"end": 14270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "PUSH",
											"source": 1,
											"value": "F23A6E61"
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13832,
											"end": 13840,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 13832,
											"end": 13840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13842,
											"end": 13846,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 13842,
											"end": 13846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13848,
											"end": 13850,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 13848,
											"end": 13850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13852,
											"end": 13858,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 13852,
											"end": 13858,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13860,
											"end": 13864,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 13860,
											"end": 13864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 13910,
											"end": 14062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 13910,
											"end": 14062,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 111,
											"end": 113,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 63,
											"end": 187,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 63,
											"end": 187,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 947,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 192,
											"end": 947,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 246,
											"end": 251,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 302,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 292,
											"end": 296,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 280,
											"end": 297,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 276,
											"end": 303,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 266,
											"end": 268,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 266,
											"end": 268,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 321,
											"end": 326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 314,
											"end": 319,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 307,
											"end": 327,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 266,
											"end": 268,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 266,
											"end": 268,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 361,
											"end": 367,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 348,
											"end": 368,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 387,
											"end": 391,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 410,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 450,
											"end": 452,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 410,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 410,
											"end": 453,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 410,
											"end": 453,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 410,
											"end": 453,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 482,
											"end": 484,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 476,
											"end": 485,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 494,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 522,
											"end": 524,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 514,
											"end": 520,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 494,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 494,
											"end": 525,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 494,
											"end": 525,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 494,
											"end": 525,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 560,
											"end": 578,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 560,
											"end": 578,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 560,
											"end": 578,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 594,
											"end": 609,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 594,
											"end": 609,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 594,
											"end": 609,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 594,
											"end": 609,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 629,
											"end": 644,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 629,
											"end": 644,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 629,
											"end": 644,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 679,
											"end": 680,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 675,
											"end": 685,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 675,
											"end": 685,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 675,
											"end": 685,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 663,
											"end": 686,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 663,
											"end": 686,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 659,
											"end": 691,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 659,
											"end": 691,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 656,
											"end": 697,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 653,
											"end": 655,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 653,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 653,
											"end": 655,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 714,
											"end": 719,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 707,
											"end": 712,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 700,
											"end": 720,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 653,
											"end": 655,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 653,
											"end": 655,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 754,
											"end": 917,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 754,
											"end": 917,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 768,
											"end": 770,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 765,
											"end": 766,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 762,
											"end": 771,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 754,
											"end": 917,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 754,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 754,
											"end": 917,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 825,
											"end": 842,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 825,
											"end": 842,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 813,
											"end": 843,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 813,
											"end": 843,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 863,
											"end": 875,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 863,
											"end": 875,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 863,
											"end": 875,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 863,
											"end": 875,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 895,
											"end": 907,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 895,
											"end": 907,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 895,
											"end": 907,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 895,
											"end": 907,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 786,
											"end": 787,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 779,
											"end": 788,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 754,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 754,
											"end": 917,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 754,
											"end": 917,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 754,
											"end": 917,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 935,
											"end": 941,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 935,
											"end": 941,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 256,
											"end": 947,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 256,
											"end": 947,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 952,
											"end": 1527,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 952,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 994,
											"end": 999,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1050,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1040,
											"end": 1044,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1032,
											"end": 1038,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1028,
											"end": 1045,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1014,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 1014,
											"end": 1016,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1067,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1075,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1014,
											"end": 1016,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 1014,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1115,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1096,
											"end": 1116,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1135,
											"end": 1153,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1125,
											"end": 1127,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1125,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 1125,
											"end": 1127,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1206,
											"end": 1208,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1200,
											"end": 1209,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 1273,
											"end": 1275,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1254,
											"end": 1267,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1267,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1250,
											"end": 1277,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1283,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1246,
											"end": 1284,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1200,
											"end": 1209,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 1218,
											"end": 1285,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1285,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 1218,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1309,
											"end": 1311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1301,
											"end": 1307,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1358,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1348,
											"end": 1352,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1345,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1327,
											"end": 1353,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1324,
											"end": 1359,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1321,
											"end": 1323,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1321,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 1321,
											"end": 1323,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1376,
											"end": 1381,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1369,
											"end": 1374,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1382,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1321,
											"end": 1323,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 1321,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1441,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1429,
											"end": 1435,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1418,
											"end": 1422,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1410,
											"end": 1416,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1406,
											"end": 1423,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1393,
											"end": 1447,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1482,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1482,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1482,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1488,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1463,
											"end": 1489,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1497,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1497,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1497,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1497,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1004,
											"end": 1527,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1004,
											"end": 1527,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1532,
											"end": 1802,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1532,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1606,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1614,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1661,
											"end": 1663,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1658,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1647,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1636,
											"end": 1659,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1664,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1674,
											"end": 1680,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1667,
											"end": 1689,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 1729,
											"end": 1738,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 1710,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1700,
											"end": 1739,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1700,
											"end": 1739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1758,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 1792,
											"end": 1794,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1781,
											"end": 1790,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 1795,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1758,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 1758,
											"end": 1796,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1758,
											"end": 1796,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 1758,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1796,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1802,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1802,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1802,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1802,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1802,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1807,
											"end": 2790,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1807,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1967,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 1975,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1983,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 1991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2049,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 2034,
											"end": 2043,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2025,
											"end": 2032,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2021,
											"end": 2044,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2017,
											"end": 2050,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2016,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 2014,
											"end": 2016,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2068,
											"end": 2074,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2060,
											"end": 2066,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2053,
											"end": 2075,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2016,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 2014,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 2115,
											"end": 2124,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 2096,
											"end": 2125,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2096,
											"end": 2125,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 2096,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 2178,
											"end": 2180,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2167,
											"end": 2176,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 2144,
											"end": 2182,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2144,
											"end": 2182,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 2144,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2134,
											"end": 2182,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2134,
											"end": 2182,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2233,
											"end": 2235,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2222,
											"end": 2231,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2218,
											"end": 2236,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2205,
											"end": 2237,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2256,
											"end": 2274,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2289,
											"end": 2295,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2300,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2283,
											"end": 2285,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2283,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 2283,
											"end": 2285,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2318,
											"end": 2324,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2310,
											"end": 2316,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2325,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2283,
											"end": 2285,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 2283,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2346,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 2399,
											"end": 2406,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2396,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 2375,
											"end": 2397,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2346,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 2346,
											"end": 2407,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2346,
											"end": 2407,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 2346,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2407,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2407,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2462,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2449,
											"end": 2458,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2445,
											"end": 2463,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2464,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2416,
											"end": 2464,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2416,
											"end": 2464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2489,
											"end": 2491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2479,
											"end": 2487,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2476,
											"end": 2492,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2473,
											"end": 2475,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2473,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 2473,
											"end": 2475,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2510,
											"end": 2516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2502,
											"end": 2508,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2495,
											"end": 2517,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2473,
											"end": 2475,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 2473,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2538,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 2593,
											"end": 2600,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 2582,
											"end": 2590,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2571,
											"end": 2580,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 2567,
											"end": 2591,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2538,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 2538,
											"end": 2601,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2538,
											"end": 2601,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 2538,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2601,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2601,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2657,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2643,
											"end": 2652,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2658,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2626,
											"end": 2659,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2610,
											"end": 2659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2684,
											"end": 2686,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2674,
											"end": 2682,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2671,
											"end": 2687,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2711,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2697,
											"end": 2703,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2690,
											"end": 2712,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 2776,
											"end": 2783,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2765,
											"end": 2773,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 2750,
											"end": 2774,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 2733,
											"end": 2784,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2733,
											"end": 2784,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 2733,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 2784,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 2784,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 2784,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2790,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2790,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2790,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2790,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2790,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2790,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2790,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2790,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2790,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2795,
											"end": 3421,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 2795,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2907,
											"end": 2913,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2915,
											"end": 2921,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2929,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2931,
											"end": 2937,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2984,
											"end": 2987,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2963,
											"end": 2970,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 2982,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2955,
											"end": 2988,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 2954,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 2952,
											"end": 2954,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3012,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2998,
											"end": 3004,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2991,
											"end": 3013,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 2954,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 2952,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 3053,
											"end": 3062,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 3034,
											"end": 3063,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3034,
											"end": 3063,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 3034,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3063,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3063,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 3116,
											"end": 3118,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 3082,
											"end": 3120,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3082,
											"end": 3120,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 3082,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3072,
											"end": 3120,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3072,
											"end": 3120,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3167,
											"end": 3169,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3156,
											"end": 3165,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3152,
											"end": 3170,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3139,
											"end": 3171,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3171,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3171,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3218,
											"end": 3220,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3207,
											"end": 3216,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3203,
											"end": 3221,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3190,
											"end": 3222,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3222,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3222,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3273,
											"end": 3276,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3262,
											"end": 3271,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3258,
											"end": 3277,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3245,
											"end": 3278,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3301,
											"end": 3319,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3293,
											"end": 3299,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3290,
											"end": 3320,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3289,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 3287,
											"end": 3289,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3338,
											"end": 3344,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3336,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3323,
											"end": 3345,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3289,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 3287,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3366,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3398,
											"end": 3404,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3387,
											"end": 3396,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3405,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3366,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 3366,
											"end": 3415,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3426,
											"end": 3793,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3426,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3491,
											"end": 3497,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3505,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3554,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3540,
											"end": 3549,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3531,
											"end": 3538,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3527,
											"end": 3550,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3555,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3520,
											"end": 3522,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3520,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 3520,
											"end": 3522,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3573,
											"end": 3579,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3565,
											"end": 3571,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3558,
											"end": 3580,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3520,
											"end": 3522,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 3520,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3601,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 3620,
											"end": 3629,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3601,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 3601,
											"end": 3630,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3601,
											"end": 3630,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 3601,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3630,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3630,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3680,
											"end": 3682,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3669,
											"end": 3678,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3652,
											"end": 3684,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 3732,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3720,
											"end": 3733,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3713,
											"end": 3734,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3706,
											"end": 3711,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3703,
											"end": 3735,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 3693,
											"end": 3695,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3754,
											"end": 3760,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3739,
											"end": 3761,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 3695,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 3693,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3782,
											"end": 3787,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3510,
											"end": 3793,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3510,
											"end": 3793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3510,
											"end": 3793,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3510,
											"end": 3793,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3510,
											"end": 3793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3510,
											"end": 3793,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3798,
											"end": 4062,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 3798,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3866,
											"end": 3872,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3880,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3927,
											"end": 3929,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3915,
											"end": 3924,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3906,
											"end": 3913,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3902,
											"end": 3925,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3898,
											"end": 3930,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3895,
											"end": 3897,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3895,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 3895,
											"end": 3897,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3940,
											"end": 3946,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3933,
											"end": 3955,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3895,
											"end": 3897,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 3895,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3976,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 3995,
											"end": 4004,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3976,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 3976,
											"end": 4005,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4005,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 3976,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3966,
											"end": 4005,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4052,
											"end": 4054,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4037,
											"end": 4055,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4037,
											"end": 4055,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4037,
											"end": 4055,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4037,
											"end": 4055,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 4056,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 4056,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3885,
											"end": 4062,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4067,
											"end": 5341,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 4067,
											"end": 5341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4191,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4193,
											"end": 4199,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4246,
											"end": 4248,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4234,
											"end": 4243,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4225,
											"end": 4232,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4221,
											"end": 4244,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4217,
											"end": 4249,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4267,
											"end": 4273,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4259,
											"end": 4265,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4252,
											"end": 4274,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4312,
											"end": 4321,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4299,
											"end": 4322,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4341,
											"end": 4359,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4382,
											"end": 4384,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4374,
											"end": 4380,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4371,
											"end": 4385,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4368,
											"end": 4370,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4368,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 4368,
											"end": 4370,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4403,
											"end": 4409,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4395,
											"end": 4401,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4388,
											"end": 4410,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4368,
											"end": 4370,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 4368,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4446,
											"end": 4452,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4435,
											"end": 4444,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4431,
											"end": 4453,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4421,
											"end": 4453,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4421,
											"end": 4453,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4491,
											"end": 4498,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4484,
											"end": 4488,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4480,
											"end": 4482,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4489,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4472,
											"end": 4499,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4462,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 4462,
											"end": 4464,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4518,
											"end": 4524,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4516,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4503,
											"end": 4525,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4462,
											"end": 4464,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 4462,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4559,
											"end": 4561,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4546,
											"end": 4562,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4581,
											"end": 4585,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4604,
											"end": 4647,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 4644,
											"end": 4646,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4604,
											"end": 4647,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 4604,
											"end": 4647,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4604,
											"end": 4647,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 4604,
											"end": 4647,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4676,
											"end": 4678,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4670,
											"end": 4679,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4688,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 4716,
											"end": 4718,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4708,
											"end": 4714,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4688,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 4688,
											"end": 4719,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4688,
											"end": 4719,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 4688,
											"end": 4719,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4754,
											"end": 4772,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4754,
											"end": 4772,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4754,
											"end": 4772,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 4803,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 4803,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 4803,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4788,
											"end": 4803,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4823,
											"end": 4834,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4823,
											"end": 4834,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4823,
											"end": 4834,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4865,
											"end": 4866,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4861,
											"end": 4871,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 4871,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 4871,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4872,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4872,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4849,
											"end": 4877,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4849,
											"end": 4877,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4846,
											"end": 4887,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4905,
											"end": 4911,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4897,
											"end": 4903,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4932,
											"end": 4938,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4938,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4938,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4947,
											"end": 5116,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 4947,
											"end": 5116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4958,
											"end": 4959,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4955,
											"end": 4964,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4947,
											"end": 5116,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4947,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 4947,
											"end": 5116,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5018,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 5037,
											"end": 5040,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5018,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 5018,
											"end": 5041,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5018,
											"end": 5041,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 5018,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5006,
											"end": 5042,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5006,
											"end": 5042,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4979,
											"end": 4980,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4972,
											"end": 4981,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 4972,
											"end": 4981,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4972,
											"end": 4981,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 4972,
											"end": 4981,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4972,
											"end": 4981,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5094,
											"end": 5106,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5094,
											"end": 5106,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4947,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 4947,
											"end": 5116,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4947,
											"end": 5116,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 4947,
											"end": 5116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5135,
											"end": 5141,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5179,
											"end": 5197,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5179,
											"end": 5197,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5166,
											"end": 5198,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5166,
											"end": 5198,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5210,
											"end": 5226,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5210,
											"end": 5226,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5210,
											"end": 5226,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5244,
											"end": 5250,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5236,
											"end": 5242,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5229,
											"end": 5251,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 5327,
											"end": 5334,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5316,
											"end": 5324,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5305,
											"end": 5314,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 5272,
											"end": 5335,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5272,
											"end": 5335,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 5272,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5262,
											"end": 5335,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5262,
											"end": 5335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5262,
											"end": 5335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 5341,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 5341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 5341,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 5341,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 5341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 5341,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5346,
											"end": 5601,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5346,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5410,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5459,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5445,
											"end": 5454,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5436,
											"end": 5443,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5432,
											"end": 5455,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5428,
											"end": 5460,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5425,
											"end": 5427,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5425,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 5425,
											"end": 5427,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5484,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5470,
											"end": 5476,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5463,
											"end": 5485,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5425,
											"end": 5427,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 5425,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5531,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 5565,
											"end": 5570,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 5541,
											"end": 5571,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5541,
											"end": 5571,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 5541,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5590,
											"end": 5595,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5415,
											"end": 5601,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5415,
											"end": 5601,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5606,
											"end": 5865,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 5606,
											"end": 5865,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5728,
											"end": 5730,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5716,
											"end": 5725,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5707,
											"end": 5714,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5703,
											"end": 5726,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5699,
											"end": 5731,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5696,
											"end": 5698,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5696,
											"end": 5698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 5696,
											"end": 5698,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5755,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5741,
											"end": 5747,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5734,
											"end": 5756,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5696,
											"end": 5698,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 5696,
											"end": 5698,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5786,
											"end": 5795,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5780,
											"end": 5796,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5805,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 5829,
											"end": 5834,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5805,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 5805,
											"end": 5835,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5870,
											"end": 6060,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 5870,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5935,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5982,
											"end": 5984,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5970,
											"end": 5979,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5961,
											"end": 5968,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5957,
											"end": 5980,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5953,
											"end": 5985,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5950,
											"end": 5952,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5950,
											"end": 5952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 5950,
											"end": 5952,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6009,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5995,
											"end": 6001,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5988,
											"end": 6010,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5950,
											"end": 5952,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 5950,
											"end": 5952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6031,
											"end": 6054,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6031,
											"end": 6054,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 6060,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5940,
											"end": 6060,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6065,
											"end": 6502,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 6065,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6118,
											"end": 6121,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6156,
											"end": 6161,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6162,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6183,
											"end": 6189,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6178,
											"end": 6181,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6171,
											"end": 6190,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6209,
											"end": 6213,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6238,
											"end": 6240,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6236,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6229,
											"end": 6241,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6241,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6241,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6275,
											"end": 6277,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6268,
											"end": 6273,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6264,
											"end": 6278,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6296,
											"end": 6299,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6308,
											"end": 6477,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 6308,
											"end": 6477,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6322,
											"end": 6328,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6319,
											"end": 6320,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6316,
											"end": 6329,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6308,
											"end": 6477,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6308,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 6308,
											"end": 6477,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6383,
											"end": 6396,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6383,
											"end": 6396,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6371,
											"end": 6397,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6371,
											"end": 6397,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6429,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6429,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6429,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6429,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6452,
											"end": 6467,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6452,
											"end": 6467,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6452,
											"end": 6467,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6452,
											"end": 6467,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6344,
											"end": 6345,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6337,
											"end": 6346,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6308,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 6308,
											"end": 6477,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6308,
											"end": 6477,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 6308,
											"end": 6477,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6493,
											"end": 6496,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6493,
											"end": 6496,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6502,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6126,
											"end": 6502,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6507,
											"end": 6982,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 6507,
											"end": 6982,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6551,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6586,
											"end": 6591,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6580,
											"end": 6592,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6613,
											"end": 6619,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6608,
											"end": 6611,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6620,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6638,
											"end": 6641,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6650,
											"end": 6812,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 6650,
											"end": 6812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6664,
											"end": 6670,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6658,
											"end": 6671,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6650,
											"end": 6812,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6650,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 6650,
											"end": 6812,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6726,
											"end": 6730,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6782,
											"end": 6795,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6795,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6795,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6778,
											"end": 6800,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6778,
											"end": 6800,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6772,
											"end": 6801,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6765,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6765,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6765,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6770,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6770,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6743,
											"end": 6802,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6679,
											"end": 6691,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6650,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 6650,
											"end": 6812,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6650,
											"end": 6812,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 6650,
											"end": 6812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6830,
											"end": 6836,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6827,
											"end": 6828,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6824,
											"end": 6837,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6821,
											"end": 6823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6821,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 6821,
											"end": 6823,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6896,
											"end": 6899,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 6893,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6880,
											"end": 6886,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6875,
											"end": 6878,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6871,
											"end": 6887,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6867,
											"end": 6894,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6860,
											"end": 6900,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6821,
											"end": 6823,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 6821,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6964,
											"end": 6966,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6943,
											"end": 6958,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6939,
											"end": 6968,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6930,
											"end": 6969,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6930,
											"end": 6969,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6930,
											"end": 6969,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6930,
											"end": 6969,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6971,
											"end": 6975,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6926,
											"end": 6976,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6926,
											"end": 6976,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6556,
											"end": 6982,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6556,
											"end": 6982,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6987,
											"end": 7813,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 6987,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7384,
											"end": 7399,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7384,
											"end": 7399,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7384,
											"end": 7399,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7366,
											"end": 7400,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7366,
											"end": 7400,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7436,
											"end": 7451,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7436,
											"end": 7451,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7431,
											"end": 7433,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7416,
											"end": 7434,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7434,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7409,
											"end": 7452,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7346,
											"end": 7349,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 7483,
											"end": 7485,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7468,
											"end": 7486,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7468,
											"end": 7486,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7461,
											"end": 7492,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7461,
											"end": 7492,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7461,
											"end": 7492,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7309,
											"end": 7313,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7309,
											"end": 7313,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7515,
											"end": 7572,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 7515,
											"end": 7572,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7552,
											"end": 7571,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7552,
											"end": 7571,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7550,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7515,
											"end": 7572,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 7515,
											"end": 7572,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7515,
											"end": 7572,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 7515,
											"end": 7572,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7620,
											"end": 7629,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7612,
											"end": 7618,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7630,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7605,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7592,
											"end": 7601,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7588,
											"end": 7606,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7581,
											"end": 7631,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7654,
											"end": 7698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 7691,
											"end": 7697,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7683,
											"end": 7689,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7654,
											"end": 7698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 7654,
											"end": 7698,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7654,
											"end": 7698,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 7654,
											"end": 7698,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7640,
											"end": 7698,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7640,
											"end": 7698,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7747,
											"end": 7756,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7745,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7735,
											"end": 7757,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7729,
											"end": 7732,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 7718,
											"end": 7727,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7733,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7707,
											"end": 7758,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7775,
											"end": 7807,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 7800,
											"end": 7806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7792,
											"end": 7798,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7775,
											"end": 7807,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 7775,
											"end": 7807,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7775,
											"end": 7807,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 7775,
											"end": 7807,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7767,
											"end": 7807,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 7318,
											"end": 7813,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7318,
											"end": 7813,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7818,
											"end": 8378,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 7818,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8115,
											"end": 8130,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8115,
											"end": 8130,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8115,
											"end": 8130,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8097,
											"end": 8131,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8097,
											"end": 8131,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8167,
											"end": 8182,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8167,
											"end": 8182,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8162,
											"end": 8164,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8147,
											"end": 8165,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8147,
											"end": 8165,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8140,
											"end": 8183,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8216,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8199,
											"end": 8217,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8199,
											"end": 8217,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8192,
											"end": 8226,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8192,
											"end": 8226,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8192,
											"end": 8226,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8257,
											"end": 8259,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8242,
											"end": 8260,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8242,
											"end": 8260,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8235,
											"end": 8269,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8235,
											"end": 8269,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8235,
											"end": 8269,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8077,
											"end": 8080,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 8300,
											"end": 8303,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 8285,
											"end": 8304,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8285,
											"end": 8304,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8040,
											"end": 8044,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8040,
											"end": 8044,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8327,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 8327,
											"end": 8372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8352,
											"end": 8371,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8352,
											"end": 8371,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8344,
											"end": 8350,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8327,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 8327,
											"end": 8372,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8327,
											"end": 8372,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 8327,
											"end": 8372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8319,
											"end": 8372,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 8049,
											"end": 8378,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8049,
											"end": 8378,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8383,
											"end": 8644,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 8383,
											"end": 8644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8562,
											"end": 8564,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8551,
											"end": 8560,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8544,
											"end": 8565,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8525,
											"end": 8529,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8582,
											"end": 8638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 8634,
											"end": 8636,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8623,
											"end": 8632,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8619,
											"end": 8637,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8611,
											"end": 8617,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8582,
											"end": 8638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 8582,
											"end": 8638,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8649,
											"end": 9114,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 8649,
											"end": 9114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8906,
											"end": 8908,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8895,
											"end": 8904,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8888,
											"end": 8909,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8869,
											"end": 8873,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8932,
											"end": 8988,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 8984,
											"end": 8986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8973,
											"end": 8982,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8969,
											"end": 8987,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8961,
											"end": 8967,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8932,
											"end": 8988,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 8932,
											"end": 8988,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8932,
											"end": 8988,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 8932,
											"end": 8988,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9036,
											"end": 9045,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9028,
											"end": 9034,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9024,
											"end": 9046,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9019,
											"end": 9021,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9008,
											"end": 9017,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9004,
											"end": 9022,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8997,
											"end": 9047,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9064,
											"end": 9108,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 9101,
											"end": 9107,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9093,
											"end": 9099,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9064,
											"end": 9108,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 9064,
											"end": 9108,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9064,
											"end": 9108,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 9064,
											"end": 9108,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9056,
											"end": 9108,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 9114,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8878,
											"end": 9114,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9311,
											"end": 9530,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 9311,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9460,
											"end": 9462,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9449,
											"end": 9458,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9442,
											"end": 9463,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9423,
											"end": 9427,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9480,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 9520,
											"end": 9522,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9509,
											"end": 9518,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9505,
											"end": 9523,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9497,
											"end": 9503,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9480,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 9480,
											"end": 9524,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9956,
											"end": 10360,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 9956,
											"end": 10360,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10158,
											"end": 10160,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10140,
											"end": 10161,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10140,
											"end": 10161,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10140,
											"end": 10161,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10199,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 10177,
											"end": 10195,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10177,
											"end": 10195,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10177,
											"end": 10195,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10170,
											"end": 10200,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10236,
											"end": 10270,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 10231,
											"end": 10233,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10216,
											"end": 10234,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10216,
											"end": 10234,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10209,
											"end": 10271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10302,
											"end": 10304,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 10287,
											"end": 10305,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10287,
											"end": 10305,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10280,
											"end": 10318,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10350,
											"end": 10353,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 10335,
											"end": 10354,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10335,
											"end": 10354,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10130,
											"end": 10360,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11187,
											"end": 11588,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 11187,
											"end": 11588,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11389,
											"end": 11391,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11371,
											"end": 11392,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11392,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11392,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11428,
											"end": 11430,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 11408,
											"end": 11426,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11426,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11426,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11401,
											"end": 11431,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11467,
											"end": 11501,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 11462,
											"end": 11464,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11447,
											"end": 11465,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11447,
											"end": 11465,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11440,
											"end": 11502,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11533,
											"end": 11535,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 11518,
											"end": 11536,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11518,
											"end": 11536,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11511,
											"end": 11546,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11581,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 11563,
											"end": 11582,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11563,
											"end": 11582,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11361,
											"end": 11588,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12012,
											"end": 12418,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 12012,
											"end": 12418,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12214,
											"end": 12216,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12196,
											"end": 12217,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12196,
											"end": 12217,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12196,
											"end": 12217,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12253,
											"end": 12255,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 12233,
											"end": 12251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12233,
											"end": 12251,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12233,
											"end": 12251,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12226,
											"end": 12256,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12292,
											"end": 12326,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 12287,
											"end": 12289,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12272,
											"end": 12290,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12272,
											"end": 12290,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12265,
											"end": 12327,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12358,
											"end": 12360,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 12343,
											"end": 12361,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12343,
											"end": 12361,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12336,
											"end": 12376,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12408,
											"end": 12411,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 12393,
											"end": 12412,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12393,
											"end": 12412,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12186,
											"end": 12418,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14087,
											"end": 14270,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 14087,
											"end": 14270,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14147,
											"end": 14151,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14180,
											"end": 14198,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14172,
											"end": 14178,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14169,
											"end": 14199,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 14166,
											"end": 14168,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14166,
											"end": 14168,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 14166,
											"end": 14168,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14202,
											"end": 14220,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 14202,
											"end": 14220,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 14202,
											"end": 14220,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14202,
											"end": 14220,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 14202,
											"end": 14220,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14247,
											"end": 14248,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 14243,
											"end": 14257,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 14259,
											"end": 14263,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14239,
											"end": 14264,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14239,
											"end": 14264,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14156,
											"end": 14270,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14275,
											"end": 14403,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 14275,
											"end": 14403,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14315,
											"end": 14318,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14346,
											"end": 14347,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14342,
											"end": 14348,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 14339,
											"end": 14340,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14336,
											"end": 14349,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 14333,
											"end": 14335,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14333,
											"end": 14335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 14333,
											"end": 14335,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14352,
											"end": 14370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 14352,
											"end": 14370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 14352,
											"end": 14370,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14352,
											"end": 14370,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 14352,
											"end": 14370,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14388,
											"end": 14397,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14388,
											"end": 14397,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14323,
											"end": 14403,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14408,
											"end": 14788,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 14408,
											"end": 14788,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14487,
											"end": 14488,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 14483,
											"end": 14495,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14483,
											"end": 14495,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14483,
											"end": 14495,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 14483,
											"end": 14495,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14530,
											"end": 14542,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14530,
											"end": 14542,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14530,
											"end": 14542,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14551,
											"end": 14553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 14551,
											"end": 14553,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14605,
											"end": 14609,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 14597,
											"end": 14603,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14593,
											"end": 14610,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14583,
											"end": 14610,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14583,
											"end": 14610,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14551,
											"end": 14553,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 14551,
											"end": 14553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14658,
											"end": 14660,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14650,
											"end": 14656,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14647,
											"end": 14661,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 14627,
											"end": 14645,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14624,
											"end": 14662,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 14621,
											"end": 14623,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14621,
											"end": 14623,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 14621,
											"end": 14623,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14704,
											"end": 14714,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 14699,
											"end": 14702,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 14695,
											"end": 14715,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 14692,
											"end": 14693,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14685,
											"end": 14716,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14739,
											"end": 14743,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 14736,
											"end": 14737,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14729,
											"end": 14744,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14767,
											"end": 14771,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14764,
											"end": 14765,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14757,
											"end": 14772,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14621,
											"end": 14623,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 14621,
											"end": 14623,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14621,
											"end": 14623,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14463,
											"end": 14788,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14463,
											"end": 14788,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14463,
											"end": 14788,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14463,
											"end": 14788,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14793,
											"end": 15042,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 14793,
											"end": 15042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14903,
											"end": 14905,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 14884,
											"end": 14897,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14884,
											"end": 14897,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14880,
											"end": 14907,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14868,
											"end": 14908,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14868,
											"end": 14908,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14938,
											"end": 14956,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14923,
											"end": 14957,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14923,
											"end": 14957,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 14959,
											"end": 14981,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14959,
											"end": 14981,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14959,
											"end": 14981,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 14920,
											"end": 14982,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 14917,
											"end": 14919,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14917,
											"end": 14919,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 14917,
											"end": 14919,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14985,
											"end": 15003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 14985,
											"end": 15003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 14985,
											"end": 15003,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14985,
											"end": 15003,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 14985,
											"end": 15003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15021,
											"end": 15023,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15014,
											"end": 15036,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14840,
											"end": 15042,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15047,
											"end": 15182,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 15047,
											"end": 15182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15086,
											"end": 15089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15107,
											"end": 15124,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15107,
											"end": 15124,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 15104,
											"end": 15106,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15104,
											"end": 15106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 15104,
											"end": 15106,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15127,
											"end": 15145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 15127,
											"end": 15145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 15127,
											"end": 15145,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15127,
											"end": 15145,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 15127,
											"end": 15145,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15174,
											"end": 15175,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 15163,
											"end": 15176,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15163,
											"end": 15176,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15094,
											"end": 15182,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15187,
											"end": 15314,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 15187,
											"end": 15314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15248,
											"end": 15258,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 15243,
											"end": 15246,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 15239,
											"end": 15259,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 15236,
											"end": 15237,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15229,
											"end": 15260,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15279,
											"end": 15283,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 15276,
											"end": 15277,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15269,
											"end": 15284,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15303,
											"end": 15307,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 15300,
											"end": 15301,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15293,
											"end": 15308,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15319,
											"end": 15446,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 15319,
											"end": 15446,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15380,
											"end": 15390,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 15375,
											"end": 15378,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 15371,
											"end": 15391,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 15368,
											"end": 15369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15361,
											"end": 15392,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15411,
											"end": 15415,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 15408,
											"end": 15409,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15401,
											"end": 15416,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15435,
											"end": 15439,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 15432,
											"end": 15433,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15425,
											"end": 15440,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15451,
											"end": 15636,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 15451,
											"end": 15636,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15486,
											"end": 15489,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15528,
											"end": 15529,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 15510,
											"end": 15526,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 15507,
											"end": 15530,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 15504,
											"end": 15506,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15504,
											"end": 15506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 15504,
											"end": 15506,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15578,
											"end": 15579,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15573,
											"end": 15576,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15568,
											"end": 15571,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15553,
											"end": 15580,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 15609,
											"end": 15619,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15604,
											"end": 15607,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 15600,
											"end": 15620,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 15504,
											"end": 15506,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 15504,
											"end": 15506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15494,
											"end": 15636,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15494,
											"end": 15636,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15641,
											"end": 16312,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 15641,
											"end": 16312,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15680,
											"end": 15683,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15722,
											"end": 15726,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 15704,
											"end": 15720,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 15701,
											"end": 15727,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 15698,
											"end": 15700,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15698,
											"end": 15700,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 15698,
											"end": 15700,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15688,
											"end": 16312,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15688,
											"end": 16312,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15698,
											"end": 15700,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 15698,
											"end": 15700,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15764,
											"end": 15766,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15758,
											"end": 15767,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15829,
											"end": 15845,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 15825,
											"end": 15850,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15825,
											"end": 15850,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15822,
											"end": 15823,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15758,
											"end": 15767,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15801,
											"end": 15851,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 15880,
											"end": 15884,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15874,
											"end": 15885,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15904,
											"end": 15920,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 15939,
											"end": 15957,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16010,
											"end": 16012,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16003,
											"end": 16007,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 15995,
											"end": 16001,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15991,
											"end": 16008,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15988,
											"end": 16013,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 15983,
											"end": 15985,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15975,
											"end": 15981,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15972,
											"end": 15986,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 15969,
											"end": 16014,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 15966,
											"end": 15968,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15966,
											"end": 15968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 15966,
											"end": 15968,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16017,
											"end": 16022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16017,
											"end": 16022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16017,
											"end": 16022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16017,
											"end": 16022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16017,
											"end": 16022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15688,
											"end": 16312,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15688,
											"end": 16312,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15966,
											"end": 15968,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 15966,
											"end": 15968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16054,
											"end": 16060,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16048,
											"end": 16052,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16044,
											"end": 16061,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16033,
											"end": 16061,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16033,
											"end": 16061,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16090,
											"end": 16093,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16084,
											"end": 16094,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16117,
											"end": 16119,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16109,
											"end": 16115,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16106,
											"end": 16120,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 16103,
											"end": 16105,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16103,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 16103,
											"end": 16105,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16123,
											"end": 16128,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16123,
											"end": 16128,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16123,
											"end": 16128,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16123,
											"end": 16128,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16123,
											"end": 16128,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16123,
											"end": 16128,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15688,
											"end": 16312,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15688,
											"end": 16312,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16103,
											"end": 16105,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 16103,
											"end": 16105,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16207,
											"end": 16209,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16188,
											"end": 16204,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 16182,
											"end": 16186,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 16178,
											"end": 16205,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16174,
											"end": 16210,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16167,
											"end": 16171,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16158,
											"end": 16164,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16153,
											"end": 16156,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16149,
											"end": 16165,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16145,
											"end": 16172,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16142,
											"end": 16211,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 16139,
											"end": 16141,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16139,
											"end": 16141,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 16139,
											"end": 16141,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16214,
											"end": 16219,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16214,
											"end": 16219,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16214,
											"end": 16219,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16214,
											"end": 16219,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16214,
											"end": 16219,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16214,
											"end": 16219,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15688,
											"end": 16312,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15688,
											"end": 16312,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16139,
											"end": 16141,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 16139,
											"end": 16141,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16230,
											"end": 16287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 16281,
											"end": 16285,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16272,
											"end": 16278,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16264,
											"end": 16270,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16260,
											"end": 16279,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16256,
											"end": 16286,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16250,
											"end": 16254,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 16230,
											"end": 16287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 16230,
											"end": 16287,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16230,
											"end": 16287,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 16230,
											"end": 16287,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16303,
											"end": 16306,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16306,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 15688,
											"end": 16312,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15688,
											"end": 16312,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16317,
											"end": 16448,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 16317,
											"end": 16448,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16391,
											"end": 16423,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16391,
											"end": 16423,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16381,
											"end": 16424,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16381,
											"end": 16424,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 16371,
											"end": 16373,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 16371,
											"end": 16373,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16438,
											"end": 16439,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16435,
											"end": 16436,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16428,
											"end": 16440,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16371,
											"end": 16373,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 16371,
											"end": 16373,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16361,
											"end": 16448,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16361,
											"end": 16448,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x04d6d1342ece664085921a4fabc928a7bcf1cf2873fa81780f61a54dc2b9b66e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6d2b052effa2e9a7479b0fea53b46f4cbbd91947848ef632aadad20ae2e9275\",\"dweb:/ipfs/QmcZp7f5cooGZrhHE8RC1yQR53RFZt19d5fyVqNfbHmPgY\"]},\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 165,
								"contract": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 167,
								"contract": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":179:7908  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":179:7908  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202398cee1a00b4ea2357661929d724258b175ba9ea5c13488239a6f788fdc923f64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202398cee1a00b4ea2357661929d724258b175ba9ea5c13488239a6f788fdc923f64736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 SWAP9 0xCE 0xE1 LOG0 SIGNEXTEND 0x4E LOG2 CALLDATALOAD PUSH23 0x61929D724258B175BA9EA5C13488239A6F788FDC923F64 PUSH20 0x6F6C634300080400330000000000000000000000 ",
							"sourceMap": "179:7729:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;179:7729:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202398cee1a00b4ea2357661929d724258b175ba9ea5c13488239a6f788fdc923f64736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 SWAP9 0xCE 0xE1 LOG0 SIGNEXTEND 0x4E LOG2 CALLDATALOAD PUSH23 0x61929D724258B175BA9EA5C13488239A6F788FDC923F64 PUSH20 0x6F6C634300080400330000000000000000000000 ",
							"sourceMap": "179:7729:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202398cee1a00b4ea2357661929d724258b175ba9ea5c13488239a6f788fdc923f64736f6c63430008040033",
									".code": [
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> msc_token/ERC1155.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "msc_token/ERC1155.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"msc_token/ERC1155.sol": {
				"ast": {
					"absolutePath": "msc_token/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1704
						],
						"Context": [
							1726
						],
						"ERC1155": [
							1229
						],
						"ERC165": [
							1750
						],
						"GameItems": [
							133
						],
						"IERC1155": [
							1351
						],
						"IERC1155MetadataURI": [
							1407
						],
						"IERC1155Receiver": [
							1392
						],
						"IERC165": [
							1762
						]
					},
					"id": 134,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "2:23:0"
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "./node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 134,
							"sourceUnit": 1230,
							"src": "31:74:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "ERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1229,
										"src": "131:7:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "131:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 133,
							"linearizedBaseContracts": [
								133,
								1229,
								1407,
								1351,
								1750,
								1762,
								1726
							],
							"name": "GameItems",
							"nameLocation": "118:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "3e4bee38",
									"id": 7,
									"mutability": "constant",
									"name": "GOLD",
									"nameLocation": "170:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 133,
									"src": "146:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 5,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "146:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "177:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e3e55f08",
									"id": 10,
									"mutability": "constant",
									"name": "SILVER",
									"nameLocation": "209:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 133,
									"src": "185:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "185:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "218:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d562e204",
									"id": 13,
									"mutability": "constant",
									"name": "THORS_HAMMER",
									"nameLocation": "250:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 133,
									"src": "226:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 11,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "226:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "265:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "13dc989f",
									"id": 16,
									"mutability": "constant",
									"name": "SWORD",
									"nameLocation": "297:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 133,
									"src": "273:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 14,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 15,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "305:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5b2725ed",
									"id": 19,
									"mutability": "constant",
									"name": "SHIELD",
									"nameLocation": "337:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 133,
									"src": "313:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 17,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "313:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 18,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "346:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "421:244:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 26,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "438:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "438:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 28,
															"name": "GOLD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "450:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "456:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "460:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "456:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														{
															"hexValue": "",
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "464:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 25,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "432:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "432:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "432:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 36,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "484:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "484:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 38,
															"name": "SILVER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "496:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000000"
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "504:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3237",
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "508:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_27_by_1",
																	"typeString": "int_const 27"
																},
																"value": "27"
															},
															"src": "504:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000000"
															}
														},
														{
															"hexValue": "",
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "512:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000000"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 35,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "478:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "478:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "478:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 46,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "532:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "532:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 48,
															"name": "THORS_HAMMER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "544:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "558:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "561:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 45,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "526:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "526:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "526:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 54,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "581:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "581:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 56,
															"name": "SWORD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "593:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															},
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "600:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "39",
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "604:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_9_by_1",
																	"typeString": "int_const 9"
																},
																"value": "9"
															},
															"src": "600:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															}
														},
														{
															"hexValue": "",
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "607:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 53,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "575:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "575:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "575:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 64,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "627:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "627:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 66,
															"name": "SHIELD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "639:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "647:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "39",
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "651:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_9_by_1",
																	"typeString": "int_const 9"
																},
																"value": "9"
															},
															"src": "647:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															}
														},
														{
															"hexValue": "",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "654:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 63,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "621:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "621:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "621:36:0"
											}
										]
									},
									"id": 74,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "68747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e",
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "378:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9be393994f02169c966a8f7d954e5f555f9d6fdea83c170362ff79cf2c5ce4f1",
														"typeString": "literal_string \"https://game.example/api/item/{id}.json\""
													},
													"value": "https://game.example/api/item/{id}.json"
												}
											],
											"id": 23,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 21,
												"name": "ERC1155",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1229,
												"src": "370:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "370:50:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "367:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "421:0:0"
									},
									"scope": 133,
									"src": "356:309:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "701:280:0",
										"statements": [
											{
												"assignments": [
													81
												],
												"declarations": [
													{
														"constant": false,
														"id": 81,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "729:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 131,
														"src": "712:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 79,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "712:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 80,
															"nodeType": "ArrayTypeName",
															"src": "712:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 87,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31303030",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "749:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "735:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 82,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "739:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 83,
															"nodeType": "ArrayTypeName",
															"src": "739:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "735:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "712:42:0"
											},
											{
												"assignments": [
													92
												],
												"declarations": [
													{
														"constant": false,
														"id": 92,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "782:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 131,
														"src": "765:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 90,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "765:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 91,
															"nodeType": "ArrayTypeName",
															"src": "765:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 98,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31303030",
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "806:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "792:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 93,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "796:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 94,
															"nodeType": "ArrayTypeName",
															"src": "796:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "792:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "765:46:0"
											},
											{
												"body": {
													"id": 121,
													"nodeType": "Block",
													"src": "857:66:0",
													"statements": [
														{
															"expression": {
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 109,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 81,
																		"src": "872:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 111,
																	"indexExpression": {
																		"id": 110,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 100,
																		"src": "876:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "872:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 112,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 100,
																	"src": "881:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "872:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 114,
															"nodeType": "ExpressionStatement",
															"src": "872:10:0"
														},
														{
															"expression": {
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 115,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 92,
																		"src": "897:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 117,
																	"indexExpression": {
																		"id": 116,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 100,
																		"src": "905:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "897:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "910:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "897:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 120,
															"nodeType": "ExpressionStatement",
															"src": "897:14:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 103,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "842:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "846:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "842:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 122,
												"initializationExpression": {
													"assignments": [
														100
													],
													"declarations": [
														{
															"constant": false,
															"id": 100,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "835:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 122,
															"src": "827:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 99,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "827:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 102,
													"initialValue": {
														"hexValue": "30",
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "839:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "827:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "852:3:0",
														"subExpression": {
															"id": 106,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "852:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 108,
													"nodeType": "ExpressionStatement",
													"src": "852:3:0"
												},
												"nodeType": "ForStatement",
												"src": "822:101:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 124,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "944:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "944:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 126,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "956:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 127,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "961:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "970:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 123,
														"name": "_mintBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "933:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "933:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "933:40:0"
											}
										]
									},
									"functionSelector": "6ecf11d7",
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintBatch",
									"nameLocation": "682:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "691:2:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "701:0:0"
									},
									"scope": 133,
									"src": "673:308:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 134,
							"src": "109:875:0",
							"usedErrors": []
						}
					],
					"src": "2:982:0"
				},
				"id": 0
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1704
						],
						"Context": [
							1726
						],
						"ERC1155": [
							1229
						],
						"ERC165": [
							1750
						],
						"IERC1155": [
							1351
						],
						"IERC1155MetadataURI": [
							1407
						],
						"IERC1155Receiver": [
							1392
						],
						"IERC165": [
							1762
						]
					},
					"id": 1230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 135,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:1"
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1230,
							"sourceUnit": 1352,
							"src": "119:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 137,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1230,
							"sourceUnit": 1393,
							"src": "144:32:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 138,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1230,
							"sourceUnit": 1408,
							"src": "177:46:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 139,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1230,
							"sourceUnit": 1705,
							"src": "224:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1230,
							"sourceUnit": 1727,
							"src": "258:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 141,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1230,
							"sourceUnit": 1751,
							"src": "292:46:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 143,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1726,
										"src": "575:7:1"
									},
									"id": 144,
									"nodeType": "InheritanceSpecifier",
									"src": "575:7:1"
								},
								{
									"baseName": {
										"id": 145,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1750,
										"src": "584:6:1"
									},
									"id": 146,
									"nodeType": "InheritanceSpecifier",
									"src": "584:6:1"
								},
								{
									"baseName": {
										"id": 147,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1351,
										"src": "592:8:1"
									},
									"id": 148,
									"nodeType": "InheritanceSpecifier",
									"src": "592:8:1"
								},
								{
									"baseName": {
										"id": 149,
										"name": "IERC1155MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1407,
										"src": "602:19:1"
									},
									"id": 150,
									"nodeType": "InheritanceSpecifier",
									"src": "602:19:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 142,
								"nodeType": "StructuredDocumentation",
								"src": "340:214:1",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1229,
							"linearizedBaseContracts": [
								1229,
								1407,
								1351,
								1750,
								1762,
								1726
							],
							"name": "ERC1155",
							"nameLocation": "564:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 153,
									"libraryName": {
										"id": 151,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1704,
										"src": "634:7:1"
									},
									"nodeType": "UsingForDirective",
									"src": "628:26:1",
									"typeName": {
										"id": 152,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "646:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "765:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1229,
									"src": "709:65:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 158,
										"keyType": {
											"id": 154,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "717:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "709:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 157,
											"keyType": {
												"id": 155,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "736:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "728:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 156,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "747:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "884:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1229,
									"src": "831:71:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 164,
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "839:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "831:44:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 163,
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "858:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "850:24:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 162,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "869:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1038:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 1229,
									"src": "1023:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 166,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1023:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "1124:30:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 174,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "1142:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 173,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "1134:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1134:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "1134:13:1"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "1049:38:1",
										"text": " @dev See {_setURI}."
									},
									"id": 178,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1118:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1104:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 169,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1104:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:20:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1124:0:1"
									},
									"scope": 1229,
									"src": "1092:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1749,
										1761
									],
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "1329:197:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 189,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "1358:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 191,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1351,
																			"src": "1378:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1351_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1351_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 190,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1373:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1373:14:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1351",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1373:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1358:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 195,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "1415:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 197,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1407,
																			"src": "1435:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1407_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1407_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 196,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1430:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1430:25:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1407",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1430:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1415:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1358:109:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 204,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "1507:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 202,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1483:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1229_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1749,
															"src": "1483:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1483:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1358:161:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 188,
												"id": 207,
												"nodeType": "Return",
												"src": "1339:180:1"
											}
										]
									},
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1160:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1230:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 185,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 183,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1750,
												"src": "1297:6:1"
											},
											{
												"id": 184,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1762,
												"src": "1305:7:1"
											}
										],
										"src": "1288:25:1"
									},
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1255:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1248:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 180,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1248:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1247:20:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1323:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1323:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:6:1"
									},
									"scope": 1229,
									"src": "1221:305:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1406
									],
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2000:28:1",
										"statements": [
											{
												"expression": {
													"id": 218,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2017:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 217,
												"id": 219,
												"nodeType": "Return",
												"src": "2010:11:1"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "1532:388:1",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1934:3:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 214,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1967:8:1"
									},
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1938:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1937:9:1"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1985:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 215,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1985:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1984:15:1"
									},
									"scope": 1229,
									"src": "1925:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1289
									],
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "2265:133:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 233,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 224,
																"src": "2283:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2302:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2294:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 234,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2294:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2294:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2283:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2306:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															},
															"value": "ERC1155: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															}
														],
														"id": 232,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2275:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2275:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "2275:77:1"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 242,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "2369:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 244,
														"indexExpression": {
															"id": 243,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "2379:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2369:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 246,
													"indexExpression": {
														"id": 245,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "2383:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2369:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 247,
												"nodeType": "Return",
												"src": "2362:29:1"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "2034:131:1",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2179:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 228,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2238:8:1"
									},
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2197:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2189:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2214:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2206:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2188:29:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2256:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2255:9:1"
									},
									"scope": 1229,
									"src": "2170:228:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1302
									],
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "2728:335:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 264,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 253,
																	"src": "2746:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2746:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 266,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "2765:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2765:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2746:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2777:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 263,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2738:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2738:83:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "2738:83:1"
											},
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2849:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 312,
														"src": "2832:30:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 274,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2832:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 275,
															"nodeType": "ArrayTypeName",
															"src": "2832:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 283,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 280,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "2879:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2879:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2865:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 277,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2869:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 278,
															"nodeType": "ArrayTypeName",
															"src": "2869:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2865:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2832:63:1"
											},
											{
												"body": {
													"id": 308,
													"nodeType": "Block",
													"src": "2952:74:1",
													"statements": [
														{
															"expression": {
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 295,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "2966:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 297,
																	"indexExpression": {
																		"id": 296,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 285,
																		"src": "2980:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2966:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 299,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 253,
																				"src": "2995:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 301,
																			"indexExpression": {
																				"id": 300,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 285,
																				"src": "3004:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2995:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 302,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 256,
																				"src": "3008:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 304,
																			"indexExpression": {
																				"id": 303,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 285,
																				"src": "3012:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3008:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 298,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 249,
																		"src": "2985:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2985:30:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2966:49:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 307,
															"nodeType": "ExpressionStatement",
															"src": "2966:49:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 288,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 285,
														"src": "2926:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 289,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "2930:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2930:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2926:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"initializationExpression": {
													"assignments": [
														285
													],
													"declarations": [
														{
															"constant": false,
															"id": 285,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2919:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 309,
															"src": "2911:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 284,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2911:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 287,
													"initialValue": {
														"hexValue": "30",
														"id": 286,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2911:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2947:3:1",
														"subExpression": {
															"id": 292,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "2949:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 294,
													"nodeType": "ExpressionStatement",
													"src": "2947:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2906:120:1"
											},
											{
												"expression": {
													"id": 310,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 276,
													"src": "3043:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 262,
												"id": 311,
												"nodeType": "Return",
												"src": "3036:20:1"
											}
										]
									},
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "2404:146:1",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2564:14:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 258,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2680:8:1"
									},
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2596:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2579:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 251,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2579:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 252,
													"nodeType": "ArrayTypeName",
													"src": "2579:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2623:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2606:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 254,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2606:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 255,
													"nodeType": "ArrayTypeName",
													"src": "2606:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2578:49:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2706:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 259,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2706:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 260,
													"nodeType": "ArrayTypeName",
													"src": "2706:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2705:18:1"
									},
									"scope": 1229,
									"src": "2555:508:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1310
									],
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "3215:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 323,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1716,
																"src": "3244:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3244:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 325,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "3258:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 326,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "3268:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 322,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "3225:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "3225:52:1"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "3069:57:1",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3140:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 320,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3206:8:1"
									},
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3166:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "3158:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3158:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3181:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "3176:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 317,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3176:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:33:1"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3215:0:1"
									},
									"scope": 1229,
									"src": "3131:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1320
									],
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "3456:61:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 341,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3473:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 343,
														"indexExpression": {
															"id": 342,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "3492:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3473:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 345,
													"indexExpression": {
														"id": 344,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "3501:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3473:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 340,
												"id": 346,
												"nodeType": "Return",
												"src": "3466:44:1"
											}
										]
									},
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "3290:56:1",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3360:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 337,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3432:8:1"
									},
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3385:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3377:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3377:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3402:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3394:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3376:35:1"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3450:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 338,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3450:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3449:6:1"
									},
									"scope": 1229,
									"src": "3351:166:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1334
									],
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "3753:220:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 364,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "3784:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 365,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1716,
																		"src": "3792:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3792:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3784:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 369,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 351,
																		"src": "3825:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 370,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1716,
																			"src": "3831:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3831:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 368,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 348,
																	"src": "3808:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3808:36:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3784:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3858:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 363,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3763:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3763:148:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "3763:148:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 378,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "3939:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 379,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "3945:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 380,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "3949:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 381,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "3953:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 382,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "3961:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 377,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "3921:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3921:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "3921:45:1"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "3523:56:1",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3593:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 361,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3744:8:1"
									},
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3627:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "3619:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3619:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3649:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "3641:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3641:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3669:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "3661:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3661:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3689:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "3681:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3681:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3718:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "3705:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3705:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3609:119:1"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3753:0:1"
									},
									"scope": 1229,
									"src": "3584:389:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1350
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "4239:236:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 404,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 389,
																	"src": "4270:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 405,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1716,
																		"src": "4278:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4278:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4270:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 409,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 389,
																		"src": "4311:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 410,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1716,
																			"src": "4317:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4317:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 408,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 348,
																	"src": "4294:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4294:36:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4270:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4344:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 403,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4249:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4249:157:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "4249:157:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 418,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "4439:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 419,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "4445:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 420,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "4449:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 421,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "4454:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 422,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "4463:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 417,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "4416:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4416:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "4416:52:1"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "3979:61:1",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4054:21:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 401,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4230:8:1"
									},
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4093:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "4085:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4085:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4115:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "4107:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4107:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4144:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "4127:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 392,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4127:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 393,
													"nodeType": "ArrayTypeName",
													"src": "4127:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4174:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "4157:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 395,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4157:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 396,
													"nodeType": "ArrayTypeName",
													"src": "4157:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4204:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "4191:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 398,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4191:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:139:1"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4239:0:1"
									},
									"scope": 1229,
									"src": "4045:430:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "5088:634:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 441,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "5106:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5120:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5112:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 442,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5112:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5112:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5106:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5124:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 440,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "5098:66:1"
											},
											{
												"assignments": [
													451
												],
												"declarations": [
													{
														"constant": false,
														"id": 451,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5183:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 519,
														"src": "5175:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 450,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5175:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 454,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 452,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1716,
														"src": "5194:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5194:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5175:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 456,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "5238:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 457,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "5248:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 458,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "5254:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 460,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "5276:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 459,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1228,
																"src": "5258:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5258:21:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 463,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 435,
																	"src": "5299:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 462,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1228,
																"src": "5281:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5281:25:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 465,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "5308:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 455,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "5217:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5217:96:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 467,
												"nodeType": "ExpressionStatement",
												"src": "5217:96:1"
											},
											{
												"assignments": [
													469
												],
												"declarations": [
													{
														"constant": false,
														"id": 469,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "5332:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 519,
														"src": "5324:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 468,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5324:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 475,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 470,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "5346:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 472,
														"indexExpression": {
															"id": 471,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "5356:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5346:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 474,
													"indexExpression": {
														"id": 473,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "5360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5346:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5324:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 477,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "5383:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 478,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "5398:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5383:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5406:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 476,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5375:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "5375:76:1"
											},
											{
												"id": 493,
												"nodeType": "UncheckedBlock",
												"src": "5461:77:1",
												"statements": [
													{
														"expression": {
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 483,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 159,
																		"src": "5485:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 486,
																	"indexExpression": {
																		"id": 484,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 433,
																		"src": "5495:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5485:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 487,
																"indexExpression": {
																	"id": 485,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 429,
																	"src": "5499:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5485:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 488,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 469,
																	"src": "5507:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 489,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 435,
																	"src": "5521:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5507:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5485:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 492,
														"nodeType": "ExpressionStatement",
														"src": "5485:42:1"
													}
												]
											},
											{
												"expression": {
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 494,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "5547:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 497,
															"indexExpression": {
																"id": 495,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 433,
																"src": "5557:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5547:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 498,
														"indexExpression": {
															"id": 496,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "5561:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5547:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 499,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "5568:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5547:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "5547:27:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 503,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "5605:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 504,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "5615:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 505,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "5621:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "5625:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 507,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "5629:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 502,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "5590:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5590:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 509,
												"nodeType": "EmitStatement",
												"src": "5585:51:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 511,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "5678:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "5688:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 513,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "5694:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 514,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "5698:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 515,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "5702:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 516,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "5710:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 510,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "5647:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5647:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 518,
												"nodeType": "ExpressionStatement",
												"src": "5647:68:1"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "4481:439:1",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "4934:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4969:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "4961:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4961:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4991:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "4983:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5011:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "5003:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5003:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5031:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "5023:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5023:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5060:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "5047:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 436,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5047:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4951:119:1"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:1"
									},
									"scope": 1229,
									"src": "4925:797:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "6256:857:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 537,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 528,
																	"src": "6274:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6274:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 539,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "6288:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6288:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6274:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6304:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 536,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6266:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6266:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "6266:81:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 546,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 525,
																"src": "6365:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6379:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6371:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 547,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6371:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6371:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6365:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6383:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 545,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6357:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "6357:66:1"
											},
											{
												"assignments": [
													556
												],
												"declarations": [
													{
														"constant": false,
														"id": 556,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "6442:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 645,
														"src": "6434:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 555,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6434:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 559,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 557,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1716,
														"src": "6453:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6453:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6434:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 561,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "6497:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 562,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "6507:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 563,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "6513:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 564,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "6517:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 565,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "6522:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 566,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "6531:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 560,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "6476:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6476:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "6476:60:1"
											},
											{
												"body": {
													"id": 626,
													"nodeType": "Block",
													"src": "6588:370:1",
													"statements": [
														{
															"assignments": [
																581
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 581,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6610:2:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 626,
																	"src": "6602:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 580,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6602:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 585,
															"initialValue": {
																"baseExpression": {
																	"id": 582,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 528,
																	"src": "6615:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 584,
																"indexExpression": {
																	"id": 583,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "6619:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6615:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6602:19:1"
														},
														{
															"assignments": [
																587
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 587,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "6643:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 626,
																	"src": "6635:14:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 586,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6635:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 591,
															"initialValue": {
																"baseExpression": {
																	"id": 588,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "6652:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 590,
																"indexExpression": {
																	"id": 589,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "6660:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6652:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6635:27:1"
														},
														{
															"assignments": [
																593
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 593,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6685:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 626,
																	"src": "6677:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 592,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6677:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 599,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 594,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 159,
																		"src": "6699:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 596,
																	"indexExpression": {
																		"id": 595,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "6709:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6699:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 598,
																"indexExpression": {
																	"id": 597,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "6713:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6699:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6677:41:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 601,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 593,
																			"src": "6740:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 602,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "6755:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6740:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6763:44:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 600,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6732:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6732:76:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 606,
															"nodeType": "ExpressionStatement",
															"src": "6732:76:1"
														},
														{
															"id": 617,
															"nodeType": "UncheckedBlock",
															"src": "6822:85:1",
															"statements": [
																{
																	"expression": {
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 607,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 159,
																					"src": "6850:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 610,
																				"indexExpression": {
																					"id": 608,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 581,
																					"src": "6860:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6850:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 611,
																			"indexExpression": {
																				"id": 609,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "6864:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6850:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 612,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 593,
																				"src": "6872:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 613,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "6886:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6872:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6850:42:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 616,
																	"nodeType": "ExpressionStatement",
																	"src": "6850:42:1"
																}
															]
														},
														{
															"expression": {
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 618,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "6920:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 621,
																		"indexExpression": {
																			"id": 619,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "6930:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6920:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 622,
																	"indexExpression": {
																		"id": 620,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 525,
																		"src": "6934:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6920:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 623,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "6941:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6920:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 625,
															"nodeType": "ExpressionStatement",
															"src": "6920:27:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 573,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "6567:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 574,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "6571:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6571:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6567:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 627,
												"initializationExpression": {
													"assignments": [
														570
													],
													"declarations": [
														{
															"constant": false,
															"id": 570,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6560:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 627,
															"src": "6552:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 569,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6552:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 572,
													"initialValue": {
														"hexValue": "30",
														"id": 571,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6564:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6552:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6583:3:1",
														"subExpression": {
															"id": 577,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "6585:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 579,
													"nodeType": "ExpressionStatement",
													"src": "6583:3:1"
												},
												"nodeType": "ForStatement",
												"src": "6547:411:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 629,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "6987:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 630,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "6997:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 631,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "7003:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 632,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "7007:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 633,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "7012:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 628,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "6973:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6973:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "EmitStatement",
												"src": "6968:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 637,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "7067:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 638,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "7077:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "7083:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "7087:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 641,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "7092:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 642,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "7101:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 636,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "7031:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7031:75:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "7031:75:1"
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "5728:335:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "6077:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6117:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "6109:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6109:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6139:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "6131:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6131:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6168:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "6151:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 526,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6151:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 527,
													"nodeType": "ArrayTypeName",
													"src": "6151:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6198:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "6181:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 529,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6181:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 530,
													"nodeType": "ArrayTypeName",
													"src": "6181:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6228:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "6215:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 532,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6215:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6099:139:1"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6256:0:1"
									},
									"scope": 1229,
									"src": "6068:1045:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "7992:30:1",
										"statements": [
											{
												"expression": {
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 652,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "8002:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 653,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "8009:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8002:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "8002:13:1"
											}
										]
									},
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "7119:812:1",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "7945:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "7967:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "7953:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 648,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7953:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7952:22:1"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7992:0:1"
									},
									"scope": 1229,
									"src": "7936:86:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "8524:424:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 670,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "8542:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8556:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8548:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 671,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8548:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8548:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8542:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8560:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 669,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8534:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8534:62:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 678,
												"nodeType": "ExpressionStatement",
												"src": "8534:62:1"
											},
											{
												"assignments": [
													680
												],
												"declarations": [
													{
														"constant": false,
														"id": 680,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "8615:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 731,
														"src": "8607:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 679,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8607:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 683,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 681,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1716,
														"src": "8626:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8626:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8607:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 685,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "8670:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8688:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8680:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 686,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8680:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8680:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 690,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "8692:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 692,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "8714:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 691,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1228,
																"src": "8696:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8696:21:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 695,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 664,
																	"src": "8737:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 694,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1228,
																"src": "8719:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8719:25:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 697,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "8746:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 684,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "8649:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8649:102:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "8649:102:1"
											},
											{
												"expression": {
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 700,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "8762:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 703,
															"indexExpression": {
																"id": 701,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 662,
																"src": "8772:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8762:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 704,
														"indexExpression": {
															"id": 702,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "8776:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8762:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 705,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "8783:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8762:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "8762:27:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 709,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "8819:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8837:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8829:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 710,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8829:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8829:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 714,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "8841:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 715,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "8845:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 716,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "8849:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 708,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "8804:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8804:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 718,
												"nodeType": "EmitStatement",
												"src": "8799:57:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 720,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "8898:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8916:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8908:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 721,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8908:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8908:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 725,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "8920:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 726,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "8924:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 727,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "8928:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 728,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "8936:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 719,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "8867:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8867:74:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 730,
												"nodeType": "ExpressionStatement",
												"src": "8867:74:1"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "8028:362:1",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8404:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8427:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "8419:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8419:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8447:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "8439:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8439:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8467:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "8459:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8459:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8496:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "8483:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 665,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8483:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8409:97:1"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8524:0:1"
									},
									"scope": 1229,
									"src": "8395:553:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 830,
										"nodeType": "Block",
										"src": "9447:561:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 747,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 735,
																"src": "9465:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9479:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9471:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 748,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9471:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9471:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9465:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9483:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 746,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9457:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9457:62:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "9457:62:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 757,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "9537:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9537:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 759,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "9551:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9551:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9537:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9567:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 756,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9529:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9529:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "9529:81:1"
											},
											{
												"assignments": [
													766
												],
												"declarations": [
													{
														"constant": false,
														"id": 766,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "9629:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 830,
														"src": "9621:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 765,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9621:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 769,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 767,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1716,
														"src": "9640:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9640:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9621:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 771,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "9684:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9702:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9694:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 772,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9694:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9694:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 776,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "9706:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 777,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "9710:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 778,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "9715:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 779,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "9724:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 770,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "9663:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9663:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "9663:66:1"
											},
											{
												"body": {
													"id": 805,
													"nodeType": "Block",
													"src": "9781:60:1",
													"statements": [
														{
															"expression": {
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 793,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "9795:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 798,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 794,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 738,
																				"src": "9805:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 796,
																			"indexExpression": {
																				"id": 795,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 783,
																				"src": "9809:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9805:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9795:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 799,
																	"indexExpression": {
																		"id": 797,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 735,
																		"src": "9813:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9795:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 800,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 741,
																		"src": "9820:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 802,
																	"indexExpression": {
																		"id": 801,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 783,
																		"src": "9828:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9820:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9795:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 804,
															"nodeType": "ExpressionStatement",
															"src": "9795:35:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 786,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "9760:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 787,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "9764:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9764:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9760:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 806,
												"initializationExpression": {
													"assignments": [
														783
													],
													"declarations": [
														{
															"constant": false,
															"id": 783,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "9753:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 806,
															"src": "9745:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 782,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9745:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 785,
													"initialValue": {
														"hexValue": "30",
														"id": 784,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9757:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9745:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9776:3:1",
														"subExpression": {
															"id": 790,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "9776:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 792,
													"nodeType": "ExpressionStatement",
													"src": "9776:3:1"
												},
												"nodeType": "ForStatement",
												"src": "9740:101:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 808,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "9870:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9888:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9880:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 809,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9880:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9880:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 813,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "9892:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 814,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "9896:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 815,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "9901:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 807,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "9856:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9856:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "EmitStatement",
												"src": "9851:58:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 819,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "9956:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9974:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9966:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 820,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9966:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9966:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 824,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "9978:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 825,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "9982:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 826,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "9987:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 827,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "9996:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 818,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "9920:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9920:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 829,
												"nodeType": "ExpressionStatement",
												"src": "9920:81:1"
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "8954:334:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "9302:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9330:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "9322:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9322:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9359:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "9342:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 736,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9342:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 737,
													"nodeType": "ArrayTypeName",
													"src": "9342:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "9389:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "9372:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 739,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9372:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 740,
													"nodeType": "ArrayTypeName",
													"src": "9372:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "9406:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 742,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9312:117:1"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9447:0:1"
									},
									"scope": 1229,
									"src": "9293:715:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 909,
										"nodeType": "Block",
										"src": "10352:526:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 842,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 834,
																"src": "10370:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10386:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10378:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 843,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10378:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10378:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10370:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10390:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 841,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10362:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10362:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "10362:66:1"
											},
											{
												"assignments": [
													852
												],
												"declarations": [
													{
														"constant": false,
														"id": 852,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10447:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 909,
														"src": "10439:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 851,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10439:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 855,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 853,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1716,
														"src": "10458:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10458:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10439:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 857,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "10502:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 858,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "10512:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10526:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10518:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 859,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10518:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10518:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 864,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 836,
																	"src": "10548:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 863,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1228,
																"src": "10530:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10530:21:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 867,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 838,
																	"src": "10571:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 866,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1228,
																"src": "10553:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10553:25:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10580:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 856,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "10481:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10481:102:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "10481:102:1"
											},
											{
												"assignments": [
													873
												],
												"declarations": [
													{
														"constant": false,
														"id": 873,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "10602:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 909,
														"src": "10594:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 872,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10594:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 879,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 874,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "10616:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 876,
														"indexExpression": {
															"id": 875,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "10626:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10616:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 878,
													"indexExpression": {
														"id": 877,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "10630:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10616:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10594:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 881,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "10653:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 882,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 838,
																"src": "10668:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10653:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10676:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 880,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10645:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10645:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "10645:70:1"
											},
											{
												"id": 897,
												"nodeType": "UncheckedBlock",
												"src": "10725:77:1",
												"statements": [
													{
														"expression": {
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 887,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 159,
																		"src": "10749:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 890,
																	"indexExpression": {
																		"id": 888,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 836,
																		"src": "10759:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10749:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 891,
																"indexExpression": {
																	"id": 889,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 834,
																	"src": "10763:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10749:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 892,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 873,
																	"src": "10771:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 893,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 838,
																	"src": "10785:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10771:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10749:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 896,
														"nodeType": "ExpressionStatement",
														"src": "10749:42:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 899,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "10832:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 900,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "10842:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10848:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 901,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10848:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 905,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "10860:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 906,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "10864:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 898,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "10817:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10817:54:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 908,
												"nodeType": "EmitStatement",
												"src": "10812:59:1"
											}
										]
									},
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "10014:229:1",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10257:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10280:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "10272:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10272:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10302:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "10294:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10294:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10322:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "10314:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10262:72:1"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10352:0:1"
									},
									"scope": 1229,
									"src": "10248:630:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "11201:738:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 923,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "11219:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11235:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11227:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 924,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11227:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11227:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11219:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11239:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 922,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11211:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11211:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 931,
												"nodeType": "ExpressionStatement",
												"src": "11211:66:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 933,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 916,
																	"src": "11295:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11295:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 935,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 919,
																	"src": "11309:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11309:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11295:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11325:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 932,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11287:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11287:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 940,
												"nodeType": "ExpressionStatement",
												"src": "11287:81:1"
											},
											{
												"assignments": [
													942
												],
												"declarations": [
													{
														"constant": false,
														"id": 942,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "11387:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 1020,
														"src": "11379:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 941,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11379:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 945,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 943,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1716,
														"src": "11398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11379:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 947,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "11442:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 948,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "11452:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11466:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11458:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 949,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11458:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11458:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 953,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "11470:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 954,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "11475:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11484:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 946,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "11421:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11421:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 957,
												"nodeType": "ExpressionStatement",
												"src": "11421:66:1"
											},
											{
												"body": {
													"id": 1007,
													"nodeType": "Block",
													"src": "11539:323:1",
													"statements": [
														{
															"assignments": [
																970
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 970,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "11561:2:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1007,
																	"src": "11553:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 969,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11553:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 974,
															"initialValue": {
																"baseExpression": {
																	"id": 971,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 916,
																	"src": "11566:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 973,
																"indexExpression": {
																	"id": 972,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "11570:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11566:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11553:19:1"
														},
														{
															"assignments": [
																976
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 976,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "11594:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1007,
																	"src": "11586:14:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 975,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11586:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 980,
															"initialValue": {
																"baseExpression": {
																	"id": 977,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 919,
																	"src": "11603:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 979,
																"indexExpression": {
																	"id": 978,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "11611:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11603:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11586:27:1"
														},
														{
															"assignments": [
																982
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 982,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "11636:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1007,
																	"src": "11628:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 981,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11628:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 988,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 983,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 159,
																		"src": "11650:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 985,
																	"indexExpression": {
																		"id": 984,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 970,
																		"src": "11660:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11650:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 987,
																"indexExpression": {
																	"id": 986,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "11664:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11650:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11628:41:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 990,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 982,
																			"src": "11691:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 991,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 976,
																			"src": "11706:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11691:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11714:38:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 989,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11683:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11683:70:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 995,
															"nodeType": "ExpressionStatement",
															"src": "11683:70:1"
														},
														{
															"id": 1006,
															"nodeType": "UncheckedBlock",
															"src": "11767:85:1",
															"statements": [
																{
																	"expression": {
																		"id": 1004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 996,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 159,
																					"src": "11795:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 999,
																				"indexExpression": {
																					"id": 997,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 970,
																					"src": "11805:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "11795:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1000,
																			"indexExpression": {
																				"id": 998,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 913,
																				"src": "11809:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "11795:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1001,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 982,
																				"src": "11817:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1002,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 976,
																				"src": "11831:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11817:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11795:42:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1005,
																	"nodeType": "ExpressionStatement",
																	"src": "11795:42:1"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 962,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "11518:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 963,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "11522:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 964,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11522:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11518:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1008,
												"initializationExpression": {
													"assignments": [
														959
													],
													"declarations": [
														{
															"constant": false,
															"id": 959,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "11511:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 1008,
															"src": "11503:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 958,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11503:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 961,
													"initialValue": {
														"hexValue": "30",
														"id": 960,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11515:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11503:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11534:3:1",
														"subExpression": {
															"id": 966,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "11534:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 968,
													"nodeType": "ExpressionStatement",
													"src": "11534:3:1"
												},
												"nodeType": "ForStatement",
												"src": "11498:364:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1010,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "11891:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1011,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "11901:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11915:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11907:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1012,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11907:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11907:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1016,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "11919:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1017,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "11924:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1009,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "11877:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11877:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1019,
												"nodeType": "EmitStatement",
												"src": "11872:60:1"
											}
										]
									},
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "10884:183:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "11081:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11109:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "11101:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11101:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11140:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "11123:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 914,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11123:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 915,
													"nodeType": "ArrayTypeName",
													"src": "11123:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "11170:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "11153:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 917,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11153:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 918,
													"nodeType": "ArrayTypeName",
													"src": "11153:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11091:92:1"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11201:0:1"
									},
									"scope": 1229,
									"src": "11072:867:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "12197:200:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1032,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "12215:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1033,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "12224:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12215:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12234:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1031,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12207:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12207:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "12207:71:1"
											},
											{
												"expression": {
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1038,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "12288:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1041,
															"indexExpression": {
																"id": 1039,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "12307:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12288:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1042,
														"indexExpression": {
															"id": 1040,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "12314:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12288:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1043,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "12326:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12288:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "12288:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1047,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "12364:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1048,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "12371:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1049,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "12381:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1046,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "12349:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12349:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "EmitStatement",
												"src": "12344:46:1"
											}
										]
									},
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "11945:124:1",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "12083:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12119:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "12111:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12111:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12142:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "12134:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12134:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "12165:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "12160:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1027,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12160:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12101:78:1"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12197:0:1"
									},
									"scope": 1229,
									"src": "12074:323:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "13543:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1054,
										"nodeType": "StructuredDocumentation",
										"src": "12403:923:1",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "13340:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13378:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "13370:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13370:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13404:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "13396:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13396:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13426:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "13418:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13418:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "13455:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "13438:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1061,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13438:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1062,
													"nodeType": "ArrayTypeName",
													"src": "13438:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "13485:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "13468:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1064,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13468:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1065,
													"nodeType": "ArrayTypeName",
													"src": "13468:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13515:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "13502:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1067,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13502:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13360:165:1"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13543:0:1"
									},
									"scope": 1229,
									"src": "13331:214:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1134,
										"nodeType": "Block",
										"src": "13744:532:1",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1087,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "13758:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1427,
														"src": "13758:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13758:15:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1133,
												"nodeType": "IfStatement",
												"src": "13754:516:1",
												"trueBody": {
													"id": 1132,
													"nodeType": "Block",
													"src": "13775:495:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1114,
																		"nodeType": "Block",
																		"src": "13892:184:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1107,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1103,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1101,
																						"src": "13914:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1104,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1392,
																								"src": "13926:16:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1392_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1105,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1373,
																							"src": "13926:34:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1106,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "13926:43:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "13914:55:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1113,
																				"nodeType": "IfStatement",
																				"src": "13910:152:1",
																				"trueBody": {
																					"id": 1112,
																					"nodeType": "Block",
																					"src": "13971:91:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1109,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14000:42:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1108,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "13993:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1110,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13993:50:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1111,
																							"nodeType": "ExpressionStatement",
																							"src": "13993:50:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1115,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1102,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1101,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "13882:8:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1115,
																				"src": "13875:15:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1100,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "13875:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "13874:17:1"
																	},
																	"src": "13866:210:1"
																},
																{
																	"block": {
																		"id": 1123,
																		"nodeType": "Block",
																		"src": "14111:47:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1120,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1117,
																							"src": "14136:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1119,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14129:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1121,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14129:14:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1122,
																				"nodeType": "ExpressionStatement",
																				"src": "14129:14:1"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1124,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1118,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1117,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14103:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1124,
																				"src": "14089:20:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1116,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "14089:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14088:22:1"
																	},
																	"src": "14077:81:1"
																},
																{
																	"block": {
																		"id": 1129,
																		"nodeType": "Block",
																		"src": "14165:95:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1126,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14190:54:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1125,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14183:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1127,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14183:62:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1128,
																				"nodeType": "ExpressionStatement",
																				"src": "14183:62:1"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1130,
																	"nodeType": "TryCatchClause",
																	"src": "14159:101:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1094,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1074,
																		"src": "13832:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1095,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1076,
																		"src": "13842:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1096,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1080,
																		"src": "13848:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1097,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1082,
																		"src": "13852:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1098,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1084,
																		"src": "13860:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1091,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1078,
																				"src": "13810:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1090,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1392,
																			"src": "13793:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1392_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13793:20:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1392",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1373,
																	"src": "13793:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13793:72:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1131,
															"nodeType": "TryStatement",
															"src": "13789:471:1"
														}
													]
												}
											}
										]
									},
									"id": 1135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "13560:30:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13608:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "13600:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13600:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13634:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "13626:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13626:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13656:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "13648:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13648:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "13676:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "13668:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13696:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "13688:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13688:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13725:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "13712:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1083,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13712:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13590:145:1"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13744:0:1"
									},
									"scope": 1229,
									"src": "13551:725:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "14500:574:1",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1152,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "14514:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1427,
														"src": "14514:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14514:15:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1198,
												"nodeType": "IfStatement",
												"src": "14510:558:1",
												"trueBody": {
													"id": 1197,
													"nodeType": "Block",
													"src": "14531:537:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1179,
																		"nodeType": "Block",
																		"src": "14685:189:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1172,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1168,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1166,
																						"src": "14707:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1169,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1392,
																								"src": "14719:16:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1392_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1170,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1391,
																							"src": "14719:39:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1171,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14719:48:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14707:60:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1178,
																				"nodeType": "IfStatement",
																				"src": "14703:157:1",
																				"trueBody": {
																					"id": 1177,
																					"nodeType": "Block",
																					"src": "14769:91:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1174,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14798:42:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1173,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "14791:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1175,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14791:50:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1176,
																							"nodeType": "ExpressionStatement",
																							"src": "14791:50:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1180,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1167,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1166,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "14662:8:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1180,
																				"src": "14655:15:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1165,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14655:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14637:47:1"
																	},
																	"src": "14629:245:1"
																},
																{
																	"block": {
																		"id": 1188,
																		"nodeType": "Block",
																		"src": "14909:47:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1185,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1182,
																							"src": "14934:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1184,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14927:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1186,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14927:14:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1187,
																				"nodeType": "ExpressionStatement",
																				"src": "14927:14:1"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1189,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1183,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1182,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14901:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1189,
																				"src": "14887:20:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1181,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "14887:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14886:22:1"
																	},
																	"src": "14875:81:1"
																},
																{
																	"block": {
																		"id": 1194,
																		"nodeType": "Block",
																		"src": "14963:95:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1191,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14988:54:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1190,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14981:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1192,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14981:62:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1193,
																				"nodeType": "ExpressionStatement",
																				"src": "14981:62:1"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1195,
																	"nodeType": "TryCatchClause",
																	"src": "14957:101:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1159,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1137,
																		"src": "14593:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1160,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1139,
																		"src": "14603:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1161,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1144,
																		"src": "14609:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1162,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1147,
																		"src": "14614:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1163,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1149,
																		"src": "14623:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1156,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1141,
																				"src": "14566:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1155,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1392,
																			"src": "14549:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1392_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14549:20:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1392",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1391,
																	"src": "14549:43:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14549:79:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1196,
															"nodeType": "TryStatement",
															"src": "14545:513:1"
														}
													]
												}
											}
										]
									},
									"id": 1200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "14291:35:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14344:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "14336:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14370:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "14362:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14362:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14392:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "14384:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14384:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "14421:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "14404:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1142,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14404:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1143,
													"nodeType": "ArrayTypeName",
													"src": "14404:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14451:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "14434:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1145,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14434:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1146,
													"nodeType": "ArrayTypeName",
													"src": "14434:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14481:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "14468:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1148,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14468:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14326:165:1"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14500:0:1"
									},
									"scope": 1229,
									"src": "14282:792:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "15164:109:1",
										"statements": [
											{
												"assignments": [
													1212
												],
												"declarations": [
													{
														"constant": false,
														"id": 1212,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "15191:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "15174:22:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1210,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15174:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1211,
															"nodeType": "ArrayTypeName",
															"src": "15174:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1218,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15213:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "15199:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1213,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15203:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1214,
															"nodeType": "ArrayTypeName",
															"src": "15203:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15199:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15174:41:1"
											},
											{
												"expression": {
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1219,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "15225:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1221,
														"indexExpression": {
															"hexValue": "30",
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15231:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15225:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1222,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "15236:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15225:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1224,
												"nodeType": "ExpressionStatement",
												"src": "15225:18:1"
											},
											{
												"expression": {
													"id": 1225,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1212,
													"src": "15261:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1207,
												"id": 1226,
												"nodeType": "Return",
												"src": "15254:12:1"
											}
										]
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "15089:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "15115:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "15107:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15107:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15106:17:1"
									},
									"returnParameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "15146:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1204,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15146:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1205,
													"nodeType": "ArrayTypeName",
													"src": "15146:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15145:18:1"
									},
									"scope": 1229,
									"src": "15080:193:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1230,
							"src": "555:14720:1",
							"usedErrors": []
						}
					],
					"src": "94:15182:1"
				},
				"id": 1
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1351
						],
						"IERC165": [
							1762
						]
					},
					"id": 1352,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:2"
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1232,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1352,
							"sourceUnit": 1763,
							"src": "120:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1234,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1762,
										"src": "357:7:2"
									},
									"id": 1235,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1233,
								"nodeType": "StructuredDocumentation",
								"src": "169:165:2",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1351,
							"linearizedBaseContracts": [
								1351,
								1762
							],
							"name": "IERC1155",
							"nameLocation": "345:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "371:121:2",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 1248,
									"name": "TransferSingle",
									"nameLocation": "503:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "534:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "518:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "560:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "544:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "582:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "566:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "594:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "586:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "606:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "598:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:95:2"
									},
									"src": "497:116:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "619:144:2",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 1263,
									"name": "TransferBatch",
									"nameLocation": "774:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "813:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "797:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "847:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "831:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "877:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "861:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "899:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "889:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1256,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "889:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1257,
													"nodeType": "ArrayTypeName",
													"src": "889:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "922:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "912:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1259,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "912:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1260,
													"nodeType": "ArrayTypeName",
													"src": "912:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:147:2"
									},
									"src": "768:167:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1264,
										"nodeType": "StructuredDocumentation",
										"src": "941:147:2",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 1272,
									"name": "ApprovalForAll",
									"nameLocation": "1099:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1130:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "1114:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1268,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "1139:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1170:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "1165:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1269,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1165:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:66:2"
									},
									"src": "1093:87:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1273,
										"nodeType": "StructuredDocumentation",
										"src": "1186:343:2",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 1279,
									"name": "URI",
									"nameLocation": "1540:3:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "1544:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1274,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1574:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "1558:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:34:2"
									},
									"src": "1534:44:2"
								},
								{
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "1584:173:2",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1771:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1789:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "1781:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1806:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "1798:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:29:2"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "1833:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:9:2"
									},
									"scope": 1351,
									"src": "1762:80:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1290,
										"nodeType": "StructuredDocumentation",
										"src": "1848:188:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2050:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2084:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "2065:27:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1291,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2065:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1292,
													"nodeType": "ArrayTypeName",
													"src": "2065:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2113:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "2094:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1294,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2094:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1295,
													"nodeType": "ArrayTypeName",
													"src": "2094:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:53:2"
									},
									"returnParameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "2165:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1298,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2165:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1299,
													"nodeType": "ArrayTypeName",
													"src": "2165:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:18:2"
									},
									"scope": 1351,
									"src": "2041:142:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1303,
										"nodeType": "StructuredDocumentation",
										"src": "2189:248:2",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1310,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2451:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2477:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "2469:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2492:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "2487:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1306,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2487:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:33:2"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2510:0:2"
									},
									"scope": 1351,
									"src": "2442:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1311,
										"nodeType": "StructuredDocumentation",
										"src": "2517:135:2",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1320,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2666:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2691:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "2683:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2708:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "2700:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:35:2"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "2741:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1317,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2741:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:6:2"
									},
									"scope": 1351,
									"src": "2657:90:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1321,
										"nodeType": "StructuredDocumentation",
										"src": "2753:559:2",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1334,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3326:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3360:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3352:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3382:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3374:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3402:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3394:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3422:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3414:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3453:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3438:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1330,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3438:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:121:2"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:0:2"
									},
									"scope": 1351,
									"src": "3317:156:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "3479:390:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1350,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3883:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3922:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "3914:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3914:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3944:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "3936:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3975:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "3956:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1340,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3956:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1341,
													"nodeType": "ArrayTypeName",
													"src": "3956:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "3988:26:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1343,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3988:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1344,
													"nodeType": "ArrayTypeName",
													"src": "3988:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4039:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "4024:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1346,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4024:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:145:2"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4058:0:2"
									},
									"scope": 1351,
									"src": "3874:185:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1352,
							"src": "335:3726:2",
							"usedErrors": []
						}
					],
					"src": "95:3967:2"
				},
				"id": 2
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1392
						],
						"IERC165": [
							1762
						]
					},
					"id": 1393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1353,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:3"
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1354,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1393,
							"sourceUnit": 1763,
							"src": "128:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1356,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1762,
										"src": "247:7:3"
									},
									"id": 1357,
									"nodeType": "InheritanceSpecifier",
									"src": "247:7:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1355,
								"nodeType": "StructuredDocumentation",
								"src": "177:39:3",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1392,
							"linearizedBaseContracts": [
								1392,
								1762
							],
							"name": "IERC1155Receiver",
							"nameLocation": "227:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1358,
										"nodeType": "StructuredDocumentation",
										"src": "261:816:3",
										"text": "@dev Handles the receipt of a single ERC1155 token type. This function is\ncalled at the end of a `safeTransferFrom` after the balance has been updated.\nTo accept the transfer, this must return\n`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n(i.e. 0xf23a6e61, or its own function selector).\n@param operator The address which initiated the transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param id The ID of the token being transferred\n@param value The amount of tokens being transferred\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1373,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1091:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1126:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "1118:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1118:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1152:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "1144:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1174:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "1166:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1194:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "1186:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1224:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "1209:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1209:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1108:126:3"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "1253:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1370,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1253:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1252:8:3"
									},
									"scope": 1392,
									"src": "1082:179:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1374,
										"nodeType": "StructuredDocumentation",
										"src": "1267:977:3",
										"text": "@dev Handles the receipt of a multiple ERC1155 token types. This function\nis called at the end of a `safeBatchTransferFrom` after the balances have\nbeen updated. To accept the transfer(s), this must return\n`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n(i.e. 0xbc197c81, or its own function selector).\n@param operator The address which initiated the batch transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param ids An array containing ids of each token being transferred (order and length must match values array)\n@param values An array containing amounts of each token being transferred (order and length must match ids array)\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2258:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2298:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "2290:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "2316:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2357:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "2338:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1379,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2338:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1380,
													"nodeType": "ArrayTypeName",
													"src": "2338:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2389:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "2370:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1382,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2370:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1383,
													"nodeType": "ArrayTypeName",
													"src": "2370:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "2405:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1385,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2405:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2280:150:3"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "2449:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1388,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2449:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:8:3"
									},
									"scope": 1392,
									"src": "2249:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1393,
							"src": "217:2242:3",
							"usedErrors": []
						}
					],
					"src": "103:2357:3"
				},
				"id": 3
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1351
						],
						"IERC1155MetadataURI": [
							1407
						],
						"IERC165": [
							1762
						]
					},
					"id": 1408,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "117:23:4"
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1395,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1408,
							"sourceUnit": 1352,
							"src": "142:25:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1397,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1351,
										"src": "397:8:4"
									},
									"id": 1398,
									"nodeType": "InheritanceSpecifier",
									"src": "397:8:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1396,
								"nodeType": "StructuredDocumentation",
								"src": "169:194:4",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1407,
							"linearizedBaseContracts": [
								1407,
								1351,
								1762
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "374:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1399,
										"nodeType": "StructuredDocumentation",
										"src": "412:192:4",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1406,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "618:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "630:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "622:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:12:4"
									},
									"returnParameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "657:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1403,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "657:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:15:4"
									},
									"scope": 1407,
									"src": "609:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1408,
							"src": "364:310:4",
							"usedErrors": []
						}
					],
					"src": "117:558:4"
				},
				"id": 4
			},
			"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1704
						]
					},
					"id": 1705,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1409,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1410,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1704,
							"linearizedBaseContracts": [
								1704
							],
							"name": "Address",
							"nameLocation": "187:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1426,
										"nodeType": "Block",
										"src": "837:311:5",
										"statements": [
											{
												"assignments": [
													1419
												],
												"declarations": [
													{
														"constant": false,
														"id": 1419,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1042:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1426,
														"src": "1034:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1418,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1034:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1420,
												"nodeType": "VariableDeclarationStatement",
												"src": "1034:12:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1065:52:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1079:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1099:7:5"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1087:11:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:20:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1079:4:5"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1413,
														"isOffset": false,
														"isSlot": false,
														"src": "1099:7:5",
														"valueSize": 1
													},
													{
														"declaration": 1419,
														"isOffset": false,
														"isSlot": false,
														"src": "1079:4:5",
														"valueSize": 1
													}
												],
												"id": 1421,
												"nodeType": "InlineAssembly",
												"src": "1056:61:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1422,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "1133:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1423,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1140:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1133:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1417,
												"id": 1425,
												"nodeType": "Return",
												"src": "1126:15:5"
											}
										]
									},
									"documentation": {
										"id": 1411,
										"nodeType": "StructuredDocumentation",
										"src": "201:565:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "780:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "799:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "791:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "790:17:5"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "831:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1415,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "831:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:6:5"
									},
									"scope": 1704,
									"src": "771:377:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1460,
										"nodeType": "Block",
										"src": "2136:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1438,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2162:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1704",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1704",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2154:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1436,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2154:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2154:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2154:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1441,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1432,
																"src": "2179:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2154:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2187:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2146:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1445,
												"nodeType": "ExpressionStatement",
												"src": "2146:73:5"
											},
											{
												"assignments": [
													1447,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1447,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2236:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1460,
														"src": "2231:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1446,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2231:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1454,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2279:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1448,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "2249:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2249:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1450,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1432,
																"src": "2271:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2249:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2230:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1456,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1447,
															"src": "2300:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2309:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1455,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2292:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2292:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1459,
												"nodeType": "ExpressionStatement",
												"src": "2292:78:5"
											}
										]
									},
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "1154:906:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2074:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2100:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "2084:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2119:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "2111:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:43:5"
									},
									"returnParameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2136:0:5"
									},
									"scope": 1704,
									"src": "2065:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1477,
										"nodeType": "Block",
										"src": "3208:84:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1472,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "3238:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1473,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "3246:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3252:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1471,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1478,
															1498
														],
														"referencedDeclaration": 1498,
														"src": "3225:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1470,
												"id": 1476,
												"nodeType": "Return",
												"src": "3218:67:5"
											}
										]
									},
									"documentation": {
										"id": 1462,
										"nodeType": "StructuredDocumentation",
										"src": "2383:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3128:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3149:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "3141:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3170:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "3157:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1465,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3157:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:35:5"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "3194:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1468,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3194:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:14:5"
									},
									"scope": 1704,
									"src": "3119:173:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1497,
										"nodeType": "Block",
										"src": "3661:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1491,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1481,
															"src": "3700:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1492,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "3708:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3714:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1494,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "3717:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1490,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1518,
															1568
														],
														"referencedDeclaration": 1568,
														"src": "3678:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3678:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1489,
												"id": 1496,
												"nodeType": "Return",
												"src": "3671:59:5"
											}
										]
									},
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "3298:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3523:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3553:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "3545:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3582:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "3569:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1482,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3569:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3610:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "3596:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1484,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3596:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:93:5"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "3647:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1487,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3647:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3646:14:5"
									},
									"scope": 1704,
									"src": "3514:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1517,
										"nodeType": "Block",
										"src": "4242:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1511,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "4281:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1512,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1503,
															"src": "4289:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1513,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "4295:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4302:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1510,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1518,
															1568
														],
														"referencedDeclaration": 1568,
														"src": "4259:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1509,
												"id": 1516,
												"nodeType": "Return",
												"src": "4252:94:5"
											}
										]
									},
									"documentation": {
										"id": 1499,
										"nodeType": "StructuredDocumentation",
										"src": "3743:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4108:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "4139:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "4163:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1502,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4198:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "4190:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:80:5"
									},
									"returnParameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "4228:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1507,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4228:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:14:5"
									},
									"scope": 1704,
									"src": "4099:254:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1567,
										"nodeType": "Block",
										"src": "4780:320:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1535,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4806:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1704",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1704",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4798:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1533,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4798:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4798:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4798:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1538,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "4823:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4798:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4830:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1532,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4790:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1542,
												"nodeType": "ExpressionStatement",
												"src": "4790:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1545,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1521,
																	"src": "4900:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1544,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1427,
																"src": "4889:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4889:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1543,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4881:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1549,
												"nodeType": "ExpressionStatement",
												"src": "4881:60:5"
											},
											{
												"assignments": [
													1551,
													1553
												],
												"declarations": [
													{
														"constant": false,
														"id": 1551,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4958:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1567,
														"src": "4953:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1550,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4953:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1553,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4980:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1567,
														"src": "4967:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1552,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4967:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1560,
												"initialValue": {
													"arguments": [
														{
															"id": 1558,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "5020:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1554,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1521,
																"src": "4994:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4994:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1556,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "5013:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4994:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4994:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4952:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1562,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "5059:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1563,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1553,
															"src": "5068:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1564,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "5080:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1561,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1703,
														"src": "5042:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1531,
												"id": 1566,
												"nodeType": "Return",
												"src": "5035:58:5"
											}
										]
									},
									"documentation": {
										"id": 1519,
										"nodeType": "StructuredDocumentation",
										"src": "4359:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4610:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4649:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "4641:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4641:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4678:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "4665:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1522,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4665:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4700:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "4692:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4729:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "4715:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1526,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4715:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4631:116:5"
									},
									"returnParameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "4766:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1529,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4766:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4765:14:5"
									},
									"scope": 1704,
									"src": "4601:499:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1584,
										"nodeType": "Block",
										"src": "5377:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1579,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "5413:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1580,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "5421:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5427:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1578,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1585,
															1620
														],
														"referencedDeclaration": 1620,
														"src": "5394:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5394:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1577,
												"id": 1583,
												"nodeType": "Return",
												"src": "5387:80:5"
											}
										]
									},
									"documentation": {
										"id": 1569,
										"nodeType": "StructuredDocumentation",
										"src": "5106:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5286:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5313:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "5305:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5305:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5334:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "5321:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1572,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5321:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5304:35:5"
									},
									"returnParameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "5363:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1575,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5363:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5362:14:5"
									},
									"scope": 1704,
									"src": "5277:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1619,
										"nodeType": "Block",
										"src": "5816:228:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1599,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1588,
																	"src": "5845:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1598,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1427,
																"src": "5834:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5834:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1601,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5854:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1597,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5826:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5826:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1603,
												"nodeType": "ExpressionStatement",
												"src": "5826:67:5"
											},
											{
												"assignments": [
													1605,
													1607
												],
												"declarations": [
													{
														"constant": false,
														"id": 1605,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5910:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1619,
														"src": "5905:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1604,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5905:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1607,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5932:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1619,
														"src": "5919:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1606,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5919:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1612,
												"initialValue": {
													"arguments": [
														{
															"id": 1610,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "5964:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1608,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "5946:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5946:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5946:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5904:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1614,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "6003:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1615,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1607,
															"src": "6012:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1616,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "6024:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1613,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1703,
														"src": "5986:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5986:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1596,
												"id": 1618,
												"nodeType": "Return",
												"src": "5979:58:5"
											}
										]
									},
									"documentation": {
										"id": 1586,
										"nodeType": "StructuredDocumentation",
										"src": "5480:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5667:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5703:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "5695:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5695:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5732:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "5719:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1589,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5719:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5760:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "5746:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1591,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5746:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5685:93:5"
									},
									"returnParameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "5802:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1594,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5802:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5801:14:5"
									},
									"scope": 1704,
									"src": "5658:386:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1636,
										"nodeType": "Block",
										"src": "6320:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1631,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1623,
															"src": "6358:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1632,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "6366:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6372:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1630,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1637,
															1672
														],
														"referencedDeclaration": 1672,
														"src": "6337:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6337:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1629,
												"id": 1635,
												"nodeType": "Return",
												"src": "6330:84:5"
											}
										]
									},
									"documentation": {
										"id": 1621,
										"nodeType": "StructuredDocumentation",
										"src": "6050:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6232:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6261:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "6253:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6253:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6282:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "6269:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1624,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6269:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6252:35:5"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "6306:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6306:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6305:14:5"
									},
									"scope": 1704,
									"src": "6223:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1671,
										"nodeType": "Block",
										"src": "6762:232:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1651,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1640,
																	"src": "6791:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1650,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1427,
																"src": "6780:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6780:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6800:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1649,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6772:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6772:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1655,
												"nodeType": "ExpressionStatement",
												"src": "6772:69:5"
											},
											{
												"assignments": [
													1657,
													1659
												],
												"declarations": [
													{
														"constant": false,
														"id": 1657,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6858:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1671,
														"src": "6853:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1656,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6853:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1659,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6880:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1671,
														"src": "6867:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1658,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6867:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1664,
												"initialValue": {
													"arguments": [
														{
															"id": 1662,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "6914:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1660,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1640,
															"src": "6894:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6894:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6894:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6852:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1666,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "6953:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1667,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1659,
															"src": "6962:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1668,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "6974:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1665,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1703,
														"src": "6936:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6936:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1648,
												"id": 1670,
												"nodeType": "Return",
												"src": "6929:58:5"
											}
										]
									},
									"documentation": {
										"id": 1638,
										"nodeType": "StructuredDocumentation",
										"src": "6427:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6616:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6654:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "6646:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6683:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "6670:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1641,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6670:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6711:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "6697:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1643,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6697:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6636:93:5"
									},
									"returnParameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "6748:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1646,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6748:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6747:14:5"
									},
									"scope": 1704,
									"src": "6607:387:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1702,
										"nodeType": "Block",
										"src": "7374:532:5",
										"statements": [
											{
												"condition": {
													"id": 1684,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1675,
													"src": "7388:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1700,
													"nodeType": "Block",
													"src": "7445:455:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1688,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1677,
																		"src": "7529:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7529:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7549:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7529:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1698,
																"nodeType": "Block",
																"src": "7837:53:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1695,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1679,
																					"src": "7862:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1694,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7855:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7855:20:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1697,
																		"nodeType": "ExpressionStatement",
																		"src": "7855:20:5"
																	}
																]
															},
															"id": 1699,
															"nodeType": "IfStatement",
															"src": "7525:365:5",
															"trueBody": {
																"id": 1693,
																"nodeType": "Block",
																"src": "7552:279:5",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7672:145:5",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7694:40:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7723:10:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7717:5:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7717:17:5"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7698:15:5",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7766:2:5",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7770:10:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7762:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7762:19:5"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7783:15:5"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7755:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7755:44:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7755:44:5"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1677,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7723:10:5",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1677,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7770:10:5",
																				"valueSize": 1
																			}
																		],
																		"id": 1692,
																		"nodeType": "InlineAssembly",
																		"src": "7663:154:5"
																	}
																]
															}
														}
													]
												},
												"id": 1701,
												"nodeType": "IfStatement",
												"src": "7384:516:5",
												"trueBody": {
													"id": 1687,
													"nodeType": "Block",
													"src": "7397:42:5",
													"statements": [
														{
															"expression": {
																"id": 1685,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1677,
																"src": "7418:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1683,
															"id": 1686,
															"nodeType": "Return",
															"src": "7411:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "7000:209:5",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7223:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7254:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "7249:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1674,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7249:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7284:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "7271:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1676,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7271:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7318:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "7304:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1678,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7304:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7239:97:5"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "7360:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1681,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7360:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7359:14:5"
									},
									"scope": 1704,
									"src": "7214:692:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1705,
							"src": "179:7729:5",
							"usedErrors": []
						}
					],
					"src": "86:7823:5"
				},
				"id": 5
			},
			"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1726
						]
					},
					"id": 1727,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1706,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1707,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1726,
							"linearizedBaseContracts": [
								1726
							],
							"name": "Context",
							"nameLocation": "626:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1715,
										"nodeType": "Block",
										"src": "702:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1712,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1711,
												"id": 1714,
												"nodeType": "Return",
												"src": "712:17:6"
											}
										]
									},
									"id": 1716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:6"
									},
									"returnParameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:6"
									},
									"scope": 1726,
									"src": "640:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1724,
										"nodeType": "Block",
										"src": "809:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1721,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1720,
												"id": 1723,
												"nodeType": "Return",
												"src": "819:15:6"
											}
										]
									},
									"id": 1725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:6"
									},
									"returnParameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "793:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1718,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:6"
									},
									"scope": 1726,
									"src": "742:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1727,
							"src": "608:235:6",
							"usedErrors": []
						}
					],
					"src": "86:758:6"
				},
				"id": 6
			},
			"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1750
						],
						"IERC165": [
							1762
						]
					},
					"id": 1751,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1728,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:7"
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1729,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1751,
							"sourceUnit": 1763,
							"src": "124:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1731,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1762,
										"src": "754:7:7"
									},
									"id": 1732,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:7"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1730,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1750,
							"linearizedBaseContracts": [
								1750,
								1762
							],
							"name": "ERC165",
							"nameLocation": "744:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1761
									],
									"body": {
										"id": 1748,
										"nodeType": "Block",
										"src": "920:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1741,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1735,
														"src": "937:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1743,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1762,
																	"src": "957:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1762_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1762_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1742,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1762",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1745,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1740,
												"id": 1747,
												"nodeType": "Return",
												"src": "930:47:7"
											}
										]
									},
									"documentation": {
										"id": 1733,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1737,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:7"
									},
									"parameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "856:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1734,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:7"
									},
									"returnParameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "914:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1738,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:7"
									},
									"scope": 1750,
									"src": "829:155:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1751,
							"src": "726:260:7",
							"usedErrors": []
						}
					],
					"src": "99:888:7"
				},
				"id": 7
			},
			"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1762
						]
					},
					"id": 1763,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1752,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1753,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1762,
							"linearizedBaseContracts": [
								1762
							],
							"name": "IERC165",
							"nameLocation": "415:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1754,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1761,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "801:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1755,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:8"
									},
									"returnParameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "844:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1758,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:8"
									},
									"scope": 1762,
									"src": "774:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1763,
							"src": "405:447:8",
							"usedErrors": []
						}
					],
					"src": "100:753:8"
				},
				"id": 8
			}
		}
	}
}
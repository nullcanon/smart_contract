{
	"id": "4eca4460380e566e191f11de53c4eec4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"msc_token/ERC1155.sol": {
				"content": "\r\npragma solidity ^0.8.0;\r\n\r\n\r\nimport \"./node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\nimport \"./node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\";\r\nimport \"./node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\";\r\n\r\ncontract GameItems is ERC1155 , ERC1155Burnable{\r\n    uint256 public constant GOLD = 0;\r\n    uint256 public constant SILVER = 1;\r\n    uint256 public constant THORS_HAMMER = 2;\r\n    uint256 public constant SWORD = 3;\r\n    uint256 public constant SHIELD = 4;\r\n\r\n    constructor() ERC1155(\"https://game.example/api/item/{id}.json\") {\r\n        _mint(msg.sender, GOLD, 10**18, \"\");\r\n        _mint(msg.sender, SILVER, 10**27, \"\");\r\n        _mint(msg.sender, THORS_HAMMER, 1, \"\");\r\n        _mint(msg.sender, SWORD, 10**9, \"\");\r\n        _mint(msg.sender, SHIELD, 10**9, \"\");\r\n    }\r\n\r\n    function mintBatch() public {\r\n        uint256[] memory ids = new uint256[](1000);\r\n        uint256[] memory amounts = new uint256[](1000);\r\n        for (uint256 i = 0; i < 1000; i++) {\r\n            ids[i] = i;\r\n            amounts[i] = 1;\r\n        }\r\n        _mintBatch(msg.sender, ids, amounts, \"\");\r\n    }\r\n}"
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/ERC1155Supply.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC1155.sol\";\n\n/**\n * @dev Extension of ERC1155 that adds tracking of total supply per id.\n *\n * Useful for scenarios where Fungible and Non-fungible tokens have to be\n * clearly identified. Note: While a totalSupply of 1 might mean the\n * corresponding is an NFT, there is no guarantees that no other token with the\n * same id are not going to be minted.\n */\nabstract contract ERC1155Supply is ERC1155 {\n    mapping(uint256 => uint256) private _totalSupply;\n\n    /**\n     * @dev Total amount of tokens in with a given id.\n     */\n    function totalSupply(uint256 id) public view virtual returns (uint256) {\n        return _totalSupply[id];\n    }\n\n    /**\n     * @dev Indicates whether any token exist with a given id, or not.\n     */\n    function exists(uint256 id) public view virtual returns (bool) {\n        return ERC1155Supply.totalSupply(id) > 0;\n    }\n\n    /**\n     * @dev See {ERC1155-_beforeTokenTransfer}.\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual override {\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        if (from == address(0)) {\n            for (uint256 i = 0; i < ids.length; ++i) {\n                _totalSupply[ids[i]] += amounts[i];\n            }\n        }\n\n        if (to == address(0)) {\n            for (uint256 i = 0; i < ids.length; ++i) {\n                _totalSupply[ids[i]] -= amounts[i];\n            }\n        }\n    }\n}\n"
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/ERC1155Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC1155.sol\";\n\n/**\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\n * own tokens and those that they have been approved to use.\n *\n * _Available since v3.1._\n */\nabstract contract ERC1155Burnable is ERC1155 {\n    function burn(\n        address account,\n        uint256 id,\n        uint256 value\n    ) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        _burn(account, id, value);\n    }\n\n    function burnBatch(\n        address account,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        _burnBatch(account, ids, values);\n    }\n}\n"
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"
			},
			"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n        @dev Handles the receipt of a single ERC1155 token type. This function is\n        called at the end of a `safeTransferFrom` after the balance has been updated.\n        To accept the transfer, this must return\n        `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n        (i.e. 0xf23a6e61, or its own function selector).\n        @param operator The address which initiated the transfer (i.e. msg.sender)\n        @param from The address which previously owned the token\n        @param id The ID of the token being transferred\n        @param value The amount of tokens being transferred\n        @param data Additional data with no specified format\n        @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n    */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n        @dev Handles the receipt of a multiple ERC1155 token types. This function\n        is called at the end of a `safeBatchTransferFrom` after the balances have\n        been updated. To accept the transfer(s), this must return\n        `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n        (i.e. 0xbc197c81, or its own function selector).\n        @param operator The address which initiated the batch transfer (i.e. msg.sender)\n        @param from The address which previously owned the token\n        @param ids An array containing ids of each token being transferred (order and length must match values array)\n        @param values An array containing amounts of each token being transferred (order and length must match ids array)\n        @param data Additional data with no specified format\n        @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n    */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"msc_token/ERC1155.sol": {
				"GameItems": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "GOLD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SHIELD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SILVER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SWORD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "THORS_HAMMER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "burnBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"msc_token/ERC1155.sol\":297:1189  contract GameItems is ERC1155 , ERC1155Burnable{... */\n  mstore(0x40, 0x80)\n    /* \"msc_token/ERC1155.sol\":561:870  constructor() ERC1155(\"https://game.example/api/item/{id}.json\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1092:1154  constructor(string memory uri_) {... */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x27\n  dup2\n  mstore\n  0x20\n  add\n  data_9be393994f02169c966a8f7d954e5f555f9d6fdea83c170362ff79cf2c5ce4f1\n  0x27\n  swap2\n  codecopy\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1147  _setURI(uri_) */\n  tag_5\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1142:1146  uri_ */\n  dup2\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1141  _setURI */\n  tag_6\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1147  _setURI(uri_) */\n  jump\t// in\ntag_5:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1092:1154  constructor(string memory uri_) {... */\n  pop\n    /* \"msc_token/ERC1155.sol\":637:672  _mint(msg.sender, GOLD, 10**18, \"\") */\n  tag_8\n    /* \"msc_token/ERC1155.sol\":643:653  msg.sender */\n  caller\n    /* \"msc_token/ERC1155.sol\":382:383  0 */\n  0x00\n    /* \"msc_token/ERC1155.sol\":661:667  10**18 */\n  0x0de0b6b3a7640000\n    /* \"msc_token/ERC1155.sol\":637:672  _mint(msg.sender, GOLD, 10**18, \"\") */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"msc_token/ERC1155.sol\":637:642  _mint */\n  shl(0x20, tag_9)\n    /* \"msc_token/ERC1155.sol\":637:672  _mint(msg.sender, GOLD, 10**18, \"\") */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"msc_token/ERC1155.sol\":683:720  _mint(msg.sender, SILVER, 10**27, \"\") */\n  tag_10\n    /* \"msc_token/ERC1155.sol\":689:699  msg.sender */\n  caller\n    /* \"msc_token/ERC1155.sol\":423:424  1 */\n  0x01\n    /* \"msc_token/ERC1155.sol\":709:715  10**27 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"msc_token/ERC1155.sol\":683:720  _mint(msg.sender, SILVER, 10**27, \"\") */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"msc_token/ERC1155.sol\":683:688  _mint */\n  shl(0x20, tag_9)\n    /* \"msc_token/ERC1155.sol\":683:720  _mint(msg.sender, SILVER, 10**27, \"\") */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"msc_token/ERC1155.sol\":731:769  _mint(msg.sender, THORS_HAMMER, 1, \"\") */\n  tag_11\n    /* \"msc_token/ERC1155.sol\":737:747  msg.sender */\n  caller\n    /* \"msc_token/ERC1155.sol\":470:471  2 */\n  0x02\n    /* \"msc_token/ERC1155.sol\":763:764  1 */\n  0x01\n    /* \"msc_token/ERC1155.sol\":731:769  _mint(msg.sender, THORS_HAMMER, 1, \"\") */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"msc_token/ERC1155.sol\":731:736  _mint */\n  shl(0x20, tag_9)\n    /* \"msc_token/ERC1155.sol\":731:769  _mint(msg.sender, THORS_HAMMER, 1, \"\") */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"msc_token/ERC1155.sol\":780:815  _mint(msg.sender, SWORD, 10**9, \"\") */\n  tag_12\n    /* \"msc_token/ERC1155.sol\":786:796  msg.sender */\n  caller\n    /* \"msc_token/ERC1155.sol\":510:511  3 */\n  0x03\n    /* \"msc_token/ERC1155.sol\":805:810  10**9 */\n  0x3b9aca00\n    /* \"msc_token/ERC1155.sol\":780:815  _mint(msg.sender, SWORD, 10**9, \"\") */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"msc_token/ERC1155.sol\":780:785  _mint */\n  shl(0x20, tag_9)\n    /* \"msc_token/ERC1155.sol\":780:815  _mint(msg.sender, SWORD, 10**9, \"\") */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"msc_token/ERC1155.sol\":826:862  _mint(msg.sender, SHIELD, 10**9, \"\") */\n  tag_13\n    /* \"msc_token/ERC1155.sol\":832:842  msg.sender */\n  caller\n    /* \"msc_token/ERC1155.sol\":551:552  4 */\n  0x04\n    /* \"msc_token/ERC1155.sol\":852:857  10**9 */\n  0x3b9aca00\n    /* \"msc_token/ERC1155.sol\":826:862  _mint(msg.sender, SHIELD, 10**9, \"\") */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"msc_token/ERC1155.sol\":826:831  _mint */\n  shl(0x20, tag_9)\n    /* \"msc_token/ERC1155.sol\":826:862  _mint(msg.sender, SHIELD, 10**9, \"\") */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"msc_token/ERC1155.sol\":297:1189  contract GameItems is ERC1155 , ERC1155Burnable{... */\n  jump(tag_85)\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7936:8022  function _setURI(string memory newuri) internal virtual {... */\ntag_6:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8015  _uri = newuri */\n  dup1\n  mload\n  tag_16\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8006  _uri */\n  0x02\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8015  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  pop\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7936:8022  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8395:8948  function _mint(... */\ntag_9:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8542:8558  to != address(0) */\n  dup5\n  and\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8534:8596  require(to != address(0), \"ERC1155: mint to the zero address\") */\n  tag_19\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":216:218   */\n  0x20\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8534:8596  require(to != address(0), \"ERC1155: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":198:219   */\n  mstore\n    /* \"#utility.yul\":255:257   */\n  0x21\n    /* \"#utility.yul\":235:253   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":228:258   */\n  mstore\n    /* \"#utility.yul\":294:328   */\n  0x455243313135353a206d696e7420746f20746865207a65726f20616464726573\n    /* \"#utility.yul\":274:292   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":267:329   */\n  mstore\n  shl(0xf8, 0x73)\n    /* \"#utility.yul\":345:363   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":338:369   */\n  mstore\n    /* \"#utility.yul\":386:405   */\n  0x84\n  add\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8534:8596  require(to != address(0), \"ERC1155: mint to the zero address\") */\ntag_20:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_19:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8649:8751  _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n  tag_24\n    /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  dup2\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8607:8623  address operator */\n  0x00\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8692:8694  to */\n  dup8\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8696:8717  _asSingletonArray(id) */\n  tag_25\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8714:8716  id */\n  dup9\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8696:8713  _asSingletonArray */\n  tag_26\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8696:8717  _asSingletonArray(id) */\n  jump\t// in\ntag_25:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8719:8744  _asSingletonArray(amount) */\n  tag_27\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8737:8743  amount */\n  dup9\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8719:8736  _asSingletonArray */\n  tag_26\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8719:8744  _asSingletonArray(amount) */\n  jump\t// in\ntag_27:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13331:13545  function _beforeTokenTransfer(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8649:8751  _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data) */\ntag_24:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8762:8771  _balances */\n  0x00\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8762:8775  _balances[id] */\n  dup5\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8762:8779  _balances[id][to] */\n  dup10\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  dup2\n  keccak256\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8762:8789  _balances[id][to] += amount */\n  dup1\n  sload\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8783:8789  amount */\n  dup6\n  swap3\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8762:8771  _balances */\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8762:8789  _balances[id][to] += amount */\n  tag_29\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8783:8789  amount */\n  dup5\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8762:8789  _balances[id][to] += amount */\n  tag_30\n  jump\t// in\ntag_29:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8804:8856  TransferSingle(operator, address(0), to, id, amount) */\n  0x40\n  dup1\n  mload\n    /* \"#utility.yul\":820:845   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":876:878   */\n  0x20\n    /* \"#utility.yul\":861:879   */\n  dup2\n  add\n    /* \"#utility.yul\":854:888   */\n  dup6\n  swap1\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8804:8856  TransferSingle(operator, address(0), to, id, amount) */\n  dup1\n  dup9\n  and\n  swap3\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8837:8838  0 */\n  0x00\n  swap3\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8804:8856  TransferSingle(operator, address(0), to, id, amount) */\n  swap2\n  dup6\n  and\n  swap2\n  0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n  swap2\n    /* \"#utility.yul\":793:811   */\n  add\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8804:8856  TransferSingle(operator, address(0), to, id, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8867:8941  _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data) */\n  tag_27\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8898:8906  operator */\n  dup2\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8916:8917  0 */\n  0x00\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8920:8922  to */\n  dup8\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8924:8926  id */\n  dup8\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8928:8934  amount */\n  dup8\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8936:8940  data */\n  dup8\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8867:8897  _doSafeTransferAcceptanceCheck */\n  tag_34\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8867:8941  _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data) */\n  jump\t// in\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15080:15273  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\ntag_26:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n  0x40\n  dup1\n  mload\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15213:15214  1 */\n  0x01\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n  dup1\n  dup3\n  mstore\n  dup2\n  dup4\n  add\n  swap1\n  swap3\n  mstore\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15146:15162  uint256[] memory */\n  0x60\n  swap2\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15174:15196  uint256[] memory array */\n  0x00\n  swap2\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n  swap1\n  0x20\n  dup1\n  dup4\n  add\n  swap1\n  dup1\n  calldatasize\n  dup4\n  calldatacopy\n  add\n  swap1\n  pop\n  pop\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15174:15215  uint256[] memory array = new uint256[](1) */\n  swap1\n  pop\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15236:15243  element */\n  dup3\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15230  array */\n  dup2\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15231:15232  0 */\n  0x00\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15233  array[0] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_42\n  jumpi\n  tag_42\n  tag_43\n  jump\t// in\ntag_42:\n  0x20\n  swap1\n  dup2\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  add\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15243  array[0] = element */\n  mstore\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15261:15266  array */\n  swap3\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15080:15273  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13331:13545  function _beforeTokenTransfer(... */\ntag_28:\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13551:14276  function _doSafeTransferAcceptanceCheck(... */\ntag_34:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13758:13773  to.isContract() */\n  tag_46\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13758:13760  to */\n  dup5\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13758:13771  to.isContract */\n  and\n  or(tag_0_88, shl(0x20, tag_47))\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13758:13773  to.isContract() */\n  0x20\n  shr\n  jump\t// in\ntag_46:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13754:14270  if (to.isContract()) {... */\n  iszero\n  tag_28\n  jumpi\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n  mload(0x40)\n  shl(0xe0, 0xf23a6e61)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13831  IERC1155Receiver(to).onERC1155Received */\n  dup6\n  and\n  swap1\n  0xf23a6e61\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n  tag_49\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13832:13840  operator */\n  dup10\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13842:13846  from */\n  dup10\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13848:13850  id */\n  dup9\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13852:13858  amount */\n  dup9\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13860:13864  data */\n  dup9\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n  0x04\n  add\n  tag_50\n  jump\t// in\ntag_49:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  swap3\n  pop\n  pop\n  pop\n  dup1\n  iszero\n  tag_51\n  jumpi\n  pop\n  0x40\n  dup1\n  mload\n  0x1f\n  returndatasize\n  swap1\n  dup2\n  add\n  not(0x1f)\n  and\n  dup3\n  add\n  swap1\n  swap3\n  mstore\n  tag_52\n  swap2\n  dup2\n  add\n  swap1\n  tag_53\n  jump\t// in\ntag_52:\n  0x01\ntag_51:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13789:14260  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n  tag_54\n  jumpi\n  tag_58\n  tag_59\n  jump\t// in\ntag_58:\n  dup1\n  0x08c379a0\n  sub\n  tag_57\n  jumpi\n  pop\n  tag_60\n  tag_61\n  jump\t// in\ntag_60:\n  dup1\n  tag_62\n  jumpi\n  pop\n  jump(tag_56)\ntag_62:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14136:14142  reason */\n  dup1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14129:14143  revert(reason) */\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  tag_20\n  swap2\n  swap1\n  tag_64\n  jump\t// in\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13789:14260  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\ntag_57:\n  pop\ntag_56:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14183:14245  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4136:4138   */\n  0x20\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14183:14245  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4118:4139   */\n  mstore\n    /* \"#utility.yul\":4175:4177   */\n  0x34\n    /* \"#utility.yul\":4155:4173   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4148:4178   */\n  mstore\n    /* \"#utility.yul\":4214:4248   */\n  0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n    /* \"#utility.yul\":4194:4212   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4187:4249   */\n  mstore\n    /* \"#utility.yul\":4285:4307   */\n  0x526563656976657220696d706c656d656e746572000000000000000000000000\n    /* \"#utility.yul\":4265:4283   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":4258:4308   */\n  mstore\n    /* \"#utility.yul\":4325:4344   */\n  0x84\n  add\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14183:14245  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n  tag_20\n    /* \"#utility.yul\":3934:4350   */\n  jump\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13789:14260  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\ntag_54:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13914:13969  response != IERC1155Receiver.onERC1155Received.selector */\n  dup2\n  and\n  shl(0xe0, 0xf23a6e61)\n  eq\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13910:14062  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n  tag_68\n  jumpi\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13993:14043  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4557:4559   */\n  0x20\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13993:14043  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4539:4560   */\n  mstore\n    /* \"#utility.yul\":4596:4598   */\n  0x28\n    /* \"#utility.yul\":4576:4594   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4569:4599   */\n  mstore\n    /* \"#utility.yul\":4635:4669   */\n  0x455243313135353a204552433131353552656365697665722072656a65637465\n    /* \"#utility.yul\":4615:4633   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4608:4670   */\n  mstore\n  shl(0xc0, 0x6420746f6b656e73)\n    /* \"#utility.yul\":4686:4704   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":4679:4717   */\n  mstore\n    /* \"#utility.yul\":4734:4753   */\n  0x84\n  add\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13993:14043  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n  tag_20\n    /* \"#utility.yul\":4355:4759   */\n  jump\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13910:14062  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\ntag_68:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13866:14076  returns (bytes4 response) {... */\n  pop\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13551:14276  function _doSafeTransferAcceptanceCheck(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":771:1148  function isContract(address account) internal view returns (bool) {... */\ntag_47:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":1087:1107  extcodesize(account) */\n  extcodesize\n    /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":1133:1141  size > 0 */\n  iszero\n  iszero\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":771:1148  function isContract(address account) internal view returns (bool) {... */\n  jump\t// out\n    /* \"msc_token/ERC1155.sol\":297:1189  contract GameItems is ERC1155 , ERC1155Burnable{... */\ntag_17:\n  dup3\n  dup1\n  sload\n  tag_72\n  swap1\n  tag_73\n  jump\t// in\ntag_72:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_75\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_78)\ntag_75:\n  dup3\n  0x1f\n  lt\n  tag_76\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_78)\ntag_76:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_78\n  jumpi\n  swap2\n  dup3\n  add\ntag_77:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_78\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_77)\ntag_78:\n  pop\n  tag_79\n  swap3\n  swap2\n  pop\n  tag_80\n  jump\t// in\ntag_79:\n  pop\n  swap1\n  jump\t// out\ntag_80:\ntag_81:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_79\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_81)\n    /* \"#utility.yul\":416:641   */\ntag_30:\n    /* \"#utility.yul\":456:459   */\n  0x00\n    /* \"#utility.yul\":487:488   */\n  dup3\n    /* \"#utility.yul\":483:489   */\n  not\n    /* \"#utility.yul\":480:481   */\n  dup3\n    /* \"#utility.yul\":477:490   */\n  gt\n    /* \"#utility.yul\":474:610   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":532:542   */\n  0x4e487b71\n    /* \"#utility.yul\":527:530   */\n  0xe0\n    /* \"#utility.yul\":523:543   */\n  shl\n    /* \"#utility.yul\":520:521   */\n  0x00\n    /* \"#utility.yul\":513:544   */\n  mstore\n    /* \"#utility.yul\":567:571   */\n  0x11\n    /* \"#utility.yul\":564:565   */\n  0x04\n    /* \"#utility.yul\":557:572   */\n  mstore\n    /* \"#utility.yul\":595:599   */\n  0x24\n    /* \"#utility.yul\":592:593   */\n  0x00\n    /* \"#utility.yul\":585:600   */\n  revert\n    /* \"#utility.yul\":474:610   */\ntag_88:\n  pop\n    /* \"#utility.yul\":626:635   */\n  add\n  swap1\n    /* \"#utility.yul\":416:641   */\n  jump\t// out\n    /* \"#utility.yul\":1031:1158   */\ntag_43:\n    /* \"#utility.yul\":1092:1102   */\n  0x4e487b71\n    /* \"#utility.yul\":1087:1090   */\n  0xe0\n    /* \"#utility.yul\":1083:1103   */\n  shl\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1073:1104   */\n  mstore\n    /* \"#utility.yul\":1123:1127   */\n  0x32\n    /* \"#utility.yul\":1120:1121   */\n  0x04\n    /* \"#utility.yul\":1113:1128   */\n  mstore\n    /* \"#utility.yul\":1147:1151   */\n  0x24\n    /* \"#utility.yul\":1144:1145   */\n  0x00\n    /* \"#utility.yul\":1137:1152   */\n  revert\n    /* \"#utility.yul\":1163:1634   */\ntag_83:\n    /* \"#utility.yul\":1204:1207   */\n  0x00\n    /* \"#utility.yul\":1242:1247   */\n  dup2\n    /* \"#utility.yul\":1236:1248   */\n  mload\n    /* \"#utility.yul\":1269:1275   */\n  dup1\n    /* \"#utility.yul\":1264:1267   */\n  dup5\n    /* \"#utility.yul\":1257:1276   */\n  mstore\n    /* \"#utility.yul\":1294:1295   */\n  0x00\n    /* \"#utility.yul\":1304:1466   */\ntag_93:\n    /* \"#utility.yul\":1318:1324   */\n  dup2\n    /* \"#utility.yul\":1315:1316   */\n  dup2\n    /* \"#utility.yul\":1312:1325   */\n  lt\n    /* \"#utility.yul\":1304:1466   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":1380:1384   */\n  0x20\n    /* \"#utility.yul\":1436:1449   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":1432:1454   */\n  dup2\n  add\n    /* \"#utility.yul\":1426:1455   */\n  mload\n    /* \"#utility.yul\":1408:1419   */\n  dup7\n  dup4\n  add\n    /* \"#utility.yul\":1404:1424   */\n  dup3\n  add\n    /* \"#utility.yul\":1397:1456   */\n  mstore\n    /* \"#utility.yul\":1333:1345   */\n  add\n    /* \"#utility.yul\":1304:1466   */\n  jump(tag_93)\ntag_95:\n    /* \"#utility.yul\":1484:1490   */\n  dup2\n    /* \"#utility.yul\":1481:1482   */\n  dup2\n    /* \"#utility.yul\":1478:1491   */\n  gt\n    /* \"#utility.yul\":1475:1562   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":1550:1551   */\n  0x00\n    /* \"#utility.yul\":1543:1547   */\n  0x20\n    /* \"#utility.yul\":1534:1540   */\n  dup4\n    /* \"#utility.yul\":1529:1532   */\n  dup8\n    /* \"#utility.yul\":1525:1541   */\n  add\n    /* \"#utility.yul\":1521:1548   */\n  add\n    /* \"#utility.yul\":1514:1552   */\n  mstore\n    /* \"#utility.yul\":1475:1562   */\ntag_96:\n  pop\n    /* \"#utility.yul\":1616:1618   */\n  0x1f\n    /* \"#utility.yul\":1595:1610   */\n  add\n  not(0x1f)\n    /* \"#utility.yul\":1591:1620   */\n  and\n    /* \"#utility.yul\":1582:1621   */\n  swap3\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":1623:1627   */\n  0x20\n    /* \"#utility.yul\":1578:1628   */\n  add\n  swap3\n    /* \"#utility.yul\":1163:1634   */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1639:2199   */\ntag_50:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1936:1951   */\n  dup7\n  dup2\n  and\n    /* \"#utility.yul\":1918:1952   */\n  dup3\n  mstore\n    /* \"#utility.yul\":1988:2003   */\n  dup6\n  and\n    /* \"#utility.yul\":1983:1985   */\n  0x20\n    /* \"#utility.yul\":1968:1986   */\n  dup3\n  add\n    /* \"#utility.yul\":1961:2004   */\n  mstore\n    /* \"#utility.yul\":2035:2037   */\n  0x40\n    /* \"#utility.yul\":2020:2038   */\n  dup2\n  add\n    /* \"#utility.yul\":2013:2047   */\n  dup5\n  swap1\n  mstore\n    /* \"#utility.yul\":2078:2080   */\n  0x60\n    /* \"#utility.yul\":2063:2081   */\n  dup2\n  add\n    /* \"#utility.yul\":2056:2090   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":1898:1901   */\n  0xa0\n    /* \"#utility.yul\":2121:2124   */\n  0x80\n    /* \"#utility.yul\":2106:2125   */\n  dup3\n  add\n    /* \"#utility.yul\":2099:2131   */\n  dup2\n  swap1\n  mstore\n    /* \"#utility.yul\":1861:1865   */\n  0x00\n  swap1\n    /* \"#utility.yul\":2148:2193   */\n  tag_98\n  swap1\n    /* \"#utility.yul\":2173:2192   */\n  dup4\n  add\n    /* \"#utility.yul\":2165:2171   */\n  dup5\n    /* \"#utility.yul\":2148:2193   */\n  tag_83\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2140:2193   */\n  swap8\n    /* \"#utility.yul\":1639:2199   */\n  swap7\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2204:2494   */\ntag_53:\n    /* \"#utility.yul\":2273:2279   */\n  0x00\n    /* \"#utility.yul\":2326:2328   */\n  0x20\n    /* \"#utility.yul\":2314:2323   */\n  dup3\n    /* \"#utility.yul\":2305:2312   */\n  dup5\n    /* \"#utility.yul\":2301:2324   */\n  sub\n    /* \"#utility.yul\":2297:2329   */\n  slt\n    /* \"#utility.yul\":2294:2346   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":2342:2343   */\n  0x00\n    /* \"#utility.yul\":2339:2340   */\n  dup1\n    /* \"#utility.yul\":2332:2344   */\n  revert\n    /* \"#utility.yul\":2294:2346   */\ntag_100:\n    /* \"#utility.yul\":2368:2384   */\n  dup2\n  mload\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"#utility.yul\":2413:2445   */\n  dup2\n  and\n    /* \"#utility.yul\":2403:2446   */\n  dup2\n  eq\n    /* \"#utility.yul\":2393:2464   */\n  tag_101\n  jumpi\n    /* \"#utility.yul\":2460:2461   */\n  0x00\n    /* \"#utility.yul\":2457:2458   */\n  dup1\n    /* \"#utility.yul\":2450:2462   */\n  revert\n    /* \"#utility.yul\":2393:2464   */\ntag_101:\n    /* \"#utility.yul\":2483:2488   */\n  swap4\n    /* \"#utility.yul\":2204:2494   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2499:2678   */\ntag_59:\n    /* \"#utility.yul\":2534:2537   */\n  0x00\n    /* \"#utility.yul\":2576:2577   */\n  0x03\n    /* \"#utility.yul\":2558:2574   */\n  returndatasize\n    /* \"#utility.yul\":2555:2578   */\n  gt\n    /* \"#utility.yul\":2552:2672   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":2622:2623   */\n  0x04\n    /* \"#utility.yul\":2619:2620   */\n  0x00\n    /* \"#utility.yul\":2616:2617   */\n  dup1\n    /* \"#utility.yul\":2601:2624   */\n  returndatacopy\n  pop\n    /* \"#utility.yul\":2659:2660   */\n  0x00\n    /* \"#utility.yul\":2653:2661   */\n  mload\n    /* \"#utility.yul\":2648:2651   */\n  0xe0\n    /* \"#utility.yul\":2644:2662   */\n  shr\n    /* \"#utility.yul\":2552:2672   */\ntag_103:\n    /* \"#utility.yul\":2499:2678   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2683:3029   */\ntag_84:\n    /* \"#utility.yul\":2793:2795   */\n  0x1f\n    /* \"#utility.yul\":2774:2787   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":2770:2797   */\n  and\n    /* \"#utility.yul\":2758:2798   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2813:2847   */\n  dup2\n  gt\n    /* \"#utility.yul\":2849:2871   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":2810:2872   */\n  or\n    /* \"#utility.yul\":2807:2992   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":2914:2924   */\n  0x4e487b71\n    /* \"#utility.yul\":2909:2912   */\n  0xe0\n    /* \"#utility.yul\":2905:2925   */\n  shl\n    /* \"#utility.yul\":2902:2903   */\n  0x00\n    /* \"#utility.yul\":2895:2926   */\n  mstore\n    /* \"#utility.yul\":2949:2953   */\n  0x41\n    /* \"#utility.yul\":2946:2947   */\n  0x04\n    /* \"#utility.yul\":2939:2954   */\n  mstore\n    /* \"#utility.yul\":2977:2981   */\n  0x24\n    /* \"#utility.yul\":2974:2975   */\n  0x00\n    /* \"#utility.yul\":2967:2982   */\n  revert\n    /* \"#utility.yul\":2807:2992   */\ntag_105:\n    /* \"#utility.yul\":3008:3010   */\n  0x40\n    /* \"#utility.yul\":3001:3023   */\n  mstore\n  pop\n  pop\n    /* \"#utility.yul\":2683:3029   */\n  jump\t// out\n    /* \"#utility.yul\":3034:3705   */\ntag_61:\n    /* \"#utility.yul\":3073:3076   */\n  0x00\n    /* \"#utility.yul\":3115:3119   */\n  0x44\n    /* \"#utility.yul\":3097:3113   */\n  returndatasize\n    /* \"#utility.yul\":3094:3120   */\n  lt\n    /* \"#utility.yul\":3091:3130   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":3034:3705   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3091:3130   */\ntag_107:\n    /* \"#utility.yul\":3157:3159   */\n  0x40\n    /* \"#utility.yul\":3151:3160   */\n  mload\n  not(0x03)\n    /* \"#utility.yul\":3222:3238   */\n  returndatasize\n    /* \"#utility.yul\":3218:3243   */\n  dup2\n  add\n    /* \"#utility.yul\":3215:3216   */\n  0x04\n    /* \"#utility.yul\":3151:3160   */\n  dup4\n    /* \"#utility.yul\":3194:3244   */\n  returndatacopy\n    /* \"#utility.yul\":3267:3278   */\n  dup2\n  mload\n    /* \"#utility.yul\":3297:3313   */\n  returndatasize\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3365:3379   */\n  dup1\n  dup4\n  gt\n    /* \"#utility.yul\":3396:3400   */\n  0x24\n    /* \"#utility.yul\":3384:3401   */\n  dup5\n  add\n    /* \"#utility.yul\":3381:3406   */\n  dup4\n  lt\n    /* \"#utility.yul\":3362:3407   */\n  or\n    /* \"#utility.yul\":3359:3417   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":3410:3415   */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3034:3705   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3359:3417   */\ntag_108:\n    /* \"#utility.yul\":3447:3453   */\n  dup3\n    /* \"#utility.yul\":3441:3445   */\n  dup6\n    /* \"#utility.yul\":3437:3454   */\n  add\n    /* \"#utility.yul\":3426:3454   */\n  swap2\n  pop\n    /* \"#utility.yul\":3483:3486   */\n  dup2\n    /* \"#utility.yul\":3477:3487   */\n  mload\n    /* \"#utility.yul\":3510:3512   */\n  dup2\n    /* \"#utility.yul\":3502:3508   */\n  dup2\n    /* \"#utility.yul\":3499:3513   */\n  gt\n    /* \"#utility.yul\":3496:3523   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":3516:3521   */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3034:3705   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3496:3523   */\ntag_109:\n    /* \"#utility.yul\":3600:3602   */\n  dup5\n    /* \"#utility.yul\":3581:3597   */\n  returndatasize\n    /* \"#utility.yul\":3575:3579   */\n  dup8\n    /* \"#utility.yul\":3571:3598   */\n  add\n    /* \"#utility.yul\":3567:3603   */\n  add\n    /* \"#utility.yul\":3560:3564   */\n  0x20\n    /* \"#utility.yul\":3551:3557   */\n  dup3\n    /* \"#utility.yul\":3546:3549   */\n  dup6\n    /* \"#utility.yul\":3542:3558   */\n  add\n    /* \"#utility.yul\":3538:3565   */\n  add\n    /* \"#utility.yul\":3535:3604   */\n  gt\n    /* \"#utility.yul\":3532:3614   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":3607:3612   */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3034:3705   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3532:3614   */\ntag_110:\n    /* \"#utility.yul\":3623:3680   */\n  tag_111\n    /* \"#utility.yul\":3674:3678   */\n  0x20\n    /* \"#utility.yul\":3665:3671   */\n  dup3\n    /* \"#utility.yul\":3657:3663   */\n  dup7\n    /* \"#utility.yul\":3653:3672   */\n  add\n    /* \"#utility.yul\":3649:3679   */\n  add\n    /* \"#utility.yul\":3643:3647   */\n  dup8\n    /* \"#utility.yul\":3623:3680   */\n  tag_84\n  jump\t// in\ntag_111:\n  pop\n    /* \"#utility.yul\":3696:3699   */\n  swap1\n  swap6\n    /* \"#utility.yul\":3034:3705   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3710:3929   */\ntag_64:\n    /* \"#utility.yul\":3859:3861   */\n  0x20\n    /* \"#utility.yul\":3848:3857   */\n  dup2\n    /* \"#utility.yul\":3841:3862   */\n  mstore\n    /* \"#utility.yul\":3822:3826   */\n  0x00\n    /* \"#utility.yul\":3879:3923   */\n  tag_101\n    /* \"#utility.yul\":3919:3921   */\n  0x20\n    /* \"#utility.yul\":3908:3917   */\n  dup4\n    /* \"#utility.yul\":3904:3922   */\n  add\n    /* \"#utility.yul\":3896:3902   */\n  dup5\n    /* \"#utility.yul\":3879:3923   */\n  tag_83\n  jump\t// in\n    /* \"#utility.yul\":4764:5144   */\ntag_73:\n    /* \"#utility.yul\":4843:4844   */\n  0x01\n    /* \"#utility.yul\":4839:4851   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":4886:4898   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":4907:4968   */\n  tag_117\n  jumpi\n    /* \"#utility.yul\":4961:4965   */\n  0x7f\n    /* \"#utility.yul\":4953:4959   */\n  dup3\n    /* \"#utility.yul\":4949:4966   */\n  and\n    /* \"#utility.yul\":4939:4966   */\n  swap2\n  pop\n    /* \"#utility.yul\":4907:4968   */\ntag_117:\n    /* \"#utility.yul\":5014:5016   */\n  0x20\n    /* \"#utility.yul\":5006:5012   */\n  dup3\n    /* \"#utility.yul\":5003:5017   */\n  lt\n    /* \"#utility.yul\":4983:5001   */\n  dup2\n    /* \"#utility.yul\":4980:5018   */\n  sub\n    /* \"#utility.yul\":4977:5138   */\n  tag_118\n  jumpi\n    /* \"#utility.yul\":5060:5070   */\n  0x4e487b71\n    /* \"#utility.yul\":5055:5058   */\n  0xe0\n    /* \"#utility.yul\":5051:5071   */\n  shl\n    /* \"#utility.yul\":5048:5049   */\n  0x00\n    /* \"#utility.yul\":5041:5072   */\n  mstore\n    /* \"#utility.yul\":5095:5099   */\n  0x22\n    /* \"#utility.yul\":5092:5093   */\n  0x04\n    /* \"#utility.yul\":5085:5100   */\n  mstore\n    /* \"#utility.yul\":5123:5127   */\n  0x24\n    /* \"#utility.yul\":5120:5121   */\n  0x00\n    /* \"#utility.yul\":5113:5128   */\n  revert\n    /* \"#utility.yul\":4977:5138   */\ntag_118:\n  pop\n    /* \"#utility.yul\":4764:5144   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_85:\n    /* \"msc_token/ERC1155.sol\":297:1189  contract GameItems is ERC1155 , ERC1155Burnable{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_9be393994f02169c966a8f7d954e5f555f9d6fdea83c170362ff79cf2c5ce4f1 68747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e\n\nsub_0: assembly {\n        /* \"msc_token/ERC1155.sol\":297:1189  contract GameItems is ERC1155 , ERC1155Burnable{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6b20c454\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xe3e55f08\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xe3e55f08\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf5298aca\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x6b20c454\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6ecf11d7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd562e204\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x2eb2c2d6\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3e4bee38\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5b2725ed\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x13dc989f\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n        /* \"#utility.yul\":597:622   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n        /* \"#utility.yul\":1184:1198   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1177:1199   */\n      iszero\n        /* \"#utility.yul\":1159:1200   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1147:1149   */\n      0x20\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_26\n        /* \"#utility.yul\":1019:1206   */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"msc_token/ERC1155.sol\":478:511  uint256 public constant SWORD = 3 */\n    tag_6:\n      tag_22\n        /* \"msc_token/ERC1155.sol\":510:511  3 */\n      0x03\n        /* \"msc_token/ERC1155.sol\":478:511  uint256 public constant SWORD = 3 */\n      dup2\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n    tag_7:\n      tag_43\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"msc_token/ERC1155.sol\":351:383  uint256 public constant GOLD = 0 */\n    tag_8:\n      tag_22\n        /* \"msc_token/ERC1155.sol\":382:383  0 */\n      0x00\n        /* \"msc_token/ERC1155.sol\":351:383  uint256 public constant GOLD = 0 */\n      dup2\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_9:\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n        /* \"msc_token/ERC1155.sol\":518:552  uint256 public constant SHIELD = 4 */\n    tag_10:\n      tag_22\n        /* \"msc_token/ERC1155.sol\":551:552  4 */\n      0x04\n        /* \"msc_token/ERC1155.sol\":518:552  uint256 public constant SHIELD = 4 */\n      dup2\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":709:1051  function burnBatch(... */\n    tag_11:\n      tag_43\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n        /* \"msc_token/ERC1155.sol\":878:1186  function mintBatch() public {... */\n    tag_12:\n      tag_43\n      tag_64\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3131:3284  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_13:\n      tag_43\n      tag_66\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n        /* \"msc_token/ERC1155.sol\":431:471  uint256 public constant THORS_HAMMER = 2 */\n    tag_14:\n      tag_22\n        /* \"msc_token/ERC1155.sol\":470:471  2 */\n      0x02\n        /* \"msc_token/ERC1155.sol\":431:471  uint256 public constant THORS_HAMMER = 2 */\n      dup2\n      jump\n        /* \"msc_token/ERC1155.sol\":390:424  uint256 public constant SILVER = 1 */\n    tag_15:\n      tag_22\n        /* \"msc_token/ERC1155.sol\":423:424  1 */\n      0x01\n        /* \"msc_token/ERC1155.sol\":390:424  uint256 public constant SILVER = 1 */\n      dup2\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_16:\n      tag_28\n      tag_76\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_76:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3450:3454  bool */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3491  _operatorApprovals */\n      0x01\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3510  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3584:3973  function safeTransferFrom(... */\n    tag_17:\n      tag_43\n      tag_81\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":393:703  function burn(... */\n    tag_18:\n      tag_43\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_25:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2256:2263  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2283:2304  account != address(0) */\n      dup4\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2275:2352  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9259:9261   */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2275:2352  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9241:9262   */\n      mstore\n        /* \"#utility.yul\":9298:9300   */\n      0x2b\n        /* \"#utility.yul\":9278:9296   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9271:9301   */\n      mstore\n        /* \"#utility.yul\":9337:9371   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":9317:9335   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9310:9372   */\n      mstore\n      shl(0xa8, 0x65726f2061646472657373)\n        /* \"#utility.yul\":9388:9406   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9381:9422   */\n      mstore\n        /* \"#utility.yul\":9439:9458   */\n      0x84\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2275:2352  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2378  _balances */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2382  _balances[id] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2391  _balances[id][account] */\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_31:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1323:1327  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1399  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1467  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_94\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1415:1467  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1467  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_94:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1519  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_96\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1483:1519  super.supportsInterface(interfaceId) */\n    tag_96:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1339:1519  return... */\n      swap3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_37:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1985:1998  string memory */\n      0x60\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2017:2021  _uri */\n      0x02\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2010:2021  return _uri */\n      dup1\n      sload\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_100\n      jump\t// in\n    tag_101:\n      dup1\n      iszero\n      tag_102\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_103\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_102)\n    tag_103:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_104:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_104\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_102:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n    tag_46:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4290  from == _msgSender() */\n      dup6\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4290  from == _msgSender() */\n      eq\n      dup1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4330  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_109\n      jumpi\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4294:4330  isApprovedForAll(from, _msgSender()) */\n      tag_109\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4311:4315  from */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_76\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4294:4330  isApprovedForAll(from, _msgSender()) */\n    tag_109:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10056:10058   */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10038:10059   */\n      mstore\n        /* \"#utility.yul\":10095:10097   */\n      0x32\n        /* \"#utility.yul\":10075:10093   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10068:10098   */\n      mstore\n        /* \"#utility.yul\":10134:10168   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":10114:10132   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10107:10169   */\n      mstore\n      shl(0x72, 0x1bdddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":10185:10203   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10178:10226   */\n      mstore\n        /* \"#utility.yul\":10243:10262   */\n      0x84\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n      tag_91\n        /* \"#utility.yul\":9854:10268   */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n    tag_111:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4468  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_114\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4439:4443  from */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4445:4447  to */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4449:4452  ids */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4454:4461  amounts */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4463:4467  data */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4438  _safeBatchTransferFrom */\n      tag_115\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4468  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_114:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_53:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2706:2722  uint256[] memory */\n      0x60\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2765:2768  ids */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2765:2775  ids.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2754  accounts */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2761  accounts.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2775  accounts.length == ids.length */\n      eq\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10475:10477   */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10457:10478   */\n      mstore\n        /* \"#utility.yul\":10514:10516   */\n      0x29\n        /* \"#utility.yul\":10494:10512   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10487:10517   */\n      mstore\n        /* \"#utility.yul\":10553:10587   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":10533:10551   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10526:10588   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":10604:10622   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10597:10636   */\n      mstore\n        /* \"#utility.yul\":10653:10672   */\n      0x84\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_91\n        /* \"#utility.yul\":10273:10678   */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_117:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2832:2862  uint256[] memory batchBalances */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2879:2887  accounts */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2879:2894  accounts.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2865:2895  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_121\n      jumpi\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_123\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_123:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2832:2895  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2911:2920  uint256 i */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_124:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2930:2938  accounts */\n      dup5\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2930:2945  accounts.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2926:2927  i */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2926:2945  i < accounts.length */\n      lt\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_125\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:3015  balanceOf(accounts[i], ids[i]) */\n      tag_127\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2995:3003  accounts */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3004:3005  i */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2995:3006  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_129\n      jumpi\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3008:3011  ids */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3012:3013  i */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3008:3014  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_132\n      jumpi\n      tag_132\n      tag_130\n      jump\t// in\n    tag_132:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:2994  balanceOf */\n      tag_25\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:3015  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_127:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:2979  batchBalances */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2980:2981  i */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:2982  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_134\n      jumpi\n      tag_134\n      tag_130\n      jump\t// in\n    tag_134:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:3015  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2947:2950  ++i */\n      tag_135\n      dup2\n      tag_136\n      jump\t// in\n    tag_135:\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_124)\n    tag_125:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3043:3056  batchBalances */\n      swap4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":709:1051  function burnBatch(... */\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":868:891  account == _msgSender() */\n      dup4\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":868:891  account == _msgSender() */\n      eq\n      dup1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":868:934  account == _msgSender() || isApprovedForAll(account, _msgSender()) */\n      tag_140\n      jumpi\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":895:934  isApprovedForAll(account, _msgSender()) */\n      tag_140\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":912:919  account */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_76\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":895:934  isApprovedForAll(account, _msgSender()) */\n    tag_140:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":847:1001  require(... */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_144\n      jump\t// in\n    tag_142:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":1012:1044  _burnBatch(account, ids, values) */\n      tag_145\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":1023:1030  account */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":1032:1035  ids */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":1037:1043  values */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":1012:1022  _burnBatch */\n      tag_146\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":1012:1044  _burnBatch(account, ids, values) */\n      jump\t// in\n    tag_145:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":709:1051  function burnBatch(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/ERC1155.sol\":878:1186  function mintBatch() public {... */\n    tag_64:\n        /* \"msc_token/ERC1155.sol\":940:959  new uint256[](1000) */\n      0x40\n      dup1\n      mload\n        /* \"msc_token/ERC1155.sol\":954:958  1000 */\n      0x03e8\n        /* \"msc_token/ERC1155.sol\":940:959  new uint256[](1000) */\n      dup1\n      dup3\n      mstore\n      0x7d20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n        /* \"msc_token/ERC1155.sol\":917:937  uint256[] memory ids */\n      0x00\n      swap2\n        /* \"msc_token/ERC1155.sol\":940:959  new uint256[](1000) */\n      0x20\n      dup3\n      add\n      0x7d00\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      pop\n      pop\n        /* \"msc_token/ERC1155.sol\":997:1016  new uint256[](1000) */\n      0x40\n      dup1\n      mload\n        /* \"msc_token/ERC1155.sol\":1011:1015  1000 */\n      0x03e8\n        /* \"msc_token/ERC1155.sol\":997:1016  new uint256[](1000) */\n      dup1\n      dup3\n      mstore\n      0x7d20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n        /* \"msc_token/ERC1155.sol\":917:959  uint256[] memory ids = new uint256[](1000) */\n      swap3\n      swap4\n      pop\n        /* \"msc_token/ERC1155.sol\":970:994  uint256[] memory amounts */\n      0x00\n      swap3\n        /* \"msc_token/ERC1155.sol\":997:1016  new uint256[](1000) */\n      swap2\n      pop\n      0x20\n      dup3\n      add\n      0x7d00\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"msc_token/ERC1155.sol\":970:1016  uint256[] memory amounts = new uint256[](1000) */\n      swap1\n      pop\n        /* \"msc_token/ERC1155.sol\":1032:1041  uint256 i */\n      0x00\n        /* \"msc_token/ERC1155.sol\":1027:1128  for (uint256 i = 0; i < 1000; i++) {... */\n    tag_154:\n        /* \"msc_token/ERC1155.sol\":1051:1055  1000 */\n      0x03e8\n        /* \"msc_token/ERC1155.sol\":1047:1048  i */\n      dup2\n        /* \"msc_token/ERC1155.sol\":1047:1055  i < 1000 */\n      lt\n        /* \"msc_token/ERC1155.sol\":1027:1128  for (uint256 i = 0; i < 1000; i++) {... */\n      iszero\n      tag_155\n      jumpi\n        /* \"msc_token/ERC1155.sol\":1086:1087  i */\n      dup1\n        /* \"msc_token/ERC1155.sol\":1077:1080  ids */\n      dup4\n        /* \"msc_token/ERC1155.sol\":1081:1082  i */\n      dup3\n        /* \"msc_token/ERC1155.sol\":1077:1083  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_158\n      jumpi\n      tag_158\n      tag_130\n      jump\t// in\n    tag_158:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"msc_token/ERC1155.sol\":1077:1087  ids[i] = i */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"msc_token/ERC1155.sol\":1115:1116  1 */\n      0x01\n        /* \"msc_token/ERC1155.sol\":1102:1109  amounts */\n      dup3\n        /* \"msc_token/ERC1155.sol\":1110:1111  i */\n      dup3\n        /* \"msc_token/ERC1155.sol\":1102:1112  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_160\n      jumpi\n      tag_160\n      tag_130\n      jump\t// in\n    tag_160:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"msc_token/ERC1155.sol\":1102:1116  amounts[i] = 1 */\n      mstore\n        /* \"msc_token/ERC1155.sol\":1057:1060  i++ */\n      dup1\n      tag_161\n      dup2\n      tag_136\n      jump\t// in\n    tag_161:\n      swap2\n      pop\n      pop\n        /* \"msc_token/ERC1155.sol\":1027:1128  for (uint256 i = 0; i < 1000; i++) {... */\n      jump(tag_154)\n    tag_155:\n      pop\n        /* \"msc_token/ERC1155.sol\":1138:1178  _mintBatch(msg.sender, ids, amounts, \"\") */\n      tag_162\n        /* \"msc_token/ERC1155.sol\":1149:1159  msg.sender */\n      caller\n        /* \"msc_token/ERC1155.sol\":1161:1164  ids */\n      dup4\n        /* \"msc_token/ERC1155.sol\":1166:1173  amounts */\n      dup4\n        /* \"msc_token/ERC1155.sol\":1138:1178  _mintBatch(msg.sender, ids, amounts, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"msc_token/ERC1155.sol\":1138:1148  _mintBatch */\n      tag_163\n        /* \"msc_token/ERC1155.sol\":1138:1178  _mintBatch(msg.sender, ids, amounts, \"\") */\n      jump\t// in\n    tag_162:\n        /* \"msc_token/ERC1155.sol\":906:1186  {... */\n      pop\n      pop\n        /* \"msc_token/ERC1155.sol\":878:1186  function mintBatch() public {... */\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3131:3284  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_68:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3277  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_162\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3258:3266  operator */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3268:3276  approved */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3243  _setApprovalForAll */\n      tag_167\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3277  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3584:3973  function safeTransferFrom(... */\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3804  from == _msgSender() */\n      dup6\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3804  from == _msgSender() */\n      eq\n      dup1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3844  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_172\n      jumpi\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3808:3844  isApprovedForAll(from, _msgSender()) */\n      tag_172\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3825:3829  from */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_76\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3808:3844  isApprovedForAll(from, _msgSender()) */\n    tag_172:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3763:3911  require(... */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_144\n      jump\t// in\n    tag_174:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3966  _safeTransferFrom(from, to, id, amount, data) */\n      tag_114\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3939:3943  from */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3945:3947  to */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3949:3951  id */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3953:3959  amount */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3961:3965  data */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3938  _safeTransferFrom */\n      tag_177\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3966  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":393:703  function burn(... */\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":527:550  account == _msgSender() */\n      dup4\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":527:550  account == _msgSender() */\n      eq\n      dup1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":527:593  account == _msgSender() || isApprovedForAll(account, _msgSender()) */\n      tag_181\n      jumpi\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":554:593  isApprovedForAll(account, _msgSender()) */\n      tag_181\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":571:578  account */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_76\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":554:593  isApprovedForAll(account, _msgSender()) */\n    tag_181:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":506:660  require(... */\n      tag_183\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_144\n      jump\t// in\n    tag_183:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":671:696  _burn(account, id, value) */\n      tag_145\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":677:684  account */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":686:688  id */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":690:695  value */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":671:676  _burn */\n      tag_186\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":671:696  _burn(account, id, value) */\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":771:1148  function isContract(address account) internal view returns (bool) {... */\n    tag_88:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":1087:1107  extcodesize(account) */\n      extcodesize\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":1133:1141  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":771:1148  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6068:7113  function _safeBatchTransferFrom(... */\n    tag_115:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6288:6295  amounts */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6288:6302  amounts.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6277  ids */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6284  ids.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6302  ids.length == amounts.length */\n      eq\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6266:6347  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_193\n      jump\t// in\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6365:6381  to != address(0) */\n      dup5\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6357:6423  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_196\n      jump\t// in\n    tag_194:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6434:6450  address operator */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_200:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6571:6574  ids */\n      dup5\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6571:6581  ids.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6567:6568  i */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6567:6581  i < ids.length */\n      lt\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_201\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6602:6612  uint256 id */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6615:6618  ids */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6619:6620  i */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6615:6621  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_204\n      jumpi\n      tag_204\n      tag_130\n      jump\t// in\n    tag_204:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6602:6621  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6635:6649  uint256 amount */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6659  amounts */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6660:6661  i */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6662  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_206\n      jumpi\n      tag_206\n      tag_130\n      jump\t// in\n    tag_206:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6677:6696  uint256 fromBalance */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6699:6712  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6699:6718  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6662  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6740:6761  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6732:6808  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_209\n      jump\t// in\n    tag_207:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6859  _balances */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6863  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6869  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6892  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6892  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6937  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6947  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6892  fromBalance - amount */\n      dup5\n      swap3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6859  _balances */\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6947  _balances[id][to] += amount */\n      tag_210\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6892  fromBalance - amount */\n      dup5\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6947  _balances[id][to] += amount */\n      tag_211\n      jump\t// in\n    tag_210:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6588:6958  {... */\n      pop\n      pop\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6583:6586  ++i */\n      dup1\n      tag_212\n      swap1\n      tag_136\n      jump\t// in\n    tag_212:\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_200)\n    tag_201:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7003:7005  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6997:7001  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6987:6995  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7007:7010  ids */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7012:7019  amounts */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_213\n      swap3\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7106  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_215\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7067:7075  operator */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7077:7081  from */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7083:7085  to */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7090  ids */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7092:7099  amounts */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7101:7105  data */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7066  _doSafeBatchTransferAcceptanceCheck */\n      tag_216\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7106  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_215:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6256:7113  {... */\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6068:7113  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11072:11939  function _burnBatch(... */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11219:11237  from != address(0) */\n      dup4\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11211:11277  require(from != address(0), \"ERC1155: burn from the zero address\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_220\n      jump\t// in\n    tag_218:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11309:11316  amounts */\n      dup1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11309:11323  amounts.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11295:11298  ids */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11295:11305  ids.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11295:11323  ids.length == amounts.length */\n      eq\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11287:11368  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_193\n      jump\t// in\n    tag_221:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11421:11487  _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11379:11395  address operator */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11421:11487  _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      swap1\n      dup2\n      swap1\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11498:11862  for (uint256 i = 0; i < ids.length; i++) {... */\n    tag_225:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11522:11525  ids */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11522:11532  ids.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11518:11519  i */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11518:11532  i < ids.length */\n      lt\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11498:11862  for (uint256 i = 0; i < ids.length; i++) {... */\n      iszero\n      tag_226\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11553:11563  uint256 id */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11566:11569  ids */\n      dup5\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11570:11571  i */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11566:11572  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_229\n      jumpi\n      tag_229\n      tag_130\n      jump\t// in\n    tag_229:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11553:11572  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11586:11600  uint256 amount */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11603:11610  amounts */\n      dup5\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11611:11612  i */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11603:11613  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_231\n      jumpi\n      tag_231\n      tag_130\n      jump\t// in\n    tag_231:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11628:11647  uint256 fromBalance */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11650:11663  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11650:11669  _balances[id][from] */\n      dup13\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11603:11613  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11691:11712  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11683:11753  require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_234\n      jump\t// in\n    tag_232:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11795:11804  _balances */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11795:11808  _balances[id] */\n      swap3\n      dup4\n      mstore\n      0x20\n      dup4\n      dup2\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11795:11814  _balances[id][from] */\n      dup12\n      and\n      dup7\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      swap3\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11817:11837  fromBalance - amount */\n      swap2\n      sub\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11795:11837  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11534:11537  i++ */\n      dup1\n      tag_235\n      dup2\n      tag_136\n      jump\t// in\n    tag_235:\n      swap2\n      pop\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11498:11862  for (uint256 i = 0; i < ids.length; i++) {... */\n      jump(tag_225)\n    tag_226:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11915:11916  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11877:11932  TransferBatch(operator, from, address(0), ids, amounts) */\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11901:11905  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11877:11932  TransferBatch(operator, from, address(0), ids, amounts) */\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11891:11899  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11877:11932  TransferBatch(operator, from, address(0), ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11919:11922  ids */\n      dup7\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11924:11931  amounts */\n      dup7\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11877:11932  TransferBatch(operator, from, address(0), ids, amounts) */\n      mload(0x40)\n      tag_236\n      swap3\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11201:11939  {... */\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11072:11939  function _burnBatch(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9293:10008  function _mintBatch(... */\n    tag_163:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9465:9481  to != address(0) */\n      dup5\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9457:9519  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14337:14339   */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9457:9519  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14319:14340   */\n      mstore\n        /* \"#utility.yul\":14376:14378   */\n      0x21\n        /* \"#utility.yul\":14356:14374   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14349:14379   */\n      mstore\n        /* \"#utility.yul\":14415:14449   */\n      0x455243313135353a206d696e7420746f20746865207a65726f20616464726573\n        /* \"#utility.yul\":14395:14413   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14388:14450   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":14466:14484   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14459:14490   */\n      mstore\n        /* \"#utility.yul\":14507:14526   */\n      0x84\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9457:9519  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_91\n        /* \"#utility.yul\":14135:14532   */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9457:9519  require(to != address(0), \"ERC1155: mint to the zero address\") */\n    tag_238:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9551:9558  amounts */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9551:9565  amounts.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9537:9540  ids */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9537:9547  ids.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9537:9565  ids.length == amounts.length */\n      eq\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9529:9610  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_193\n      jump\t// in\n    tag_241:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9621:9637  address operator */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9740:9841  for (uint256 i = 0; i < ids.length; i++) {... */\n    tag_245:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9764:9767  ids */\n      dup5\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9764:9774  ids.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9760:9761  i */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9760:9774  i < ids.length */\n      lt\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9740:9841  for (uint256 i = 0; i < ids.length; i++) {... */\n      iszero\n      tag_246\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9820:9827  amounts */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9828:9829  i */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9820:9830  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_249\n      jumpi\n      tag_249\n      tag_130\n      jump\t// in\n    tag_249:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9795:9804  _balances */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9795:9812  _balances[ids[i]] */\n      dup1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9805:9808  ids */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9809:9810  i */\n      dup5\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9805:9811  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_251\n      jumpi\n      tag_251\n      tag_130\n      jump\t// in\n    tag_251:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9795:9812  _balances[ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9795:9816  _balances[ids[i]][to] */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9813:9815  to */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9795:9816  _balances[ids[i]][to] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9795:9830  _balances[ids[i]][to] += amounts[i] */\n      dup3\n      dup3\n      sload\n      tag_252\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_252:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9776:9779  i++ */\n      dup2\n      swap1\n      pop\n      tag_253\n      dup2\n      tag_136\n      jump\t// in\n    tag_253:\n      swap2\n      pop\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9740:9841  for (uint256 i = 0; i < ids.length; i++) {... */\n      jump(tag_245)\n    tag_246:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9892:9894  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9856:9909  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9888:9889  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9856:9909  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9870:9878  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9856:9909  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9896:9899  ids */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9901:9908  amounts */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9856:9909  TransferBatch(operator, address(0), to, ids, amounts) */\n      mload(0x40)\n      tag_254\n      swap3\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9920:10001  _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data) */\n      tag_114\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9956:9964  operator */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9974:9975  0 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9978:9980  to */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9982:9985  ids */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9987:9994  amounts */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9996:10000  data */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9920:9955  _doSafeBatchTransferAcceptanceCheck */\n      tag_216\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9920:10001  _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data) */\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12074:12397  function _setApprovalForAll(... */\n    tag_167:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12224:12232  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12232  owner != operator */\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12220  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12232  owner != operator */\n      and\n      sub\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14739:14741   */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14721:14742   */\n      mstore\n        /* \"#utility.yul\":14778:14780   */\n      0x29\n        /* \"#utility.yul\":14758:14776   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14751:14781   */\n      mstore\n        /* \"#utility.yul\":14817:14851   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":14797:14815   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14790:14852   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":14868:14886   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14861:14900   */\n      mstore\n        /* \"#utility.yul\":14917:14936   */\n      0x84\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_91\n        /* \"#utility.yul\":14537:14942   */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_257:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12313  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12306  _operatorApprovals */\n      0x01\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12313  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12323  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12334  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12349:12390  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":1159:1200   */\n      swap2\n      dup3\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12349:12390  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12349:12390  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12074:12397  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4925:5722  function _safeTransferFrom(... */\n    tag_177:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5106:5122  to != address(0) */\n      dup5\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5098:5164  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_262\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_196\n      jump\t// in\n    tag_262:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5217:5313  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_265\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5248:5252  from */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5256  to */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5279  _asSingletonArray(id) */\n      tag_266\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5276:5278  id */\n      dup9\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5275  _asSingletonArray */\n      tag_267\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5279  _asSingletonArray(id) */\n      jump\t// in\n    tag_266:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5281:5306  _asSingletonArray(amount) */\n      tag_114\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5299:5305  amount */\n      dup9\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5281:5298  _asSingletonArray */\n      tag_267\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5281:5306  _asSingletonArray(amount) */\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5217:5313  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n    tag_265:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5324:5343  uint256 fromBalance */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5346:5359  _balances[id] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5346:5365  _balances[id][from] */\n      dup11\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5383:5404  fromBalance >= amount */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5375:5451  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_269\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_209\n      jump\t// in\n    tag_269:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5494  _balances */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5498  _balances[id] */\n      dup6\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5504  _balances[id][from] */\n      dup12\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5527  fromBalance - amount */\n      dup8\n      dup6\n      sub\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5527  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5564  _balances[id][to] */\n      swap1\n      dup9\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5574  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5527  fromBalance - amount */\n      dup7\n      swap3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5494  _balances */\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5574  _balances[id][to] += amount */\n      tag_271\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5527  fromBalance - amount */\n      dup5\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5574  _balances[id][to] += amount */\n      tag_211\n      jump\t// in\n    tag_271:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":15121:15146   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":15177:15179   */\n      0x20\n        /* \"#utility.yul\":15162:15180   */\n      dup2\n      add\n        /* \"#utility.yul\":15155:15189   */\n      dup7\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      dup10\n      and\n      swap3\n      dup11\n      dup3\n      and\n      swap3\n      swap2\n      dup7\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":15094:15112   */\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5715  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_274\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5678:5686  operator */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5688:5692  from */\n      dup9\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5694:5696  to */\n      dup9\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5698:5700  id */\n      dup9\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5702:5708  amount */\n      dup9\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5710:5714  data */\n      dup9\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5677  _doSafeTransferAcceptanceCheck */\n      tag_275\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5715  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_274:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5088:5722  {... */\n      pop\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4925:5722  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10248:10878  function _burn(... */\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10370:10388  from != address(0) */\n      dup4\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10362:10428  require(from != address(0), \"ERC1155: burn from the zero address\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_220\n      jump\t// in\n    tag_277:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10481:10583  _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\") */\n      tag_280\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10512:10516  from */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10439:10455  address operator */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10530:10551  _asSingletonArray(id) */\n      tag_281\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10548:10550  id */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10530:10547  _asSingletonArray */\n      tag_267\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10530:10551  _asSingletonArray(id) */\n      jump\t// in\n    tag_281:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10553:10578  _asSingletonArray(amount) */\n      tag_282\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10571:10577  amount */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10553:10570  _asSingletonArray */\n      tag_267\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10553:10578  _asSingletonArray(amount) */\n      jump\t// in\n    tag_282:\n      pop\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10481:10583  _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\") */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      swap1\n      mstore\n      pop\n      pop\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6068:7113  function _safeBatchTransferFrom(... */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10481:10583  _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\") */\n    tag_280:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10594:10613  uint256 fromBalance */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10616:10629  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10616:10635  _balances[id][from] */\n      dup9\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10653:10674  fromBalance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10645:10715  require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\") */\n      tag_283\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_234\n      jump\t// in\n    tag_283:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10749:10758  _balances */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10749:10762  _balances[id] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10749:10768  _balances[id][from] */\n      dup10\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n      swap2\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10771:10791  fromBalance - amount */\n      dup9\n      dup8\n      sub\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10749:10791  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10817:10871  TransferSingle(operator, from, address(0), id, amount) */\n      dup3\n      mload\n        /* \"#utility.yul\":15121:15146   */\n      dup10\n      dup2\n      mstore\n        /* \"#utility.yul\":15162:15180   */\n      swap4\n      dup5\n      add\n        /* \"#utility.yul\":15155:15189   */\n      dup9\n      swap1\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10749:10768  _balances[id][from] */\n      swap1\n      swap3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10817:10871  TransferSingle(operator, from, address(0), id, amount) */\n      swap1\n      dup7\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":15094:15112   */\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10817:10871  TransferSingle(operator, from, address(0), id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10352:10878  {... */\n      pop\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10248:10878  function _burn(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14282:15074  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_216:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14514:14527  to.isContract */\n      dup5\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":1087:1107  extcodesize(account) */\n      extcodesize\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":1133:1141  size > 0 */\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14510:15068  if (to.isContract()) {... */\n      tag_215\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14628  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14592  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14628  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_290\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14593:14601  operator */\n      dup10\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14603:14607  from */\n      dup10\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14609:14612  ids */\n      dup9\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14614:14621  amounts */\n      dup9\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14623:14627  data */\n      dup9\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14628  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_291\n      jump\t// in\n    tag_290:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_292\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_293\n      swap2\n      dup2\n      add\n      swap1\n      tag_294\n      jump\t// in\n    tag_293:\n      0x01\n    tag_292:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14545:15058  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_295\n      jumpi\n      tag_299\n      tag_300\n      jump\t// in\n    tag_299:\n      dup1\n      0x08c379a0\n      sub\n      tag_298\n      jumpi\n      pop\n      tag_301\n      tag_302\n      jump\t// in\n    tag_301:\n      dup1\n      tag_303\n      jumpi\n      pop\n      jump(tag_297)\n    tag_303:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14934:14940  reason */\n      dup1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14927:14941  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14545:15058  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_298:\n      pop\n    tag_297:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14981:15043  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17348:17350   */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14981:15043  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17330:17351   */\n      mstore\n        /* \"#utility.yul\":17387:17389   */\n      0x34\n        /* \"#utility.yul\":17367:17385   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17360:17390   */\n      mstore\n        /* \"#utility.yul\":17426:17460   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":17406:17424   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17399:17461   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":17477:17495   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17470:17520   */\n      mstore\n        /* \"#utility.yul\":17537:17556   */\n      0x84\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14981:15043  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_91\n        /* \"#utility.yul\":17146:17562   */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14545:15058  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_295:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14707:14767  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14703:14860  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_274\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14791:14841  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_310\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15080:15273  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_267:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15213:15214  1 */\n      0x01\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15146:15162  uint256[] memory */\n      0x60\n      swap2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15174:15196  uint256[] memory array */\n      0x00\n      swap2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15174:15215  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15236:15243  element */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15230  array */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15231:15232  0 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15233  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_316\n      jumpi\n      tag_316\n      tag_130\n      jump\t// in\n    tag_316:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15243  array[0] = element */\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15261:15266  array */\n      swap3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15080:15273  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13551:14276  function _doSafeTransferAcceptanceCheck(... */\n    tag_275:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13758:13771  to.isContract */\n      dup5\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":1087:1107  extcodesize(account) */\n      extcodesize\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":1133:1141  size > 0 */\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13754:14270  if (to.isContract()) {... */\n      tag_215\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13831  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_320\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13832:13840  operator */\n      dup10\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13842:13846  from */\n      dup10\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13848:13850  id */\n      dup9\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13852:13858  amount */\n      dup9\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13860:13864  data */\n      dup9\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_321\n      jump\t// in\n    tag_320:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_322\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_323\n      swap2\n      dup2\n      add\n      swap1\n      tag_294\n      jump\t// in\n    tag_323:\n      0x01\n    tag_322:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13789:14260  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_324\n      jumpi\n      tag_299\n      tag_300\n      jump\t// in\n    tag_324:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13914:13969  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13910:14062  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_274\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13993:14043  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_310\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_336:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_347\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_347:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_24:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_349:\n        /* \"#utility.yul\":360:389   */\n      tag_350\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_336\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":633:764   */\n    tag_337:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":707:739   */\n      dup2\n      and\n        /* \"#utility.yul\":697:740   */\n      dup2\n      eq\n        /* \"#utility.yul\":687:758   */\n      tag_353\n      jumpi\n        /* \"#utility.yul\":754:755   */\n      0x00\n        /* \"#utility.yul\":751:752   */\n      dup1\n        /* \"#utility.yul\":744:756   */\n      revert\n        /* \"#utility.yul\":687:758   */\n    tag_353:\n        /* \"#utility.yul\":633:764   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":769:1014   */\n    tag_30:\n        /* \"#utility.yul\":827:833   */\n      0x00\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":868:877   */\n      dup3\n        /* \"#utility.yul\":859:866   */\n      dup5\n        /* \"#utility.yul\":855:878   */\n      sub\n        /* \"#utility.yul\":851:883   */\n      slt\n        /* \"#utility.yul\":848:900   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":896:897   */\n      0x00\n        /* \"#utility.yul\":893:894   */\n      dup1\n        /* \"#utility.yul\":886:898   */\n      revert\n        /* \"#utility.yul\":848:900   */\n    tag_355:\n        /* \"#utility.yul\":935:944   */\n      dup2\n        /* \"#utility.yul\":922:945   */\n      calldataload\n        /* \"#utility.yul\":954:984   */\n      tag_356\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":954:984   */\n      tag_337\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":1003:1008   */\n      swap4\n        /* \"#utility.yul\":769:1014   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1211:1391   */\n    tag_36:\n        /* \"#utility.yul\":1270:1276   */\n      0x00\n        /* \"#utility.yul\":1323:1325   */\n      0x20\n        /* \"#utility.yul\":1311:1320   */\n      dup3\n        /* \"#utility.yul\":1302:1309   */\n      dup5\n        /* \"#utility.yul\":1298:1321   */\n      sub\n        /* \"#utility.yul\":1294:1326   */\n      slt\n        /* \"#utility.yul\":1291:1343   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":1339:1340   */\n      0x00\n        /* \"#utility.yul\":1336:1337   */\n      dup1\n        /* \"#utility.yul\":1329:1341   */\n      revert\n        /* \"#utility.yul\":1291:1343   */\n    tag_359:\n      pop\n        /* \"#utility.yul\":1362:1385   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1211:1391   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1396:1868   */\n    tag_338:\n        /* \"#utility.yul\":1438:1441   */\n      0x00\n        /* \"#utility.yul\":1476:1481   */\n      dup2\n        /* \"#utility.yul\":1470:1482   */\n      mload\n        /* \"#utility.yul\":1503:1509   */\n      dup1\n        /* \"#utility.yul\":1498:1501   */\n      dup5\n        /* \"#utility.yul\":1491:1510   */\n      mstore\n        /* \"#utility.yul\":1528:1529   */\n      0x00\n        /* \"#utility.yul\":1538:1700   */\n    tag_361:\n        /* \"#utility.yul\":1552:1558   */\n      dup2\n        /* \"#utility.yul\":1549:1550   */\n      dup2\n        /* \"#utility.yul\":1546:1559   */\n      lt\n        /* \"#utility.yul\":1538:1700   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":1614:1618   */\n      0x20\n        /* \"#utility.yul\":1670:1683   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":1666:1688   */\n      dup2\n      add\n        /* \"#utility.yul\":1660:1689   */\n      mload\n        /* \"#utility.yul\":1642:1653   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":1638:1658   */\n      dup3\n      add\n        /* \"#utility.yul\":1631:1690   */\n      mstore\n        /* \"#utility.yul\":1567:1579   */\n      add\n        /* \"#utility.yul\":1538:1700   */\n      jump(tag_361)\n    tag_363:\n        /* \"#utility.yul\":1718:1724   */\n      dup2\n        /* \"#utility.yul\":1715:1716   */\n      dup2\n        /* \"#utility.yul\":1712:1725   */\n      gt\n        /* \"#utility.yul\":1709:1796   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":1784:1785   */\n      0x00\n        /* \"#utility.yul\":1777:1781   */\n      0x20\n        /* \"#utility.yul\":1768:1774   */\n      dup4\n        /* \"#utility.yul\":1763:1766   */\n      dup8\n        /* \"#utility.yul\":1759:1775   */\n      add\n        /* \"#utility.yul\":1755:1782   */\n      add\n        /* \"#utility.yul\":1748:1786   */\n      mstore\n        /* \"#utility.yul\":1709:1796   */\n    tag_364:\n      pop\n        /* \"#utility.yul\":1850:1852   */\n      0x1f\n        /* \"#utility.yul\":1829:1844   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1825:1854   */\n      and\n        /* \"#utility.yul\":1816:1855   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1857:1861   */\n      0x20\n        /* \"#utility.yul\":1812:1862   */\n      add\n      swap3\n        /* \"#utility.yul\":1396:1868   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1873:2093   */\n    tag_39:\n        /* \"#utility.yul\":2022:2024   */\n      0x20\n        /* \"#utility.yul\":2011:2020   */\n      dup2\n        /* \"#utility.yul\":2004:2025   */\n      mstore\n        /* \"#utility.yul\":1985:1989   */\n      0x00\n        /* \"#utility.yul\":2042:2087   */\n      tag_356\n        /* \"#utility.yul\":2083:2085   */\n      0x20\n        /* \"#utility.yul\":2072:2081   */\n      dup4\n        /* \"#utility.yul\":2068:2086   */\n      add\n        /* \"#utility.yul\":2060:2066   */\n      dup5\n        /* \"#utility.yul\":2042:2087   */\n      tag_338\n      jump\t// in\n        /* \"#utility.yul\":2098:2225   */\n    tag_122:\n        /* \"#utility.yul\":2159:2169   */\n      0x4e487b71\n        /* \"#utility.yul\":2154:2157   */\n      0xe0\n        /* \"#utility.yul\":2150:2170   */\n      shl\n        /* \"#utility.yul\":2147:2148   */\n      0x00\n        /* \"#utility.yul\":2140:2171   */\n      mstore\n        /* \"#utility.yul\":2190:2194   */\n      0x41\n        /* \"#utility.yul\":2187:2188   */\n      0x04\n        /* \"#utility.yul\":2180:2195   */\n      mstore\n        /* \"#utility.yul\":2214:2218   */\n      0x24\n        /* \"#utility.yul\":2211:2212   */\n      0x00\n        /* \"#utility.yul\":2204:2219   */\n      revert\n        /* \"#utility.yul\":2230:2479   */\n    tag_339:\n        /* \"#utility.yul\":2340:2342   */\n      0x1f\n        /* \"#utility.yul\":2321:2334   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2317:2344   */\n      and\n        /* \"#utility.yul\":2305:2345   */\n      dup2\n      add\n        /* \"#utility.yul\":2375:2393   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2360:2394   */\n      dup2\n      gt\n        /* \"#utility.yul\":2396:2418   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2357:2419   */\n      or\n        /* \"#utility.yul\":2354:2442   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":2422:2440   */\n      tag_370\n      tag_122\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":2458:2460   */\n      0x40\n        /* \"#utility.yul\":2451:2473   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":2230:2479   */\n      jump\t// out\n        /* \"#utility.yul\":2484:2667   */\n    tag_340:\n        /* \"#utility.yul\":2544:2548   */\n      0x00\n        /* \"#utility.yul\":2577:2595   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2569:2575   */\n      dup3\n        /* \"#utility.yul\":2566:2596   */\n      gt\n        /* \"#utility.yul\":2563:2619   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":2599:2617   */\n      tag_373\n      tag_122\n      jump\t// in\n    tag_373:\n      pop\n        /* \"#utility.yul\":2644:2645   */\n      0x05\n        /* \"#utility.yul\":2640:2654   */\n      shl\n        /* \"#utility.yul\":2656:2660   */\n      0x20\n        /* \"#utility.yul\":2636:2661   */\n      add\n      swap1\n        /* \"#utility.yul\":2484:2667   */\n      jump\t// out\n        /* \"#utility.yul\":2672:3396   */\n    tag_341:\n        /* \"#utility.yul\":2726:2731   */\n      0x00\n        /* \"#utility.yul\":2779:2782   */\n      dup3\n        /* \"#utility.yul\":2772:2776   */\n      0x1f\n        /* \"#utility.yul\":2764:2770   */\n      dup4\n        /* \"#utility.yul\":2760:2777   */\n      add\n        /* \"#utility.yul\":2756:2783   */\n      slt\n        /* \"#utility.yul\":2746:2801   */\n      tag_375\n      jumpi\n        /* \"#utility.yul\":2797:2798   */\n      0x00\n        /* \"#utility.yul\":2794:2795   */\n      dup1\n        /* \"#utility.yul\":2787:2799   */\n      revert\n        /* \"#utility.yul\":2746:2801   */\n    tag_375:\n        /* \"#utility.yul\":2833:2839   */\n      dup2\n        /* \"#utility.yul\":2820:2840   */\n      calldataload\n        /* \"#utility.yul\":2859:2863   */\n      0x20\n        /* \"#utility.yul\":2882:2925   */\n      tag_376\n        /* \"#utility.yul\":2922:2924   */\n      dup3\n        /* \"#utility.yul\":2882:2925   */\n      tag_340\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":2954:2956   */\n      0x40\n        /* \"#utility.yul\":2948:2957   */\n      mload\n        /* \"#utility.yul\":2966:2997   */\n      tag_377\n        /* \"#utility.yul\":2994:2996   */\n      dup3\n        /* \"#utility.yul\":2986:2992   */\n      dup3\n        /* \"#utility.yul\":2966:2997   */\n      tag_339\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":3032:3050   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":3124:3125   */\n      0x05\n        /* \"#utility.yul\":3120:3130   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":3108:3131   */\n      dup6\n      add\n        /* \"#utility.yul\":3104:3136   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":3066:3081   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":3148:3163   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":3145:3180   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":3176:3177   */\n      0x00\n        /* \"#utility.yul\":3173:3174   */\n      dup1\n        /* \"#utility.yul\":3166:3178   */\n      revert\n        /* \"#utility.yul\":3145:3180   */\n    tag_378:\n        /* \"#utility.yul\":3212:3214   */\n      dup3\n        /* \"#utility.yul\":3204:3210   */\n      dup7\n        /* \"#utility.yul\":3200:3215   */\n      add\n        /* \"#utility.yul\":3224:3366   */\n    tag_379:\n        /* \"#utility.yul\":3240:3246   */\n      dup5\n        /* \"#utility.yul\":3235:3238   */\n      dup2\n        /* \"#utility.yul\":3232:3247   */\n      lt\n        /* \"#utility.yul\":3224:3366   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":3306:3323   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3294:3324   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3344:3356   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3257:3269   */\n      dup4\n      add\n        /* \"#utility.yul\":3224:3366   */\n      jump(tag_379)\n    tag_381:\n      pop\n        /* \"#utility.yul\":3384:3390   */\n      swap7\n        /* \"#utility.yul\":2672:3396   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3401:3956   */\n    tag_342:\n        /* \"#utility.yul\":3443:3448   */\n      0x00\n        /* \"#utility.yul\":3496:3499   */\n      dup3\n        /* \"#utility.yul\":3489:3493   */\n      0x1f\n        /* \"#utility.yul\":3481:3487   */\n      dup4\n        /* \"#utility.yul\":3477:3494   */\n      add\n        /* \"#utility.yul\":3473:3500   */\n      slt\n        /* \"#utility.yul\":3463:3518   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":3514:3515   */\n      0x00\n        /* \"#utility.yul\":3511:3512   */\n      dup1\n        /* \"#utility.yul\":3504:3516   */\n      revert\n        /* \"#utility.yul\":3463:3518   */\n    tag_383:\n        /* \"#utility.yul\":3550:3556   */\n      dup2\n        /* \"#utility.yul\":3537:3557   */\n      calldataload\n        /* \"#utility.yul\":3576:3594   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3572:3574   */\n      dup2\n        /* \"#utility.yul\":3569:3595   */\n      gt\n        /* \"#utility.yul\":3566:3618   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":3598:3616   */\n      tag_385\n      tag_122\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":3647:3649   */\n      0x40\n        /* \"#utility.yul\":3641:3650   */\n      mload\n        /* \"#utility.yul\":3659:3726   */\n      tag_386\n        /* \"#utility.yul\":3714:3716   */\n      0x1f\n        /* \"#utility.yul\":3695:3708   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3691:3718   */\n      and\n        /* \"#utility.yul\":3720:3724   */\n      0x20\n        /* \"#utility.yul\":3687:3725   */\n      add\n        /* \"#utility.yul\":3641:3650   */\n      dup3\n        /* \"#utility.yul\":3659:3726   */\n      tag_339\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":3750:3752   */\n      dup2\n        /* \"#utility.yul\":3742:3748   */\n      dup2\n        /* \"#utility.yul\":3735:3753   */\n      mstore\n        /* \"#utility.yul\":3796:3799   */\n      dup5\n        /* \"#utility.yul\":3789:3793   */\n      0x20\n        /* \"#utility.yul\":3784:3786   */\n      dup4\n        /* \"#utility.yul\":3776:3782   */\n      dup7\n        /* \"#utility.yul\":3772:3787   */\n      add\n        /* \"#utility.yul\":3768:3794   */\n      add\n        /* \"#utility.yul\":3765:3800   */\n      gt\n        /* \"#utility.yul\":3762:3817   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":3813:3814   */\n      0x00\n        /* \"#utility.yul\":3810:3811   */\n      dup1\n        /* \"#utility.yul\":3803:3815   */\n      revert\n        /* \"#utility.yul\":3762:3817   */\n    tag_387:\n        /* \"#utility.yul\":3877:3879   */\n      dup2\n        /* \"#utility.yul\":3870:3874   */\n      0x20\n        /* \"#utility.yul\":3862:3868   */\n      dup6\n        /* \"#utility.yul\":3858:3875   */\n      add\n        /* \"#utility.yul\":3851:3855   */\n      0x20\n        /* \"#utility.yul\":3843:3849   */\n      dup4\n        /* \"#utility.yul\":3839:3856   */\n      add\n        /* \"#utility.yul\":3826:3880   */\n      calldatacopy\n        /* \"#utility.yul\":3924:3925   */\n      0x00\n        /* \"#utility.yul\":3900:3915   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":3917:3921   */\n      0x20\n        /* \"#utility.yul\":3896:3922   */\n      add\n        /* \"#utility.yul\":3889:3926   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3904:3910   */\n      swap4\n        /* \"#utility.yul\":3401:3956   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3961:4904   */\n    tag_45:\n        /* \"#utility.yul\":4115:4121   */\n      0x00\n        /* \"#utility.yul\":4123:4129   */\n      dup1\n        /* \"#utility.yul\":4131:4137   */\n      0x00\n        /* \"#utility.yul\":4139:4145   */\n      dup1\n        /* \"#utility.yul\":4147:4153   */\n      0x00\n        /* \"#utility.yul\":4200:4203   */\n      0xa0\n        /* \"#utility.yul\":4188:4197   */\n      dup7\n        /* \"#utility.yul\":4179:4186   */\n      dup9\n        /* \"#utility.yul\":4175:4198   */\n      sub\n        /* \"#utility.yul\":4171:4204   */\n      slt\n        /* \"#utility.yul\":4168:4221   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":4217:4218   */\n      0x00\n        /* \"#utility.yul\":4214:4215   */\n      dup1\n        /* \"#utility.yul\":4207:4219   */\n      revert\n        /* \"#utility.yul\":4168:4221   */\n    tag_389:\n        /* \"#utility.yul\":4240:4269   */\n      tag_390\n        /* \"#utility.yul\":4259:4268   */\n      dup7\n        /* \"#utility.yul\":4240:4269   */\n      tag_336\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":4230:4269   */\n      swap5\n      pop\n        /* \"#utility.yul\":4288:4326   */\n      tag_391\n        /* \"#utility.yul\":4322:4324   */\n      0x20\n        /* \"#utility.yul\":4311:4320   */\n      dup8\n        /* \"#utility.yul\":4307:4325   */\n      add\n        /* \"#utility.yul\":4288:4326   */\n      tag_336\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":4278:4326   */\n      swap4\n      pop\n        /* \"#utility.yul\":4377:4379   */\n      0x40\n        /* \"#utility.yul\":4366:4375   */\n      dup7\n        /* \"#utility.yul\":4362:4380   */\n      add\n        /* \"#utility.yul\":4349:4381   */\n      calldataload\n        /* \"#utility.yul\":4400:4418   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4441:4443   */\n      dup1\n        /* \"#utility.yul\":4433:4439   */\n      dup3\n        /* \"#utility.yul\":4430:4444   */\n      gt\n        /* \"#utility.yul\":4427:4461   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":4457:4458   */\n      0x00\n        /* \"#utility.yul\":4454:4455   */\n      dup1\n        /* \"#utility.yul\":4447:4459   */\n      revert\n        /* \"#utility.yul\":4427:4461   */\n    tag_392:\n        /* \"#utility.yul\":4480:4541   */\n      tag_393\n        /* \"#utility.yul\":4533:4540   */\n      dup10\n        /* \"#utility.yul\":4524:4530   */\n      dup4\n        /* \"#utility.yul\":4513:4522   */\n      dup11\n        /* \"#utility.yul\":4509:4531   */\n      add\n        /* \"#utility.yul\":4480:4541   */\n      tag_341\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":4470:4541   */\n      swap5\n      pop\n        /* \"#utility.yul\":4594:4596   */\n      0x60\n        /* \"#utility.yul\":4583:4592   */\n      dup9\n        /* \"#utility.yul\":4579:4597   */\n      add\n        /* \"#utility.yul\":4566:4598   */\n      calldataload\n        /* \"#utility.yul\":4550:4598   */\n      swap2\n      pop\n        /* \"#utility.yul\":4623:4625   */\n      dup1\n        /* \"#utility.yul\":4613:4621   */\n      dup3\n        /* \"#utility.yul\":4610:4626   */\n      gt\n        /* \"#utility.yul\":4607:4643   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":4639:4640   */\n      0x00\n        /* \"#utility.yul\":4636:4637   */\n      dup1\n        /* \"#utility.yul\":4629:4641   */\n      revert\n        /* \"#utility.yul\":4607:4643   */\n    tag_394:\n        /* \"#utility.yul\":4662:4725   */\n      tag_395\n        /* \"#utility.yul\":4717:4724   */\n      dup10\n        /* \"#utility.yul\":4706:4714   */\n      dup4\n        /* \"#utility.yul\":4695:4704   */\n      dup11\n        /* \"#utility.yul\":4691:4715   */\n      add\n        /* \"#utility.yul\":4662:4725   */\n      tag_341\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":4652:4725   */\n      swap4\n      pop\n        /* \"#utility.yul\":4778:4781   */\n      0x80\n        /* \"#utility.yul\":4767:4776   */\n      dup9\n        /* \"#utility.yul\":4763:4782   */\n      add\n        /* \"#utility.yul\":4750:4783   */\n      calldataload\n        /* \"#utility.yul\":4734:4783   */\n      swap2\n      pop\n        /* \"#utility.yul\":4808:4810   */\n      dup1\n        /* \"#utility.yul\":4798:4806   */\n      dup3\n        /* \"#utility.yul\":4795:4811   */\n      gt\n        /* \"#utility.yul\":4792:4828   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":4824:4825   */\n      0x00\n        /* \"#utility.yul\":4821:4822   */\n      dup1\n        /* \"#utility.yul\":4814:4826   */\n      revert\n        /* \"#utility.yul\":4792:4828   */\n    tag_396:\n      pop\n        /* \"#utility.yul\":4847:4898   */\n      tag_397\n        /* \"#utility.yul\":4890:4897   */\n      dup9\n        /* \"#utility.yul\":4879:4887   */\n      dup3\n        /* \"#utility.yul\":4868:4877   */\n      dup10\n        /* \"#utility.yul\":4864:4888   */\n      add\n        /* \"#utility.yul\":4847:4898   */\n      tag_342\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":4837:4898   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3961:4904   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4909:6117   */\n    tag_52:\n        /* \"#utility.yul\":5027:5033   */\n      0x00\n        /* \"#utility.yul\":5035:5041   */\n      dup1\n        /* \"#utility.yul\":5088:5090   */\n      0x40\n        /* \"#utility.yul\":5076:5085   */\n      dup4\n        /* \"#utility.yul\":5067:5074   */\n      dup6\n        /* \"#utility.yul\":5063:5086   */\n      sub\n        /* \"#utility.yul\":5059:5091   */\n      slt\n        /* \"#utility.yul\":5056:5108   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":5104:5105   */\n      0x00\n        /* \"#utility.yul\":5101:5102   */\n      dup1\n        /* \"#utility.yul\":5094:5106   */\n      revert\n        /* \"#utility.yul\":5056:5108   */\n    tag_399:\n        /* \"#utility.yul\":5144:5153   */\n      dup3\n        /* \"#utility.yul\":5131:5154   */\n      calldataload\n        /* \"#utility.yul\":5173:5191   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5214:5216   */\n      dup1\n        /* \"#utility.yul\":5206:5212   */\n      dup3\n        /* \"#utility.yul\":5203:5217   */\n      gt\n        /* \"#utility.yul\":5200:5234   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":5230:5231   */\n      0x00\n        /* \"#utility.yul\":5227:5228   */\n      dup1\n        /* \"#utility.yul\":5220:5232   */\n      revert\n        /* \"#utility.yul\":5200:5234   */\n    tag_400:\n        /* \"#utility.yul\":5268:5274   */\n      dup2\n        /* \"#utility.yul\":5257:5266   */\n      dup6\n        /* \"#utility.yul\":5253:5275   */\n      add\n        /* \"#utility.yul\":5243:5275   */\n      swap2\n      pop\n        /* \"#utility.yul\":5313:5320   */\n      dup6\n        /* \"#utility.yul\":5306:5310   */\n      0x1f\n        /* \"#utility.yul\":5302:5304   */\n      dup4\n        /* \"#utility.yul\":5298:5311   */\n      add\n        /* \"#utility.yul\":5294:5321   */\n      slt\n        /* \"#utility.yul\":5284:5339   */\n      tag_401\n      jumpi\n        /* \"#utility.yul\":5335:5336   */\n      0x00\n        /* \"#utility.yul\":5332:5333   */\n      dup1\n        /* \"#utility.yul\":5325:5337   */\n      revert\n        /* \"#utility.yul\":5284:5339   */\n    tag_401:\n        /* \"#utility.yul\":5371:5373   */\n      dup2\n        /* \"#utility.yul\":5358:5374   */\n      calldataload\n        /* \"#utility.yul\":5393:5397   */\n      0x20\n        /* \"#utility.yul\":5416:5459   */\n      tag_402\n        /* \"#utility.yul\":5456:5458   */\n      dup3\n        /* \"#utility.yul\":5416:5459   */\n      tag_340\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":5488:5490   */\n      0x40\n        /* \"#utility.yul\":5482:5491   */\n      mload\n        /* \"#utility.yul\":5500:5531   */\n      tag_403\n        /* \"#utility.yul\":5528:5530   */\n      dup3\n        /* \"#utility.yul\":5520:5526   */\n      dup3\n        /* \"#utility.yul\":5500:5531   */\n      tag_339\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":5566:5584   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":5654:5655   */\n      0x05\n        /* \"#utility.yul\":5650:5660   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":5642:5661   */\n      dup6\n      add\n        /* \"#utility.yul\":5638:5666   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":5600:5615   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":5678:5697   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":5675:5714   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":5710:5711   */\n      0x00\n        /* \"#utility.yul\":5707:5708   */\n      dup1\n        /* \"#utility.yul\":5700:5712   */\n      revert\n        /* \"#utility.yul\":5675:5714   */\n    tag_404:\n        /* \"#utility.yul\":5734:5745   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5754:5902   */\n    tag_405:\n        /* \"#utility.yul\":5770:5776   */\n      dup4\n        /* \"#utility.yul\":5765:5768   */\n      dup7\n        /* \"#utility.yul\":5762:5777   */\n      lt\n        /* \"#utility.yul\":5754:5902   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":5836:5859   */\n      tag_408\n        /* \"#utility.yul\":5855:5858   */\n      dup7\n        /* \"#utility.yul\":5836:5859   */\n      tag_336\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":5824:5860   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5787:5799   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5880:5892   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":5754:5902   */\n      jump(tag_405)\n    tag_407:\n        /* \"#utility.yul\":5921:5927   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":5965:5983   */\n      dup7\n      add\n        /* \"#utility.yul\":5952:5984   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5996:6012   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5993:6029   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":6025:6026   */\n      0x00\n        /* \"#utility.yul\":6022:6023   */\n      dup1\n        /* \"#utility.yul\":6015:6027   */\n      revert\n        /* \"#utility.yul\":5993:6029   */\n    tag_409:\n      pop\n        /* \"#utility.yul\":6048:6111   */\n      tag_410\n        /* \"#utility.yul\":6103:6110   */\n      dup6\n        /* \"#utility.yul\":6092:6100   */\n      dup3\n        /* \"#utility.yul\":6081:6090   */\n      dup7\n        /* \"#utility.yul\":6077:6101   */\n      add\n        /* \"#utility.yul\":6048:6111   */\n      tag_341\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":6038:6111   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4909:6117   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6122:6557   */\n    tag_343:\n        /* \"#utility.yul\":6175:6178   */\n      0x00\n        /* \"#utility.yul\":6213:6218   */\n      dup2\n        /* \"#utility.yul\":6207:6219   */\n      mload\n        /* \"#utility.yul\":6240:6246   */\n      dup1\n        /* \"#utility.yul\":6235:6238   */\n      dup5\n        /* \"#utility.yul\":6228:6247   */\n      mstore\n        /* \"#utility.yul\":6266:6270   */\n      0x20\n        /* \"#utility.yul\":6295:6297   */\n      dup1\n        /* \"#utility.yul\":6290:6293   */\n      dup6\n        /* \"#utility.yul\":6286:6298   */\n      add\n        /* \"#utility.yul\":6279:6298   */\n      swap5\n      pop\n        /* \"#utility.yul\":6332:6334   */\n      dup1\n        /* \"#utility.yul\":6325:6330   */\n      dup5\n        /* \"#utility.yul\":6321:6335   */\n      add\n        /* \"#utility.yul\":6353:6354   */\n      0x00\n        /* \"#utility.yul\":6363:6532   */\n    tag_412:\n        /* \"#utility.yul\":6377:6383   */\n      dup4\n        /* \"#utility.yul\":6374:6375   */\n      dup2\n        /* \"#utility.yul\":6371:6384   */\n      lt\n        /* \"#utility.yul\":6363:6532   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":6438:6451   */\n      dup2\n      mload\n        /* \"#utility.yul\":6426:6452   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6472:6484   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6507:6522   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6399:6400   */\n      0x01\n        /* \"#utility.yul\":6392:6401   */\n      add\n        /* \"#utility.yul\":6363:6532   */\n      jump(tag_412)\n    tag_414:\n      pop\n        /* \"#utility.yul\":6548:6551   */\n      swap5\n      swap6\n        /* \"#utility.yul\":6122:6557   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6562:6823   */\n    tag_55:\n        /* \"#utility.yul\":6741:6743   */\n      0x20\n        /* \"#utility.yul\":6730:6739   */\n      dup2\n        /* \"#utility.yul\":6723:6744   */\n      mstore\n        /* \"#utility.yul\":6704:6708   */\n      0x00\n        /* \"#utility.yul\":6761:6817   */\n      tag_356\n        /* \"#utility.yul\":6813:6815   */\n      0x20\n        /* \"#utility.yul\":6802:6811   */\n      dup4\n        /* \"#utility.yul\":6798:6816   */\n      add\n        /* \"#utility.yul\":6790:6796   */\n      dup5\n        /* \"#utility.yul\":6761:6817   */\n      tag_343\n      jump\t// in\n        /* \"#utility.yul\":6828:7497   */\n    tag_61:\n        /* \"#utility.yul\":6955:6961   */\n      0x00\n        /* \"#utility.yul\":6963:6969   */\n      dup1\n        /* \"#utility.yul\":6971:6977   */\n      0x00\n        /* \"#utility.yul\":7024:7026   */\n      0x60\n        /* \"#utility.yul\":7012:7021   */\n      dup5\n        /* \"#utility.yul\":7003:7010   */\n      dup7\n        /* \"#utility.yul\":6999:7022   */\n      sub\n        /* \"#utility.yul\":6995:7027   */\n      slt\n        /* \"#utility.yul\":6992:7044   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":7040:7041   */\n      0x00\n        /* \"#utility.yul\":7037:7038   */\n      dup1\n        /* \"#utility.yul\":7030:7042   */\n      revert\n        /* \"#utility.yul\":6992:7044   */\n    tag_418:\n        /* \"#utility.yul\":7063:7092   */\n      tag_419\n        /* \"#utility.yul\":7082:7091   */\n      dup5\n        /* \"#utility.yul\":7063:7092   */\n      tag_336\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":7053:7092   */\n      swap3\n      pop\n        /* \"#utility.yul\":7143:7145   */\n      0x20\n        /* \"#utility.yul\":7132:7141   */\n      dup5\n        /* \"#utility.yul\":7128:7146   */\n      add\n        /* \"#utility.yul\":7115:7147   */\n      calldataload\n        /* \"#utility.yul\":7166:7184   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7207:7209   */\n      dup1\n        /* \"#utility.yul\":7199:7205   */\n      dup3\n        /* \"#utility.yul\":7196:7210   */\n      gt\n        /* \"#utility.yul\":7193:7227   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":7223:7224   */\n      0x00\n        /* \"#utility.yul\":7220:7221   */\n      dup1\n        /* \"#utility.yul\":7213:7225   */\n      revert\n        /* \"#utility.yul\":7193:7227   */\n    tag_420:\n        /* \"#utility.yul\":7246:7307   */\n      tag_421\n        /* \"#utility.yul\":7299:7306   */\n      dup8\n        /* \"#utility.yul\":7290:7296   */\n      dup4\n        /* \"#utility.yul\":7279:7288   */\n      dup9\n        /* \"#utility.yul\":7275:7297   */\n      add\n        /* \"#utility.yul\":7246:7307   */\n      tag_341\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":7236:7307   */\n      swap4\n      pop\n        /* \"#utility.yul\":7360:7362   */\n      0x40\n        /* \"#utility.yul\":7349:7358   */\n      dup7\n        /* \"#utility.yul\":7345:7363   */\n      add\n        /* \"#utility.yul\":7332:7364   */\n      calldataload\n        /* \"#utility.yul\":7316:7364   */\n      swap2\n      pop\n        /* \"#utility.yul\":7389:7391   */\n      dup1\n        /* \"#utility.yul\":7379:7387   */\n      dup3\n        /* \"#utility.yul\":7376:7392   */\n      gt\n        /* \"#utility.yul\":7373:7409   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":7405:7406   */\n      0x00\n        /* \"#utility.yul\":7402:7403   */\n      dup1\n        /* \"#utility.yul\":7395:7407   */\n      revert\n        /* \"#utility.yul\":7373:7409   */\n    tag_422:\n      pop\n        /* \"#utility.yul\":7428:7491   */\n      tag_423\n        /* \"#utility.yul\":7483:7490   */\n      dup7\n        /* \"#utility.yul\":7472:7480   */\n      dup3\n        /* \"#utility.yul\":7461:7470   */\n      dup8\n        /* \"#utility.yul\":7457:7481   */\n      add\n        /* \"#utility.yul\":7428:7491   */\n      tag_341\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":7418:7491   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6828:7497   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7502:7849   */\n    tag_67:\n        /* \"#utility.yul\":7567:7573   */\n      0x00\n        /* \"#utility.yul\":7575:7581   */\n      dup1\n        /* \"#utility.yul\":7628:7630   */\n      0x40\n        /* \"#utility.yul\":7616:7625   */\n      dup4\n        /* \"#utility.yul\":7607:7614   */\n      dup6\n        /* \"#utility.yul\":7603:7626   */\n      sub\n        /* \"#utility.yul\":7599:7631   */\n      slt\n        /* \"#utility.yul\":7596:7648   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":7644:7645   */\n      0x00\n        /* \"#utility.yul\":7641:7642   */\n      dup1\n        /* \"#utility.yul\":7634:7646   */\n      revert\n        /* \"#utility.yul\":7596:7648   */\n    tag_425:\n        /* \"#utility.yul\":7667:7696   */\n      tag_426\n        /* \"#utility.yul\":7686:7695   */\n      dup4\n        /* \"#utility.yul\":7667:7696   */\n      tag_336\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":7657:7696   */\n      swap2\n      pop\n        /* \"#utility.yul\":7746:7748   */\n      0x20\n        /* \"#utility.yul\":7735:7744   */\n      dup4\n        /* \"#utility.yul\":7731:7749   */\n      add\n        /* \"#utility.yul\":7718:7750   */\n      calldataload\n        /* \"#utility.yul\":7793:7798   */\n      dup1\n        /* \"#utility.yul\":7786:7799   */\n      iszero\n        /* \"#utility.yul\":7779:7800   */\n      iszero\n        /* \"#utility.yul\":7772:7777   */\n      dup2\n        /* \"#utility.yul\":7769:7801   */\n      eq\n        /* \"#utility.yul\":7759:7819   */\n      tag_427\n      jumpi\n        /* \"#utility.yul\":7815:7816   */\n      0x00\n        /* \"#utility.yul\":7812:7813   */\n      dup1\n        /* \"#utility.yul\":7805:7817   */\n      revert\n        /* \"#utility.yul\":7759:7819   */\n    tag_427:\n        /* \"#utility.yul\":7838:7843   */\n      dup1\n        /* \"#utility.yul\":7828:7843   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":7502:7849   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7854:8114   */\n    tag_77:\n        /* \"#utility.yul\":7922:7928   */\n      0x00\n        /* \"#utility.yul\":7930:7936   */\n      dup1\n        /* \"#utility.yul\":7983:7985   */\n      0x40\n        /* \"#utility.yul\":7971:7980   */\n      dup4\n        /* \"#utility.yul\":7962:7969   */\n      dup6\n        /* \"#utility.yul\":7958:7981   */\n      sub\n        /* \"#utility.yul\":7954:7986   */\n      slt\n        /* \"#utility.yul\":7951:8003   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":7999:8000   */\n      0x00\n        /* \"#utility.yul\":7996:7997   */\n      dup1\n        /* \"#utility.yul\":7989:8001   */\n      revert\n        /* \"#utility.yul\":7951:8003   */\n    tag_429:\n        /* \"#utility.yul\":8022:8051   */\n      tag_430\n        /* \"#utility.yul\":8041:8050   */\n      dup4\n        /* \"#utility.yul\":8022:8051   */\n      tag_336\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":8012:8051   */\n      swap2\n      pop\n        /* \"#utility.yul\":8070:8108   */\n      tag_431\n        /* \"#utility.yul\":8104:8106   */\n      0x20\n        /* \"#utility.yul\":8093:8102   */\n      dup5\n        /* \"#utility.yul\":8089:8107   */\n      add\n        /* \"#utility.yul\":8070:8108   */\n      tag_336\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":8060:8108   */\n      swap1\n      pop\n        /* \"#utility.yul\":7854:8114   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8119:8725   */\n    tag_82:\n        /* \"#utility.yul\":8223:8229   */\n      0x00\n        /* \"#utility.yul\":8231:8237   */\n      dup1\n        /* \"#utility.yul\":8239:8245   */\n      0x00\n        /* \"#utility.yul\":8247:8253   */\n      dup1\n        /* \"#utility.yul\":8255:8261   */\n      0x00\n        /* \"#utility.yul\":8308:8311   */\n      0xa0\n        /* \"#utility.yul\":8296:8305   */\n      dup7\n        /* \"#utility.yul\":8287:8294   */\n      dup9\n        /* \"#utility.yul\":8283:8306   */\n      sub\n        /* \"#utility.yul\":8279:8312   */\n      slt\n        /* \"#utility.yul\":8276:8329   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":8325:8326   */\n      0x00\n        /* \"#utility.yul\":8322:8323   */\n      dup1\n        /* \"#utility.yul\":8315:8327   */\n      revert\n        /* \"#utility.yul\":8276:8329   */\n    tag_433:\n        /* \"#utility.yul\":8348:8377   */\n      tag_434\n        /* \"#utility.yul\":8367:8376   */\n      dup7\n        /* \"#utility.yul\":8348:8377   */\n      tag_336\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":8338:8377   */\n      swap5\n      pop\n        /* \"#utility.yul\":8396:8434   */\n      tag_435\n        /* \"#utility.yul\":8430:8432   */\n      0x20\n        /* \"#utility.yul\":8419:8428   */\n      dup8\n        /* \"#utility.yul\":8415:8433   */\n      add\n        /* \"#utility.yul\":8396:8434   */\n      tag_336\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":8386:8434   */\n      swap4\n      pop\n        /* \"#utility.yul\":8481:8483   */\n      0x40\n        /* \"#utility.yul\":8470:8479   */\n      dup7\n        /* \"#utility.yul\":8466:8484   */\n      add\n        /* \"#utility.yul\":8453:8485   */\n      calldataload\n        /* \"#utility.yul\":8443:8485   */\n      swap3\n      pop\n        /* \"#utility.yul\":8532:8534   */\n      0x60\n        /* \"#utility.yul\":8521:8530   */\n      dup7\n        /* \"#utility.yul\":8517:8535   */\n      add\n        /* \"#utility.yul\":8504:8536   */\n      calldataload\n        /* \"#utility.yul\":8494:8536   */\n      swap2\n      pop\n        /* \"#utility.yul\":8587:8590   */\n      0x80\n        /* \"#utility.yul\":8576:8585   */\n      dup7\n        /* \"#utility.yul\":8572:8591   */\n      add\n        /* \"#utility.yul\":8559:8592   */\n      calldataload\n        /* \"#utility.yul\":8615:8633   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8607:8613   */\n      dup2\n        /* \"#utility.yul\":8604:8634   */\n      gt\n        /* \"#utility.yul\":8601:8651   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":8647:8648   */\n      0x00\n        /* \"#utility.yul\":8644:8645   */\n      dup1\n        /* \"#utility.yul\":8637:8649   */\n      revert\n        /* \"#utility.yul\":8601:8651   */\n    tag_436:\n        /* \"#utility.yul\":8670:8719   */\n      tag_397\n        /* \"#utility.yul\":8711:8718   */\n      dup9\n        /* \"#utility.yul\":8702:8708   */\n      dup3\n        /* \"#utility.yul\":8691:8700   */\n      dup10\n        /* \"#utility.yul\":8687:8709   */\n      add\n        /* \"#utility.yul\":8670:8719   */\n      tag_342\n      jump\t// in\n        /* \"#utility.yul\":8730:9052   */\n    tag_86:\n        /* \"#utility.yul\":8807:8813   */\n      0x00\n        /* \"#utility.yul\":8815:8821   */\n      dup1\n        /* \"#utility.yul\":8823:8829   */\n      0x00\n        /* \"#utility.yul\":8876:8878   */\n      0x60\n        /* \"#utility.yul\":8864:8873   */\n      dup5\n        /* \"#utility.yul\":8855:8862   */\n      dup7\n        /* \"#utility.yul\":8851:8874   */\n      sub\n        /* \"#utility.yul\":8847:8879   */\n      slt\n        /* \"#utility.yul\":8844:8896   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":8892:8893   */\n      0x00\n        /* \"#utility.yul\":8889:8890   */\n      dup1\n        /* \"#utility.yul\":8882:8894   */\n      revert\n        /* \"#utility.yul\":8844:8896   */\n    tag_439:\n        /* \"#utility.yul\":8915:8944   */\n      tag_440\n        /* \"#utility.yul\":8934:8943   */\n      dup5\n        /* \"#utility.yul\":8915:8944   */\n      tag_336\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":8905:8944   */\n      swap6\n        /* \"#utility.yul\":8991:8993   */\n      0x20\n        /* \"#utility.yul\":8976:8994   */\n      dup6\n      add\n        /* \"#utility.yul\":8963:8995   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":9042:9044   */\n      0x40\n        /* \"#utility.yul\":9027:9045   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":9014:9046   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":8730:9052   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9469:9849   */\n    tag_100:\n        /* \"#utility.yul\":9548:9549   */\n      0x01\n        /* \"#utility.yul\":9544:9556   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":9591:9603   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":9612:9673   */\n      tag_443\n      jumpi\n        /* \"#utility.yul\":9666:9670   */\n      0x7f\n        /* \"#utility.yul\":9658:9664   */\n      dup3\n        /* \"#utility.yul\":9654:9671   */\n      and\n        /* \"#utility.yul\":9644:9671   */\n      swap2\n      pop\n        /* \"#utility.yul\":9612:9673   */\n    tag_443:\n        /* \"#utility.yul\":9719:9721   */\n      0x20\n        /* \"#utility.yul\":9711:9717   */\n      dup3\n        /* \"#utility.yul\":9708:9722   */\n      lt\n        /* \"#utility.yul\":9688:9706   */\n      dup2\n        /* \"#utility.yul\":9685:9723   */\n      sub\n        /* \"#utility.yul\":9682:9843   */\n      tag_444\n      jumpi\n        /* \"#utility.yul\":9765:9775   */\n      0x4e487b71\n        /* \"#utility.yul\":9760:9763   */\n      0xe0\n        /* \"#utility.yul\":9756:9776   */\n      shl\n        /* \"#utility.yul\":9753:9754   */\n      0x00\n        /* \"#utility.yul\":9746:9777   */\n      mstore\n        /* \"#utility.yul\":9800:9804   */\n      0x22\n        /* \"#utility.yul\":9797:9798   */\n      0x04\n        /* \"#utility.yul\":9790:9805   */\n      mstore\n        /* \"#utility.yul\":9828:9832   */\n      0x24\n        /* \"#utility.yul\":9825:9826   */\n      0x00\n        /* \"#utility.yul\":9818:9833   */\n      revert\n        /* \"#utility.yul\":9682:9843   */\n    tag_444:\n      pop\n        /* \"#utility.yul\":9469:9849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10683:10810   */\n    tag_130:\n        /* \"#utility.yul\":10744:10754   */\n      0x4e487b71\n        /* \"#utility.yul\":10739:10742   */\n      0xe0\n        /* \"#utility.yul\":10735:10755   */\n      shl\n        /* \"#utility.yul\":10732:10733   */\n      0x00\n        /* \"#utility.yul\":10725:10756   */\n      mstore\n        /* \"#utility.yul\":10775:10779   */\n      0x32\n        /* \"#utility.yul\":10772:10773   */\n      0x04\n        /* \"#utility.yul\":10765:10780   */\n      mstore\n        /* \"#utility.yul\":10799:10803   */\n      0x24\n        /* \"#utility.yul\":10796:10797   */\n      0x00\n        /* \"#utility.yul\":10789:10804   */\n      revert\n        /* \"#utility.yul\":10815:10942   */\n    tag_344:\n        /* \"#utility.yul\":10876:10886   */\n      0x4e487b71\n        /* \"#utility.yul\":10871:10874   */\n      0xe0\n        /* \"#utility.yul\":10867:10887   */\n      shl\n        /* \"#utility.yul\":10864:10865   */\n      0x00\n        /* \"#utility.yul\":10857:10888   */\n      mstore\n        /* \"#utility.yul\":10907:10911   */\n      0x11\n        /* \"#utility.yul\":10904:10905   */\n      0x04\n        /* \"#utility.yul\":10897:10912   */\n      mstore\n        /* \"#utility.yul\":10931:10935   */\n      0x24\n        /* \"#utility.yul\":10928:10929   */\n      0x00\n        /* \"#utility.yul\":10921:10936   */\n      revert\n        /* \"#utility.yul\":10947:11082   */\n    tag_136:\n        /* \"#utility.yul\":10986:10989   */\n      0x00\n        /* \"#utility.yul\":11007:11024   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":11004:11047   */\n      tag_451\n      jumpi\n        /* \"#utility.yul\":11027:11045   */\n      tag_451\n      tag_344\n      jump\t// in\n    tag_451:\n      pop\n        /* \"#utility.yul\":11074:11075   */\n      0x01\n        /* \"#utility.yul\":11063:11076   */\n      add\n      swap1\n        /* \"#utility.yul\":10947:11082   */\n      jump\t// out\n        /* \"#utility.yul\":11087:11492   */\n    tag_144:\n        /* \"#utility.yul\":11289:11291   */\n      0x20\n        /* \"#utility.yul\":11271:11292   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11328:11330   */\n      0x29\n        /* \"#utility.yul\":11308:11326   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11301:11331   */\n      mstore\n        /* \"#utility.yul\":11367:11401   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":11362:11364   */\n      0x40\n        /* \"#utility.yul\":11347:11365   */\n      dup3\n      add\n        /* \"#utility.yul\":11340:11402   */\n      mstore\n      shl(0xba, 0x08185c1c1c9bdd9959)\n        /* \"#utility.yul\":11433:11435   */\n      0x60\n        /* \"#utility.yul\":11418:11436   */\n      dup3\n      add\n        /* \"#utility.yul\":11411:11450   */\n      mstore\n        /* \"#utility.yul\":11482:11485   */\n      0x80\n        /* \"#utility.yul\":11467:11486   */\n      add\n      swap1\n        /* \"#utility.yul\":11087:11492   */\n      jump\t// out\n        /* \"#utility.yul\":11497:11901   */\n    tag_193:\n        /* \"#utility.yul\":11699:11701   */\n      0x20\n        /* \"#utility.yul\":11681:11702   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11738:11740   */\n      0x28\n        /* \"#utility.yul\":11718:11736   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11711:11741   */\n      mstore\n        /* \"#utility.yul\":11777:11811   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":11772:11774   */\n      0x40\n        /* \"#utility.yul\":11757:11775   */\n      dup3\n      add\n        /* \"#utility.yul\":11750:11812   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":11843:11845   */\n      0x60\n        /* \"#utility.yul\":11828:11846   */\n      dup3\n      add\n        /* \"#utility.yul\":11821:11859   */\n      mstore\n        /* \"#utility.yul\":11891:11894   */\n      0x80\n        /* \"#utility.yul\":11876:11895   */\n      add\n      swap1\n        /* \"#utility.yul\":11497:11901   */\n      jump\t// out\n        /* \"#utility.yul\":11906:12307   */\n    tag_196:\n        /* \"#utility.yul\":12108:12110   */\n      0x20\n        /* \"#utility.yul\":12090:12111   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12147:12149   */\n      0x25\n        /* \"#utility.yul\":12127:12145   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12120:12150   */\n      mstore\n        /* \"#utility.yul\":12186:12220   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":12181:12183   */\n      0x40\n        /* \"#utility.yul\":12166:12184   */\n      dup3\n      add\n        /* \"#utility.yul\":12159:12221   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":12252:12254   */\n      0x60\n        /* \"#utility.yul\":12237:12255   */\n      dup3\n      add\n        /* \"#utility.yul\":12230:12265   */\n      mstore\n        /* \"#utility.yul\":12297:12300   */\n      0x80\n        /* \"#utility.yul\":12282:12301   */\n      add\n      swap1\n        /* \"#utility.yul\":11906:12307   */\n      jump\t// out\n        /* \"#utility.yul\":12312:12718   */\n    tag_209:\n        /* \"#utility.yul\":12514:12516   */\n      0x20\n        /* \"#utility.yul\":12496:12517   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12553:12555   */\n      0x2a\n        /* \"#utility.yul\":12533:12551   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12526:12556   */\n      mstore\n        /* \"#utility.yul\":12592:12626   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":12587:12589   */\n      0x40\n        /* \"#utility.yul\":12572:12590   */\n      dup3\n      add\n        /* \"#utility.yul\":12565:12627   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":12658:12660   */\n      0x60\n        /* \"#utility.yul\":12643:12661   */\n      dup3\n      add\n        /* \"#utility.yul\":12636:12676   */\n      mstore\n        /* \"#utility.yul\":12708:12711   */\n      0x80\n        /* \"#utility.yul\":12693:12712   */\n      add\n      swap1\n        /* \"#utility.yul\":12312:12718   */\n      jump\t// out\n        /* \"#utility.yul\":12723:12851   */\n    tag_211:\n        /* \"#utility.yul\":12763:12766   */\n      0x00\n        /* \"#utility.yul\":12794:12795   */\n      dup3\n        /* \"#utility.yul\":12790:12796   */\n      not\n        /* \"#utility.yul\":12787:12788   */\n      dup3\n        /* \"#utility.yul\":12784:12797   */\n      gt\n        /* \"#utility.yul\":12781:12820   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":12800:12818   */\n      tag_458\n      tag_344\n      jump\t// in\n    tag_458:\n      pop\n        /* \"#utility.yul\":12836:12845   */\n      add\n      swap1\n        /* \"#utility.yul\":12723:12851   */\n      jump\t// out\n        /* \"#utility.yul\":12856:13321   */\n    tag_214:\n        /* \"#utility.yul\":13113:13115   */\n      0x40\n        /* \"#utility.yul\":13102:13111   */\n      dup2\n        /* \"#utility.yul\":13095:13116   */\n      mstore\n        /* \"#utility.yul\":13076:13080   */\n      0x00\n        /* \"#utility.yul\":13139:13195   */\n      tag_460\n        /* \"#utility.yul\":13191:13193   */\n      0x40\n        /* \"#utility.yul\":13180:13189   */\n      dup4\n        /* \"#utility.yul\":13176:13194   */\n      add\n        /* \"#utility.yul\":13168:13174   */\n      dup6\n        /* \"#utility.yul\":13139:13195   */\n      tag_343\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":13243:13252   */\n      dup3\n        /* \"#utility.yul\":13235:13241   */\n      dup2\n        /* \"#utility.yul\":13231:13253   */\n      sub\n        /* \"#utility.yul\":13226:13228   */\n      0x20\n        /* \"#utility.yul\":13215:13224   */\n      dup5\n        /* \"#utility.yul\":13211:13229   */\n      add\n        /* \"#utility.yul\":13204:13254   */\n      mstore\n        /* \"#utility.yul\":13271:13315   */\n      tag_461\n        /* \"#utility.yul\":13308:13314   */\n      dup2\n        /* \"#utility.yul\":13300:13306   */\n      dup6\n        /* \"#utility.yul\":13271:13315   */\n      tag_343\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":13263:13315   */\n      swap6\n        /* \"#utility.yul\":12856:13321   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13326:13725   */\n    tag_220:\n        /* \"#utility.yul\":13528:13530   */\n      0x20\n        /* \"#utility.yul\":13510:13531   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13567:13569   */\n      0x23\n        /* \"#utility.yul\":13547:13565   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13540:13570   */\n      mstore\n        /* \"#utility.yul\":13606:13640   */\n      0x455243313135353a206275726e2066726f6d20746865207a65726f2061646472\n        /* \"#utility.yul\":13601:13603   */\n      0x40\n        /* \"#utility.yul\":13586:13604   */\n      dup3\n      add\n        /* \"#utility.yul\":13579:13641   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":13672:13674   */\n      0x60\n        /* \"#utility.yul\":13657:13675   */\n      dup3\n      add\n        /* \"#utility.yul\":13650:13683   */\n      mstore\n        /* \"#utility.yul\":13715:13718   */\n      0x80\n        /* \"#utility.yul\":13700:13719   */\n      add\n      swap1\n        /* \"#utility.yul\":13326:13725   */\n      jump\t// out\n        /* \"#utility.yul\":13730:14130   */\n    tag_234:\n        /* \"#utility.yul\":13932:13934   */\n      0x20\n        /* \"#utility.yul\":13914:13935   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13971:13973   */\n      0x24\n        /* \"#utility.yul\":13951:13969   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13944:13974   */\n      mstore\n        /* \"#utility.yul\":14010:14044   */\n      0x455243313135353a206275726e20616d6f756e7420657863656564732062616c\n        /* \"#utility.yul\":14005:14007   */\n      0x40\n        /* \"#utility.yul\":13990:14008   */\n      dup3\n      add\n        /* \"#utility.yul\":13983:14045   */\n      mstore\n      shl(0xe0, 0x616e6365)\n        /* \"#utility.yul\":14076:14078   */\n      0x60\n        /* \"#utility.yul\":14061:14079   */\n      dup3\n      add\n        /* \"#utility.yul\":14054:14088   */\n      mstore\n        /* \"#utility.yul\":14120:14123   */\n      0x80\n        /* \"#utility.yul\":14105:14124   */\n      add\n      swap1\n        /* \"#utility.yul\":13730:14130   */\n      jump\t// out\n        /* \"#utility.yul\":15200:16027   */\n    tag_291:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":15597:15612   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":15579:15613   */\n      dup3\n      mstore\n        /* \"#utility.yul\":15649:15664   */\n      dup6\n      and\n        /* \"#utility.yul\":15644:15646   */\n      0x20\n        /* \"#utility.yul\":15629:15647   */\n      dup3\n      add\n        /* \"#utility.yul\":15622:15665   */\n      mstore\n        /* \"#utility.yul\":15559:15562   */\n      0xa0\n        /* \"#utility.yul\":15696:15698   */\n      0x40\n        /* \"#utility.yul\":15681:15699   */\n      dup3\n      add\n        /* \"#utility.yul\":15674:15705   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":15522:15526   */\n      0x00\n      swap1\n        /* \"#utility.yul\":15728:15785   */\n      tag_468\n      swap1\n        /* \"#utility.yul\":15765:15784   */\n      dup4\n      add\n        /* \"#utility.yul\":15757:15763   */\n      dup7\n        /* \"#utility.yul\":15728:15785   */\n      tag_343\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":15833:15842   */\n      dup3\n        /* \"#utility.yul\":15825:15831   */\n      dup2\n        /* \"#utility.yul\":15821:15843   */\n      sub\n        /* \"#utility.yul\":15816:15818   */\n      0x60\n        /* \"#utility.yul\":15805:15814   */\n      dup5\n        /* \"#utility.yul\":15801:15819   */\n      add\n        /* \"#utility.yul\":15794:15844   */\n      mstore\n        /* \"#utility.yul\":15867:15911   */\n      tag_469\n        /* \"#utility.yul\":15904:15910   */\n      dup2\n        /* \"#utility.yul\":15896:15902   */\n      dup7\n        /* \"#utility.yul\":15867:15911   */\n      tag_343\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":15853:15911   */\n      swap1\n      pop\n        /* \"#utility.yul\":15960:15969   */\n      dup3\n        /* \"#utility.yul\":15952:15958   */\n      dup2\n        /* \"#utility.yul\":15948:15970   */\n      sub\n        /* \"#utility.yul\":15942:15945   */\n      0x80\n        /* \"#utility.yul\":15931:15940   */\n      dup5\n        /* \"#utility.yul\":15927:15946   */\n      add\n        /* \"#utility.yul\":15920:15971   */\n      mstore\n        /* \"#utility.yul\":15988:16021   */\n      tag_470\n        /* \"#utility.yul\":16014:16020   */\n      dup2\n        /* \"#utility.yul\":16006:16012   */\n      dup6\n        /* \"#utility.yul\":15988:16021   */\n      tag_338\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":15980:16021   */\n      swap9\n        /* \"#utility.yul\":15200:16027   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16032:16281   */\n    tag_294:\n        /* \"#utility.yul\":16101:16107   */\n      0x00\n        /* \"#utility.yul\":16154:16156   */\n      0x20\n        /* \"#utility.yul\":16142:16151   */\n      dup3\n        /* \"#utility.yul\":16133:16140   */\n      dup5\n        /* \"#utility.yul\":16129:16152   */\n      sub\n        /* \"#utility.yul\":16125:16157   */\n      slt\n        /* \"#utility.yul\":16122:16174   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":16170:16171   */\n      0x00\n        /* \"#utility.yul\":16167:16168   */\n      dup1\n        /* \"#utility.yul\":16160:16172   */\n      revert\n        /* \"#utility.yul\":16122:16174   */\n    tag_472:\n        /* \"#utility.yul\":16202:16211   */\n      dup2\n        /* \"#utility.yul\":16196:16212   */\n      mload\n        /* \"#utility.yul\":16221:16251   */\n      tag_356\n        /* \"#utility.yul\":16245:16250   */\n      dup2\n        /* \"#utility.yul\":16221:16251   */\n      tag_337\n      jump\t// in\n        /* \"#utility.yul\":16286:16465   */\n    tag_300:\n        /* \"#utility.yul\":16321:16324   */\n      0x00\n        /* \"#utility.yul\":16363:16364   */\n      0x03\n        /* \"#utility.yul\":16345:16361   */\n      returndatasize\n        /* \"#utility.yul\":16342:16365   */\n      gt\n        /* \"#utility.yul\":16339:16459   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":16409:16410   */\n      0x04\n        /* \"#utility.yul\":16406:16407   */\n      0x00\n        /* \"#utility.yul\":16403:16404   */\n      dup1\n        /* \"#utility.yul\":16388:16411   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":16446:16447   */\n      0x00\n        /* \"#utility.yul\":16440:16448   */\n      mload\n        /* \"#utility.yul\":16435:16438   */\n      0xe0\n        /* \"#utility.yul\":16431:16449   */\n      shr\n        /* \"#utility.yul\":16339:16459   */\n    tag_475:\n        /* \"#utility.yul\":16286:16465   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16470:17141   */\n    tag_302:\n        /* \"#utility.yul\":16509:16512   */\n      0x00\n        /* \"#utility.yul\":16551:16555   */\n      0x44\n        /* \"#utility.yul\":16533:16549   */\n      returndatasize\n        /* \"#utility.yul\":16530:16556   */\n      lt\n        /* \"#utility.yul\":16527:16566   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":16470:17141   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16527:16566   */\n    tag_477:\n        /* \"#utility.yul\":16593:16595   */\n      0x40\n        /* \"#utility.yul\":16587:16596   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":16658:16674   */\n      returndatasize\n        /* \"#utility.yul\":16654:16679   */\n      dup2\n      add\n        /* \"#utility.yul\":16651:16652   */\n      0x04\n        /* \"#utility.yul\":16587:16596   */\n      dup4\n        /* \"#utility.yul\":16630:16680   */\n      returndatacopy\n        /* \"#utility.yul\":16709:16713   */\n      dup2\n        /* \"#utility.yul\":16703:16714   */\n      mload\n        /* \"#utility.yul\":16733:16749   */\n      returndatasize\n        /* \"#utility.yul\":16768:16786   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16839:16841   */\n      dup2\n        /* \"#utility.yul\":16832:16836   */\n      0x24\n        /* \"#utility.yul\":16824:16830   */\n      dup5\n        /* \"#utility.yul\":16820:16837   */\n      add\n        /* \"#utility.yul\":16817:16842   */\n      gt\n        /* \"#utility.yul\":16812:16814   */\n      dup2\n        /* \"#utility.yul\":16804:16810   */\n      dup5\n        /* \"#utility.yul\":16801:16815   */\n      gt\n        /* \"#utility.yul\":16798:16843   */\n      or\n        /* \"#utility.yul\":16795:16853   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":16846:16851   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16470:17141   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16795:16853   */\n    tag_478:\n        /* \"#utility.yul\":16883:16889   */\n      dup3\n        /* \"#utility.yul\":16877:16881   */\n      dup6\n        /* \"#utility.yul\":16873:16890   */\n      add\n        /* \"#utility.yul\":16862:16890   */\n      swap2\n      pop\n        /* \"#utility.yul\":16919:16922   */\n      dup2\n        /* \"#utility.yul\":16913:16923   */\n      mload\n        /* \"#utility.yul\":16946:16948   */\n      dup2\n        /* \"#utility.yul\":16938:16944   */\n      dup2\n        /* \"#utility.yul\":16935:16949   */\n      gt\n        /* \"#utility.yul\":16932:16959   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":16952:16957   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16470:17141   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16932:16959   */\n    tag_479:\n        /* \"#utility.yul\":17036:17038   */\n      dup5\n        /* \"#utility.yul\":17017:17033   */\n      returndatasize\n        /* \"#utility.yul\":17011:17015   */\n      dup8\n        /* \"#utility.yul\":17007:17034   */\n      add\n        /* \"#utility.yul\":17003:17039   */\n      add\n        /* \"#utility.yul\":16996:17000   */\n      0x20\n        /* \"#utility.yul\":16987:16993   */\n      dup3\n        /* \"#utility.yul\":16982:16985   */\n      dup6\n        /* \"#utility.yul\":16978:16994   */\n      add\n        /* \"#utility.yul\":16974:17001   */\n      add\n        /* \"#utility.yul\":16971:17040   */\n      gt\n        /* \"#utility.yul\":16968:17050   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":17043:17048   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16470:17141   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16968:17050   */\n    tag_480:\n        /* \"#utility.yul\":17059:17116   */\n      tag_481\n        /* \"#utility.yul\":17110:17114   */\n      0x20\n        /* \"#utility.yul\":17101:17107   */\n      dup3\n        /* \"#utility.yul\":17093:17099   */\n      dup7\n        /* \"#utility.yul\":17089:17108   */\n      add\n        /* \"#utility.yul\":17085:17115   */\n      add\n        /* \"#utility.yul\":17079:17083   */\n      dup8\n        /* \"#utility.yul\":17059:17116   */\n      tag_339\n      jump\t// in\n    tag_481:\n      pop\n        /* \"#utility.yul\":17132:17135   */\n      swap1\n      swap6\n        /* \"#utility.yul\":16470:17141   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17567:17971   */\n    tag_310:\n        /* \"#utility.yul\":17769:17771   */\n      0x20\n        /* \"#utility.yul\":17751:17772   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":17808:17810   */\n      0x28\n        /* \"#utility.yul\":17788:17806   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":17781:17811   */\n      mstore\n        /* \"#utility.yul\":17847:17881   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":17842:17844   */\n      0x40\n        /* \"#utility.yul\":17827:17845   */\n      dup3\n      add\n        /* \"#utility.yul\":17820:17882   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":17913:17915   */\n      0x60\n        /* \"#utility.yul\":17898:17916   */\n      dup3\n      add\n        /* \"#utility.yul\":17891:17929   */\n      mstore\n        /* \"#utility.yul\":17961:17964   */\n      0x80\n        /* \"#utility.yul\":17946:17965   */\n      add\n      swap1\n        /* \"#utility.yul\":17567:17971   */\n      jump\t// out\n        /* \"#utility.yul\":17976:18537   */\n    tag_321:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":18273:18288   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":18255:18289   */\n      dup3\n      mstore\n        /* \"#utility.yul\":18325:18340   */\n      dup6\n      and\n        /* \"#utility.yul\":18320:18322   */\n      0x20\n        /* \"#utility.yul\":18305:18323   */\n      dup3\n      add\n        /* \"#utility.yul\":18298:18341   */\n      mstore\n        /* \"#utility.yul\":18372:18374   */\n      0x40\n        /* \"#utility.yul\":18357:18375   */\n      dup2\n      add\n        /* \"#utility.yul\":18350:18384   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":18415:18417   */\n      0x60\n        /* \"#utility.yul\":18400:18418   */\n      dup2\n      add\n        /* \"#utility.yul\":18393:18427   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":18235:18238   */\n      0xa0\n        /* \"#utility.yul\":18458:18461   */\n      0x80\n        /* \"#utility.yul\":18443:18462   */\n      dup3\n      add\n        /* \"#utility.yul\":18436:18468   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":18198:18202   */\n      0x00\n      swap1\n        /* \"#utility.yul\":18485:18531   */\n      tag_485\n      swap1\n        /* \"#utility.yul\":18511:18530   */\n      dup4\n      add\n        /* \"#utility.yul\":18503:18509   */\n      dup5\n        /* \"#utility.yul\":18485:18531   */\n      tag_338\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":18477:18531   */\n      swap8\n        /* \"#utility.yul\":17976:18537   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b401cc13d1361a3e5907fa95c4d349f085f14ef18ce881cc2b9056f470d8ee4f64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_182": {
									"entryPoint": null,
									"id": 182,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_78": {
									"entryPoint": null,
									"id": 78,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_asSingletonArray_1232": {
									"entryPoint": 584,
									"id": 1232,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1076": {
									"entryPoint": 662,
									"id": 1076,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1139": {
									"entryPoint": 670,
									"id": 1139,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_736": {
									"entryPoint": 296,
									"id": 736,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_1922": {
									"entryPoint": null,
									"id": 1922,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setURI_661": {
									"entryPoint": 271,
									"id": 661,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isContract_1633": {
									"entryPoint": 1139,
									"id": 1633,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 1523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 1372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 1452,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1350,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 1574,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 1662,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5146:11",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "188:223:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "216:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "198:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "198:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "250:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:2:11",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "228:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "289:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:11"
																	},
																	{
																		"hexValue": "455243313135353a206d696e7420746f20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "294:34:11",
																		"type": "",
																		"value": "ERC1155: mint to the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "267:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "267:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "349:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "360:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "345:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "345:18:11"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "365:3:11",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "338:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "338:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "338:31:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "378:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "390:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "386:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "378:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "165:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "179:4:11",
														"type": ""
													}
												],
												"src": "14:397:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "464:177:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "499:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "520:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "527:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "532:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "523:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "523:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "513:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "513:31:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "513:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "564:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "567:4:11",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "557:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "557:15:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "557:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "592:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "595:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "585:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "585:15:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "585:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "480:1:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "487:1:11"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "483:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "483:6:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "477:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "477:13:11"
															},
															"nodeType": "YulIf",
															"src": "474:136:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "619:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "630:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "633:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "626:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "619:3:11"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "447:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "450:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "456:3:11",
														"type": ""
													}
												],
												"src": "416:225:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "775:119:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "785:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "797:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "808:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "793:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "793:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "785:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "827:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "838:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "820:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "820:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "820:25:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "865:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "876:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "861:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "861:18:11"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "881:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "854:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "854:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "854:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "736:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "747:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "755:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "766:4:11",
														"type": ""
													}
												],
												"src": "646:248:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "931:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "948:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "955:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "960:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "941:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "941:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "941:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "988:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "981:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "981:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "981:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1012:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1015:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1005:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1005:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1005:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "899:127:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1063:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1080:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1087:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1092:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1083:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1083:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1073:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1073:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1073:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1120:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1123:4:11",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1113:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1113:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1113:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1144:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1147:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1137:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1137:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1137:15:11"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "1031:127:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1212:422:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1222:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1242:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1236:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1236:12:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1226:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1264:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1269:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1257:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1257:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1257:19:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1285:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1294:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1289:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1356:110:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1370:14:11",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1380:4:11",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1374:2:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1412:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1417:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1408:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1408:11:11"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1421:2:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1404:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1404:20:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1440:5:11"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1447:1:11"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1436:3:11"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1436:13:11"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1451:2:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1432:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1432:22:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1426:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1426:29:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1397:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1397:59:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1397:59:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1315:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1318:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1312:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1312:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1326:21:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1328:17:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1337:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1340:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1333:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1333:12:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1328:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1308:3:11",
																"statements": []
															},
															"src": "1304:162:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1500:62:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1529:3:11"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1534:6:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1525:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1525:16:11"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1543:4:11",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1521:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1521:27:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1550:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1514:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1514:38:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1514:38:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1481:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1484:6:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1478:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1478:13:11"
															},
															"nodeType": "YulIf",
															"src": "1475:87:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1571:57:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1586:3:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1599:6:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1607:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1595:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1595:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1616:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1612:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1612:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1591:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1591:29:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1582:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1582:39:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1623:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1578:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1578:50:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1571:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1189:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1196:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1204:3:11",
														"type": ""
													}
												],
												"src": "1163:471:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1870:329:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1880:29:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1898:3:11",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1903:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1894:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1894:11:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1907:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1890:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1890:19:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1884:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1925:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1940:6:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1948:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1936:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1936:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1918:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1918:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1918:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1972:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1983:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1968:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1968:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1992:6:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2000:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1988:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1988:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1961:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1961:43:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1961:43:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2024:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2020:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2020:18:11"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2040:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2013:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2013:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2013:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2067:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2078:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2063:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2063:18:11"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "2083:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2056:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2056:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2110:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2121:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2106:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2106:19:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2127:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2099:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2099:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2099:32:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2140:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "2165:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2177:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2188:3:11",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2173:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2173:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2148:16:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2148:45:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2140:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1807:9:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1818:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1826:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1834:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1842:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1850:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1861:4:11",
														"type": ""
													}
												],
												"src": "1639:560:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2284:210:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2330:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2339:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2342:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2332:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2332:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2332:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2305:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2314:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2301:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2301:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2326:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2297:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2297:32:11"
															},
															"nodeType": "YulIf",
															"src": "2294:52:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2355:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2374:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2368:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2368:16:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2359:5:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2448:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2457:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2460:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2450:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2450:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2450:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2406:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2417:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2428:3:11",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2433:10:11",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2424:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2424:20:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:32:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2403:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2403:43:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2396:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2396:51:11"
															},
															"nodeType": "YulIf",
															"src": "2393:71:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2473:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2483:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2473:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2250:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2261:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2273:6:11",
														"type": ""
													}
												],
												"src": "2204:290:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2542:136:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2587:85:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2616:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2619:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2622:1:11",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "2601:14:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2601:23:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2601:23:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2637:25:11",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2648:3:11",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2659:1:11",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2653:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2653:8:11"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "2644:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2644:18:11"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "2637:3:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "2558:14:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2558:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2576:1:11",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2555:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2555:23:11"
															},
															"nodeType": "YulIf",
															"src": "2552:120:11"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "2534:3:11",
														"type": ""
													}
												],
												"src": "2499:179:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2730:299:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2740:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2762:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2778:4:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2784:2:11",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2774:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2774:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2793:2:11",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2789:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2789:7:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2770:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2770:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2758:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2758:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2744:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2881:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2902:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2909:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2914:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2905:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2905:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2895:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2895:31:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2895:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2946:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2949:4:11",
																					"type": "",
																					"value": "0x41"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2939:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2939:15:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2939:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2974:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2977:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2967:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2967:15:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2967:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2816:10:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2836:2:11",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2840:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2832:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2832:10:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2844:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2828:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2828:18:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2813:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2813:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2852:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2864:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2849:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2849:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2810:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2810:62:11"
															},
															"nodeType": "YulIf",
															"src": "2807:185:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3008:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3012:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3001:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3001:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3001:22:11"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2712:6:11",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2720:4:11",
														"type": ""
													}
												],
												"src": "2683:346:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3081:624:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3121:9:11",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "3123:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "3097:14:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3097:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3115:4:11",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3094:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3094:26:11"
															},
															"nodeType": "YulIf",
															"src": "3091:39:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3139:21:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3157:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3151:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3151:9:11"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "3143:4:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3169:16:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3183:1:11",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3179:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3179:6:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3173:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3209:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3215:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "3222:14:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3222:16:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3240:2:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3218:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3218:25:11"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3194:14:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3194:50:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3194:50:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3253:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3273:4:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3267:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3267:11:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3257:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3287:26:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "3297:14:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3297:16:11"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3291:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3322:28:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3340:2:11",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3344:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3336:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3336:10:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3348:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3332:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3332:18:11"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3326:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3408:9:11",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "3410:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3368:6:11"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "3376:2:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3365:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3365:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3388:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3396:4:11",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3384:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3384:17:11"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "3403:2:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3381:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3381:25:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3362:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3362:45:11"
															},
															"nodeType": "YulIf",
															"src": "3359:58:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3426:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3441:4:11"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3447:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3437:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3437:17:11"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "3430:3:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3463:24:11",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "3483:3:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3477:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3477:10:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3467:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3514:9:11",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "3516:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3502:6:11"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "3510:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3499:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3499:14:11"
															},
															"nodeType": "YulIf",
															"src": "3496:27:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3605:9:11",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "3607:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "3546:3:11"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "3551:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3542:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3542:16:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3560:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3538:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3538:27:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "3575:4:11"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "3581:14:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3581:16:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3571:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3571:27:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3600:2:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3567:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3567:36:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3535:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3535:69:11"
															},
															"nodeType": "YulIf",
															"src": "3532:82:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3643:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3657:6:11"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "3665:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3653:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3653:19:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3674:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3649:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3649:30:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3623:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3623:57:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3623:57:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3689:10:11",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "3696:3:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3689:3:11"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3073:3:11",
														"type": ""
													}
												],
												"src": "3034:671:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3831:98:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3848:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3859:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3841:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3841:21:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3871:52:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3896:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3908:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3919:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3904:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3904:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3879:16:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3879:44:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3871:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3800:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3811:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3822:4:11",
														"type": ""
													}
												],
												"src": "3710:219:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4108:242:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4125:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4136:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4118:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4118:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4118:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4159:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4170:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4155:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4155:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4175:2:11",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4148:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4148:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4148:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4198:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4209:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4194:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4194:18:11"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4214:34:11",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4187:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4187:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4187:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4269:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4280:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4265:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4265:18:11"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4285:22:11",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4258:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4258:50:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4258:50:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4317:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4329:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4340:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4325:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4325:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4317:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4085:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4099:4:11",
														"type": ""
													}
												],
												"src": "3934:416:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4529:230:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4546:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4557:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4539:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4539:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4539:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4580:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4591:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4576:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4576:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4596:2:11",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4569:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4569:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4569:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4619:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4630:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4615:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4615:18:11"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4635:34:11",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4608:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4608:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4608:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4690:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4701:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4686:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4686:18:11"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4706:10:11",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4679:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4679:38:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4679:38:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4726:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4738:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4749:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4734:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4734:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4726:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4506:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4520:4:11",
														"type": ""
													}
												],
												"src": "4355:404:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4819:325:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4829:22:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4843:1:11",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4846:4:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4839:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4839:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4829:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4860:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4890:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4896:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4886:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4886:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4864:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4937:31:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4939:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4953:6:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4961:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4949:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4949:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4939:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4917:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4910:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4910:26:11"
															},
															"nodeType": "YulIf",
															"src": "4907:61:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5027:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5048:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5055:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5060:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5051:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5051:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5041:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5041:31:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5041:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5092:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5095:4:11",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5085:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5085:15:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5085:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5120:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5123:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5113:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5113:15:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5113:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4983:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5006:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5014:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5003:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5003:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4980:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4980:38:11"
															},
															"nodeType": "YulIf",
															"src": "4977:161:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4799:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4808:6:11",
														"type": ""
													}
												],
												"src": "4764:380:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_bytes(value4, add(headStart, 160))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := sub(shl(64, 1), 1)\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x228D PUSH1 0x27 SWAP2 CODECOPY PUSH3 0x37 DUP2 PUSH3 0x10F JUMP JUMPDEST POP PUSH3 0x64 CALLER PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x128 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x94 CALLER PUSH1 0x1 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x128 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xB9 CALLER PUSH1 0x2 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x128 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xE1 CALLER PUSH1 0x3 PUSH4 0x3B9ACA00 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x128 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x109 CALLER PUSH1 0x4 PUSH4 0x3B9ACA00 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x128 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x75E JUMP JUMPDEST DUP1 MLOAD PUSH3 0x124 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x479 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x18E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH3 0x1B4 DUP2 PUSH1 0x0 DUP8 PUSH3 0x1A2 DUP9 PUSH3 0x248 JUMP JUMPDEST PUSH3 0x1AD DUP9 PUSH3 0x248 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH3 0x1E6 SWAP1 DUP5 SWAP1 PUSH3 0x51F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH3 0x1AD DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH3 0x29E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH3 0x285 JUMPI PUSH3 0x285 PUSH3 0x546 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x2BD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x473 PUSH1 0x20 SHL PUSH3 0x73D OR PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH3 0x296 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH3 0x2F9 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH3 0x5AC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH3 0x337 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH3 0x334 SWAP2 DUP2 ADD SWAP1 PUSH3 0x5F3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH3 0x3F7 JUMPI PUSH3 0x346 PUSH3 0x626 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH3 0x386 JUMPI POP PUSH3 0x35D PUSH3 0x67E JUMP JUMPDEST DUP1 PUSH3 0x36A JUMPI POP PUSH3 0x388 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x185 SWAP2 SWAP1 PUSH3 0x70D JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x185 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH3 0x46A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x185 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x487 SWAP1 PUSH3 0x722 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x4AB JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x4F6 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x4C6 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x4F6 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x4F6 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x4F6 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x4D9 JUMP JUMPDEST POP PUSH3 0x504 SWAP3 SWAP2 POP PUSH3 0x508 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x504 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x509 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x541 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x584 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH3 0x566 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH3 0x597 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH3 0x5E8 SWAP1 DUP4 ADD DUP5 PUSH3 0x55C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH3 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH3 0x640 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH3 0x677 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH3 0x68D JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 GT PUSH1 0x24 DUP5 ADD DUP4 LT OR ISZERO PUSH3 0x6BD JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x6D6 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH3 0x6F1 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH3 0x702 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH3 0x643 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH3 0x61F PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x55C JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x737 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x758 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B1F DUP1 PUSH3 0x76E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6B20C454 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE3E55F08 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE3E55F08 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x6ECF11D7 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xD562E204 EQ PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x3E4BEE38 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x5B2725ED EQ PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x13DC989F EQ PUSH2 0x16D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x117 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0x1165 JUMP JUMPDEST PUSH2 0x25A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0x11A8 JUMP JUMPDEST PUSH2 0x2F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH2 0x160 PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0x11CC JUMP JUMPDEST PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1232 JUMP JUMPDEST PUSH2 0x117 PUSH1 0x3 DUP2 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x1391 JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x117 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x143B JUMP JUMPDEST PUSH2 0x46E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1541 JUMP JUMPDEST PUSH2 0x117 PUSH1 0x4 DUP2 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1554 JUMP JUMPDEST PUSH2 0x598 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x5E0 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x15C8 JUMP JUMPDEST PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x117 PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH2 0x117 PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0x1637 JUMP JUMPDEST PUSH2 0x6B5 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x169C JUMP JUMPDEST PUSH2 0x6FA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x322 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x33D JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x352 SWAP1 PUSH2 0x16CF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37E SWAP1 PUSH2 0x16CF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3CB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3CB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x3F3 JUMPI POP PUSH2 0x3F3 DUP6 CALLER PUSH2 0x206 JUMP JUMPDEST PUSH2 0x45A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0x467 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x743 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4EF JUMPI PUSH2 0x4EF PUSH2 0x1245 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x518 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x590 JUMPI PUSH2 0x563 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x53C JUMPI PUSH2 0x53C PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x556 JUMPI PUSH2 0x556 PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x25A JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x575 JUMPI PUSH2 0x575 PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x589 DUP2 PUSH2 0x1735 JUMP JUMPDEST SWAP1 POP PUSH2 0x51E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x5B4 JUMPI POP PUSH2 0x5B4 DUP4 CALLER PUSH2 0x206 JUMP JUMPDEST PUSH2 0x5D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x174E JUMP JUMPDEST PUSH2 0x5DB DUP4 DUP4 DUP4 PUSH2 0x8DF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x3E8 DUP1 DUP3 MSTORE PUSH2 0x7D20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x20 DUP3 ADD PUSH2 0x7D00 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x3E8 DUP1 DUP3 MSTORE PUSH2 0x7D20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 POP PUSH1 0x20 DUP3 ADD PUSH2 0x7D00 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH2 0x3E8 DUP2 LT ISZERO PUSH2 0x68A JUMPI DUP1 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x64D JUMPI PUSH2 0x64D PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x66D JUMPI PUSH2 0x66D PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x682 DUP2 PUSH2 0x1735 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x630 JUMP JUMPDEST POP PUSH2 0x6A6 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA5B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6A6 CALLER DUP4 DUP4 PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x6D1 JUMPI POP PUSH2 0x6D1 DUP6 CALLER PUSH2 0x206 JUMP JUMPDEST PUSH2 0x6ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x174E JUMP JUMPDEST PUSH2 0x467 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x716 JUMPI POP PUSH2 0x716 DUP4 CALLER PUSH2 0x206 JUMP JUMPDEST PUSH2 0x732 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x174E JUMP JUMPDEST PUSH2 0x5DB DUP4 DUP4 DUP4 PUSH2 0xDE6 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x78A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x17DF JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x871 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7AB JUMPI PUSH2 0x7AB PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7C9 JUMPI PUSH2 0x7C9 PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x1824 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x856 SWAP1 DUP5 SWAP1 PUSH2 0x186E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x86A SWAP1 PUSH2 0x1735 JUMP JUMPDEST SWAP1 POP PUSH2 0x78E JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x8C1 SWAP3 SWAP2 SWAP1 PUSH2 0x1886 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x8D7 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEE8 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x905 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x926 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 MSTORE CALLER SWAP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x9FC JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x957 JUMPI PUSH2 0x957 PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x975 JUMPI PUSH2 0x975 PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x9C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x18F7 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP1 PUSH2 0x9F4 DUP2 PUSH2 0x1735 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x93A JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xA4D SWAP3 SWAP2 SWAP1 PUSH2 0x1886 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xABB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C2 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xADC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x1797 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xB78 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xAFB JUMPI PUSH2 0xAFB PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xB18 JUMPI PUSH2 0xB18 PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB60 SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0xB70 DUP2 PUSH2 0x1735 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAE0 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xBC9 SWAP3 SWAP2 SWAP1 PUSH2 0x1886 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x467 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEE8 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x17DF JUMP JUMPDEST CALLER PUSH2 0xCFF DUP2 DUP8 DUP8 PUSH2 0xCF6 DUP9 PUSH2 0x1043 JUMP JUMPDEST PUSH2 0x467 DUP9 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0xD40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x1824 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xD7D SWAP1 DUP5 SWAP1 PUSH2 0x186E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xDDD DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x108E JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST CALLER PUSH2 0xE3C DUP2 DUP6 PUSH1 0x0 PUSH2 0xE1D DUP8 PUSH2 0x1043 JUMP JUMPDEST PUSH2 0xE26 DUP8 PUSH2 0x1043 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xE7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x18F7 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP9 DUP8 SUB SWAP1 SSTORE DUP3 MLOAD DUP10 DUP2 MSTORE SWAP4 DUP5 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xF2C SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x193B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF67 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xF64 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1013 JUMPI PUSH2 0xF73 PUSH2 0x19B6 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xFAC JUMPI POP PUSH2 0xF87 PUSH2 0x19D2 JUMP JUMPDEST DUP1 PUSH2 0xF92 JUMPI POP PUSH2 0xFAE JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x1232 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xDDD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x107D JUMPI PUSH2 0x107D PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x10D2 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1AA4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x110D JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x110A SWAP2 DUP2 ADD SWAP1 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1119 JUMPI PUSH2 0xF73 PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xDDD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x1A5C JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1181 DUP4 PUSH2 0x1149 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x11A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11C5 DUP2 PUSH2 0x118F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x120B JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x11EF JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x121D JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x11C5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x11E5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1281 JUMPI PUSH2 0x1281 PUSH2 0x1245 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x12A2 JUMPI PUSH2 0x12A2 PUSH2 0x1245 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x12CA DUP3 PUSH2 0x1288 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D7 DUP3 DUP3 PUSH2 0x125B JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x12F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1312 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x12FB JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x132E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1348 JUMPI PUSH2 0x1348 PUSH2 0x1245 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135F PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x125B JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x13A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13B2 DUP7 PUSH2 0x1149 JUMP JUMPDEST SWAP5 POP PUSH2 0x13C0 PUSH1 0x20 DUP8 ADD PUSH2 0x1149 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x13DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E9 DUP10 DUP4 DUP11 ADD PUSH2 0x12AC JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x13FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140B DUP10 DUP4 DUP11 ADD PUSH2 0x12AC JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x142E DUP9 DUP3 DUP10 ADD PUSH2 0x131D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x144E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x147A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1487 DUP3 PUSH2 0x1288 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1494 DUP3 DUP3 PUSH2 0x125B JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x14B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x14D9 JUMPI PUSH2 0x14CA DUP7 PUSH2 0x1149 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x14B9 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x14EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14FC DUP6 DUP3 DUP7 ADD PUSH2 0x12AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1536 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x151A JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x11C5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1506 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1572 DUP5 PUSH2 0x1149 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x158F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x159B DUP8 DUP4 DUP9 ADD PUSH2 0x12AC JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x15B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15BE DUP7 DUP3 DUP8 ADD PUSH2 0x12AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15E4 DUP4 PUSH2 0x1149 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x15F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1617 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1620 DUP4 PUSH2 0x1149 JUMP JUMPDEST SWAP2 POP PUSH2 0x162E PUSH1 0x20 DUP5 ADD PUSH2 0x1149 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x164F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1658 DUP7 PUSH2 0x1149 JUMP JUMPDEST SWAP5 POP PUSH2 0x1666 PUSH1 0x20 DUP8 ADD PUSH2 0x1149 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x142E DUP9 DUP3 DUP10 ADD PUSH2 0x131D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16BA DUP5 PUSH2 0x1149 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x16E3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1703 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1747 JUMPI PUSH2 0x1747 PUSH2 0x171F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1881 JUMPI PUSH2 0x1881 PUSH2 0x171F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1899 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1506 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x18AB DUP2 DUP6 PUSH2 0x1506 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1967 SWAP1 DUP4 ADD DUP7 PUSH2 0x1506 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1979 DUP2 DUP7 PUSH2 0x1506 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x198D DUP2 DUP6 PUSH2 0x11E5 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x11C5 DUP2 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x19CF JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x19E0 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1A10 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1A28 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1A42 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1A51 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x125B JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1ADE SWAP1 DUP4 ADD DUP5 PUSH2 0x11E5 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 ADD 0xCC SGT 0xD1 CALLDATASIZE BYTE RETURNDATACOPY MSIZE SMOD STATICCALL SWAP6 0xC4 0xD3 0x49 CREATE DUP6 CALL 0x4E CALL DUP13 0xE8 DUP2 0xCC 0x2B SWAP1 JUMP DELEGATECALL PUSH17 0xD8EE4F64736F6C634300080D0033687474 PUSH17 0x733A2F2F67616D652E6578616D706C652F PUSH2 0x7069 0x2F PUSH10 0x74656D2F7B69647D2E6A PUSH20 0x6F6E000000000000000000000000000000000000 ",
							"sourceMap": "297:892:0:-:0;;;561:309;;;;;;;;;;1092:62:1;;;;;;;;;;;;;;;;;1134:13;1142:4;1134:7;:13::i;:::-;1092:62;637:35:0::1;643:10;382:1;661:6;637:35;;;;;;;;;;;::::0;:5:::1;;;:35;;:::i;:::-;683:37;689:10;423:1;709:6;683:37;;;;;;;;;;;::::0;:5:::1;;;:37;;:::i;:::-;731:38;737:10;470:1;763;731:38;;;;;;;;;;;::::0;:5:::1;;;:38;;:::i;:::-;780:35;786:10;510:1;805:5;780:35;;;;;;;;;;;::::0;:5:::1;;;:35;;:::i;:::-;826:36;832:10;551:1;852:5;826:36;;;;;;;;;;;::::0;:5:::1;;;:36;;:::i;:::-;297:892:::0;;7936:86:1;8002:13;;;;:4;;:13;;;;;:::i;:::-;;7936:86;:::o;8395:553::-;-1:-1:-1;;;;;8542:16:1;;8534:62;;;;-1:-1:-1;;;8534:62:1;;216:2:11;8534:62:1;;;198:21:11;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:11;;;338:31;386:19;;8534:62:1;;;;;;;;;719:10:8;8649:102:1;719:10:8;8607:16:1;8692:2;8696:21;8714:2;8696:17;:21::i;:::-;8719:25;8737:6;8719:17;:25::i;:::-;13331:214;;;;;;8649:102;8762:9;:13;;;;;;;;;;;-1:-1:-1;;;;;8762:17:1;;;;;;;;;:27;;8783:6;;8762:9;:27;;8783:6;;8762:27;:::i;:::-;;;;-1:-1:-1;;8804:52:1;;;820:25:11;;;876:2;861:18;;854:34;;;-1:-1:-1;;;;;8804:52:1;;;;8837:1;;8804:52;;;;;;793:18:11;8804:52:1;;;;;;;8867:74;8898:8;8916:1;8920:2;8924;8928:6;8936:4;8867:30;:74::i;15080:193::-;15199:16;;;15213:1;15199:16;;;;;;;;;15146;;15174:22;;15199:16;;;;;;;;;;;;-1:-1:-1;15199:16:1;15174:41;;15236:7;15225:5;15231:1;15225:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;15261:5;15080:193;-1:-1:-1;;15080:193:1:o;13331:214::-;;;;;;;:::o;13551:725::-;13758:15;:2;-1:-1:-1;;;;;13758:13:1;;;;;;:15;;:::i;:::-;13754:516;;;13793:72;;-1:-1:-1;;;13793:72:1;;-1:-1:-1;;;;;13793:38:1;;;;;:72;;13832:8;;13842:4;;13848:2;;13852:6;;13860:4;;13793:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13793:72:1;;;;;;;;-1:-1:-1;;13793:72:1;;;;;;;;;;;;:::i;:::-;;;13789:471;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;14136:6;14129:14;;-1:-1:-1;;;14129:14:1;;;;;;;;:::i;13789:471::-;;;14183:62;;-1:-1:-1;;;14183:62:1;;4136:2:11;14183:62:1;;;4118:21:11;4175:2;4155:18;;;4148:30;4214:34;4194:18;;;4187:62;4285:22;4265:18;;;4258:50;4325:19;;14183:62:1;3934:416:11;13789:471:1;-1:-1:-1;;;;;;13914:55:1;;-1:-1:-1;;;13914:55:1;13910:152;;13993:50;;-1:-1:-1;;;13993:50:1;;4557:2:11;13993:50:1;;;4539:21:11;4596:2;4576:18;;;4569:30;4635:34;4615:18;;;4608:62;-1:-1:-1;;;4686:18:11;;;4679:38;4734:19;;13993:50:1;4355:404:11;13910:152:1;13866:210;13551:725;;;;;;:::o;771:377:7:-;1087:20;1133:8;;;771:377::o;297:892:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;297:892:0;;;-1:-1:-1;297:892:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;416:225:11;456:3;487:1;483:6;480:1;477:13;474:136;;;532:10;527:3;523:20;520:1;513:31;567:4;564:1;557:15;595:4;592:1;585:15;474:136;-1:-1:-1;626:9:11;;416:225::o;1031:127::-;1092:10;1087:3;1083:20;1080:1;1073:31;1123:4;1120:1;1113:15;1147:4;1144:1;1137:15;1163:471;1204:3;1242:5;1236:12;1269:6;1264:3;1257:19;1294:1;1304:162;1318:6;1315:1;1312:13;1304:162;;;1380:4;1436:13;;;1432:22;;1426:29;1408:11;;;1404:20;;1397:59;1333:12;1304:162;;;1484:6;1481:1;1478:13;1475:87;;;1550:1;1543:4;1534:6;1529:3;1525:16;1521:27;1514:38;1475:87;-1:-1:-1;1616:2:11;1595:15;-1:-1:-1;;1591:29:11;1582:39;;;;1623:4;1578:50;;1163:471;-1:-1:-1;;1163:471:11:o;1639:560::-;-1:-1:-1;;;;;1936:15:11;;;1918:34;;1988:15;;1983:2;1968:18;;1961:43;2035:2;2020:18;;2013:34;;;2078:2;2063:18;;2056:34;;;1898:3;2121;2106:19;;2099:32;;;1861:4;;2148:45;;2173:19;;2165:6;2148:45;:::i;:::-;2140:53;1639:560;-1:-1:-1;;;;;;;1639:560:11:o;2204:290::-;2273:6;2326:2;2314:9;2305:7;2301:23;2297:32;2294:52;;;2342:1;2339;2332:12;2294:52;2368:16;;-1:-1:-1;;;;;;2413:32:11;;2403:43;;2393:71;;2460:1;2457;2450:12;2393:71;2483:5;2204:290;-1:-1:-1;;;2204:290:11:o;2499:179::-;2534:3;2576:1;2558:16;2555:23;2552:120;;;2622:1;2619;2616;2601:23;-1:-1:-1;2659:1:11;2653:8;2648:3;2644:18;2552:120;2499:179;:::o;2683:346::-;2793:2;2774:13;;-1:-1:-1;;2770:27:11;2758:40;;-1:-1:-1;;;;;2813:34:11;;2849:22;;;2810:62;2807:185;;;2914:10;2909:3;2905:20;2902:1;2895:31;2949:4;2946:1;2939:15;2977:4;2974:1;2967:15;2807:185;3008:2;3001:22;-1:-1:-1;;2683:346:11:o;3034:671::-;3073:3;3115:4;3097:16;3094:26;3091:39;;;3034:671;:::o;3091:39::-;3157:2;3151:9;-1:-1:-1;;3222:16:11;3218:25;;3215:1;3151:9;3194:50;3267:11;;3297:16;-1:-1:-1;;;;;3365:14:11;;;3396:4;3384:17;;3381:25;-1:-1:-1;3362:45:11;3359:58;;;3410:5;;;;;3034:671;:::o;3359:58::-;3447:6;3441:4;3437:17;3426:28;;3483:3;3477:10;3510:2;3502:6;3499:14;3496:27;;;3516:5;;;;;;3034:671;:::o;3496:27::-;3600:2;3581:16;3575:4;3571:27;3567:36;3560:4;3551:6;3546:3;3542:16;3538:27;3535:69;3532:82;;;3607:5;;;;;;3034:671;:::o;3532:82::-;3623:57;3674:4;3665:6;3657;3653:19;3649:30;3643:4;3623:57;:::i;:::-;-1:-1:-1;3696:3:11;;3034:671;-1:-1:-1;;;;;3034:671:11:o;3710:219::-;3859:2;3848:9;3841:21;3822:4;3879:44;3919:2;3908:9;3904:18;3896:6;3879:44;:::i;4764:380::-;4843:1;4839:12;;;;4886;;;4907:61;;4961:4;4953:6;4949:17;4939:27;;4907:61;5014:2;5006:6;5003:14;4983:18;4980:38;4977:161;;5060:10;5055:3;5051:20;5048:1;5041:31;5095:4;5092:1;5085:15;5123:4;5120:1;5113:15;4977:161;;4764:380;;;:::o;:::-;297:892:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@GOLD_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SHIELD_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SILVER_14": {
									"entryPoint": null,
									"id": 14,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SWORD_20": {
									"entryPoint": null,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@THORS_HAMMER_17": {
									"entryPoint": null,
									"id": 17,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_asSingletonArray_1232": {
									"entryPoint": 4163,
									"id": 1232,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1076": {
									"entryPoint": null,
									"id": 1076,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_burnBatch_1025": {
									"entryPoint": 2271,
									"id": 1025,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_914": {
									"entryPoint": 3558,
									"id": 914,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1204": {
									"entryPoint": 3816,
									"id": 1204,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1139": {
									"entryPoint": 4238,
									"id": 1139,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mintBatch_835": {
									"entryPoint": 2651,
									"id": 835,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_1922": {
									"entryPoint": null,
									"id": 1922,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_650": {
									"entryPoint": 1859,
									"id": 650,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_524": {
									"entryPoint": 3264,
									"id": 524,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1057": {
									"entryPoint": 3040,
									"id": 1057,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_317": {
									"entryPoint": 1134,
									"id": 317,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_253": {
									"entryPoint": 602,
									"id": 253,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@burnBatch_1464": {
									"entryPoint": 1432,
									"id": 1464,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@burn_1432": {
									"entryPoint": 1786,
									"id": 1432,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@isApprovedForAll_352": {
									"entryPoint": null,
									"id": 352,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1633": {
									"entryPoint": 1853,
									"id": 1633,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintBatch_136": {
									"entryPoint": 1504,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_430": {
									"entryPoint": 983,
									"id": 430,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_390": {
									"entryPoint": 1717,
									"id": 390,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_334": {
									"entryPoint": 1706,
									"id": 334,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1955": {
									"entryPoint": null,
									"id": 1955,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_213": {
									"entryPoint": 753,
									"id": 213,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_225": {
									"entryPoint": 835,
									"id": 225,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 4425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 4780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 4893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 5009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 5687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 5788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 5382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 4581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6459,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6820,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6278,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 4744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 4699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 5941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5919,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5897,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4677,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 6582,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 6610,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 4495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18539:11",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:11"
															},
															"nodeType": "YulIf",
															"src": "111:70:11"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:11",
														"type": ""
													}
												],
												"src": "14:173:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:167:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:11"
															},
															"nodeType": "YulIf",
															"src": "289:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:11",
														"type": ""
													}
												],
												"src": "192:254:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:76:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "562:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "585:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "562:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "615:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "521:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "532:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "543:4:11",
														"type": ""
													}
												],
												"src": "451:177:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "677:87:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "742:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "751:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "754:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "744:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "744:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "700:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "711:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "722:3:11",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "727:10:11",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "718:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "718:20:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "707:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "707:32:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "697:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "697:43:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:51:11"
															},
															"nodeType": "YulIf",
															"src": "687:71:11"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "666:5:11",
														"type": ""
													}
												],
												"src": "633:131:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "838:176:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "884:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "893:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "896:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "886:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "886:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "859:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "868:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "851:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:32:11"
															},
															"nodeType": "YulIf",
															"src": "848:52:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "909:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "935:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "922:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "913:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "978:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "954:23:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "954:30:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "993:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1003:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "804:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "815:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "827:6:11",
														"type": ""
													}
												],
												"src": "769:245:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:92:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1124:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1136:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1147:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1132:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1124:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1166:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1191:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1184:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1184:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1177:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1177:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:41:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1159:41:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1083:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1094:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1105:4:11",
														"type": ""
													}
												],
												"src": "1019:187:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1281:110:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1327:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1336:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1329:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1329:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1329:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1302:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1311:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1298:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1298:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1323:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1294:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1294:32:11"
															},
															"nodeType": "YulIf",
															"src": "1291:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1352:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1375:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1362:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:23:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1352:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1247:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1258:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1270:6:11",
														"type": ""
													}
												],
												"src": "1211:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1446:422:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1456:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1476:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1470:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:12:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1460:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1498:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1503:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1491:19:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1519:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1528:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1523:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1590:110:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1604:14:11",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1614:4:11",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1608:2:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1646:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1651:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1642:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1642:11:11"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1655:2:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1638:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1638:20:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1674:5:11"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1681:1:11"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1670:3:11"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1670:13:11"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1685:2:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1666:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1666:22:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1660:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1660:29:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1631:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1631:59:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1631:59:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1549:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1552:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1546:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1560:21:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1562:17:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1571:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1574:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1567:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1567:12:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1562:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1542:3:11",
																"statements": []
															},
															"src": "1538:162:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:62:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1763:3:11"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1768:6:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1759:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1759:16:11"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1777:4:11",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1755:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1755:27:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1784:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:38:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:38:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1715:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1718:6:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1712:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1712:13:11"
															},
															"nodeType": "YulIf",
															"src": "1709:87:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1805:57:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1820:3:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1833:6:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1841:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1829:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1829:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1850:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1846:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1846:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1825:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1825:29:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1816:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1816:39:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1857:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1812:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1812:50:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1805:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1423:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1430:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1438:3:11",
														"type": ""
													}
												],
												"src": "1396:472:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1994:99:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2011:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2022:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2004:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2004:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2004:21:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2034:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2060:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2072:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2083:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2068:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2068:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "2042:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:45:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2034:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1963:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1974:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1985:4:11",
														"type": ""
													}
												],
												"src": "1873:220:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2130:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2147:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2154:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2159:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2150:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2150:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2140:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2140:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2140:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2187:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2190:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2180:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2180:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2211:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2214:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2204:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2204:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2204:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2098:127:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2277:202:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2287:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2309:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2325:4:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2331:2:11",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2321:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2321:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2340:2:11",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2336:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2336:7:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2317:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2317:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2305:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2305:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2291:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2420:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2422:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2422:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2422:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2363:10:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2375:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2360:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2360:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2399:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2411:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2396:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2396:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2357:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2357:62:11"
															},
															"nodeType": "YulIf",
															"src": "2354:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2458:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2462:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2451:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2451:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2451:22:11"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2259:6:11",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2267:4:11",
														"type": ""
													}
												],
												"src": "2230:249:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2553:114:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2597:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2599:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2599:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2599:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2569:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2577:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2566:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2566:30:11"
															},
															"nodeType": "YulIf",
															"src": "2563:56:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2628:33:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2644:1:11",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2640:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2640:14:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2656:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2636:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2636:25:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2628:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2533:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2544:4:11",
														"type": ""
													}
												],
												"src": "2484:183:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2736:660:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2785:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2794:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2797:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2787:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2787:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2787:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2764:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2772:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2760:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2760:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2779:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2756:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2756:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2749:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2749:35:11"
															},
															"nodeType": "YulIf",
															"src": "2746:55:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2810:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2820:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2820:20:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2814:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2849:14:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2859:4:11",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2853:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2872:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2922:2:11"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2882:39:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2882:43:11"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2876:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2934:23:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2954:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2948:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2948:9:11"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2938:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2986:6:11"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2994:2:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2966:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2966:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2966:31:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3006:17:11",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3017:6:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3010:3:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3039:6:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3047:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3032:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3032:18:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3032:18:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3059:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3070:6:11"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3078:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3066:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3066:15:11"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3059:3:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3090:46:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3112:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3124:1:11",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3127:2:11"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3120:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3120:10:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3108:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3108:23:11"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3133:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3104:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3104:32:11"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3094:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3164:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3173:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3176:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3166:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3166:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3166:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3151:6:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3159:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3148:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3148:15:11"
															},
															"nodeType": "YulIf",
															"src": "3145:35:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3189:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3204:6:11"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3212:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3200:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3200:15:11"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3193:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3280:86:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3301:3:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3319:3:11"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "3306:12:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3306:17:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3294:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3294:30:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3294:30:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3337:19:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3348:3:11"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3353:2:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3344:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3344:12:11"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3337:3:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3235:3:11"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3240:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3232:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3232:15:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3248:23:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3250:19:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3261:3:11"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3266:2:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3257:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3257:12:11"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3250:3:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3228:3:11",
																"statements": []
															},
															"src": "3224:142:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3375:15:11",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3384:6:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3375:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2710:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2718:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2726:5:11",
														"type": ""
													}
												],
												"src": "2672:724:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3453:503:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3502:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3511:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3514:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3504:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3504:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3504:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3481:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3489:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3477:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3477:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3496:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3473:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3473:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3466:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3466:35:11"
															},
															"nodeType": "YulIf",
															"src": "3463:55:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3527:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3550:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3537:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3537:20:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3531:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3596:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3598:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3598:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3598:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3572:2:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3576:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3569:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:26:11"
															},
															"nodeType": "YulIf",
															"src": "3566:52:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3627:23:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3647:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3641:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3641:9:11"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3631:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3679:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "3699:2:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3703:4:11",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3695:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3695:13:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3714:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3710:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3710:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3691:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3691:27:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3720:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3687:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3687:38:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3659:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3659:67:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3659:67:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3742:6:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3750:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3735:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3735:18:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3735:18:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3801:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3810:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3813:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3803:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3803:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3803:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3776:6:11"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3784:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3772:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3772:15:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3789:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3768:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3768:26:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3796:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3765:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3765:35:11"
															},
															"nodeType": "YulIf",
															"src": "3762:55:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3843:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3851:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3839:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3839:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3862:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3870:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3858:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3858:17:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3877:2:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3826:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3826:54:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3826:54:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3904:6:11"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3912:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3900:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3900:15:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3917:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3896:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3896:26:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3924:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3889:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3889:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3889:37:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3935:15:11",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3944:6:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3935:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3427:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3435:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3443:5:11",
														"type": ""
													}
												],
												"src": "3401:555:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4158:746:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4205:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4214:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4217:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4207:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4207:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4207:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4179:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4188:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4175:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4175:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4200:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4171:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4171:33:11"
															},
															"nodeType": "YulIf",
															"src": "4168:53:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4230:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4259:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4240:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4240:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4230:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4278:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4311:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4322:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4307:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4307:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4288:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4288:38:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4278:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4335:46:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4366:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4377:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4362:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4362:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4349:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4349:32:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4339:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4390:28:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4400:18:11",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4394:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4445:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4454:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4457:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4447:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4447:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4447:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4433:6:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4441:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4430:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4430:14:11"
															},
															"nodeType": "YulIf",
															"src": "4427:34:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4470:71:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4513:9:11"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4524:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4509:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4509:22:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4533:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4480:28:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4480:61:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4470:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4550:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4583:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4594:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4579:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4579:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4566:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4566:32:11"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4554:8:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4627:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4636:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4639:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4629:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4629:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4629:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4613:8:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4623:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4610:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4610:16:11"
															},
															"nodeType": "YulIf",
															"src": "4607:36:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4652:73:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4695:9:11"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4706:8:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4691:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4691:24:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4717:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4662:28:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4662:63:11"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4652:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4734:49:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4767:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4778:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4763:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4763:19:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4750:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4750:33:11"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "4738:8:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4812:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4821:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4824:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4814:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4814:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4814:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "4798:8:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4808:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4795:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4795:16:11"
															},
															"nodeType": "YulIf",
															"src": "4792:36:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4837:61:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4868:9:11"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "4879:8:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4864:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4864:24:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4890:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4847:16:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4847:51:11"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4837:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4092:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4103:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4115:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4123:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4131:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4139:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4147:6:11",
														"type": ""
													}
												],
												"src": "3961:943:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5046:1071:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5092:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5101:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5104:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5094:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5094:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5094:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5067:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5076:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5063:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5063:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5088:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5059:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5059:32:11"
															},
															"nodeType": "YulIf",
															"src": "5056:52:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5117:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5144:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5131:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5131:23:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5121:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5163:28:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5173:18:11",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5167:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5218:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5227:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5230:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5220:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5220:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5220:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5206:6:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5214:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5203:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5203:14:11"
															},
															"nodeType": "YulIf",
															"src": "5200:34:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5243:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5257:9:11"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5268:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5253:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5253:22:11"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5247:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5323:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5332:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5335:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5325:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5325:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5325:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5302:2:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5306:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5298:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5298:13:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5313:7:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5294:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5294:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5287:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5287:35:11"
															},
															"nodeType": "YulIf",
															"src": "5284:55:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5348:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5371:2:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5358:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5358:16:11"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5352:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5383:14:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5393:4:11",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "5387:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5406:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5456:2:11"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5416:39:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5416:43:11"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "5410:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5468:23:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5488:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5482:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5482:9:11"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "5472:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5520:6:11"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "5528:2:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5500:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5500:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5500:31:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5540:17:11",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5551:6:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5544:3:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5573:6:11"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5581:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5566:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5566:18:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5566:18:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5593:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5604:6:11"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5612:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5600:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5600:15:11"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "5593:3:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5624:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "5646:2:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5654:1:11",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5657:2:11"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "5650:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5650:10:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5642:19:11"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5663:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5638:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5638:28:11"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "5628:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5698:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5707:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5710:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5700:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5700:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5700:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5681:6:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5689:7:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5678:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5678:19:11"
															},
															"nodeType": "YulIf",
															"src": "5675:39:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5723:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5738:2:11"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5742:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5734:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5734:11:11"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "5727:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5810:92:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5831:3:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5855:3:11"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "5836:18:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5836:23:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5824:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5824:36:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5824:36:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5873:19:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5884:3:11"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5889:2:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5880:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5880:12:11"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5873:3:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5765:3:11"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5770:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5762:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5762:15:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5778:23:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5780:19:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5791:3:11"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5796:2:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5787:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5787:12:11"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5780:3:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5758:3:11",
																"statements": []
															},
															"src": "5754:148:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5911:16:11",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5921:6:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5911:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5936:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5969:9:11"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5980:2:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5965:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5965:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5952:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5952:32:11"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5940:8:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6013:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6022:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6025:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6015:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6015:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6015:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5999:8:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6009:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5996:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5996:16:11"
															},
															"nodeType": "YulIf",
															"src": "5993:36:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6038:73:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6081:9:11"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6092:8:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6077:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6077:24:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6103:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6048:28:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6048:63:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6038:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5004:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5015:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5027:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5035:6:11",
														"type": ""
													}
												],
												"src": "4909:1208:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6183:374:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6193:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6213:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6207:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6207:12:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6197:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6235:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6240:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6228:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6228:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6228:19:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6256:14:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6266:4:11",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6260:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6279:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6290:3:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6295:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6286:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6286:12:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6279:3:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6307:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6325:5:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6332:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6321:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6321:14:11"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6311:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6344:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6353:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6348:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6412:120:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6433:3:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6444:6:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6438:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6438:13:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6426:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6426:26:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6426:26:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6465:19:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6476:3:11"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6481:2:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6472:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6472:12:11"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6465:3:11"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6497:25:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6511:6:11"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6519:2:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6507:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6507:15:11"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6497:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6374:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6377:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6371:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6371:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6385:18:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6387:14:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6396:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6399:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6392:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6392:9:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6387:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6367:3:11",
																"statements": []
															},
															"src": "6363:169:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6541:10:11",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6548:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6541:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6160:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6167:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6175:3:11",
														"type": ""
													}
												],
												"src": "6122:435:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6713:110:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6730:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6741:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6723:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6723:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6723:21:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6753:64:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6790:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6802:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6813:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6798:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6798:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6761:28:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6761:56:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6753:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6682:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6693:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6704:4:11",
														"type": ""
													}
												],
												"src": "6562:261:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6982:515:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7028:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7037:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7040:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7030:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7030:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7030:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7003:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7012:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6999:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6999:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7024:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6995:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6995:32:11"
															},
															"nodeType": "YulIf",
															"src": "6992:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7053:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7082:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7063:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7063:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7053:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7101:46:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7132:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7143:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7128:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7128:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7115:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7115:32:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "7105:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7156:28:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7166:18:11",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7160:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7211:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7220:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7223:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7213:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7213:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7213:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7199:6:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7207:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7196:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7196:14:11"
															},
															"nodeType": "YulIf",
															"src": "7193:34:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7236:71:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7279:9:11"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7290:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7275:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7275:22:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7299:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7246:28:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7246:61:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7236:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7316:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7349:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7360:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7345:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7345:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7332:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7332:32:11"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "7320:8:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7393:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7402:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7405:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7395:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7395:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7395:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "7379:8:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7389:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7376:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7376:16:11"
															},
															"nodeType": "YulIf",
															"src": "7373:36:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7418:73:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7461:9:11"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "7472:8:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7457:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7457:24:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7483:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7428:28:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7428:63:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7418:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6932:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6943:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6955:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6963:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6971:6:11",
														"type": ""
													}
												],
												"src": "6828:669:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7586:263:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7632:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7641:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7644:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7634:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7634:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7634:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7607:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7616:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7603:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7603:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7628:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7599:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7599:32:11"
															},
															"nodeType": "YulIf",
															"src": "7596:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7657:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7686:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7667:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7667:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7657:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7705:45:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7735:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7746:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7731:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7731:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7718:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7718:32:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7709:5:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7803:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7812:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7815:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7805:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7805:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7805:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7772:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "7793:5:11"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "7786:6:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7786:13:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7779:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7779:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7769:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7769:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7762:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7762:40:11"
															},
															"nodeType": "YulIf",
															"src": "7759:60:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7828:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7838:5:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7828:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7544:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7555:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7567:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7575:6:11",
														"type": ""
													}
												],
												"src": "7502:347:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7941:173:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7987:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7996:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7999:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7989:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7989:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7989:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7962:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7971:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7958:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7958:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7983:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7954:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7954:32:11"
															},
															"nodeType": "YulIf",
															"src": "7951:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8012:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8041:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "8022:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8022:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8012:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8060:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8093:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8104:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8089:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8089:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "8070:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8070:38:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8060:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7899:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7910:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7922:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7930:6:11",
														"type": ""
													}
												],
												"src": "7854:260:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8266:459:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8313:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8322:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8325:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8315:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8315:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8315:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8287:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8296:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8283:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8283:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8308:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8279:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8279:33:11"
															},
															"nodeType": "YulIf",
															"src": "8276:53:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8338:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8367:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "8348:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8348:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8338:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8386:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8419:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8430:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8415:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8415:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "8396:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8396:38:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8386:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8443:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8470:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8481:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8466:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8466:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8453:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8453:32:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "8443:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8494:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8521:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8532:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8517:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8517:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8504:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8504:32:11"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "8494:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8545:47:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8576:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8587:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8572:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8572:19:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8559:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8559:33:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "8549:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8635:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8644:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8647:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8637:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8637:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8637:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8607:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8615:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8604:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8604:30:11"
															},
															"nodeType": "YulIf",
															"src": "8601:50:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8660:59:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8691:9:11"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8702:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8687:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8687:22:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8711:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "8670:16:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8670:49:11"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "8660:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8200:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8211:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8223:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8231:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8239:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8247:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8255:6:11",
														"type": ""
													}
												],
												"src": "8119:606:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8834:218:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8880:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8889:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8892:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8882:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8882:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8882:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8855:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8864:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8851:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8851:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8876:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8847:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8847:32:11"
															},
															"nodeType": "YulIf",
															"src": "8844:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8905:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8934:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "8915:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8915:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8905:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8953:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8980:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8991:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8976:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8976:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8963:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8963:32:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8953:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9004:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9031:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9042:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9027:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9027:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9014:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9014:32:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "9004:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8784:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8795:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8807:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8815:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8823:6:11",
														"type": ""
													}
												],
												"src": "8730:322:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9231:233:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9248:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9259:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9241:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9241:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9241:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9282:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9293:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9278:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9278:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9298:2:11",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9271:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9271:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9271:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9321:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9332:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9317:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9317:18:11"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9337:34:11",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9310:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9310:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9310:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9392:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9403:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9388:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9388:18:11"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9408:13:11",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9381:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9381:41:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9381:41:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9431:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9443:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9454:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9439:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9439:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9431:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9208:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9222:4:11",
														"type": ""
													}
												],
												"src": "9057:407:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9524:325:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9534:22:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9548:1:11",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9551:4:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "9544:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9544:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9534:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9565:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9595:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9601:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9591:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9591:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "9569:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9642:31:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9644:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "9658:6:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9666:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "9654:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9654:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9644:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9622:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9615:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9615:26:11"
															},
															"nodeType": "YulIf",
															"src": "9612:61:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9732:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9753:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9760:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9765:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "9756:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9756:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9746:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9746:31:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9746:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9797:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9800:4:11",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9790:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9790:15:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9790:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9825:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9828:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9818:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9818:15:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9818:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9688:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9711:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9719:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9708:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9708:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9685:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9685:38:11"
															},
															"nodeType": "YulIf",
															"src": "9682:161:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9504:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9513:6:11",
														"type": ""
													}
												],
												"src": "9469:380:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10028:240:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10045:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10056:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10038:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10038:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10038:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10079:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10090:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10075:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10075:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10095:2:11",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10068:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10068:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10068:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10118:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10129:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10114:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10114:18:11"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10134:34:11",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10107:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10107:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10107:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10189:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10200:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10185:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10185:18:11"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10205:20:11",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10178:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10178:48:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10178:48:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10235:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10247:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10258:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10243:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10243:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10235:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10005:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10019:4:11",
														"type": ""
													}
												],
												"src": "9854:414:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10447:231:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10464:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10475:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10457:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10457:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10457:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10498:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10509:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10494:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10494:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10514:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10487:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10487:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10487:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10537:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10548:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10533:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10533:18:11"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10553:34:11",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10526:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10526:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10526:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10608:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10619:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10604:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10604:18:11"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10624:11:11",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10597:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10597:39:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10597:39:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10645:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10657:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10668:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10653:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10653:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10645:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10424:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10438:4:11",
														"type": ""
													}
												],
												"src": "10273:405:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10715:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10732:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10739:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10744:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10735:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10735:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10725:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10725:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10725:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10772:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10775:4:11",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10765:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10765:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10765:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10796:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10799:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10789:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10789:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10789:15:11"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "10683:127:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10847:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10864:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10871:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10876:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10867:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10867:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10857:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10857:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10857:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10904:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10907:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10897:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10897:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10897:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10928:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10931:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10921:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10921:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10921:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10815:127:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10994:88:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11025:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11027:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11027:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11027:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11010:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11021:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11017:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11017:6:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11007:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11007:17:11"
															},
															"nodeType": "YulIf",
															"src": "11004:43:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11056:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11067:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11074:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11063:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11063:13:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11056:3:11"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10976:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10986:3:11",
														"type": ""
													}
												],
												"src": "10947:135:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11261:231:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11278:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11289:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11271:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11271:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11271:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11312:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11323:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11308:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11308:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11328:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11301:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11301:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11301:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11351:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11362:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11347:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11347:18:11"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11367:34:11",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11340:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11340:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11340:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11422:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11433:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11418:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11418:18:11"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11438:11:11",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11411:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11411:39:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11411:39:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11459:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11471:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11482:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11467:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11467:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11459:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11238:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11252:4:11",
														"type": ""
													}
												],
												"src": "11087:405:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11671:230:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11688:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11699:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11681:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11681:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11681:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11722:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11733:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11718:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11718:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11738:2:11",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11711:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11711:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11711:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11761:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11772:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11757:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11757:18:11"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11777:34:11",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11750:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11750:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11750:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11832:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11843:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11828:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11828:18:11"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11848:10:11",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11821:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11821:38:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11821:38:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11868:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11880:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11891:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11876:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11876:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11868:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11648:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11662:4:11",
														"type": ""
													}
												],
												"src": "11497:404:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12080:227:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12097:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12108:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12090:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12090:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12090:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12131:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12142:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12127:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12127:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12147:2:11",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12120:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12120:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12120:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12170:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12181:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12166:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12166:18:11"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12186:34:11",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12159:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12159:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12159:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12241:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12252:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12237:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12237:18:11"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12257:7:11",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12230:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12230:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12230:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12274:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12286:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12297:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12282:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12282:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12274:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12057:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12071:4:11",
														"type": ""
													}
												],
												"src": "11906:401:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12486:232:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12503:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12514:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12496:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12496:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12496:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12537:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12548:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12533:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12533:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12553:2:11",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12526:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12526:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12526:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12576:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12587:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12572:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12572:18:11"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12592:34:11",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12565:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12565:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12565:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12647:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12658:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12643:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12643:18:11"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12663:12:11",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12636:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12636:40:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12636:40:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12685:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12697:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12708:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12693:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12693:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12685:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12463:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12477:4:11",
														"type": ""
													}
												],
												"src": "12312:406:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12771:80:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12798:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12800:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12800:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12800:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12787:1:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12794:1:11"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12790:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12790:6:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12784:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12784:13:11"
															},
															"nodeType": "YulIf",
															"src": "12781:39:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12829:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12840:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12843:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12836:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12836:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12829:3:11"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12754:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12757:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12763:3:11",
														"type": ""
													}
												],
												"src": "12723:128:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13085:236:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13102:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13113:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13095:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13095:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13095:21:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13125:70:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13168:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13180:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13191:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13176:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13176:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13139:28:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13139:56:11"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "13129:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13215:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13226:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13211:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13211:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "13235:6:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13243:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13231:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13231:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13204:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13204:50:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13204:50:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13263:52:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13300:6:11"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "13308:6:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13271:28:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13271:44:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13263:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13046:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13057:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13065:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13076:4:11",
														"type": ""
													}
												],
												"src": "12856:465:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13500:225:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13517:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13528:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13510:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13510:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13510:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13551:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13562:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13547:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13547:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13567:2:11",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13540:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13540:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13540:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13590:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13601:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13586:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13586:18:11"
																	},
																	{
																		"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13606:34:11",
																		"type": "",
																		"value": "ERC1155: burn from the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13579:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13579:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13579:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13661:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13672:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13657:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13657:18:11"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13677:5:11",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13650:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13650:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13650:33:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13692:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13704:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13715:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13700:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13700:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13692:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13477:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13491:4:11",
														"type": ""
													}
												],
												"src": "13326:399:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13904:226:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13921:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13932:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13914:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13914:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13914:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13955:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13966:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13951:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13951:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13971:2:11",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13944:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13944:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13944:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13994:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14005:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13990:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13990:18:11"
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14010:34:11",
																		"type": "",
																		"value": "ERC1155: burn amount exceeds bal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13983:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13983:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13983:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14065:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14076:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14061:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14061:18:11"
																	},
																	{
																		"hexValue": "616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14081:6:11",
																		"type": "",
																		"value": "ance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14054:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14054:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14054:34:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14097:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14109:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14120:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14105:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14105:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14097:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13881:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13895:4:11",
														"type": ""
													}
												],
												"src": "13730:400:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14309:223:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14326:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14337:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14319:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14319:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14319:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14360:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14371:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14356:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14356:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14376:2:11",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14349:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14349:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14349:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14399:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14410:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14395:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14395:18:11"
																	},
																	{
																		"hexValue": "455243313135353a206d696e7420746f20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14415:34:11",
																		"type": "",
																		"value": "ERC1155: mint to the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14388:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14388:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14388:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14470:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14481:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14466:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14466:18:11"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14486:3:11",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14459:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14459:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14459:31:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14499:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14511:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14522:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14507:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14507:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14499:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14286:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14300:4:11",
														"type": ""
													}
												],
												"src": "14135:397:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14711:231:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14728:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14739:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14721:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14721:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14721:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14762:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14773:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14758:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14758:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14778:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14751:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14751:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14751:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14801:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14812:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14797:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14797:18:11"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14817:34:11",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14790:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14790:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14790:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14872:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14883:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14868:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14868:18:11"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14888:11:11",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14861:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14861:39:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14861:39:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14909:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14921:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14932:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14917:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14917:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14909:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14688:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14702:4:11",
														"type": ""
													}
												],
												"src": "14537:405:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15076:119:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15086:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15098:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15109:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15094:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15094:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15086:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15128:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15139:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15121:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15121:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15121:25:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15166:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15177:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15162:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15162:18:11"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15182:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15155:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15155:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15155:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15037:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15048:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15056:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15067:4:11",
														"type": ""
													}
												],
												"src": "14947:248:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15531:496:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15541:29:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15559:3:11",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15564:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15555:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15555:11:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15568:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15551:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15551:19:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "15545:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15586:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15601:6:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15609:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15597:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15597:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15579:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15579:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15579:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15633:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15644:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15629:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15629:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "15653:6:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15661:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15649:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15649:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15622:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15622:43:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15622:43:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15685:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15696:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15681:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15681:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15701:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15674:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15674:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15674:31:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15714:71:11",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15757:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15769:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15780:3:11",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15765:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15765:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "15728:28:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15728:57:11"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "15718:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15805:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15816:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15801:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15801:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "15825:6:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15833:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15821:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15821:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15794:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15794:50:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15794:50:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15853:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "15896:6:11"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "15904:6:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "15867:28:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15867:44:11"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "15857:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15931:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15942:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15927:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15927:19:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "15952:6:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15960:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15948:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15948:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15920:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15920:51:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15920:51:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15980:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "16006:6:11"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "16014:6:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "15988:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15988:33:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15980:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15468:9:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15479:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15487:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15495:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15503:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15511:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15522:4:11",
														"type": ""
													}
												],
												"src": "15200:827:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16112:169:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16158:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16167:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16170:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16160:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16160:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16160:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16133:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16142:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16129:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16129:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16154:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "16125:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16125:32:11"
															},
															"nodeType": "YulIf",
															"src": "16122:52:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16183:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16202:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16196:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16196:16:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "16187:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16245:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "16221:23:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16221:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16221:30:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16260:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "16270:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "16260:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16078:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "16089:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16101:6:11",
														"type": ""
													}
												],
												"src": "16032:249:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16329:136:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16374:85:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16403:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16406:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16409:1:11",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "16388:14:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16388:23:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16388:23:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "16424:25:11",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16435:3:11",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "16446:1:11",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "16440:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16440:8:11"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "16431:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16431:18:11"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "16424:3:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "16345:14:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16345:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16363:1:11",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16342:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16342:23:11"
															},
															"nodeType": "YulIf",
															"src": "16339:120:11"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "16321:3:11",
														"type": ""
													}
												],
												"src": "16286:179:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16517:624:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16557:9:11",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "16559:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "16533:14:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16533:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16551:4:11",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "16530:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16530:26:11"
															},
															"nodeType": "YulIf",
															"src": "16527:39:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16575:21:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16593:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16587:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16587:9:11"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "16579:4:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16605:16:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16619:1:11",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "16615:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16615:6:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "16609:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16645:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16651:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "16658:14:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16658:16:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16676:2:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16654:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16654:25:11"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "16630:14:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16630:50:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16630:50:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16689:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16709:4:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16703:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16703:11:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "16693:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16723:26:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "16733:14:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16733:16:11"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "16727:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16758:28:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16768:18:11",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "16762:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16844:9:11",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "16846:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "16804:6:11"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "16812:2:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16801:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16801:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16824:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16832:4:11",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16820:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16820:17:11"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "16839:2:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16817:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16817:25:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "16798:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16798:45:11"
															},
															"nodeType": "YulIf",
															"src": "16795:58:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16862:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16877:4:11"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "16883:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16873:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16873:17:11"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "16866:3:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16899:24:11",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "16919:3:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16913:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16913:10:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16903:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16950:9:11",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "16952:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16938:6:11"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "16946:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16935:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16935:14:11"
															},
															"nodeType": "YulIf",
															"src": "16932:27:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17041:9:11",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "17043:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "16982:3:11"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "16987:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16978:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16978:16:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16996:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16974:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16974:27:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "17011:4:11"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "17017:14:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17017:16:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17007:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17007:27:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "17036:2:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17003:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17003:36:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16971:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16971:69:11"
															},
															"nodeType": "YulIf",
															"src": "16968:82:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "17079:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17093:6:11"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "17101:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17089:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17089:19:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17110:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17085:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17085:30:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "17059:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17059:57:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17059:57:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17125:10:11",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "17132:3:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "17125:3:11"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "16509:3:11",
														"type": ""
													}
												],
												"src": "16470:671:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17320:242:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17337:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17348:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17330:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17330:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17330:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17371:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17382:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17367:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17367:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17387:2:11",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17360:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17360:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17360:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17410:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17421:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17406:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17406:18:11"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17426:34:11",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17399:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17399:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17399:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17481:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17492:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17477:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17477:18:11"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17497:22:11",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17470:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17470:50:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17470:50:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17529:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17541:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17552:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17537:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17537:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17529:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17297:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17311:4:11",
														"type": ""
													}
												],
												"src": "17146:416:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17741:230:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17758:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17769:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17751:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17751:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17751:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17792:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17803:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17788:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17788:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17808:2:11",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17781:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17781:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17781:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17831:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17842:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17827:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17827:18:11"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17847:34:11",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17820:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17820:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17820:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17902:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17913:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17898:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17898:18:11"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17918:10:11",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17891:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17891:38:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17891:38:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17938:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17950:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17961:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17946:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17946:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17938:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17718:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17732:4:11",
														"type": ""
													}
												],
												"src": "17567:404:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18207:330:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18217:29:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18235:3:11",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18240:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "18231:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18231:11:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18244:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "18227:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18227:19:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "18221:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18262:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "18277:6:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "18285:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "18273:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18273:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18255:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18255:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18255:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18309:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18320:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18305:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18305:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "18329:6:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "18337:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "18325:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18325:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18298:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18298:43:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18298:43:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18361:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18372:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18357:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18357:18:11"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "18377:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18350:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18350:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18350:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18404:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18415:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18400:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18400:18:11"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "18420:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18393:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18393:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18393:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18447:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18458:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18443:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18443:19:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18464:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18436:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18436:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18436:32:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18477:54:11",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "18503:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18515:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18526:3:11",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18511:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18511:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "18485:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18485:46:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18477:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18144:9:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "18155:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "18163:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18171:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18179:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18187:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18198:4:11",
														"type": ""
													}
												],
												"src": "17976:561:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC1155: burn from the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC1155: burn amount exceeds bal\")\n        mstore(add(headStart, 96), \"ance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ff5760003560e01c80636b20c45411610097578063e3e55f0811610066578063e3e55f08146101f0578063e985e9c5146101f8578063f242432a14610234578063f5298aca1461024757600080fd5b80636b20c454146101ba5780636ecf11d7146101cd578063a22cb465146101d5578063d562e204146101e857600080fd5b80632eb2c2d6116100d35780632eb2c2d6146101755780633e4bee381461018a5780634e1273f4146101925780635b2725ed146101b257600080fd5b8062fdd58e1461010457806301ffc9a71461012a5780630e89341c1461014d57806313dc989f1461016d575b600080fd5b610117610112366004611165565b61025a565b6040519081526020015b60405180910390f35b61013d6101383660046111a8565b6102f1565b6040519015158152602001610121565b61016061015b3660046111cc565b610343565b6040516101219190611232565b610117600381565b610188610183366004611391565b6103d7565b005b610117600081565b6101a56101a036600461143b565b61046e565b6040516101219190611541565b610117600481565b6101886101c8366004611554565b610598565b6101886105e0565b6101886101e33660046115c8565b6106aa565b610117600281565b610117600181565b61013d610206366004611604565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610188610242366004611637565b6106b5565b61018861025536600461169c565b6106fa565b60006001600160a01b0383166102cb5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061032257506001600160e01b031982166303a24d0760e21b145b8061033d57506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060028054610352906116cf565b80601f016020809104026020016040519081016040528092919081815260200182805461037e906116cf565b80156103cb5780601f106103a0576101008083540402835291602001916103cb565b820191906000526020600020905b8154815290600101906020018083116103ae57829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103f357506103f38533610206565b61045a5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016102c2565b6104678585858585610743565b5050505050565b606081518351146104d35760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016102c2565b6000835167ffffffffffffffff8111156104ef576104ef611245565b604051908082528060200260200182016040528015610518578160200160208202803683370190505b50905060005b84518110156105905761056385828151811061053c5761053c611709565b602002602001015185838151811061055657610556611709565b602002602001015161025a565b82828151811061057557610575611709565b602090810291909101015261058981611735565b905061051e565b509392505050565b6001600160a01b0383163314806105b457506105b48333610206565b6105d05760405162461bcd60e51b81526004016102c29061174e565b6105db8383836108df565b505050565b604080516103e8808252617d20820190925260009160208201617d00803683375050604080516103e8808252617d208201909252929350600092915060208201617d008036833701905050905060005b6103e881101561068a578083828151811061064d5761064d611709565b602002602001018181525050600182828151811061066d5761066d611709565b60209081029190910101528061068281611735565b915050610630565b506106a633838360405180602001604052806000815250610a5b565b5050565b6106a6338383610be0565b6001600160a01b0385163314806106d157506106d18533610206565b6106ed5760405162461bcd60e51b81526004016102c29061174e565b6104678585858585610cc0565b6001600160a01b03831633148061071657506107168333610206565b6107325760405162461bcd60e51b81526004016102c29061174e565b6105db838383610de6565b3b151590565b81518351146107645760405162461bcd60e51b81526004016102c290611797565b6001600160a01b03841661078a5760405162461bcd60e51b81526004016102c2906117df565b3360005b84518110156108715760008582815181106107ab576107ab611709565b6020026020010151905060008583815181106107c9576107c9611709565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156108195760405162461bcd60e51b81526004016102c290611824565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061085690849061186e565b925050819055505050508061086a90611735565b905061078e565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516108c1929190611886565b60405180910390a46108d7818787878787610ee8565b505050505050565b6001600160a01b0383166109055760405162461bcd60e51b81526004016102c2906118b4565b80518251146109265760405162461bcd60e51b81526004016102c290611797565b604080516020810190915260009081905233905b83518110156109fc57600084828151811061095757610957611709565b60200260200101519050600084838151811061097557610975611709565b602090810291909101810151600084815280835260408082206001600160a01b038c1683529093529190912054909150818110156109c55760405162461bcd60e51b81526004016102c2906118f7565b6000928352602083815260408085206001600160a01b038b16865290915290922091039055806109f481611735565b91505061093a565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610a4d929190611886565b60405180910390a450505050565b6001600160a01b038416610abb5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016102c2565b8151835114610adc5760405162461bcd60e51b81526004016102c290611797565b3360005b8451811015610b7857838181518110610afb57610afb611709565b6020026020010151600080878481518110610b1857610b18611709565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b031681526020019081526020016000206000828254610b60919061186e565b90915550819050610b7081611735565b915050610ae0565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610bc9929190611886565b60405180910390a461046781600087878787610ee8565b816001600160a01b0316836001600160a01b031603610c535760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016102c2565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610ce65760405162461bcd60e51b81526004016102c2906117df565b33610cff818787610cf688611043565b61046788611043565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015610d405760405162461bcd60e51b81526004016102c290611824565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290610d7d90849061186e565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610ddd82888888888861108e565b50505050505050565b6001600160a01b038316610e0c5760405162461bcd60e51b81526004016102c2906118b4565b33610e3c81856000610e1d87611043565b610e2687611043565b5050604080516020810190915260009052505050565b6000838152602081815260408083206001600160a01b038816845290915290205482811015610e7d5760405162461bcd60e51b81526004016102c2906118f7565b6000848152602081815260408083206001600160a01b03898116808652918452828520888703905582518981529384018890529092908616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b6001600160a01b0384163b156108d75760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610f2c908990899088908890889060040161193b565b6020604051808303816000875af1925050508015610f67575060408051601f3d908101601f19168201909252610f6491810190611999565b60015b61101357610f736119b6565b806308c379a003610fac5750610f876119d2565b80610f925750610fae565b8060405162461bcd60e51b81526004016102c29190611232565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016102c2565b6001600160e01b0319811663bc197c8160e01b14610ddd5760405162461bcd60e51b81526004016102c290611a5c565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061107d5761107d611709565b602090810291909101015292915050565b6001600160a01b0384163b156108d75760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906110d29089908990889088908890600401611aa4565b6020604051808303816000875af192505050801561110d575060408051601f3d908101601f1916820190925261110a91810190611999565b60015b61111957610f736119b6565b6001600160e01b0319811663f23a6e6160e01b14610ddd5760405162461bcd60e51b81526004016102c290611a5c565b80356001600160a01b038116811461116057600080fd5b919050565b6000806040838503121561117857600080fd5b61118183611149565b946020939093013593505050565b6001600160e01b0319811681146111a557600080fd5b50565b6000602082840312156111ba57600080fd5b81356111c58161118f565b9392505050565b6000602082840312156111de57600080fd5b5035919050565b6000815180845260005b8181101561120b576020818501810151868301820152016111ef565b8181111561121d576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006111c560208301846111e5565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561128157611281611245565b6040525050565b600067ffffffffffffffff8211156112a2576112a2611245565b5060051b60200190565b600082601f8301126112bd57600080fd5b813560206112ca82611288565b6040516112d7828261125b565b83815260059390931b85018201928281019150868411156112f757600080fd5b8286015b8481101561131257803583529183019183016112fb565b509695505050505050565b600082601f83011261132e57600080fd5b813567ffffffffffffffff81111561134857611348611245565b60405161135f601f8301601f19166020018261125b565b81815284602083860101111561137457600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156113a957600080fd5b6113b286611149565b94506113c060208701611149565b9350604086013567ffffffffffffffff808211156113dd57600080fd5b6113e989838a016112ac565b945060608801359150808211156113ff57600080fd5b61140b89838a016112ac565b9350608088013591508082111561142157600080fd5b5061142e8882890161131d565b9150509295509295909350565b6000806040838503121561144e57600080fd5b823567ffffffffffffffff8082111561146657600080fd5b818501915085601f83011261147a57600080fd5b8135602061148782611288565b604051611494828261125b565b83815260059390931b85018201928281019150898411156114b457600080fd5b948201945b838610156114d9576114ca86611149565b825294820194908201906114b9565b965050860135925050808211156114ef57600080fd5b506114fc858286016112ac565b9150509250929050565b600081518084526020808501945080840160005b838110156115365781518752958201959082019060010161151a565b509495945050505050565b6020815260006111c56020830184611506565b60008060006060848603121561156957600080fd5b61157284611149565b9250602084013567ffffffffffffffff8082111561158f57600080fd5b61159b878388016112ac565b935060408601359150808211156115b157600080fd5b506115be868287016112ac565b9150509250925092565b600080604083850312156115db57600080fd5b6115e483611149565b9150602083013580151581146115f957600080fd5b809150509250929050565b6000806040838503121561161757600080fd5b61162083611149565b915061162e60208401611149565b90509250929050565b600080600080600060a0868803121561164f57600080fd5b61165886611149565b945061166660208701611149565b93506040860135925060608601359150608086013567ffffffffffffffff81111561169057600080fd5b61142e8882890161131d565b6000806000606084860312156116b157600080fd5b6116ba84611149565b95602085013595506040909401359392505050565b600181811c908216806116e357607f821691505b60208210810361170357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016117475761174761171f565b5060010190565b60208082526029908201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260408201526808185c1c1c9bdd995960ba1b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600082198211156118815761188161171f565b500190565b6040815260006118996040830185611506565b82810360208401526118ab8185611506565b95945050505050565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b6001600160a01b0386811682528516602082015260a06040820181905260009061196790830186611506565b82810360608401526119798186611506565b9050828103608084015261198d81856111e5565b98975050505050505050565b6000602082840312156119ab57600080fd5b81516111c58161118f565b600060033d11156119cf5760046000803e5060005160e01c5b90565b600060443d10156119e05790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611a1057505050505090565b8285019150815181811115611a285750505050505090565b843d8701016020828501011115611a425750505050505090565b611a516020828601018761125b565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611ade908301846111e5565b97965050505050505056fea2646970667358221220b401cc13d1361a3e5907fa95c4d349f085f14ef18ce881cc2b9056f470d8ee4f64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6B20C454 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE3E55F08 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE3E55F08 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x6ECF11D7 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xD562E204 EQ PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x3E4BEE38 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x5B2725ED EQ PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x13DC989F EQ PUSH2 0x16D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x117 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0x1165 JUMP JUMPDEST PUSH2 0x25A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0x11A8 JUMP JUMPDEST PUSH2 0x2F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH2 0x160 PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0x11CC JUMP JUMPDEST PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1232 JUMP JUMPDEST PUSH2 0x117 PUSH1 0x3 DUP2 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x1391 JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x117 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x143B JUMP JUMPDEST PUSH2 0x46E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1541 JUMP JUMPDEST PUSH2 0x117 PUSH1 0x4 DUP2 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1554 JUMP JUMPDEST PUSH2 0x598 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x5E0 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x15C8 JUMP JUMPDEST PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x117 PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH2 0x117 PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0x1637 JUMP JUMPDEST PUSH2 0x6B5 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x169C JUMP JUMPDEST PUSH2 0x6FA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x322 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x33D JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x352 SWAP1 PUSH2 0x16CF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37E SWAP1 PUSH2 0x16CF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3CB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3CB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x3F3 JUMPI POP PUSH2 0x3F3 DUP6 CALLER PUSH2 0x206 JUMP JUMPDEST PUSH2 0x45A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0x467 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x743 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4EF JUMPI PUSH2 0x4EF PUSH2 0x1245 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x518 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x590 JUMPI PUSH2 0x563 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x53C JUMPI PUSH2 0x53C PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x556 JUMPI PUSH2 0x556 PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x25A JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x575 JUMPI PUSH2 0x575 PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x589 DUP2 PUSH2 0x1735 JUMP JUMPDEST SWAP1 POP PUSH2 0x51E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x5B4 JUMPI POP PUSH2 0x5B4 DUP4 CALLER PUSH2 0x206 JUMP JUMPDEST PUSH2 0x5D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x174E JUMP JUMPDEST PUSH2 0x5DB DUP4 DUP4 DUP4 PUSH2 0x8DF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x3E8 DUP1 DUP3 MSTORE PUSH2 0x7D20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x20 DUP3 ADD PUSH2 0x7D00 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x3E8 DUP1 DUP3 MSTORE PUSH2 0x7D20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 POP PUSH1 0x20 DUP3 ADD PUSH2 0x7D00 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH2 0x3E8 DUP2 LT ISZERO PUSH2 0x68A JUMPI DUP1 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x64D JUMPI PUSH2 0x64D PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x66D JUMPI PUSH2 0x66D PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x682 DUP2 PUSH2 0x1735 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x630 JUMP JUMPDEST POP PUSH2 0x6A6 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA5B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6A6 CALLER DUP4 DUP4 PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x6D1 JUMPI POP PUSH2 0x6D1 DUP6 CALLER PUSH2 0x206 JUMP JUMPDEST PUSH2 0x6ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x174E JUMP JUMPDEST PUSH2 0x467 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x716 JUMPI POP PUSH2 0x716 DUP4 CALLER PUSH2 0x206 JUMP JUMPDEST PUSH2 0x732 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x174E JUMP JUMPDEST PUSH2 0x5DB DUP4 DUP4 DUP4 PUSH2 0xDE6 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x78A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x17DF JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x871 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7AB JUMPI PUSH2 0x7AB PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7C9 JUMPI PUSH2 0x7C9 PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x1824 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x856 SWAP1 DUP5 SWAP1 PUSH2 0x186E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x86A SWAP1 PUSH2 0x1735 JUMP JUMPDEST SWAP1 POP PUSH2 0x78E JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x8C1 SWAP3 SWAP2 SWAP1 PUSH2 0x1886 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x8D7 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEE8 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x905 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x926 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 MSTORE CALLER SWAP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x9FC JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x957 JUMPI PUSH2 0x957 PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x975 JUMPI PUSH2 0x975 PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x9C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x18F7 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP1 PUSH2 0x9F4 DUP2 PUSH2 0x1735 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x93A JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xA4D SWAP3 SWAP2 SWAP1 PUSH2 0x1886 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xABB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C2 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xADC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x1797 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xB78 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xAFB JUMPI PUSH2 0xAFB PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xB18 JUMPI PUSH2 0xB18 PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB60 SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0xB70 DUP2 PUSH2 0x1735 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAE0 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xBC9 SWAP3 SWAP2 SWAP1 PUSH2 0x1886 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x467 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEE8 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x17DF JUMP JUMPDEST CALLER PUSH2 0xCFF DUP2 DUP8 DUP8 PUSH2 0xCF6 DUP9 PUSH2 0x1043 JUMP JUMPDEST PUSH2 0x467 DUP9 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0xD40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x1824 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xD7D SWAP1 DUP5 SWAP1 PUSH2 0x186E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xDDD DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x108E JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST CALLER PUSH2 0xE3C DUP2 DUP6 PUSH1 0x0 PUSH2 0xE1D DUP8 PUSH2 0x1043 JUMP JUMPDEST PUSH2 0xE26 DUP8 PUSH2 0x1043 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xE7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x18F7 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP9 DUP8 SUB SWAP1 SSTORE DUP3 MLOAD DUP10 DUP2 MSTORE SWAP4 DUP5 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xF2C SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x193B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF67 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xF64 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1013 JUMPI PUSH2 0xF73 PUSH2 0x19B6 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xFAC JUMPI POP PUSH2 0xF87 PUSH2 0x19D2 JUMP JUMPDEST DUP1 PUSH2 0xF92 JUMPI POP PUSH2 0xFAE JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x1232 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xDDD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x107D JUMPI PUSH2 0x107D PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x10D2 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1AA4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x110D JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x110A SWAP2 DUP2 ADD SWAP1 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1119 JUMPI PUSH2 0xF73 PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xDDD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C2 SWAP1 PUSH2 0x1A5C JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1181 DUP4 PUSH2 0x1149 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x11A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11C5 DUP2 PUSH2 0x118F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x120B JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x11EF JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x121D JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x11C5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x11E5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1281 JUMPI PUSH2 0x1281 PUSH2 0x1245 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x12A2 JUMPI PUSH2 0x12A2 PUSH2 0x1245 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x12CA DUP3 PUSH2 0x1288 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D7 DUP3 DUP3 PUSH2 0x125B JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x12F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1312 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x12FB JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x132E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1348 JUMPI PUSH2 0x1348 PUSH2 0x1245 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135F PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x125B JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x13A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13B2 DUP7 PUSH2 0x1149 JUMP JUMPDEST SWAP5 POP PUSH2 0x13C0 PUSH1 0x20 DUP8 ADD PUSH2 0x1149 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x13DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E9 DUP10 DUP4 DUP11 ADD PUSH2 0x12AC JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x13FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140B DUP10 DUP4 DUP11 ADD PUSH2 0x12AC JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x142E DUP9 DUP3 DUP10 ADD PUSH2 0x131D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x144E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x147A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1487 DUP3 PUSH2 0x1288 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1494 DUP3 DUP3 PUSH2 0x125B JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x14B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x14D9 JUMPI PUSH2 0x14CA DUP7 PUSH2 0x1149 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x14B9 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x14EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14FC DUP6 DUP3 DUP7 ADD PUSH2 0x12AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1536 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x151A JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x11C5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1506 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1572 DUP5 PUSH2 0x1149 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x158F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x159B DUP8 DUP4 DUP9 ADD PUSH2 0x12AC JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x15B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15BE DUP7 DUP3 DUP8 ADD PUSH2 0x12AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15E4 DUP4 PUSH2 0x1149 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x15F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1617 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1620 DUP4 PUSH2 0x1149 JUMP JUMPDEST SWAP2 POP PUSH2 0x162E PUSH1 0x20 DUP5 ADD PUSH2 0x1149 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x164F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1658 DUP7 PUSH2 0x1149 JUMP JUMPDEST SWAP5 POP PUSH2 0x1666 PUSH1 0x20 DUP8 ADD PUSH2 0x1149 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x142E DUP9 DUP3 DUP10 ADD PUSH2 0x131D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16BA DUP5 PUSH2 0x1149 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x16E3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1703 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1747 JUMPI PUSH2 0x1747 PUSH2 0x171F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1881 JUMPI PUSH2 0x1881 PUSH2 0x171F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1899 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1506 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x18AB DUP2 DUP6 PUSH2 0x1506 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1967 SWAP1 DUP4 ADD DUP7 PUSH2 0x1506 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1979 DUP2 DUP7 PUSH2 0x1506 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x198D DUP2 DUP6 PUSH2 0x11E5 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x11C5 DUP2 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x19CF JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x19E0 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1A10 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1A28 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1A42 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1A51 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x125B JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1ADE SWAP1 DUP4 ADD DUP5 PUSH2 0x11E5 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 ADD 0xCC SGT 0xD1 CALLDATASIZE BYTE RETURNDATACOPY MSIZE SMOD STATICCALL SWAP6 0xC4 0xD3 0x49 CREATE DUP6 CALL 0x4E CALL DUP13 0xE8 DUP2 0xCC 0x2B SWAP1 JUMP DELEGATECALL PUSH17 0xD8EE4F64736F6C634300080D0033000000 ",
							"sourceMap": "297:892:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2170:228:1;;;;;;:::i;:::-;;:::i;:::-;;;597:25:11;;;585:2;570:18;2170:228:1;;;;;;;;1221:305;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:11;;1177:22;1159:41;;1147:2;1132:18;1221:305:1;1019:187:11;1925:103:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;478:33:0:-;;510:1;478:33;;4045:430:1;;;;;;:::i;:::-;;:::i;:::-;;351:32:0;;382:1;351:32;;2555:508:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;518:34:0:-;;551:1;518:34;;709:342:4;;;;;;:::i;:::-;;:::i;878:308:0:-;;;:::i;3131:153:1:-;;;;;;:::i;:::-;;:::i;431:40:0:-;;470:1;431:40;;390:34;;423:1;390:34;;3351:166:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3473:27:1;;;3450:4;3473:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3351:166;3584:389;;;;;;:::i;:::-;;:::i;393:310:4:-;;;;;;:::i;:::-;;:::i;2170:228:1:-;2256:7;-1:-1:-1;;;;;2283:21:1;;2275:77;;;;-1:-1:-1;;;2275:77:1;;9259:2:11;2275:77:1;;;9241:21:11;9298:2;9278:18;;;9271:30;9337:34;9317:18;;;9310:62;-1:-1:-1;;;9388:18:11;;;9381:41;9439:19;;2275:77:1;;;;;;;;;-1:-1:-1;2369:9:1;:13;;;;;;;;;;;-1:-1:-1;;;;;2369:22:1;;;;;;;;;;;;2170:228::o;1221:305::-;1323:4;-1:-1:-1;;;;;;1358:41:1;;-1:-1:-1;;;1358:41:1;;:109;;-1:-1:-1;;;;;;;1415:52:1;;-1:-1:-1;;;1415:52:1;1358:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:9;;;1483:36:1;1339:180;1221:305;-1:-1:-1;;1221:305:1:o;1925:103::-;1985:13;2017:4;2010:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1925:103;;;:::o;4045:430::-;-1:-1:-1;;;;;4270:20:1;;719:10:8;4270:20:1;;:60;;-1:-1:-1;4294:36:1;4311:4;719:10:8;3351:166:1;:::i;4294:36::-;4249:157;;;;-1:-1:-1;;;4249:157:1;;10056:2:11;4249:157:1;;;10038:21:11;10095:2;10075:18;;;10068:30;10134:34;10114:18;;;10107:62;-1:-1:-1;;;10185:18:11;;;10178:48;10243:19;;4249:157:1;9854:414:11;4249:157:1;4416:52;4439:4;4445:2;4449:3;4454:7;4463:4;4416:22;:52::i;:::-;4045:430;;;;;:::o;2555:508::-;2706:16;2765:3;:10;2746:8;:15;:29;2738:83;;;;-1:-1:-1;;;2738:83:1;;10475:2:11;2738:83:1;;;10457:21:11;10514:2;10494:18;;;10487:30;10553:34;10533:18;;;10526:62;-1:-1:-1;;;10604:18:11;;;10597:39;10653:19;;2738:83:1;10273:405:11;2738:83:1;2832:30;2879:8;:15;2865:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2865:30:1;;2832:63;;2911:9;2906:120;2930:8;:15;2926:1;:19;2906:120;;;2985:30;2995:8;3004:1;2995:11;;;;;;;;:::i;:::-;;;;;;;3008:3;3012:1;3008:6;;;;;;;;:::i;:::-;;;;;;;2985:9;:30::i;:::-;2966:13;2980:1;2966:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2947:3;;;:::i;:::-;;;2906:120;;;-1:-1:-1;3043:13:1;2555:508;-1:-1:-1;;;2555:508:1:o;709:342:4:-;-1:-1:-1;;;;;868:23:4;;719:10:8;868:23:4;;:66;;-1:-1:-1;895:39:4;912:7;719:10:8;3351:166:1;:::i;895:39:4:-;847:154;;;;-1:-1:-1;;;847:154:4;;;;;;;:::i;:::-;1012:32;1023:7;1032:3;1037:6;1012:10;:32::i;:::-;709:342;;;:::o;878:308:0:-;940:19;;;954:4;940:19;;;;;;;;;917:20;;940:19;;;;;;;;-1:-1:-1;;997:19:0;;;1011:4;997:19;;;;;;;;;917:42;;-1:-1:-1;970:24:0;;997:19;-1:-1:-1;997:19:0;;;;;;;;;;-1:-1:-1;997:19:0;970:46;;1032:9;1027:101;1051:4;1047:1;:8;1027:101;;;1086:1;1077:3;1081:1;1077:6;;;;;;;;:::i;:::-;;;;;;:10;;;;;1115:1;1102:7;1110:1;1102:10;;;;;;;;:::i;:::-;;;;;;;;;;:14;1057:3;;;;:::i;:::-;;;;1027:101;;;;1138:40;1149:10;1161:3;1166:7;1138:40;;;;;;;;;;;;:10;:40::i;:::-;906:280;;878:308::o;3131:153:1:-;3225:52;719:10:8;3258:8:1;3268;3225:18;:52::i;3584:389::-;-1:-1:-1;;;;;3784:20:1;;719:10:8;3784:20:1;;:60;;-1:-1:-1;3808:36:1;3825:4;719:10:8;3351:166:1;:::i;3808:36::-;3763:148;;;;-1:-1:-1;;;3763:148:1;;;;;;;:::i;:::-;3921:45;3939:4;3945:2;3949;3953:6;3961:4;3921:17;:45::i;393:310:4:-;-1:-1:-1;;;;;527:23:4;;719:10:8;527:23:4;;:66;;-1:-1:-1;554:39:4;571:7;719:10:8;3351:166:1;:::i;554:39:4:-;506:154;;;;-1:-1:-1;;;506:154:4;;;;;;;:::i;:::-;671:25;677:7;686:2;690:5;671;:25::i;771:377:7:-;1087:20;1133:8;;;771:377::o;6068:1045:1:-;6288:7;:14;6274:3;:10;:28;6266:81;;;;-1:-1:-1;;;6266:81:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;6365:16:1;;6357:66;;;;-1:-1:-1;;;6357:66:1;;;;;;;:::i;:::-;719:10:8;6434:16:1;6547:411;6571:3;:10;6567:1;:14;6547:411;;;6602:10;6615:3;6619:1;6615:6;;;;;;;;:::i;:::-;;;;;;;6602:19;;6635:14;6652:7;6660:1;6652:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6677:19;6699:13;;;;;;;;;;-1:-1:-1;;;;;6699:19:1;;;;;;;;;;;;6652:10;;-1:-1:-1;6740:21:1;;;;6732:76;;;;-1:-1:-1;;;6732:76:1;;;;;;;:::i;:::-;6850:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6850:19:1;;;;;;;;;;6872:20;;;6850:42;;6920:17;;;;;;;:27;;6872:20;;6850:9;6920:27;;6872:20;;6920:27;:::i;:::-;;;;;;;;6588:370;;;6583:3;;;;:::i;:::-;;;6547:411;;;;7003:2;-1:-1:-1;;;;;6973:47:1;6997:4;-1:-1:-1;;;;;6973:47:1;6987:8;-1:-1:-1;;;;;6973:47:1;;7007:3;7012:7;6973:47;;;;;;;:::i;:::-;;;;;;;;7031:75;7067:8;7077:4;7083:2;7087:3;7092:7;7101:4;7031:35;:75::i;:::-;6256:857;6068:1045;;;;;:::o;11072:867::-;-1:-1:-1;;;;;11219:18:1;;11211:66;;;;-1:-1:-1;;;11211:66:1;;;;;;;:::i;:::-;11309:7;:14;11295:3;:10;:28;11287:81;;;;-1:-1:-1;;;11287:81:1;;;;;;;:::i;:::-;11421:66;;;;;;;;;11379:16;11421:66;;;;719:10:8;;11498:364:1;11522:3;:10;11518:1;:14;11498:364;;;11553:10;11566:3;11570:1;11566:6;;;;;;;;:::i;:::-;;;;;;;11553:19;;11586:14;11603:7;11611:1;11603:10;;;;;;;;:::i;:::-;;;;;;;;;;;;11628:19;11650:13;;;;;;;;;;-1:-1:-1;;;;;11650:19:1;;;;;;;;;;;;11603:10;;-1:-1:-1;11691:21:1;;;;11683:70;;;;-1:-1:-1;;;11683:70:1;;;;;;;:::i;:::-;11795:9;:13;;;;;;;;;;;-1:-1:-1;;;;;11795:19:1;;;;;;;;;;11817:20;;11795:42;;11534:3;;;;:::i;:::-;;;;11498:364;;;;11915:1;-1:-1:-1;;;;;11877:55:1;11901:4;-1:-1:-1;;;;;11877:55:1;11891:8;-1:-1:-1;;;;;11877:55:1;;11919:3;11924:7;11877:55;;;;;;;:::i;:::-;;;;;;;;11201:738;11072:867;;;:::o;9293:715::-;-1:-1:-1;;;;;9465:16:1;;9457:62;;;;-1:-1:-1;;;9457:62:1;;14337:2:11;9457:62:1;;;14319:21:11;14376:2;14356:18;;;14349:30;14415:34;14395:18;;;14388:62;-1:-1:-1;;;14466:18:11;;;14459:31;14507:19;;9457:62:1;14135:397:11;9457:62:1;9551:7;:14;9537:3;:10;:28;9529:81;;;;-1:-1:-1;;;9529:81:1;;;;;;;:::i;:::-;719:10:8;9621:16:1;9740:101;9764:3;:10;9760:1;:14;9740:101;;;9820:7;9828:1;9820:10;;;;;;;;:::i;:::-;;;;;;;9795:9;:17;9805:3;9809:1;9805:6;;;;;;;;:::i;:::-;;;;;;;9795:17;;;;;;;;;;;:21;9813:2;-1:-1:-1;;;;;9795:21:1;-1:-1:-1;;;;;9795:21:1;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;9776:3:1;;-1:-1:-1;9776:3:1;;;:::i;:::-;;;;9740:101;;;;9892:2;-1:-1:-1;;;;;9856:53:1;9888:1;-1:-1:-1;;;;;9856:53:1;9870:8;-1:-1:-1;;;;;9856:53:1;;9896:3;9901:7;9856:53;;;;;;;:::i;:::-;;;;;;;;9920:81;9956:8;9974:1;9978:2;9982:3;9987:7;9996:4;9920:35;:81::i;12074:323::-;12224:8;-1:-1:-1;;;;;12215:17:1;:5;-1:-1:-1;;;;;12215:17:1;;12207:71;;;;-1:-1:-1;;;12207:71:1;;14739:2:11;12207:71:1;;;14721:21:11;14778:2;14758:18;;;14751:30;14817:34;14797:18;;;14790:62;-1:-1:-1;;;14868:18:11;;;14861:39;14917:19;;12207:71:1;14537:405:11;12207:71:1;-1:-1:-1;;;;;12288:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12288:46:1;;;;;;;;;;12349:41;;1159::11;;;12349::1;;1132:18:11;12349:41:1;;;;;;;12074:323;;;:::o;4925:797::-;-1:-1:-1;;;;;5106:16:1;;5098:66;;;;-1:-1:-1;;;5098:66:1;;;;;;;:::i;:::-;719:10:8;5217:96:1;719:10:8;5248:4:1;5254:2;5258:21;5276:2;5258:17;:21::i;:::-;5281:25;5299:6;5281:17;:25::i;5217:96::-;5324:19;5346:13;;;;;;;;;;;-1:-1:-1;;;;;5346:19:1;;;;;;;;;;5383:21;;;;5375:76;;;;-1:-1:-1;;;5375:76:1;;;;;;;:::i;:::-;5485:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5485:19:1;;;;;;;;;;5507:20;;;5485:42;;5547:17;;;;;;;:27;;5507:20;;5485:9;5547:27;;5507:20;;5547:27;:::i;:::-;;;;-1:-1:-1;;5590:46:1;;;15121:25:11;;;15177:2;15162:18;;15155:34;;;-1:-1:-1;;;;;5590:46:1;;;;;;;;;;;;;;15094:18:11;5590:46:1;;;;;;;5647:68;5678:8;5688:4;5694:2;5698;5702:6;5710:4;5647:30;:68::i;:::-;5088:634;;4925:797;;;;;:::o;10248:630::-;-1:-1:-1;;;;;10370:18:1;;10362:66;;;;-1:-1:-1;;;10362:66:1;;;;;;;:::i;:::-;719:10:8;10481:102:1;719:10:8;10512:4:1;10439:16;10530:21;10548:2;10530:17;:21::i;:::-;10553:25;10571:6;10553:17;:25::i;:::-;-1:-1:-1;;10481:102:1;;;;;;;;;-1:-1:-1;10481:102:1;;-1:-1:-1;;;6068:1045:1;10481:102;10594:19;10616:13;;;;;;;;;;;-1:-1:-1;;;;;10616:19:1;;;;;;;;;;10653:21;;;;10645:70;;;;-1:-1:-1;;;10645:70:1;;;;;;;:::i;:::-;10749:9;:13;;;;;;;;;;;-1:-1:-1;;;;;10749:19:1;;;;;;;;;;;;10771:20;;;10749:42;;10817:54;;15121:25:11;;;15162:18;;;15155:34;;;10749:19:1;;10817:54;;;;;;15094:18:11;10817:54:1;;;;;;;10352:526;;10248:630;;;:::o;14282:792::-;-1:-1:-1;;;;;14514:13:1;;1087:20:7;1133:8;14510:558:1;;14549:79;;-1:-1:-1;;;14549:79:1;;-1:-1:-1;;;;;14549:43:1;;;;;:79;;14593:8;;14603:4;;14609:3;;14614:7;;14623:4;;14549:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14549:79:1;;;;;;;;-1:-1:-1;;14549:79:1;;;;;;;;;;;;:::i;:::-;;;14545:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;14934:6;14927:14;;-1:-1:-1;;;14927:14:1;;;;;;;;:::i;14545:513::-;;;14981:62;;-1:-1:-1;;;14981:62:1;;17348:2:11;14981:62:1;;;17330:21:11;17387:2;17367:18;;;17360:30;17426:34;17406:18;;;17399:62;-1:-1:-1;;;17477:18:11;;;17470:50;17537:19;;14981:62:1;17146:416:11;14545:513:1;-1:-1:-1;;;;;;14707:60:1;;-1:-1:-1;;;14707:60:1;14703:157;;14791:50;;-1:-1:-1;;;14791:50:1;;;;;;;:::i;15080:193::-;15199:16;;;15213:1;15199:16;;;;;;;;;15146;;15174:22;;15199:16;;;;;;;;;;;;-1:-1:-1;15199:16:1;15174:41;;15236:7;15225:5;15231:1;15225:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;15261:5;15080:193;-1:-1:-1;;15080:193:1:o;13551:725::-;-1:-1:-1;;;;;13758:13:1;;1087:20:7;1133:8;13754:516:1;;13793:72;;-1:-1:-1;;;13793:72:1;;-1:-1:-1;;;;;13793:38:1;;;;;:72;;13832:8;;13842:4;;13848:2;;13852:6;;13860:4;;13793:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13793:72:1;;;;;;;;-1:-1:-1;;13793:72:1;;;;;;;;;;;;:::i;:::-;;;13789:471;;;;:::i;:::-;-1:-1:-1;;;;;;13914:55:1;;-1:-1:-1;;;13914:55:1;13910:152;;13993:50;;-1:-1:-1;;;13993:50:1;;;;;;;:::i;14:173:11:-;82:20;;-1:-1:-1;;;;;131:31:11;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:11:o;633:131::-;-1:-1:-1;;;;;;707:32:11;;697:43;;687:71;;754:1;751;744:12;687:71;633:131;:::o;769:245::-;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:11:o;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:11;;1211:180;-1:-1:-1;1211:180:11:o;1396:472::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1528:1;1538:162;1552:6;1549:1;1546:13;1538:162;;;1614:4;1670:13;;;1666:22;;1660:29;1642:11;;;1638:20;;1631:59;1567:12;1538:162;;;1718:6;1715:1;1712:13;1709:87;;;1784:1;1777:4;1768:6;1763:3;1759:16;1755:27;1748:38;1709:87;-1:-1:-1;1850:2:11;1829:15;-1:-1:-1;;1825:29:11;1816:39;;;;1857:4;1812:50;;1396:472;-1:-1:-1;;1396:472:11:o;1873:220::-;2022:2;2011:9;2004:21;1985:4;2042:45;2083:2;2072:9;2068:18;2060:6;2042:45;:::i;2098:127::-;2159:10;2154:3;2150:20;2147:1;2140:31;2190:4;2187:1;2180:15;2214:4;2211:1;2204:15;2230:249;2340:2;2321:13;;-1:-1:-1;;2317:27:11;2305:40;;2375:18;2360:34;;2396:22;;;2357:62;2354:88;;;2422:18;;:::i;:::-;2458:2;2451:22;-1:-1:-1;;2230:249:11:o;2484:183::-;2544:4;2577:18;2569:6;2566:30;2563:56;;;2599:18;;:::i;:::-;-1:-1:-1;2644:1:11;2640:14;2656:4;2636:25;;2484:183::o;2672:724::-;2726:5;2779:3;2772:4;2764:6;2760:17;2756:27;2746:55;;2797:1;2794;2787:12;2746:55;2833:6;2820:20;2859:4;2882:43;2922:2;2882:43;:::i;:::-;2954:2;2948:9;2966:31;2994:2;2986:6;2966:31;:::i;:::-;3032:18;;;3124:1;3120:10;;;;3108:23;;3104:32;;;3066:15;;;;-1:-1:-1;3148:15:11;;;3145:35;;;3176:1;3173;3166:12;3145:35;3212:2;3204:6;3200:15;3224:142;3240:6;3235:3;3232:15;3224:142;;;3306:17;;3294:30;;3344:12;;;;3257;;3224:142;;;-1:-1:-1;3384:6:11;2672:724;-1:-1:-1;;;;;;2672:724:11:o;3401:555::-;3443:5;3496:3;3489:4;3481:6;3477:17;3473:27;3463:55;;3514:1;3511;3504:12;3463:55;3550:6;3537:20;3576:18;3572:2;3569:26;3566:52;;;3598:18;;:::i;:::-;3647:2;3641:9;3659:67;3714:2;3695:13;;-1:-1:-1;;3691:27:11;3720:4;3687:38;3641:9;3659:67;:::i;:::-;3750:2;3742:6;3735:18;3796:3;3789:4;3784:2;3776:6;3772:15;3768:26;3765:35;3762:55;;;3813:1;3810;3803:12;3762:55;3877:2;3870:4;3862:6;3858:17;3851:4;3843:6;3839:17;3826:54;3924:1;3900:15;;;3917:4;3896:26;3889:37;;;;3904:6;3401:555;-1:-1:-1;;;3401:555:11:o;3961:943::-;4115:6;4123;4131;4139;4147;4200:3;4188:9;4179:7;4175:23;4171:33;4168:53;;;4217:1;4214;4207:12;4168:53;4240:29;4259:9;4240:29;:::i;:::-;4230:39;;4288:38;4322:2;4311:9;4307:18;4288:38;:::i;:::-;4278:48;;4377:2;4366:9;4362:18;4349:32;4400:18;4441:2;4433:6;4430:14;4427:34;;;4457:1;4454;4447:12;4427:34;4480:61;4533:7;4524:6;4513:9;4509:22;4480:61;:::i;:::-;4470:71;;4594:2;4583:9;4579:18;4566:32;4550:48;;4623:2;4613:8;4610:16;4607:36;;;4639:1;4636;4629:12;4607:36;4662:63;4717:7;4706:8;4695:9;4691:24;4662:63;:::i;:::-;4652:73;;4778:3;4767:9;4763:19;4750:33;4734:49;;4808:2;4798:8;4795:16;4792:36;;;4824:1;4821;4814:12;4792:36;;4847:51;4890:7;4879:8;4868:9;4864:24;4847:51;:::i;:::-;4837:61;;;3961:943;;;;;;;;:::o;4909:1208::-;5027:6;5035;5088:2;5076:9;5067:7;5063:23;5059:32;5056:52;;;5104:1;5101;5094:12;5056:52;5144:9;5131:23;5173:18;5214:2;5206:6;5203:14;5200:34;;;5230:1;5227;5220:12;5200:34;5268:6;5257:9;5253:22;5243:32;;5313:7;5306:4;5302:2;5298:13;5294:27;5284:55;;5335:1;5332;5325:12;5284:55;5371:2;5358:16;5393:4;5416:43;5456:2;5416:43;:::i;:::-;5488:2;5482:9;5500:31;5528:2;5520:6;5500:31;:::i;:::-;5566:18;;;5654:1;5650:10;;;;5642:19;;5638:28;;;5600:15;;;;-1:-1:-1;5678:19:11;;;5675:39;;;5710:1;5707;5700:12;5675:39;5734:11;;;;5754:148;5770:6;5765:3;5762:15;5754:148;;;5836:23;5855:3;5836:23;:::i;:::-;5824:36;;5787:12;;;;5880;;;;5754:148;;;5921:6;-1:-1:-1;;5965:18:11;;5952:32;;-1:-1:-1;;5996:16:11;;;5993:36;;;6025:1;6022;6015:12;5993:36;;6048:63;6103:7;6092:8;6081:9;6077:24;6048:63;:::i;:::-;6038:73;;;4909:1208;;;;;:::o;6122:435::-;6175:3;6213:5;6207:12;6240:6;6235:3;6228:19;6266:4;6295:2;6290:3;6286:12;6279:19;;6332:2;6325:5;6321:14;6353:1;6363:169;6377:6;6374:1;6371:13;6363:169;;;6438:13;;6426:26;;6472:12;;;;6507:15;;;;6399:1;6392:9;6363:169;;;-1:-1:-1;6548:3:11;;6122:435;-1:-1:-1;;;;;6122:435:11:o;6562:261::-;6741:2;6730:9;6723:21;6704:4;6761:56;6813:2;6802:9;6798:18;6790:6;6761:56;:::i;6828:669::-;6955:6;6963;6971;7024:2;7012:9;7003:7;6999:23;6995:32;6992:52;;;7040:1;7037;7030:12;6992:52;7063:29;7082:9;7063:29;:::i;:::-;7053:39;;7143:2;7132:9;7128:18;7115:32;7166:18;7207:2;7199:6;7196:14;7193:34;;;7223:1;7220;7213:12;7193:34;7246:61;7299:7;7290:6;7279:9;7275:22;7246:61;:::i;:::-;7236:71;;7360:2;7349:9;7345:18;7332:32;7316:48;;7389:2;7379:8;7376:16;7373:36;;;7405:1;7402;7395:12;7373:36;;7428:63;7483:7;7472:8;7461:9;7457:24;7428:63;:::i;:::-;7418:73;;;6828:669;;;;;:::o;7502:347::-;7567:6;7575;7628:2;7616:9;7607:7;7603:23;7599:32;7596:52;;;7644:1;7641;7634:12;7596:52;7667:29;7686:9;7667:29;:::i;:::-;7657:39;;7746:2;7735:9;7731:18;7718:32;7793:5;7786:13;7779:21;7772:5;7769:32;7759:60;;7815:1;7812;7805:12;7759:60;7838:5;7828:15;;;7502:347;;;;;:::o;7854:260::-;7922:6;7930;7983:2;7971:9;7962:7;7958:23;7954:32;7951:52;;;7999:1;7996;7989:12;7951:52;8022:29;8041:9;8022:29;:::i;:::-;8012:39;;8070:38;8104:2;8093:9;8089:18;8070:38;:::i;:::-;8060:48;;7854:260;;;;;:::o;8119:606::-;8223:6;8231;8239;8247;8255;8308:3;8296:9;8287:7;8283:23;8279:33;8276:53;;;8325:1;8322;8315:12;8276:53;8348:29;8367:9;8348:29;:::i;:::-;8338:39;;8396:38;8430:2;8419:9;8415:18;8396:38;:::i;:::-;8386:48;;8481:2;8470:9;8466:18;8453:32;8443:42;;8532:2;8521:9;8517:18;8504:32;8494:42;;8587:3;8576:9;8572:19;8559:33;8615:18;8607:6;8604:30;8601:50;;;8647:1;8644;8637:12;8601:50;8670:49;8711:7;8702:6;8691:9;8687:22;8670:49;:::i;8730:322::-;8807:6;8815;8823;8876:2;8864:9;8855:7;8851:23;8847:32;8844:52;;;8892:1;8889;8882:12;8844:52;8915:29;8934:9;8915:29;:::i;:::-;8905:39;8991:2;8976:18;;8963:32;;-1:-1:-1;9042:2:11;9027:18;;;9014:32;;8730:322;-1:-1:-1;;;8730:322:11:o;9469:380::-;9548:1;9544:12;;;;9591;;;9612:61;;9666:4;9658:6;9654:17;9644:27;;9612:61;9719:2;9711:6;9708:14;9688:18;9685:38;9682:161;;9765:10;9760:3;9756:20;9753:1;9746:31;9800:4;9797:1;9790:15;9828:4;9825:1;9818:15;9682:161;;9469:380;;;:::o;10683:127::-;10744:10;10739:3;10735:20;10732:1;10725:31;10775:4;10772:1;10765:15;10799:4;10796:1;10789:15;10815:127;10876:10;10871:3;10867:20;10864:1;10857:31;10907:4;10904:1;10897:15;10931:4;10928:1;10921:15;10947:135;10986:3;11007:17;;;11004:43;;11027:18;;:::i;:::-;-1:-1:-1;11074:1:11;11063:13;;10947:135::o;11087:405::-;11289:2;11271:21;;;11328:2;11308:18;;;11301:30;11367:34;11362:2;11347:18;;11340:62;-1:-1:-1;;;11433:2:11;11418:18;;11411:39;11482:3;11467:19;;11087:405::o;11497:404::-;11699:2;11681:21;;;11738:2;11718:18;;;11711:30;11777:34;11772:2;11757:18;;11750:62;-1:-1:-1;;;11843:2:11;11828:18;;11821:38;11891:3;11876:19;;11497:404::o;11906:401::-;12108:2;12090:21;;;12147:2;12127:18;;;12120:30;12186:34;12181:2;12166:18;;12159:62;-1:-1:-1;;;12252:2:11;12237:18;;12230:35;12297:3;12282:19;;11906:401::o;12312:406::-;12514:2;12496:21;;;12553:2;12533:18;;;12526:30;12592:34;12587:2;12572:18;;12565:62;-1:-1:-1;;;12658:2:11;12643:18;;12636:40;12708:3;12693:19;;12312:406::o;12723:128::-;12763:3;12794:1;12790:6;12787:1;12784:13;12781:39;;;12800:18;;:::i;:::-;-1:-1:-1;12836:9:11;;12723:128::o;12856:465::-;13113:2;13102:9;13095:21;13076:4;13139:56;13191:2;13180:9;13176:18;13168:6;13139:56;:::i;:::-;13243:9;13235:6;13231:22;13226:2;13215:9;13211:18;13204:50;13271:44;13308:6;13300;13271:44;:::i;:::-;13263:52;12856:465;-1:-1:-1;;;;;12856:465:11:o;13326:399::-;13528:2;13510:21;;;13567:2;13547:18;;;13540:30;13606:34;13601:2;13586:18;;13579:62;-1:-1:-1;;;13672:2:11;13657:18;;13650:33;13715:3;13700:19;;13326:399::o;13730:400::-;13932:2;13914:21;;;13971:2;13951:18;;;13944:30;14010:34;14005:2;13990:18;;13983:62;-1:-1:-1;;;14076:2:11;14061:18;;14054:34;14120:3;14105:19;;13730:400::o;15200:827::-;-1:-1:-1;;;;;15597:15:11;;;15579:34;;15649:15;;15644:2;15629:18;;15622:43;15559:3;15696:2;15681:18;;15674:31;;;15522:4;;15728:57;;15765:19;;15757:6;15728:57;:::i;:::-;15833:9;15825:6;15821:22;15816:2;15805:9;15801:18;15794:50;15867:44;15904:6;15896;15867:44;:::i;:::-;15853:58;;15960:9;15952:6;15948:22;15942:3;15931:9;15927:19;15920:51;15988:33;16014:6;16006;15988:33;:::i;:::-;15980:41;15200:827;-1:-1:-1;;;;;;;;15200:827:11:o;16032:249::-;16101:6;16154:2;16142:9;16133:7;16129:23;16125:32;16122:52;;;16170:1;16167;16160:12;16122:52;16202:9;16196:16;16221:30;16245:5;16221:30;:::i;16286:179::-;16321:3;16363:1;16345:16;16342:23;16339:120;;;16409:1;16406;16403;16388:23;-1:-1:-1;16446:1:11;16440:8;16435:3;16431:18;16339:120;16286:179;:::o;16470:671::-;16509:3;16551:4;16533:16;16530:26;16527:39;;;16470:671;:::o;16527:39::-;16593:2;16587:9;-1:-1:-1;;16658:16:11;16654:25;;16651:1;16587:9;16630:50;16709:4;16703:11;16733:16;16768:18;16839:2;16832:4;16824:6;16820:17;16817:25;16812:2;16804:6;16801:14;16798:45;16795:58;;;16846:5;;;;;16470:671;:::o;16795:58::-;16883:6;16877:4;16873:17;16862:28;;16919:3;16913:10;16946:2;16938:6;16935:14;16932:27;;;16952:5;;;;;;16470:671;:::o;16932:27::-;17036:2;17017:16;17011:4;17007:27;17003:36;16996:4;16987:6;16982:3;16978:16;16974:27;16971:69;16968:82;;;17043:5;;;;;;16470:671;:::o;16968:82::-;17059:57;17110:4;17101:6;17093;17089:19;17085:30;17079:4;17059:57;:::i;:::-;-1:-1:-1;17132:3:11;;16470:671;-1:-1:-1;;;;;16470:671:11:o;17567:404::-;17769:2;17751:21;;;17808:2;17788:18;;;17781:30;17847:34;17842:2;17827:18;;17820:62;-1:-1:-1;;;17913:2:11;17898:18;;17891:38;17961:3;17946:19;;17567:404::o;17976:561::-;-1:-1:-1;;;;;18273:15:11;;;18255:34;;18325:15;;18320:2;18305:18;;18298:43;18372:2;18357:18;;18350:34;;;18415:2;18400:18;;18393:34;;;18235:3;18458;18443:19;;18436:32;;;18198:4;;18485:46;;18511:19;;18503:6;18485:46;:::i;:::-;18477:54;17976:561;-1:-1:-1;;;;;;;17976:561:11:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1388600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"GOLD()": "229",
								"SHIELD()": "273",
								"SILVER()": "206",
								"SWORD()": "274",
								"THORS_HAMMER()": "273",
								"balanceOf(address,uint256)": "2695",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"burn(address,uint256,uint256)": "infinite",
								"burnBatch(address,uint256[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mintBatch()": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26750",
								"supportsInterface(bytes4)": "567",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 561,
									"end": 870,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 561,
									"end": 870,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 561,
									"end": 870,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 561,
									"end": 870,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 561,
									"end": 870,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 561,
									"end": 870,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 561,
									"end": 870,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 561,
									"end": 870,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 561,
									"end": 870,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 561,
									"end": 870,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 561,
									"end": 870,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH data",
									"source": 1,
									"value": "9BE393994F02169C966A8F7D954E5F555F9D6FDEA83C170362FF79CF2C5CE4F1"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1142,
									"end": 1146,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1134,
									"end": 1141,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 637,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 643,
									"end": 653,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 382,
									"end": 383,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 661,
									"end": 667,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 637,
									"end": 672,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 637,
									"end": 672,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 637,
									"end": 672,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 637,
									"end": 672,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 637,
									"end": 672,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 637,
									"end": 672,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 637,
									"end": 672,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 637,
									"end": 672,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 637,
									"end": 672,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 637,
									"end": 672,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 637,
									"end": 672,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 637,
									"end": 642,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 637,
									"end": 642,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 637,
									"end": 642,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 637,
									"end": 672,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 637,
									"end": 672,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 637,
									"end": 672,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 637,
									"end": 672,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 683,
									"end": 720,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 689,
									"end": 699,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 423,
									"end": 424,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 709,
									"end": 715,
									"name": "PUSH",
									"source": 0,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 683,
									"end": 720,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 683,
									"end": 720,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 683,
									"end": 720,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 683,
									"end": 720,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 683,
									"end": 720,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 683,
									"end": 720,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 683,
									"end": 720,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 683,
									"end": 720,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 683,
									"end": 720,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 683,
									"end": 720,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 683,
									"end": 720,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 683,
									"end": 720,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 683,
									"end": 688,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 683,
									"end": 688,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 683,
									"end": 688,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 683,
									"end": 720,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 683,
									"end": 720,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 683,
									"end": 720,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 683,
									"end": 720,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 683,
									"end": 720,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 731,
									"end": 769,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 737,
									"end": 747,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 470,
									"end": 471,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 763,
									"end": 764,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 731,
									"end": 769,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 731,
									"end": 769,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 731,
									"end": 769,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 731,
									"end": 769,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 731,
									"end": 769,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 731,
									"end": 769,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 731,
									"end": 769,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 731,
									"end": 769,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 731,
									"end": 769,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 731,
									"end": 769,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 731,
									"end": 769,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 731,
									"end": 769,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 731,
									"end": 736,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 731,
									"end": 736,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 731,
									"end": 736,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 731,
									"end": 769,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 731,
									"end": 769,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 731,
									"end": 769,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 731,
									"end": 769,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 731,
									"end": 769,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 780,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 786,
									"end": 796,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 510,
									"end": 511,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 805,
									"end": 810,
									"name": "PUSH",
									"source": 0,
									"value": "3B9ACA00"
								},
								{
									"begin": 780,
									"end": 815,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 780,
									"end": 815,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 780,
									"end": 815,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 780,
									"end": 815,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 780,
									"end": 815,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 780,
									"end": 815,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 780,
									"end": 815,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 780,
									"end": 815,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 780,
									"end": 815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 780,
									"end": 815,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 780,
									"end": 815,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 780,
									"end": 815,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 780,
									"end": 785,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 780,
									"end": 785,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 780,
									"end": 785,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 780,
									"end": 815,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 780,
									"end": 815,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 780,
									"end": 815,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 780,
									"end": 815,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 780,
									"end": 815,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 826,
									"end": 862,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 832,
									"end": 842,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 551,
									"end": 552,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 852,
									"end": 857,
									"name": "PUSH",
									"source": 0,
									"value": "3B9ACA00"
								},
								{
									"begin": 826,
									"end": 862,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 826,
									"end": 862,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 826,
									"end": 862,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 826,
									"end": 862,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 826,
									"end": 862,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 826,
									"end": 862,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 826,
									"end": 862,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 826,
									"end": 862,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 826,
									"end": 862,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 862,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 826,
									"end": 862,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 826,
									"end": 862,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 826,
									"end": 831,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 826,
									"end": 831,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 826,
									"end": 831,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 826,
									"end": 862,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 826,
									"end": 862,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 826,
									"end": 862,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 826,
									"end": 862,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 826,
									"end": 862,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "85"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8006,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8002,
									"end": 8006,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 8395,
									"end": 8948,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 8395,
									"end": 8948,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8542,
									"end": 8558,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8542,
									"end": 8558,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 216,
									"end": 218,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 198,
									"end": 219,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 255,
									"end": 257,
									"name": "PUSH",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 235,
									"end": 253,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 228,
									"end": 258,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 294,
									"end": 328,
									"name": "PUSH",
									"source": 11,
									"value": "455243313135353A206D696E7420746F20746865207A65726F20616464726573"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "PUSH",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 274,
									"end": 292,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 267,
									"end": 329,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 345,
									"end": 363,
									"name": "PUSH",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 345,
									"end": 363,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 345,
									"end": 363,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 338,
									"end": 369,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 386,
									"end": 405,
									"name": "PUSH",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 386,
									"end": 405,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 8534,
									"end": 8596,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 8649,
									"end": 8751,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8607,
									"end": 8623,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8692,
									"end": 8694,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 8696,
									"end": 8717,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 8714,
									"end": 8716,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 8696,
									"end": 8713,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 8696,
									"end": 8717,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 8696,
									"end": 8717,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 8696,
									"end": 8717,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8719,
									"end": 8744,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 8737,
									"end": 8743,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 8719,
									"end": 8736,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 8719,
									"end": 8744,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 8719,
									"end": 8744,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 8719,
									"end": 8744,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8649,
									"end": 8751,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 8649,
									"end": 8751,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8771,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8762,
									"end": 8775,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8775,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8775,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8775,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8762,
									"end": 8775,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8775,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8775,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8775,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8762,
									"end": 8775,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8775,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8775,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8762,
									"end": 8779,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8779,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8779,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8779,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8779,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8779,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8779,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8789,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8789,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 8783,
									"end": 8789,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 8783,
									"end": 8789,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8771,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8789,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 8762,
									"end": 8789,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8783,
									"end": 8789,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8783,
									"end": 8789,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8789,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 8762,
									"end": 8789,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 8762,
									"end": 8789,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 8762,
									"end": 8789,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8789,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8789,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8762,
									"end": 8789,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 820,
									"end": 845,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 820,
									"end": 845,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 820,
									"end": 845,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 876,
									"end": 878,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 879,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 861,
									"end": 879,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 854,
									"end": 888,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 854,
									"end": 888,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 854,
									"end": 888,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8837,
									"end": 8838,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8837,
									"end": 8838,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "PUSH",
									"source": 1,
									"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 793,
									"end": 811,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8804,
									"end": 8856,
									"name": "LOG4",
									"source": 1
								},
								{
									"begin": 8867,
									"end": 8941,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 8898,
									"end": 8906,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8916,
									"end": 8917,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8920,
									"end": 8922,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 8924,
									"end": 8926,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 8928,
									"end": 8934,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 8936,
									"end": 8940,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 8867,
									"end": 8897,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 8867,
									"end": 8941,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 15080,
									"end": 15273,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 15080,
									"end": 15273,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 15213,
									"end": 15214,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 15146,
									"end": 15162,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 15146,
									"end": 15162,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 15174,
									"end": 15196,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 15174,
									"end": 15196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "CALLDATASIZE",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "CALLDATACOPY",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 15199,
									"end": 15215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 15174,
									"end": 15215,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 15174,
									"end": 15215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 15236,
									"end": 15243,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15230,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15231,
									"end": 15232,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15233,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15225,
									"end": 15243,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 15261,
									"end": 15266,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 15080,
									"end": 15273,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 15080,
									"end": 15273,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13331,
									"end": 13545,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 13551,
									"end": 14276,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 13551,
									"end": 14276,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13758,
									"end": 13773,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 13758,
									"end": 13760,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13758,
									"end": 13771,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 13758,
									"end": 13771,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 13758,
									"end": 13771,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13758,
									"end": 13771,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 13758,
									"end": 13771,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18446744073709551704"
								},
								{
									"begin": 13758,
									"end": 13771,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 13758,
									"end": 13773,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13758,
									"end": 13773,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 13758,
									"end": 13773,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 13758,
									"end": 13773,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 13758,
									"end": 13773,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13754,
									"end": 14270,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 13754,
									"end": 14270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 13754,
									"end": 14270,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F23A6E61"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13793,
									"end": 13831,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13831,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13831,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13831,
									"name": "PUSH",
									"source": 1,
									"value": "F23A6E61"
								},
								{
									"begin": 13793,
									"end": 13831,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13832,
									"end": 13840,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 13832,
									"end": 13840,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13842,
									"end": 13846,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 13842,
									"end": 13846,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13848,
									"end": 13850,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 13848,
									"end": 13850,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13852,
									"end": 13858,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 13852,
									"end": 13858,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13860,
									"end": 13864,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 13860,
									"end": 13864,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "GAS",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "CALL",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 13793,
									"end": 13865,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "PUSH",
									"source": 1,
									"value": "8C379A0"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14136,
									"end": 14142,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 14129,
									"end": 14143,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 14129,
									"end": 14143,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 14129,
									"end": 14143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14129,
									"end": 14143,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 14129,
									"end": 14143,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 14129,
									"end": 14143,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 14129,
									"end": 14143,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 14129,
									"end": 14143,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14129,
									"end": 14143,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14129,
									"end": 14143,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 14129,
									"end": 14143,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14183,
									"end": 14245,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 14183,
									"end": 14245,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 14183,
									"end": 14245,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 14183,
									"end": 14245,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4136,
									"end": 4138,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 14183,
									"end": 14245,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 14183,
									"end": 14245,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 14183,
									"end": 14245,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4139,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4175,
									"end": 4177,
									"name": "PUSH",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 4155,
									"end": 4173,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 4155,
									"end": 4173,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4155,
									"end": 4173,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4148,
									"end": 4178,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4214,
									"end": 4248,
									"name": "PUSH",
									"source": 11,
									"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
								},
								{
									"begin": 4194,
									"end": 4212,
									"name": "PUSH",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 4194,
									"end": 4212,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4194,
									"end": 4212,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4187,
									"end": 4249,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4285,
									"end": 4307,
									"name": "PUSH",
									"source": 11,
									"value": "526563656976657220696D706C656D656E746572000000000000000000000000"
								},
								{
									"begin": 4265,
									"end": 4283,
									"name": "PUSH",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 4265,
									"end": 4283,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4265,
									"end": 4283,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4258,
									"end": 4308,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4325,
									"end": 4344,
									"name": "PUSH",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 4325,
									"end": 4344,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 14183,
									"end": 14245,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3934,
									"end": 4350,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 13789,
									"end": 14260,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 13914,
									"end": 13969,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 13914,
									"end": 13969,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F23A6E61"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 13914,
									"end": 13969,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 13910,
									"end": 14062,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 13910,
									"end": 14062,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 13993,
									"end": 14043,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 13993,
									"end": 14043,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 13993,
									"end": 14043,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 13993,
									"end": 14043,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4557,
									"end": 4559,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 13993,
									"end": 14043,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 13993,
									"end": 14043,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13993,
									"end": 14043,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4539,
									"end": 4560,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4596,
									"end": 4598,
									"name": "PUSH",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 4576,
									"end": 4594,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 4576,
									"end": 4594,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4576,
									"end": 4594,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4569,
									"end": 4599,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4635,
									"end": 4669,
									"name": "PUSH",
									"source": 11,
									"value": "455243313135353A204552433131353552656365697665722072656A65637465"
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "PUSH",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4608,
									"end": 4670,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6420746F6B656E73"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4686,
									"end": 4704,
									"name": "PUSH",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 4686,
									"end": 4704,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4686,
									"end": 4704,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4679,
									"end": 4717,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4734,
									"end": 4753,
									"name": "PUSH",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 4734,
									"end": 4753,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 13993,
									"end": 14043,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4355,
									"end": 4759,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 13910,
									"end": 14062,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 13910,
									"end": 14062,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13866,
									"end": 14076,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13551,
									"end": 14276,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13551,
									"end": 14276,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13551,
									"end": 14276,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13551,
									"end": 14276,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13551,
									"end": 14276,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13551,
									"end": 14276,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13551,
									"end": 14276,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 771,
									"end": 1148,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 771,
									"end": 1148,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1087,
									"end": 1107,
									"name": "EXTCODESIZE",
									"source": 7
								},
								{
									"begin": 1133,
									"end": 1141,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1133,
									"end": 1141,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1133,
									"end": 1141,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 771,
									"end": 1148,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "72"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "tag",
									"source": 0,
									"value": "72"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "75"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "78"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "tag",
									"source": 0,
									"value": "75"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "76"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "78"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "tag",
									"source": 0,
									"value": "76"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "78"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "tag",
									"source": 0,
									"value": "77"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "78"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "77"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "tag",
									"source": 0,
									"value": "78"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "79"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "tag",
									"source": 0,
									"value": "79"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "tag",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "tag",
									"source": 0,
									"value": "81"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "79"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "81"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 416,
									"end": 641,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 416,
									"end": 641,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 456,
									"end": 459,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 487,
									"end": 488,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 483,
									"end": 489,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 480,
									"end": 481,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 477,
									"end": 490,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 474,
									"end": 610,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 474,
									"end": 610,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 474,
									"end": 610,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 532,
									"end": 542,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B71"
								},
								{
									"begin": 527,
									"end": 530,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 523,
									"end": 543,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 520,
									"end": 521,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 513,
									"end": 544,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 567,
									"end": 571,
									"name": "PUSH",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 564,
									"end": 565,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 557,
									"end": 572,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 595,
									"end": 599,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 592,
									"end": 593,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 585,
									"end": 600,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 474,
									"end": 610,
									"name": "tag",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 474,
									"end": 610,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 626,
									"end": 635,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 626,
									"end": 635,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 416,
									"end": 641,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 1031,
									"end": 1158,
									"name": "tag",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 1031,
									"end": 1158,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1092,
									"end": 1102,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B71"
								},
								{
									"begin": 1087,
									"end": 1090,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 1083,
									"end": 1103,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1073,
									"end": 1104,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1123,
									"end": 1127,
									"name": "PUSH",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 1120,
									"end": 1121,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1113,
									"end": 1128,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1147,
									"end": 1151,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1144,
									"end": 1145,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1137,
									"end": 1152,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1163,
									"end": 1634,
									"name": "tag",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 1163,
									"end": 1634,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1204,
									"end": 1207,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1242,
									"end": 1247,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1236,
									"end": 1248,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1269,
									"end": 1275,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1264,
									"end": 1267,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1257,
									"end": 1276,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1294,
									"end": 1295,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1304,
									"end": 1466,
									"name": "tag",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 1304,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1315,
									"end": 1316,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1312,
									"end": 1325,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1304,
									"end": 1466,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1304,
									"end": 1466,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 1304,
									"end": 1466,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1380,
									"end": 1384,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1436,
									"end": 1449,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1436,
									"end": 1449,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1436,
									"end": 1449,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1432,
									"end": 1454,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1432,
									"end": 1454,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1426,
									"end": 1455,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1408,
									"end": 1419,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1408,
									"end": 1419,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1408,
									"end": 1419,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1404,
									"end": 1424,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1404,
									"end": 1424,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1397,
									"end": 1456,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1333,
									"end": 1345,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1304,
									"end": 1466,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 1304,
									"end": 1466,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1304,
									"end": 1466,
									"name": "tag",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 1304,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1484,
									"end": 1490,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1481,
									"end": 1482,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1478,
									"end": 1491,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1475,
									"end": 1562,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1475,
									"end": 1562,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 1475,
									"end": 1562,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1550,
									"end": 1551,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1543,
									"end": 1547,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1534,
									"end": 1540,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1529,
									"end": 1532,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 1541,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1521,
									"end": 1548,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1514,
									"end": 1552,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1475,
									"end": 1562,
									"name": "tag",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 1475,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1616,
									"end": 1618,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 1595,
									"end": 1610,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1591,
									"end": 1620,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1582,
									"end": 1621,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1582,
									"end": 1621,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1582,
									"end": 1621,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1582,
									"end": 1621,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1623,
									"end": 1627,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1578,
									"end": 1628,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1578,
									"end": 1628,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1163,
									"end": 1634,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1163,
									"end": 1634,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 1639,
									"end": 2199,
									"name": "tag",
									"source": 11,
									"value": "50"
								},
								{
									"begin": 1639,
									"end": 2199,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1936,
									"end": 1951,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1936,
									"end": 1951,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1936,
									"end": 1951,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1918,
									"end": 1952,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1918,
									"end": 1952,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1988,
									"end": 2003,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1988,
									"end": 2003,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1983,
									"end": 1985,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1968,
									"end": 1986,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1968,
									"end": 1986,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1961,
									"end": 2004,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2035,
									"end": 2037,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2020,
									"end": 2038,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2020,
									"end": 2038,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2013,
									"end": 2047,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2013,
									"end": 2047,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2013,
									"end": 2047,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2078,
									"end": 2080,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 2063,
									"end": 2081,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2063,
									"end": 2081,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2056,
									"end": 2090,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2056,
									"end": 2090,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2056,
									"end": 2090,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1898,
									"end": 1901,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 2121,
									"end": 2124,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 2106,
									"end": 2125,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2106,
									"end": 2125,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2099,
									"end": 2131,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2099,
									"end": 2131,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2099,
									"end": 2131,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1861,
									"end": 1865,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1861,
									"end": 1865,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2148,
									"end": 2193,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "98"
								},
								{
									"begin": 2148,
									"end": 2193,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2173,
									"end": 2192,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2173,
									"end": 2192,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2165,
									"end": 2171,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2148,
									"end": 2193,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 2148,
									"end": 2193,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 2148,
									"end": 2193,
									"name": "tag",
									"source": 11,
									"value": "98"
								},
								{
									"begin": 2148,
									"end": 2193,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2140,
									"end": 2193,
									"name": "SWAP8",
									"source": 11
								},
								{
									"begin": 1639,
									"end": 2199,
									"name": "SWAP7",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1639,
									"end": 2199,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 2204,
									"end": 2494,
									"name": "tag",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 2204,
									"end": 2494,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2273,
									"end": 2279,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2326,
									"end": 2328,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2314,
									"end": 2323,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2305,
									"end": 2312,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2301,
									"end": 2324,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2297,
									"end": 2329,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 2294,
									"end": 2346,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2294,
									"end": 2346,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 2294,
									"end": 2346,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2342,
									"end": 2343,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2339,
									"end": 2340,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2332,
									"end": 2344,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 2294,
									"end": 2346,
									"name": "tag",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 2294,
									"end": 2346,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2368,
									"end": 2384,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2368,
									"end": 2384,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2413,
									"end": 2445,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2413,
									"end": 2445,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2403,
									"end": 2446,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2403,
									"end": 2446,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 2393,
									"end": 2464,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "101"
								},
								{
									"begin": 2393,
									"end": 2464,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2457,
									"end": 2458,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2450,
									"end": 2462,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 2393,
									"end": 2464,
									"name": "tag",
									"source": 11,
									"value": "101"
								},
								{
									"begin": 2393,
									"end": 2464,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2483,
									"end": 2488,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 2204,
									"end": 2494,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2204,
									"end": 2494,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 2499,
									"end": 2678,
									"name": "tag",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 2499,
									"end": 2678,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2534,
									"end": 2537,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2576,
									"end": 2577,
									"name": "PUSH",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 2558,
									"end": 2574,
									"name": "RETURNDATASIZE",
									"source": 11
								},
								{
									"begin": 2555,
									"end": 2578,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2552,
									"end": 2672,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2552,
									"end": 2672,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "103"
								},
								{
									"begin": 2552,
									"end": 2672,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2622,
									"end": 2623,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 2619,
									"end": 2620,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2616,
									"end": 2617,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2601,
									"end": 2624,
									"name": "RETURNDATACOPY",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2659,
									"end": 2660,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2653,
									"end": 2661,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2648,
									"end": 2651,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 2644,
									"end": 2662,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 2552,
									"end": 2672,
									"name": "tag",
									"source": 11,
									"value": "103"
								},
								{
									"begin": 2552,
									"end": 2672,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2499,
									"end": 2678,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2499,
									"end": 2678,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 2683,
									"end": 3029,
									"name": "tag",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 2683,
									"end": 3029,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2793,
									"end": 2795,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2774,
									"end": 2787,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2774,
									"end": 2787,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2770,
									"end": 2797,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2758,
									"end": 2798,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2758,
									"end": 2798,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2813,
									"end": 2847,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2813,
									"end": 2847,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2849,
									"end": 2871,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2849,
									"end": 2871,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2849,
									"end": 2871,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 2810,
									"end": 2872,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 2807,
									"end": 2992,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2807,
									"end": 2992,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "105"
								},
								{
									"begin": 2807,
									"end": 2992,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2914,
									"end": 2924,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B71"
								},
								{
									"begin": 2909,
									"end": 2912,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 2905,
									"end": 2925,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 2902,
									"end": 2903,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2926,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2949,
									"end": 2953,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 2946,
									"end": 2947,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 2939,
									"end": 2954,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2977,
									"end": 2981,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 2974,
									"end": 2975,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2967,
									"end": 2982,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 2807,
									"end": 2992,
									"name": "tag",
									"source": 11,
									"value": "105"
								},
								{
									"begin": 2807,
									"end": 2992,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3008,
									"end": 3010,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 3001,
									"end": 3023,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2683,
									"end": 3029,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 3034,
									"end": 3705,
									"name": "tag",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 3034,
									"end": 3705,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3073,
									"end": 3076,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3115,
									"end": 3119,
									"name": "PUSH",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 3097,
									"end": 3113,
									"name": "RETURNDATASIZE",
									"source": 11
								},
								{
									"begin": 3094,
									"end": 3120,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 3091,
									"end": 3130,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3091,
									"end": 3130,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "107"
								},
								{
									"begin": 3091,
									"end": 3130,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3034,
									"end": 3705,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3034,
									"end": 3705,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 3091,
									"end": 3130,
									"name": "tag",
									"source": 11,
									"value": "107"
								},
								{
									"begin": 3091,
									"end": 3130,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3157,
									"end": 3159,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 3151,
									"end": 3160,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3222,
									"end": 3238,
									"name": "RETURNDATASIZE",
									"source": 11
								},
								{
									"begin": 3218,
									"end": 3243,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3218,
									"end": 3243,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3215,
									"end": 3216,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 3151,
									"end": 3160,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3194,
									"end": 3244,
									"name": "RETURNDATACOPY",
									"source": 11
								},
								{
									"begin": 3267,
									"end": 3278,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3267,
									"end": 3278,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3297,
									"end": 3313,
									"name": "RETURNDATASIZE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3365,
									"end": 3379,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3365,
									"end": 3379,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3365,
									"end": 3379,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 3396,
									"end": 3400,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 3384,
									"end": 3401,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3384,
									"end": 3401,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3381,
									"end": 3406,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 3362,
									"end": 3407,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3417,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3417,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "108"
								},
								{
									"begin": 3359,
									"end": 3417,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3410,
									"end": 3415,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3410,
									"end": 3415,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3410,
									"end": 3415,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3410,
									"end": 3415,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3410,
									"end": 3415,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3034,
									"end": 3705,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3034,
									"end": 3705,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 3359,
									"end": 3417,
									"name": "tag",
									"source": 11,
									"value": "108"
								},
								{
									"begin": 3359,
									"end": 3417,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3447,
									"end": 3453,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3441,
									"end": 3445,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3437,
									"end": 3454,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3426,
									"end": 3454,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3426,
									"end": 3454,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3483,
									"end": 3486,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3477,
									"end": 3487,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3510,
									"end": 3512,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3502,
									"end": 3508,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3499,
									"end": 3513,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 3496,
									"end": 3523,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3496,
									"end": 3523,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "109"
								},
								{
									"begin": 3496,
									"end": 3523,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3516,
									"end": 3521,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3516,
									"end": 3521,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3516,
									"end": 3521,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3516,
									"end": 3521,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3516,
									"end": 3521,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3516,
									"end": 3521,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3034,
									"end": 3705,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3034,
									"end": 3705,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 3496,
									"end": 3523,
									"name": "tag",
									"source": 11,
									"value": "109"
								},
								{
									"begin": 3496,
									"end": 3523,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3600,
									"end": 3602,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3581,
									"end": 3597,
									"name": "RETURNDATASIZE",
									"source": 11
								},
								{
									"begin": 3575,
									"end": 3579,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3567,
									"end": 3603,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3560,
									"end": 3564,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3551,
									"end": 3557,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3546,
									"end": 3549,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3542,
									"end": 3558,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3538,
									"end": 3565,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3535,
									"end": 3604,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 3532,
									"end": 3614,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3532,
									"end": 3614,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 3532,
									"end": 3614,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3607,
									"end": 3612,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3607,
									"end": 3612,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3607,
									"end": 3612,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3607,
									"end": 3612,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3607,
									"end": 3612,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3607,
									"end": 3612,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3034,
									"end": 3705,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3034,
									"end": 3705,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 3532,
									"end": 3614,
									"name": "tag",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 3532,
									"end": 3614,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3623,
									"end": 3680,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "111"
								},
								{
									"begin": 3674,
									"end": 3678,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3665,
									"end": 3671,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3657,
									"end": 3663,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 3653,
									"end": 3672,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3649,
									"end": 3679,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3643,
									"end": 3647,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 3623,
									"end": 3680,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 3623,
									"end": 3680,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 3623,
									"end": 3680,
									"name": "tag",
									"source": 11,
									"value": "111"
								},
								{
									"begin": 3623,
									"end": 3680,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3696,
									"end": 3699,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3696,
									"end": 3699,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 3034,
									"end": 3705,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3034,
									"end": 3705,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 3710,
									"end": 3929,
									"name": "tag",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 3710,
									"end": 3929,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3859,
									"end": 3861,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3848,
									"end": 3857,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3841,
									"end": 3862,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3822,
									"end": 3826,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3879,
									"end": 3923,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "101"
								},
								{
									"begin": 3919,
									"end": 3921,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3908,
									"end": 3917,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3904,
									"end": 3922,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3896,
									"end": 3902,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3879,
									"end": 3923,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 3879,
									"end": 3923,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 4764,
									"end": 5144,
									"name": "tag",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 4764,
									"end": 5144,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4843,
									"end": 4844,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 4839,
									"end": 4851,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4839,
									"end": 4851,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4839,
									"end": 4851,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 4839,
									"end": 4851,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4886,
									"end": 4898,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4886,
									"end": 4898,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4886,
									"end": 4898,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 4907,
									"end": 4968,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 4907,
									"end": 4968,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4961,
									"end": 4965,
									"name": "PUSH",
									"source": 11,
									"value": "7F"
								},
								{
									"begin": 4953,
									"end": 4959,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4949,
									"end": 4966,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4939,
									"end": 4966,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4939,
									"end": 4966,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4907,
									"end": 4968,
									"name": "tag",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 4907,
									"end": 4968,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5014,
									"end": 5016,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5006,
									"end": 5012,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5003,
									"end": 5017,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 4983,
									"end": 5001,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4980,
									"end": 5018,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 4977,
									"end": 5138,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "118"
								},
								{
									"begin": 4977,
									"end": 5138,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5060,
									"end": 5070,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B71"
								},
								{
									"begin": 5055,
									"end": 5058,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 5051,
									"end": 5071,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 5048,
									"end": 5049,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5041,
									"end": 5072,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5095,
									"end": 5099,
									"name": "PUSH",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 5092,
									"end": 5093,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 5085,
									"end": 5100,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5123,
									"end": 5127,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 5120,
									"end": 5121,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5113,
									"end": 5128,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 4977,
									"end": 5138,
									"name": "tag",
									"source": 11,
									"value": "118"
								},
								{
									"begin": 4977,
									"end": 5138,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4977,
									"end": 5138,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4764,
									"end": 5144,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4764,
									"end": 5144,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4764,
									"end": 5144,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4764,
									"end": 5144,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 4764,
									"end": 5144,
									"name": "tag",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 4764,
									"end": 5144,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 1189,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b401cc13d1361a3e5907fa95c4d349f085f14ef18ce881cc2b9056f470d8ee4f64736f6c634300080d0033",
									".code": [
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "6B20C454"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "E3E55F08"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "E3E55F08"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "F5298ACA"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "6B20C454"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "6ECF11D7"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "D562E204"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "3E4BEE38"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "5B2725ED"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "13DC989F"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 1189,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 597,
											"end": 622,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1177,
											"end": 1199,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1019,
											"end": 1206,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 478,
											"end": 511,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 478,
											"end": 511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 478,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 510,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 478,
											"end": 511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 478,
											"end": 511,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 351,
											"end": 383,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 351,
											"end": 383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 351,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 382,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 351,
											"end": 383,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 518,
											"end": 552,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 518,
											"end": 552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 518,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 551,
											"end": 552,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 518,
											"end": 552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 518,
											"end": 552,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 878,
											"end": 1186,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 878,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 878,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 878,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 878,
											"end": 1186,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 431,
											"end": 471,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 431,
											"end": 471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 431,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 470,
											"end": 471,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 431,
											"end": 471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 431,
											"end": 471,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 390,
											"end": 424,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 390,
											"end": 424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 390,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 423,
											"end": 424,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 390,
											"end": 424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 390,
											"end": 424,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3491,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 393,
											"end": 703,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 393,
											"end": 703,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 393,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 393,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 393,
											"end": 703,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 393,
											"end": 703,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 393,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 393,
											"end": 703,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 393,
											"end": 703,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 393,
											"end": 703,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 393,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 393,
											"end": 703,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2263,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2283,
											"end": 2304,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2304,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9259,
											"end": 9261,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9241,
											"end": 9262,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9298,
											"end": 9300,
											"name": "PUSH",
											"source": 11,
											"value": "2B"
										},
										{
											"begin": 9278,
											"end": 9296,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 9278,
											"end": 9296,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9278,
											"end": 9296,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9271,
											"end": 9301,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9337,
											"end": 9371,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 9317,
											"end": 9335,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 9317,
											"end": 9335,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9317,
											"end": 9335,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9310,
											"end": 9372,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9388,
											"end": 9406,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 9388,
											"end": 9406,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9388,
											"end": 9406,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9381,
											"end": 9422,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9439,
											"end": 9458,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 9439,
											"end": 9458,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2369,
											"end": 2378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1483,
											"end": 1519,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1483,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1519,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 1998,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2017,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4311,
											"end": 4315,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10056,
											"end": 10058,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10038,
											"end": 10059,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10095,
											"end": 10097,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 10075,
											"end": 10093,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10075,
											"end": 10093,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10075,
											"end": 10093,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10068,
											"end": 10098,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10134,
											"end": 10168,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 10114,
											"end": 10132,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 10114,
											"end": 10132,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10114,
											"end": 10132,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10107,
											"end": 10169,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10185,
											"end": 10203,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 10185,
											"end": 10203,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10185,
											"end": 10203,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10178,
											"end": 10226,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10243,
											"end": 10262,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 10243,
											"end": 10262,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 9854,
											"end": 10268,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4439,
											"end": 4443,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4447,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4449,
											"end": 4452,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4454,
											"end": 4461,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4467,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 2722,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2765,
											"end": 2768,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2754,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10475,
											"end": 10477,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10478,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10514,
											"end": 10516,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 10494,
											"end": 10512,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10494,
											"end": 10512,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10494,
											"end": 10512,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10487,
											"end": 10517,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10553,
											"end": 10587,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 10533,
											"end": 10551,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 10533,
											"end": 10551,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10533,
											"end": 10551,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10526,
											"end": 10588,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10604,
											"end": 10622,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 10604,
											"end": 10622,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10604,
											"end": 10622,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10597,
											"end": 10636,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10653,
											"end": 10672,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 10653,
											"end": 10672,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 10273,
											"end": 10678,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2879,
											"end": 2887,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2879,
											"end": 2894,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2938,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2945,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2927,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2945,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2995,
											"end": 3003,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3005,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3011,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3012,
											"end": 3013,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 2981,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 3015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3043,
											"end": 3056,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 868,
											"end": 891,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 868,
											"end": 891,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 868,
											"end": 891,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 868,
											"end": 891,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 868,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 868,
											"end": 934,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 895,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 912,
											"end": 919,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 895,
											"end": 934,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 895,
											"end": 934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 847,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 847,
											"end": 1001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 847,
											"end": 1001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 847,
											"end": 1001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 847,
											"end": 1001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 847,
											"end": 1001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 847,
											"end": 1001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 847,
											"end": 1001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 847,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 847,
											"end": 1001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 847,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 847,
											"end": 1001,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 847,
											"end": 1001,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 847,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1023,
											"end": 1030,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1035,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1037,
											"end": 1043,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1012,
											"end": 1044,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1012,
											"end": 1044,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1012,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 709,
											"end": 1051,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 878,
											"end": 1186,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 878,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 940,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 940,
											"end": 959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 954,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 940,
											"end": 959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 940,
											"end": 959,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 940,
											"end": 959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 940,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "7D20"
										},
										{
											"begin": 940,
											"end": 959,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 940,
											"end": 959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 940,
											"end": 959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 940,
											"end": 959,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 940,
											"end": 959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 917,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 917,
											"end": 937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 940,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 940,
											"end": 959,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 940,
											"end": 959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 940,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "7D00"
										},
										{
											"begin": 940,
											"end": 959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 940,
											"end": 959,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 940,
											"end": 959,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 940,
											"end": 959,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1011,
											"end": 1015,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "7D20"
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 917,
											"end": 959,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 917,
											"end": 959,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 970,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 994,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "7D00"
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 970,
											"end": 1016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 970,
											"end": 1016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1128,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1027,
											"end": 1128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 1047,
											"end": 1048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1055,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1128,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1027,
											"end": 1128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1080,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1082,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1102,
											"end": 1109,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1110,
											"end": 1111,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1112,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1102,
											"end": 1112,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1102,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1102,
											"end": 1112,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1102,
											"end": 1112,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1102,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1112,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1102,
											"end": 1112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1112,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1112,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1112,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1057,
											"end": 1060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1057,
											"end": 1060,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1057,
											"end": 1060,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1057,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1060,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1027,
											"end": 1128,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1128,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1027,
											"end": 1128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1149,
											"end": 1159,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1164,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1173,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1138,
											"end": 1178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1138,
											"end": 1178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1138,
											"end": 1178,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1138,
											"end": 1178,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1138,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 906,
											"end": 1186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 906,
											"end": 1186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 878,
											"end": 1186,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3258,
											"end": 3266,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3276,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 3825,
											"end": 3829,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3939,
											"end": 3943,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3947,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3949,
											"end": 3951,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 3959,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3961,
											"end": 3965,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 3921,
											"end": 3966,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 393,
											"end": 703,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 393,
											"end": 703,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 527,
											"end": 550,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 527,
											"end": 550,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 527,
											"end": 550,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 527,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 527,
											"end": 593,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 554,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 571,
											"end": 578,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 554,
											"end": 593,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 554,
											"end": 593,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 506,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 506,
											"end": 660,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 506,
											"end": 660,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 506,
											"end": 660,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 506,
											"end": 660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 506,
											"end": 660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 506,
											"end": 660,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 506,
											"end": 660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 506,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 506,
											"end": 660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 506,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 506,
											"end": 660,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 506,
											"end": 660,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 506,
											"end": 660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 671,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 677,
											"end": 684,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 686,
											"end": 688,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 690,
											"end": 695,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 671,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 671,
											"end": 696,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 771,
											"end": 1148,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6295,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6302,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6274,
											"end": 6277,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6274,
											"end": 6284,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6274,
											"end": 6302,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6365,
											"end": 6381,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6365,
											"end": 6381,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6574,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6581,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6567,
											"end": 6568,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6567,
											"end": 6581,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6612,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6618,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6619,
											"end": 6620,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6635,
											"end": 6649,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6659,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6677,
											"end": 6696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "DUP15",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP15",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6892,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7003,
											"end": 7005,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6997,
											"end": 7001,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 6995,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 1,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7007,
											"end": 7010,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7012,
											"end": 7019,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 7067,
											"end": 7075,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7081,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7085,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7087,
											"end": 7090,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7099,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7105,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6256,
											"end": 7113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11072,
											"end": 11939,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 11072,
											"end": 11939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11219,
											"end": 11237,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11219,
											"end": 11237,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11211,
											"end": 11277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 11211,
											"end": 11277,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11211,
											"end": 11277,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11211,
											"end": 11277,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11211,
											"end": 11277,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11211,
											"end": 11277,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11211,
											"end": 11277,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11211,
											"end": 11277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11211,
											"end": 11277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 11211,
											"end": 11277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11211,
											"end": 11277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 11211,
											"end": 11277,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11211,
											"end": 11277,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 11211,
											"end": 11277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11309,
											"end": 11316,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11309,
											"end": 11323,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11295,
											"end": 11298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11295,
											"end": 11305,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11295,
											"end": 11323,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 11287,
											"end": 11368,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11368,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11287,
											"end": 11368,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11287,
											"end": 11368,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11368,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11368,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11287,
											"end": 11368,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 11287,
											"end": 11368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 11287,
											"end": 11368,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11287,
											"end": 11368,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 11287,
											"end": 11368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11487,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11421,
											"end": 11487,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11487,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11487,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11421,
											"end": 11487,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11487,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11487,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11487,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11487,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11379,
											"end": 11395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11421,
											"end": 11487,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11487,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11487,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11487,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11498,
											"end": 11862,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 11498,
											"end": 11862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11522,
											"end": 11525,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11522,
											"end": 11532,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11518,
											"end": 11519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11518,
											"end": 11532,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11498,
											"end": 11862,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11498,
											"end": 11862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 11498,
											"end": 11862,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11553,
											"end": 11563,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11566,
											"end": 11569,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11570,
											"end": 11571,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11566,
											"end": 11572,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11566,
											"end": 11572,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11566,
											"end": 11572,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11566,
											"end": 11572,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11566,
											"end": 11572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 11566,
											"end": 11572,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11566,
											"end": 11572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 11566,
											"end": 11572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 11566,
											"end": 11572,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11566,
											"end": 11572,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 11566,
											"end": 11572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11566,
											"end": 11572,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11566,
											"end": 11572,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11566,
											"end": 11572,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11566,
											"end": 11572,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11566,
											"end": 11572,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11566,
											"end": 11572,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11553,
											"end": 11572,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11553,
											"end": 11572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11586,
											"end": 11600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11603,
											"end": 11610,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11611,
											"end": 11612,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11603,
											"end": 11613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11603,
											"end": 11613,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11603,
											"end": 11613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11603,
											"end": 11613,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11603,
											"end": 11613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 11603,
											"end": 11613,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11603,
											"end": 11613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 11603,
											"end": 11613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 11603,
											"end": 11613,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11603,
											"end": 11613,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 11603,
											"end": 11613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11603,
											"end": 11613,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11603,
											"end": 11613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11603,
											"end": 11613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11603,
											"end": 11613,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11603,
											"end": 11613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11603,
											"end": 11613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11603,
											"end": 11613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11603,
											"end": 11613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11603,
											"end": 11613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11603,
											"end": 11613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11603,
											"end": 11613,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11628,
											"end": 11647,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11650,
											"end": 11663,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11650,
											"end": 11663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11650,
											"end": 11663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11650,
											"end": 11663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11650,
											"end": 11663,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11650,
											"end": 11663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11650,
											"end": 11663,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11650,
											"end": 11663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11650,
											"end": 11663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11650,
											"end": 11663,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11650,
											"end": 11669,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 11650,
											"end": 11669,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11650,
											"end": 11669,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11650,
											"end": 11669,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11650,
											"end": 11669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11650,
											"end": 11669,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11650,
											"end": 11669,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11650,
											"end": 11669,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11650,
											"end": 11669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11650,
											"end": 11669,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11650,
											"end": 11669,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11650,
											"end": 11669,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11603,
											"end": 11613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11603,
											"end": 11613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11691,
											"end": 11712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11691,
											"end": 11712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11691,
											"end": 11712,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11691,
											"end": 11712,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 11753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 11683,
											"end": 11753,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 11753,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11683,
											"end": 11753,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11683,
											"end": 11753,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 11753,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 11753,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11683,
											"end": 11753,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 11753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 11683,
											"end": 11753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 11753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 11683,
											"end": 11753,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11683,
											"end": 11753,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 11683,
											"end": 11753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11795,
											"end": 11808,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11808,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11808,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11808,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11795,
											"end": 11808,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11808,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11808,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11795,
											"end": 11808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11808,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11808,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11795,
											"end": 11814,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11814,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11814,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11814,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11814,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11814,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11817,
											"end": 11837,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11817,
											"end": 11837,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11837,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11534,
											"end": 11537,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11534,
											"end": 11537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 11534,
											"end": 11537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11534,
											"end": 11537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 11534,
											"end": 11537,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11534,
											"end": 11537,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 11534,
											"end": 11537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11534,
											"end": 11537,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11534,
											"end": 11537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11534,
											"end": 11537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11498,
											"end": 11862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 11498,
											"end": 11862,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11498,
											"end": 11862,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 11498,
											"end": 11862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11498,
											"end": 11862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11915,
											"end": 11916,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11877,
											"end": 11932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11901,
											"end": 11905,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11877,
											"end": 11932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11891,
											"end": 11899,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11877,
											"end": 11932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11877,
											"end": 11932,
											"name": "PUSH",
											"source": 1,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 11919,
											"end": 11922,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11924,
											"end": 11931,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11877,
											"end": 11932,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11877,
											"end": 11932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11877,
											"end": 11932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 11877,
											"end": 11932,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11877,
											"end": 11932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11877,
											"end": 11932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11877,
											"end": 11932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 11877,
											"end": 11932,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11877,
											"end": 11932,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 11877,
											"end": 11932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11877,
											"end": 11932,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11877,
											"end": 11932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11877,
											"end": 11932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11877,
											"end": 11932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11877,
											"end": 11932,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11877,
											"end": 11932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11877,
											"end": 11932,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 11201,
											"end": 11939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11072,
											"end": 11939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11072,
											"end": 11939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11072,
											"end": 11939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11072,
											"end": 11939,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9293,
											"end": 10008,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 9293,
											"end": 10008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9465,
											"end": 9481,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9465,
											"end": 9481,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14337,
											"end": 14339,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14319,
											"end": 14340,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14376,
											"end": 14378,
											"name": "PUSH",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 14356,
											"end": 14374,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 14356,
											"end": 14374,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14356,
											"end": 14374,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14349,
											"end": 14379,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14415,
											"end": 14449,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A206D696E7420746F20746865207A65726F20616464726573"
										},
										{
											"begin": 14395,
											"end": 14413,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 14395,
											"end": 14413,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14395,
											"end": 14413,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14388,
											"end": 14450,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14466,
											"end": 14484,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 14466,
											"end": 14484,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14466,
											"end": 14484,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14459,
											"end": 14490,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14507,
											"end": 14526,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 14507,
											"end": 14526,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 14135,
											"end": 14532,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 9457,
											"end": 9519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9551,
											"end": 9558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9551,
											"end": 9565,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 9540,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 9547,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 9565,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 9529,
											"end": 9610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 9621,
											"end": 9637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9764,
											"end": 9767,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9764,
											"end": 9774,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9760,
											"end": 9761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9760,
											"end": 9774,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9827,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9828,
											"end": 9829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9830,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9805,
											"end": 9808,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9810,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9795,
											"end": 9812,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9815,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9795,
											"end": 9830,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9740,
											"end": 9841,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9894,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9870,
											"end": 9878,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "PUSH",
											"source": 1,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 9896,
											"end": 9899,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9901,
											"end": 9908,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9856,
											"end": 9909,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 9920,
											"end": 10001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 9956,
											"end": 9964,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9974,
											"end": 9975,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9978,
											"end": 9980,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9982,
											"end": 9985,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 9994,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9996,
											"end": 10000,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9920,
											"end": 9955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 9920,
											"end": 10001,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12224,
											"end": 12232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12215,
											"end": 12220,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14739,
											"end": 14741,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14721,
											"end": 14742,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14778,
											"end": 14780,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 14758,
											"end": 14776,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 14758,
											"end": 14776,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14758,
											"end": 14776,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14751,
											"end": 14781,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14817,
											"end": 14851,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 14797,
											"end": 14815,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 14797,
											"end": 14815,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14797,
											"end": 14815,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14790,
											"end": 14852,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14868,
											"end": 14886,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 14868,
											"end": 14886,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14868,
											"end": 14886,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14861,
											"end": 14900,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14917,
											"end": 14936,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 14917,
											"end": 14936,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 14537,
											"end": 14942,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12306,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5106,
											"end": 5122,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5122,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5248,
											"end": 5252,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5256,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 5276,
											"end": 5278,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5281,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5299,
											"end": 5305,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5281,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 5281,
											"end": 5306,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5324,
											"end": 5343,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5527,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15121,
											"end": 15146,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 15121,
											"end": 15146,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15121,
											"end": 15146,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15177,
											"end": 15179,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15162,
											"end": 15180,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15162,
											"end": 15180,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15155,
											"end": 15189,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 15155,
											"end": 15189,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15155,
											"end": 15189,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 1,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 5678,
											"end": 5686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5692,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5694,
											"end": 5696,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5698,
											"end": 5700,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5702,
											"end": 5708,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5710,
											"end": 5714,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5088,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5088,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10248,
											"end": 10878,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 10248,
											"end": 10878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10370,
											"end": 10388,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10370,
											"end": 10388,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10362,
											"end": 10428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 10362,
											"end": 10428,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10362,
											"end": 10428,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10362,
											"end": 10428,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10362,
											"end": 10428,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10362,
											"end": 10428,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10362,
											"end": 10428,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10362,
											"end": 10428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10362,
											"end": 10428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 10362,
											"end": 10428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10362,
											"end": 10428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 10362,
											"end": 10428,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10362,
											"end": 10428,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 10362,
											"end": 10428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10512,
											"end": 10516,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10439,
											"end": 10455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10530,
											"end": 10551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 10548,
											"end": 10550,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10530,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 10530,
											"end": 10551,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10530,
											"end": 10551,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 10530,
											"end": 10551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10553,
											"end": 10578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 10571,
											"end": 10577,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10553,
											"end": 10570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 10553,
											"end": 10578,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10553,
											"end": 10578,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 10553,
											"end": 10578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 10481,
											"end": 10583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10594,
											"end": 10613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10616,
											"end": 10629,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10629,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10629,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10616,
											"end": 10629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10629,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10629,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10616,
											"end": 10629,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10629,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10629,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10616,
											"end": 10635,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10635,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10635,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10635,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10635,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10635,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10653,
											"end": 10674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10653,
											"end": 10674,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10653,
											"end": 10674,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10653,
											"end": 10674,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10645,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 10645,
											"end": 10715,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10645,
											"end": 10715,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10645,
											"end": 10715,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10645,
											"end": 10715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10645,
											"end": 10715,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10645,
											"end": 10715,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10645,
											"end": 10715,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10645,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 10645,
											"end": 10715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10645,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 10645,
											"end": 10715,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10645,
											"end": 10715,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 10645,
											"end": 10715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10749,
											"end": 10762,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10762,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10762,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10762,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10749,
											"end": 10762,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10762,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10762,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10762,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10749,
											"end": 10762,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10762,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10762,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10771,
											"end": 10791,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 10771,
											"end": 10791,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10771,
											"end": 10791,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10791,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15121,
											"end": 15146,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 15121,
											"end": 15146,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15121,
											"end": 15146,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15162,
											"end": 15180,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 15162,
											"end": 15180,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15162,
											"end": 15180,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15155,
											"end": 15189,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 15155,
											"end": 15189,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15155,
											"end": 15189,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "PUSH",
											"source": 1,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15094,
											"end": 15112,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10871,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 10352,
											"end": 10878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10352,
											"end": 10878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10248,
											"end": 10878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10248,
											"end": 10878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10248,
											"end": 10878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10248,
											"end": 10878,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14282,
											"end": 15074,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 14282,
											"end": 15074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14514,
											"end": 14527,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14514,
											"end": 14527,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14510,
											"end": 15068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 14510,
											"end": 15068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "PUSH",
											"source": 1,
											"value": "BC197C81"
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14593,
											"end": 14601,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 14593,
											"end": 14601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14609,
											"end": 14612,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14609,
											"end": 14612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14614,
											"end": 14621,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14614,
											"end": 14621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14623,
											"end": 14627,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14623,
											"end": 14627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A0"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14934,
											"end": 14940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17348,
											"end": 17350,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17330,
											"end": 17351,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17387,
											"end": 17389,
											"name": "PUSH",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 17367,
											"end": 17385,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 17367,
											"end": 17385,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17367,
											"end": 17385,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17360,
											"end": 17390,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17426,
											"end": 17460,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 17406,
											"end": 17424,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 17406,
											"end": 17424,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17406,
											"end": 17424,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17399,
											"end": 17461,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17477,
											"end": 17495,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 17477,
											"end": 17495,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17477,
											"end": 17495,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17470,
											"end": 17520,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17537,
											"end": 17556,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 17537,
											"end": 17556,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 17146,
											"end": 17562,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14703,
											"end": 14860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 14703,
											"end": 14860,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15213,
											"end": 15214,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15146,
											"end": 15162,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15146,
											"end": 15162,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15174,
											"end": 15196,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15174,
											"end": 15196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15174,
											"end": 15215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15174,
											"end": 15215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15236,
											"end": 15243,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15231,
											"end": 15232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15243,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15261,
											"end": 15266,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13551,
											"end": 14276,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 13551,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13758,
											"end": 13771,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13758,
											"end": 13771,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13754,
											"end": 14270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 13754,
											"end": 14270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "PUSH",
											"source": 1,
											"value": "F23A6E61"
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13832,
											"end": 13840,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 13832,
											"end": 13840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13842,
											"end": 13846,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 13842,
											"end": 13846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13848,
											"end": 13850,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 13848,
											"end": 13850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13852,
											"end": 13858,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 13852,
											"end": 13858,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13860,
											"end": 13864,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 13860,
											"end": 13864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 13910,
											"end": 14062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 13910,
											"end": 14062,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "tag",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 707,
											"end": 739,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 697,
											"end": 740,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 697,
											"end": 740,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 687,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 744,
											"end": 756,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 687,
											"end": 758,
											"name": "tag",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 633,
											"end": 764,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 827,
											"end": 833,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 877,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 859,
											"end": 866,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 855,
											"end": 878,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 851,
											"end": 883,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 848,
											"end": 900,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 848,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 896,
											"end": 897,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 886,
											"end": 898,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 848,
											"end": 900,
											"name": "tag",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 922,
											"end": 945,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1325,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1320,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1309,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1298,
											"end": 1321,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1339,
											"end": 1340,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1329,
											"end": 1341,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "tag",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1438,
											"end": 1441,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1481,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1470,
											"end": 1482,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1503,
											"end": 1509,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1501,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1510,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1528,
											"end": 1529,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1552,
											"end": 1558,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1546,
											"end": 1559,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1614,
											"end": 1618,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1631,
											"end": 1690,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1567,
											"end": 1579,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1718,
											"end": 1724,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1715,
											"end": 1716,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1712,
											"end": 1725,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1784,
											"end": 1785,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1777,
											"end": 1781,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1768,
											"end": 1774,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1763,
											"end": 1766,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1759,
											"end": 1775,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1755,
											"end": 1782,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1748,
											"end": 1786,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "tag",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1850,
											"end": 1852,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1829,
											"end": 1844,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1825,
											"end": 1854,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1857,
											"end": 1861,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1812,
											"end": 1862,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1862,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1873,
											"end": 2093,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 1873,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2022,
											"end": 2024,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2004,
											"end": 2025,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1985,
											"end": 1989,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 2083,
											"end": 2085,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2072,
											"end": 2081,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2060,
											"end": 2066,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2098,
											"end": 2225,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 2098,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2159,
											"end": 2169,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 2154,
											"end": 2157,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2150,
											"end": 2170,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2147,
											"end": 2148,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2171,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2190,
											"end": 2194,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 2187,
											"end": 2188,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2180,
											"end": 2195,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2214,
											"end": 2218,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 2211,
											"end": 2212,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2219,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2230,
											"end": 2479,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 2230,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2340,
											"end": 2342,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2321,
											"end": 2334,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2321,
											"end": 2334,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2344,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2305,
											"end": 2345,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2305,
											"end": 2345,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2396,
											"end": 2418,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2396,
											"end": 2418,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2396,
											"end": 2418,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2357,
											"end": 2419,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2442,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 2354,
											"end": 2442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2458,
											"end": 2460,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2230,
											"end": 2479,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2484,
											"end": 2667,
											"name": "tag",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 2484,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2544,
											"end": 2548,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2595,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2566,
											"end": 2596,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2619,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 2563,
											"end": 2619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "tag",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2644,
											"end": 2645,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2640,
											"end": 2654,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2656,
											"end": 2660,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2636,
											"end": 2661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2636,
											"end": 2661,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2484,
											"end": 2667,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2731,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2782,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2772,
											"end": 2776,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2764,
											"end": 2770,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2777,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2756,
											"end": 2783,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2797,
											"end": 2798,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2795,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2787,
											"end": 2799,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2820,
											"end": 2840,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2859,
											"end": 2863,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 2922,
											"end": 2924,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2954,
											"end": 2956,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2948,
											"end": 2957,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 2994,
											"end": 2996,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2986,
											"end": 2992,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3050,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3050,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3050,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3108,
											"end": 3131,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3108,
											"end": 3131,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3104,
											"end": 3136,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3104,
											"end": 3136,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3104,
											"end": 3136,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3148,
											"end": 3163,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3148,
											"end": 3163,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3148,
											"end": 3163,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3176,
											"end": 3177,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3174,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3166,
											"end": 3178,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3212,
											"end": 3214,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3204,
											"end": 3210,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3200,
											"end": 3215,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3240,
											"end": 3246,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3235,
											"end": 3238,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3247,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3306,
											"end": 3323,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3306,
											"end": 3323,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3294,
											"end": 3324,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3294,
											"end": 3324,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3257,
											"end": 3269,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3257,
											"end": 3269,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "tag",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3384,
											"end": 3390,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3443,
											"end": 3448,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3496,
											"end": 3499,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3489,
											"end": 3493,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3481,
											"end": 3487,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3477,
											"end": 3494,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3515,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3511,
											"end": 3512,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3504,
											"end": 3516,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "tag",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3550,
											"end": 3556,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3537,
											"end": 3557,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3576,
											"end": 3594,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3572,
											"end": 3574,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3569,
											"end": 3595,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "tag",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3647,
											"end": 3649,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3641,
											"end": 3650,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 3714,
											"end": 3716,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3691,
											"end": 3718,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 3724,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3687,
											"end": 3725,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3641,
											"end": 3650,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "tag",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3742,
											"end": 3748,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3735,
											"end": 3753,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3796,
											"end": 3799,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3789,
											"end": 3793,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3784,
											"end": 3786,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3768,
											"end": 3794,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3765,
											"end": 3800,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3811,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3803,
											"end": 3815,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "tag",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3870,
											"end": 3874,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3862,
											"end": 3868,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3858,
											"end": 3875,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3851,
											"end": 3855,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3839,
											"end": 3856,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3826,
											"end": 3880,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3915,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3900,
											"end": 3915,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3900,
											"end": 3915,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 3921,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 3922,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3904,
											"end": 3910,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4115,
											"end": 4121,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4123,
											"end": 4129,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4131,
											"end": 4137,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4145,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4147,
											"end": 4153,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 4188,
											"end": 4197,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4179,
											"end": 4186,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4175,
											"end": 4198,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4171,
											"end": 4204,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4217,
											"end": 4218,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4215,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4207,
											"end": 4219,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "tag",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 4259,
											"end": 4268,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "tag",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4230,
											"end": 4269,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 4230,
											"end": 4269,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 4322,
											"end": 4324,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4311,
											"end": 4320,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "tag",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4326,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4326,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4377,
											"end": 4379,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4362,
											"end": 4380,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4349,
											"end": 4381,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4441,
											"end": 4443,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4433,
											"end": 4439,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4430,
											"end": 4444,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4457,
											"end": 4458,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4454,
											"end": 4455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4447,
											"end": 4459,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "tag",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 4533,
											"end": 4540,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 4524,
											"end": 4530,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4513,
											"end": 4522,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4531,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "tag",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4470,
											"end": 4541,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 4470,
											"end": 4541,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4594,
											"end": 4596,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4583,
											"end": 4592,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4579,
											"end": 4597,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4566,
											"end": 4598,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4550,
											"end": 4598,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4550,
											"end": 4598,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4623,
											"end": 4625,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4613,
											"end": 4621,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4610,
											"end": 4626,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4639,
											"end": 4640,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4636,
											"end": 4637,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4629,
											"end": 4641,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "tag",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 4717,
											"end": 4724,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 4706,
											"end": 4714,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4695,
											"end": 4704,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 4691,
											"end": 4715,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "tag",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4652,
											"end": 4725,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4652,
											"end": 4725,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4778,
											"end": 4781,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 4767,
											"end": 4776,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4763,
											"end": 4782,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4750,
											"end": 4783,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4734,
											"end": 4783,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4734,
											"end": 4783,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4808,
											"end": 4810,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4798,
											"end": 4806,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4795,
											"end": 4811,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4824,
											"end": 4825,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4821,
											"end": 4822,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4814,
											"end": 4826,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "tag",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 4890,
											"end": 4897,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4879,
											"end": 4887,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4868,
											"end": 4877,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 4864,
											"end": 4888,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "tag",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4837,
											"end": 4898,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4837,
											"end": 4898,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4837,
											"end": 4898,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5027,
											"end": 5033,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5035,
											"end": 5041,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5090,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5085,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5067,
											"end": 5074,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5063,
											"end": 5086,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5059,
											"end": 5091,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5102,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5094,
											"end": 5106,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5153,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5214,
											"end": 5216,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5206,
											"end": 5212,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5203,
											"end": 5217,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5230,
											"end": 5231,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5227,
											"end": 5228,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5232,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "tag",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5268,
											"end": 5274,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5257,
											"end": 5266,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5253,
											"end": 5275,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5243,
											"end": 5275,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5243,
											"end": 5275,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5313,
											"end": 5320,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5306,
											"end": 5310,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5302,
											"end": 5304,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5298,
											"end": 5311,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5294,
											"end": 5321,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5335,
											"end": 5336,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5325,
											"end": 5337,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "tag",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5371,
											"end": 5373,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5374,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5393,
											"end": 5397,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 5456,
											"end": 5458,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "tag",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5488,
											"end": 5490,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5482,
											"end": 5491,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 5528,
											"end": 5530,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5520,
											"end": 5526,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "tag",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5566,
											"end": 5584,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5566,
											"end": 5584,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5566,
											"end": 5584,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5654,
											"end": 5655,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 5642,
											"end": 5661,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5642,
											"end": 5661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5638,
											"end": 5666,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5638,
											"end": 5666,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5638,
											"end": 5666,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5678,
											"end": 5697,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 5678,
											"end": 5697,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5678,
											"end": 5697,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5710,
											"end": 5711,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5707,
											"end": 5708,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5700,
											"end": 5712,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "tag",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5770,
											"end": 5776,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5765,
											"end": 5768,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5762,
											"end": 5777,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 5855,
											"end": 5858,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "tag",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5824,
											"end": 5860,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5824,
											"end": 5860,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "tag",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5921,
											"end": 5927,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5965,
											"end": 5983,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5965,
											"end": 5983,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5952,
											"end": 5984,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5952,
											"end": 5984,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5996,
											"end": 6012,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5996,
											"end": 6012,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5996,
											"end": 6012,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6025,
											"end": 6026,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6022,
											"end": 6023,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6015,
											"end": 6027,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "tag",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 6103,
											"end": 6110,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6092,
											"end": 6100,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6081,
											"end": 6090,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6077,
											"end": 6101,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "tag",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6111,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6111,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6111,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6175,
											"end": 6178,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6218,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6240,
											"end": 6246,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6235,
											"end": 6238,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6228,
											"end": 6247,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6266,
											"end": 6270,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6295,
											"end": 6297,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6290,
											"end": 6293,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6286,
											"end": 6298,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6279,
											"end": 6298,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 6279,
											"end": 6298,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6332,
											"end": 6334,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6325,
											"end": 6330,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6321,
											"end": 6335,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6353,
											"end": 6354,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "tag",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6377,
											"end": 6383,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6374,
											"end": 6375,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6371,
											"end": 6384,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6438,
											"end": 6451,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6438,
											"end": 6451,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6426,
											"end": 6452,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6426,
											"end": 6452,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6399,
											"end": 6400,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6392,
											"end": 6401,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "tag",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6548,
											"end": 6551,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 6548,
											"end": 6551,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6562,
											"end": 6823,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 6562,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6741,
											"end": 6743,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6730,
											"end": 6739,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6723,
											"end": 6744,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6704,
											"end": 6708,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6761,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 6813,
											"end": 6815,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6802,
											"end": 6811,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6798,
											"end": 6816,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6790,
											"end": 6796,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6761,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 6761,
											"end": 6817,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6828,
											"end": 7497,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 6828,
											"end": 7497,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6955,
											"end": 6961,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6963,
											"end": 6969,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6971,
											"end": 6977,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7024,
											"end": 7026,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7012,
											"end": 7021,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7003,
											"end": 7010,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7022,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6995,
											"end": 7027,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6992,
											"end": 7044,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6992,
											"end": 7044,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 6992,
											"end": 7044,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7040,
											"end": 7041,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7037,
											"end": 7038,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7030,
											"end": 7042,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6992,
											"end": 7044,
											"name": "tag",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 6992,
											"end": 7044,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7063,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 7082,
											"end": 7091,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7063,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 7063,
											"end": 7092,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7063,
											"end": 7092,
											"name": "tag",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 7063,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7053,
											"end": 7092,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7053,
											"end": 7092,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7143,
											"end": 7145,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7132,
											"end": 7141,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7128,
											"end": 7146,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7115,
											"end": 7147,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 7166,
											"end": 7184,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7207,
											"end": 7209,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7199,
											"end": 7205,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7196,
											"end": 7210,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7227,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 7193,
											"end": 7227,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7223,
											"end": 7224,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7220,
											"end": 7221,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7213,
											"end": 7225,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7227,
											"name": "tag",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 7193,
											"end": 7227,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7246,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 7299,
											"end": 7306,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7290,
											"end": 7296,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7279,
											"end": 7288,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 7275,
											"end": 7297,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7246,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 7246,
											"end": 7307,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7246,
											"end": 7307,
											"name": "tag",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 7246,
											"end": 7307,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7236,
											"end": 7307,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7236,
											"end": 7307,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7360,
											"end": 7362,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7349,
											"end": 7358,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7345,
											"end": 7363,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7332,
											"end": 7364,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 7316,
											"end": 7364,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7316,
											"end": 7364,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7389,
											"end": 7391,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7379,
											"end": 7387,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7376,
											"end": 7392,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7373,
											"end": 7409,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7373,
											"end": 7409,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 7373,
											"end": 7409,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7405,
											"end": 7406,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7402,
											"end": 7403,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7395,
											"end": 7407,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7373,
											"end": 7409,
											"name": "tag",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 7373,
											"end": 7409,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7373,
											"end": 7409,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7428,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 7483,
											"end": 7490,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7472,
											"end": 7480,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7461,
											"end": 7470,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7457,
											"end": 7481,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7428,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 7428,
											"end": 7491,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7428,
											"end": 7491,
											"name": "tag",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 7428,
											"end": 7491,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7418,
											"end": 7491,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7418,
											"end": 7491,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7418,
											"end": 7491,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6828,
											"end": 7497,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6828,
											"end": 7497,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6828,
											"end": 7497,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6828,
											"end": 7497,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6828,
											"end": 7497,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6828,
											"end": 7497,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7502,
											"end": 7849,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 7502,
											"end": 7849,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7567,
											"end": 7573,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7575,
											"end": 7581,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7628,
											"end": 7630,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7616,
											"end": 7625,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7607,
											"end": 7614,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7603,
											"end": 7626,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7599,
											"end": 7631,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7596,
											"end": 7648,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7596,
											"end": 7648,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 7596,
											"end": 7648,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7644,
											"end": 7645,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7641,
											"end": 7642,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7634,
											"end": 7646,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7596,
											"end": 7648,
											"name": "tag",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 7596,
											"end": 7648,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7667,
											"end": 7696,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 7686,
											"end": 7695,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7667,
											"end": 7696,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 7667,
											"end": 7696,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7667,
											"end": 7696,
											"name": "tag",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 7667,
											"end": 7696,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7657,
											"end": 7696,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7657,
											"end": 7696,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7746,
											"end": 7748,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7735,
											"end": 7744,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7731,
											"end": 7749,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7718,
											"end": 7750,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 7793,
											"end": 7798,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7786,
											"end": 7799,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7779,
											"end": 7800,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7772,
											"end": 7777,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7769,
											"end": 7801,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 7759,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 7759,
											"end": 7819,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7815,
											"end": 7816,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7812,
											"end": 7813,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7805,
											"end": 7817,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7759,
											"end": 7819,
											"name": "tag",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 7759,
											"end": 7819,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7838,
											"end": 7843,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7828,
											"end": 7843,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7828,
											"end": 7843,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7828,
											"end": 7843,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7502,
											"end": 7849,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7502,
											"end": 7849,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7502,
											"end": 7849,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7502,
											"end": 7849,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7502,
											"end": 7849,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7502,
											"end": 7849,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7854,
											"end": 8114,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 7854,
											"end": 8114,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7922,
											"end": 7928,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7930,
											"end": 7936,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7983,
											"end": 7985,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7971,
											"end": 7980,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7962,
											"end": 7969,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7958,
											"end": 7981,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7954,
											"end": 7986,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7951,
											"end": 8003,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7951,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 7951,
											"end": 8003,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7999,
											"end": 8000,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7996,
											"end": 7997,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7989,
											"end": 8001,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7951,
											"end": 8003,
											"name": "tag",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 7951,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8022,
											"end": 8051,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 8041,
											"end": 8050,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8022,
											"end": 8051,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 8022,
											"end": 8051,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8022,
											"end": 8051,
											"name": "tag",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 8022,
											"end": 8051,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8012,
											"end": 8051,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8012,
											"end": 8051,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8070,
											"end": 8108,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 8104,
											"end": 8106,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8093,
											"end": 8102,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8089,
											"end": 8107,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8070,
											"end": 8108,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 8070,
											"end": 8108,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8070,
											"end": 8108,
											"name": "tag",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 8070,
											"end": 8108,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8060,
											"end": 8108,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8060,
											"end": 8108,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7854,
											"end": 8114,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7854,
											"end": 8114,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7854,
											"end": 8114,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7854,
											"end": 8114,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7854,
											"end": 8114,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7854,
											"end": 8114,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 8119,
											"end": 8725,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 8119,
											"end": 8725,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8223,
											"end": 8229,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8231,
											"end": 8237,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8239,
											"end": 8245,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8247,
											"end": 8253,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8255,
											"end": 8261,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8308,
											"end": 8311,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 8296,
											"end": 8305,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8287,
											"end": 8294,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8283,
											"end": 8306,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8279,
											"end": 8312,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 8276,
											"end": 8329,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8276,
											"end": 8329,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 8276,
											"end": 8329,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8322,
											"end": 8323,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8315,
											"end": 8327,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8276,
											"end": 8329,
											"name": "tag",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 8276,
											"end": 8329,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8348,
											"end": 8377,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 8367,
											"end": 8376,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8348,
											"end": 8377,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 8348,
											"end": 8377,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8348,
											"end": 8377,
											"name": "tag",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 8348,
											"end": 8377,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8338,
											"end": 8377,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 8338,
											"end": 8377,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8396,
											"end": 8434,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 8430,
											"end": 8432,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8419,
											"end": 8428,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 8415,
											"end": 8433,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8396,
											"end": 8434,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 8396,
											"end": 8434,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8396,
											"end": 8434,
											"name": "tag",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 8396,
											"end": 8434,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8386,
											"end": 8434,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8386,
											"end": 8434,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8481,
											"end": 8483,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8470,
											"end": 8479,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8466,
											"end": 8484,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8453,
											"end": 8485,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 8443,
											"end": 8485,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8443,
											"end": 8485,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8532,
											"end": 8534,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 8521,
											"end": 8530,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8517,
											"end": 8535,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8504,
											"end": 8536,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 8494,
											"end": 8536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8494,
											"end": 8536,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8587,
											"end": 8590,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 8576,
											"end": 8585,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8572,
											"end": 8591,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8559,
											"end": 8592,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 8615,
											"end": 8633,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8607,
											"end": 8613,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8604,
											"end": 8634,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 8601,
											"end": 8651,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8601,
											"end": 8651,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 8601,
											"end": 8651,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8647,
											"end": 8648,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8644,
											"end": 8645,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8637,
											"end": 8649,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8601,
											"end": 8651,
											"name": "tag",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 8601,
											"end": 8651,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8670,
											"end": 8719,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 8711,
											"end": 8718,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8702,
											"end": 8708,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8691,
											"end": 8700,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 8687,
											"end": 8709,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8670,
											"end": 8719,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 8670,
											"end": 8719,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8730,
											"end": 9052,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 8730,
											"end": 9052,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8807,
											"end": 8813,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8815,
											"end": 8821,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8823,
											"end": 8829,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8876,
											"end": 8878,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 8864,
											"end": 8873,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8855,
											"end": 8862,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8851,
											"end": 8874,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 8844,
											"end": 8896,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8844,
											"end": 8896,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 8844,
											"end": 8896,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8892,
											"end": 8893,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8889,
											"end": 8890,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8882,
											"end": 8894,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8844,
											"end": 8896,
											"name": "tag",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 8844,
											"end": 8896,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8915,
											"end": 8944,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 8934,
											"end": 8943,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8915,
											"end": 8944,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 8915,
											"end": 8944,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8915,
											"end": 8944,
											"name": "tag",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 8915,
											"end": 8944,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8905,
											"end": 8944,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 8991,
											"end": 8993,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8976,
											"end": 8994,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8976,
											"end": 8994,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8963,
											"end": 8995,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 8963,
											"end": 8995,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9042,
											"end": 9044,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9027,
											"end": 9045,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9027,
											"end": 9045,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 9027,
											"end": 9045,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9014,
											"end": 9046,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 9014,
											"end": 9046,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8730,
											"end": 9052,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8730,
											"end": 9052,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 9469,
											"end": 9849,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 9469,
											"end": 9849,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9548,
											"end": 9549,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 9544,
											"end": 9556,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9544,
											"end": 9556,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9544,
											"end": 9556,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 9544,
											"end": 9556,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9591,
											"end": 9603,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9591,
											"end": 9603,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9591,
											"end": 9603,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9612,
											"end": 9673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 9612,
											"end": 9673,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9666,
											"end": 9670,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 9658,
											"end": 9664,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9654,
											"end": 9671,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9644,
											"end": 9671,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9644,
											"end": 9671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9612,
											"end": 9673,
											"name": "tag",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 9612,
											"end": 9673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9719,
											"end": 9721,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9711,
											"end": 9717,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9708,
											"end": 9722,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9685,
											"end": 9723,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9682,
											"end": 9843,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 9682,
											"end": 9843,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9765,
											"end": 9775,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 9760,
											"end": 9763,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 9756,
											"end": 9776,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 9753,
											"end": 9754,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9746,
											"end": 9777,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9800,
											"end": 9804,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 9797,
											"end": 9798,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9790,
											"end": 9805,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9828,
											"end": 9832,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 9825,
											"end": 9826,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9818,
											"end": 9833,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9682,
											"end": 9843,
											"name": "tag",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 9682,
											"end": 9843,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9682,
											"end": 9843,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9469,
											"end": 9849,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9469,
											"end": 9849,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9469,
											"end": 9849,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9469,
											"end": 9849,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 10683,
											"end": 10810,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 10683,
											"end": 10810,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10744,
											"end": 10754,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 10739,
											"end": 10742,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 10735,
											"end": 10755,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 10732,
											"end": 10733,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10725,
											"end": 10756,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10775,
											"end": 10779,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 10772,
											"end": 10773,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10765,
											"end": 10780,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10799,
											"end": 10803,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10796,
											"end": 10797,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10804,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10815,
											"end": 10942,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 10815,
											"end": 10942,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10876,
											"end": 10886,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 10871,
											"end": 10874,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 10867,
											"end": 10887,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 10864,
											"end": 10865,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10857,
											"end": 10888,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10907,
											"end": 10911,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 10904,
											"end": 10905,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10897,
											"end": 10912,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10931,
											"end": 10935,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10928,
											"end": 10929,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10921,
											"end": 10936,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10947,
											"end": 11082,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 10947,
											"end": 11082,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10986,
											"end": 10989,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11007,
											"end": 11024,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 11007,
											"end": 11024,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11007,
											"end": 11024,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 11004,
											"end": 11047,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11027,
											"end": 11045,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 11027,
											"end": 11045,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 11027,
											"end": 11045,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 11027,
											"end": 11045,
											"name": "tag",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 11027,
											"end": 11045,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11074,
											"end": 11075,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 11063,
											"end": 11076,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11063,
											"end": 11076,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10947,
											"end": 11082,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11087,
											"end": 11492,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 11087,
											"end": 11492,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11289,
											"end": 11291,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11271,
											"end": 11292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11271,
											"end": 11292,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11271,
											"end": 11292,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11328,
											"end": 11330,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 11308,
											"end": 11326,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11308,
											"end": 11326,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11308,
											"end": 11326,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11301,
											"end": 11331,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11367,
											"end": 11401,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 11362,
											"end": 11364,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11347,
											"end": 11365,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11347,
											"end": 11365,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11340,
											"end": 11402,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11433,
											"end": 11435,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 11418,
											"end": 11436,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11418,
											"end": 11436,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11411,
											"end": 11450,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11482,
											"end": 11485,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 11467,
											"end": 11486,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11467,
											"end": 11486,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11087,
											"end": 11492,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11497,
											"end": 11901,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 11497,
											"end": 11901,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11699,
											"end": 11701,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11681,
											"end": 11702,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11681,
											"end": 11702,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11681,
											"end": 11702,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11738,
											"end": 11740,
											"name": "PUSH",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 11718,
											"end": 11736,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11718,
											"end": 11736,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11718,
											"end": 11736,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11711,
											"end": 11741,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11777,
											"end": 11811,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 11772,
											"end": 11774,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11757,
											"end": 11775,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11757,
											"end": 11775,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11750,
											"end": 11812,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11843,
											"end": 11845,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 11828,
											"end": 11846,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11828,
											"end": 11846,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11821,
											"end": 11859,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11891,
											"end": 11894,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 11876,
											"end": 11895,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11876,
											"end": 11895,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11497,
											"end": 11901,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11906,
											"end": 12307,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 11906,
											"end": 12307,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12108,
											"end": 12110,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12090,
											"end": 12111,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12090,
											"end": 12111,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12090,
											"end": 12111,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12147,
											"end": 12149,
											"name": "PUSH",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 12127,
											"end": 12145,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12127,
											"end": 12145,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12127,
											"end": 12145,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12120,
											"end": 12150,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12186,
											"end": 12220,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 12181,
											"end": 12183,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12166,
											"end": 12184,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12166,
											"end": 12184,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12159,
											"end": 12221,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12230,
											"end": 12265,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12297,
											"end": 12300,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 12282,
											"end": 12301,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12282,
											"end": 12301,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11906,
											"end": 12307,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 12312,
											"end": 12718,
											"name": "tag",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 12312,
											"end": 12718,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12514,
											"end": 12516,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12496,
											"end": 12517,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12496,
											"end": 12517,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12496,
											"end": 12517,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12553,
											"end": 12555,
											"name": "PUSH",
											"source": 11,
											"value": "2A"
										},
										{
											"begin": 12533,
											"end": 12551,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12533,
											"end": 12551,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12533,
											"end": 12551,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12526,
											"end": 12556,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12592,
											"end": 12626,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 12587,
											"end": 12589,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12572,
											"end": 12590,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12572,
											"end": 12590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12565,
											"end": 12627,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12658,
											"end": 12660,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 12643,
											"end": 12661,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12643,
											"end": 12661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12636,
											"end": 12676,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12708,
											"end": 12711,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 12693,
											"end": 12712,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12693,
											"end": 12712,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12312,
											"end": 12718,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 12723,
											"end": 12851,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 12723,
											"end": 12851,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12763,
											"end": 12766,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12794,
											"end": 12795,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12790,
											"end": 12796,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 12787,
											"end": 12788,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12784,
											"end": 12797,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 12781,
											"end": 12820,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12781,
											"end": 12820,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 12781,
											"end": 12820,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12800,
											"end": 12818,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 12800,
											"end": 12818,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 12800,
											"end": 12818,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 12800,
											"end": 12818,
											"name": "tag",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 12800,
											"end": 12818,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12836,
											"end": 12845,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12836,
											"end": 12845,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12723,
											"end": 12851,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 12856,
											"end": 13321,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 12856,
											"end": 13321,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13113,
											"end": 13115,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13102,
											"end": 13111,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13095,
											"end": 13116,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13076,
											"end": 13080,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13139,
											"end": 13195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 13191,
											"end": 13193,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13180,
											"end": 13189,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13176,
											"end": 13194,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13168,
											"end": 13174,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13139,
											"end": 13195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 13139,
											"end": 13195,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 13139,
											"end": 13195,
											"name": "tag",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 13139,
											"end": 13195,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13243,
											"end": 13252,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13235,
											"end": 13241,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13231,
											"end": 13253,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13226,
											"end": 13228,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13215,
											"end": 13224,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13211,
											"end": 13229,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13204,
											"end": 13254,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13271,
											"end": 13315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 13308,
											"end": 13314,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13300,
											"end": 13306,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13271,
											"end": 13315,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 13271,
											"end": 13315,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 13271,
											"end": 13315,
											"name": "tag",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 13271,
											"end": 13315,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13263,
											"end": 13315,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 12856,
											"end": 13321,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12856,
											"end": 13321,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 13326,
											"end": 13725,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 13326,
											"end": 13725,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13528,
											"end": 13530,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13510,
											"end": 13531,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13510,
											"end": 13531,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13510,
											"end": 13531,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13567,
											"end": 13569,
											"name": "PUSH",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 13547,
											"end": 13565,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13547,
											"end": 13565,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13547,
											"end": 13565,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13540,
											"end": 13570,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13606,
											"end": 13640,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A206275726E2066726F6D20746865207A65726F2061646472"
										},
										{
											"begin": 13601,
											"end": 13603,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13586,
											"end": 13604,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13586,
											"end": 13604,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13579,
											"end": 13641,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13672,
											"end": 13674,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 13657,
											"end": 13675,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13657,
											"end": 13675,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13650,
											"end": 13683,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13715,
											"end": 13718,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 13700,
											"end": 13719,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13700,
											"end": 13719,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13326,
											"end": 13725,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 13730,
											"end": 14130,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 13730,
											"end": 14130,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13932,
											"end": 13934,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13914,
											"end": 13935,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13914,
											"end": 13935,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13914,
											"end": 13935,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13971,
											"end": 13973,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 13951,
											"end": 13969,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13951,
											"end": 13969,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13951,
											"end": 13969,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13944,
											"end": 13974,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14010,
											"end": 14044,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A206275726E20616D6F756E7420657863656564732062616C"
										},
										{
											"begin": 14005,
											"end": 14007,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13990,
											"end": 14008,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13990,
											"end": 14008,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13983,
											"end": 14045,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14076,
											"end": 14078,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 14061,
											"end": 14079,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14061,
											"end": 14079,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14054,
											"end": 14088,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14120,
											"end": 14123,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 14105,
											"end": 14124,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14105,
											"end": 14124,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13730,
											"end": 14130,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 15200,
											"end": 16027,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 15200,
											"end": 16027,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15597,
											"end": 15612,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 15597,
											"end": 15612,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15597,
											"end": 15612,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15579,
											"end": 15613,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15579,
											"end": 15613,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15649,
											"end": 15664,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15649,
											"end": 15664,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15644,
											"end": 15646,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15629,
											"end": 15647,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15629,
											"end": 15647,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15622,
											"end": 15665,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15559,
											"end": 15562,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 15696,
											"end": 15698,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15681,
											"end": 15699,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15681,
											"end": 15699,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15674,
											"end": 15705,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15674,
											"end": 15705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15674,
											"end": 15705,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15522,
											"end": 15526,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15522,
											"end": 15526,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15728,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 15728,
											"end": 15785,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15765,
											"end": 15784,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15765,
											"end": 15784,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15757,
											"end": 15763,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 15728,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 15728,
											"end": 15785,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 15728,
											"end": 15785,
											"name": "tag",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 15728,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15833,
											"end": 15842,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15825,
											"end": 15831,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15821,
											"end": 15843,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15816,
											"end": 15818,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 15805,
											"end": 15814,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15801,
											"end": 15819,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15794,
											"end": 15844,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15867,
											"end": 15911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 15904,
											"end": 15910,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15896,
											"end": 15902,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 15867,
											"end": 15911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 15867,
											"end": 15911,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 15867,
											"end": 15911,
											"name": "tag",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 15867,
											"end": 15911,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15853,
											"end": 15911,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15853,
											"end": 15911,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15960,
											"end": 15969,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15952,
											"end": 15958,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15948,
											"end": 15970,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15942,
											"end": 15945,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 15931,
											"end": 15940,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15927,
											"end": 15946,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15920,
											"end": 15971,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15988,
											"end": 16021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "470"
										},
										{
											"begin": 16014,
											"end": 16020,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16006,
											"end": 16012,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15988,
											"end": 16021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 15988,
											"end": 16021,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 15988,
											"end": 16021,
											"name": "tag",
											"source": 11,
											"value": "470"
										},
										{
											"begin": 15988,
											"end": 16021,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15980,
											"end": 16021,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 15200,
											"end": 16027,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15200,
											"end": 16027,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 16032,
											"end": 16281,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 16032,
											"end": 16281,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16101,
											"end": 16107,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16154,
											"end": 16156,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16142,
											"end": 16151,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16133,
											"end": 16140,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 16129,
											"end": 16152,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 16125,
											"end": 16157,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 16122,
											"end": 16174,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16122,
											"end": 16174,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 16122,
											"end": 16174,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16170,
											"end": 16171,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16167,
											"end": 16168,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16160,
											"end": 16172,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 16122,
											"end": 16174,
											"name": "tag",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 16122,
											"end": 16174,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16202,
											"end": 16211,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16196,
											"end": 16212,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 16221,
											"end": 16251,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 16245,
											"end": 16250,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16221,
											"end": 16251,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 16221,
											"end": 16251,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 16286,
											"end": 16465,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 16286,
											"end": 16465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16321,
											"end": 16324,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16363,
											"end": 16364,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 16345,
											"end": 16361,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 16342,
											"end": 16365,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 16339,
											"end": 16459,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16339,
											"end": 16459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 16339,
											"end": 16459,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16409,
											"end": 16410,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 16406,
											"end": 16407,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16403,
											"end": 16404,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16388,
											"end": 16411,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16446,
											"end": 16447,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16440,
											"end": 16448,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 16435,
											"end": 16438,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 16431,
											"end": 16449,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 16339,
											"end": 16459,
											"name": "tag",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 16339,
											"end": 16459,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16286,
											"end": 16465,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16286,
											"end": 16465,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 16470,
											"end": 17141,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 16470,
											"end": 17141,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16509,
											"end": 16512,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16551,
											"end": 16555,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 16533,
											"end": 16549,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 16530,
											"end": 16556,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 16527,
											"end": 16566,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16527,
											"end": 16566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 16527,
											"end": 16566,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16470,
											"end": 17141,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16470,
											"end": 17141,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 16527,
											"end": 16566,
											"name": "tag",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 16527,
											"end": 16566,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16593,
											"end": 16595,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16587,
											"end": 16596,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16658,
											"end": 16674,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 16654,
											"end": 16679,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16654,
											"end": 16679,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16651,
											"end": 16652,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 16587,
											"end": 16596,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16630,
											"end": 16680,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 16709,
											"end": 16713,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16703,
											"end": 16714,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 16733,
											"end": 16749,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 16768,
											"end": 16786,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16839,
											"end": 16841,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16832,
											"end": 16836,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 16824,
											"end": 16830,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 16820,
											"end": 16837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16817,
											"end": 16842,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 16812,
											"end": 16814,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16804,
											"end": 16810,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 16801,
											"end": 16815,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 16798,
											"end": 16843,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 16795,
											"end": 16853,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16795,
											"end": 16853,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 16795,
											"end": 16853,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16846,
											"end": 16851,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16846,
											"end": 16851,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16846,
											"end": 16851,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16846,
											"end": 16851,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16846,
											"end": 16851,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16470,
											"end": 17141,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16470,
											"end": 17141,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 16795,
											"end": 16853,
											"name": "tag",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 16795,
											"end": 16853,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16883,
											"end": 16889,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16877,
											"end": 16881,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 16873,
											"end": 16890,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16862,
											"end": 16890,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16862,
											"end": 16890,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16919,
											"end": 16922,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16913,
											"end": 16923,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 16946,
											"end": 16948,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16938,
											"end": 16944,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16935,
											"end": 16949,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 16932,
											"end": 16959,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16932,
											"end": 16959,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 16932,
											"end": 16959,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16952,
											"end": 16957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16952,
											"end": 16957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16952,
											"end": 16957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16952,
											"end": 16957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16952,
											"end": 16957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16952,
											"end": 16957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16470,
											"end": 17141,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16470,
											"end": 17141,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 16932,
											"end": 16959,
											"name": "tag",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 16932,
											"end": 16959,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17036,
											"end": 17038,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 17017,
											"end": 17033,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 17011,
											"end": 17015,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 17007,
											"end": 17034,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17003,
											"end": 17039,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16996,
											"end": 17000,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16987,
											"end": 16993,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16982,
											"end": 16985,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 16978,
											"end": 16994,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16974,
											"end": 17001,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16971,
											"end": 17040,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 16968,
											"end": 17050,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16968,
											"end": 17050,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 16968,
											"end": 17050,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 17043,
											"end": 17048,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17043,
											"end": 17048,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17043,
											"end": 17048,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17043,
											"end": 17048,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17043,
											"end": 17048,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17043,
											"end": 17048,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16470,
											"end": 17141,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16470,
											"end": 17141,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 16968,
											"end": 17050,
											"name": "tag",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 16968,
											"end": 17050,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17059,
											"end": 17116,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 17110,
											"end": 17114,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17101,
											"end": 17107,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17093,
											"end": 17099,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 17089,
											"end": 17108,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17085,
											"end": 17115,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17079,
											"end": 17083,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 17059,
											"end": 17116,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 17059,
											"end": 17116,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 17059,
											"end": 17116,
											"name": "tag",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 17059,
											"end": 17116,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17132,
											"end": 17135,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17132,
											"end": 17135,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 16470,
											"end": 17141,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16470,
											"end": 17141,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 17567,
											"end": 17971,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 17567,
											"end": 17971,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17769,
											"end": 17771,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17751,
											"end": 17772,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 17751,
											"end": 17772,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17751,
											"end": 17772,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17808,
											"end": 17810,
											"name": "PUSH",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 17788,
											"end": 17806,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17788,
											"end": 17806,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17788,
											"end": 17806,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17781,
											"end": 17811,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17847,
											"end": 17881,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 17842,
											"end": 17844,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 17827,
											"end": 17845,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17827,
											"end": 17845,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17820,
											"end": 17882,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17913,
											"end": 17915,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 17898,
											"end": 17916,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17898,
											"end": 17916,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17891,
											"end": 17929,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17961,
											"end": 17964,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 17946,
											"end": 17965,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17946,
											"end": 17965,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17567,
											"end": 17971,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 17976,
											"end": 18537,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 17976,
											"end": 18537,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18273,
											"end": 18288,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 18273,
											"end": 18288,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18273,
											"end": 18288,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 18255,
											"end": 18289,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18255,
											"end": 18289,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18325,
											"end": 18340,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 18325,
											"end": 18340,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 18320,
											"end": 18322,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18305,
											"end": 18323,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18305,
											"end": 18323,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18298,
											"end": 18341,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18372,
											"end": 18374,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 18357,
											"end": 18375,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18357,
											"end": 18375,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18350,
											"end": 18384,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 18350,
											"end": 18384,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18350,
											"end": 18384,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18415,
											"end": 18417,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 18400,
											"end": 18418,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18400,
											"end": 18418,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18393,
											"end": 18427,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18393,
											"end": 18427,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18393,
											"end": 18427,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18235,
											"end": 18238,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 18458,
											"end": 18461,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 18443,
											"end": 18462,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18443,
											"end": 18462,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18436,
											"end": 18468,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18436,
											"end": 18468,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18436,
											"end": 18468,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18198,
											"end": 18202,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18198,
											"end": 18202,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18485,
											"end": 18531,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 18485,
											"end": 18531,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18511,
											"end": 18530,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18511,
											"end": 18530,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18503,
											"end": 18509,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 18485,
											"end": 18531,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 18485,
											"end": 18531,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 18485,
											"end": 18531,
											"name": "tag",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 18485,
											"end": 18531,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18477,
											"end": 18531,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 17976,
											"end": 18537,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17976,
											"end": 18537,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										}
									]
								},
								"9BE393994F02169C966A8F7D954E5F555F9D6FDEA83C170362FF79CF2C5CE4F1": "68747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e"
							}
						},
						"methodIdentifiers": {
							"GOLD()": "3e4bee38",
							"SHIELD()": "5b2725ed",
							"SILVER()": "e3e55f08",
							"SWORD()": "13dc989f",
							"THORS_HAMMER()": "d562e204",
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"burnBatch(address,uint256[],uint256[])": "6b20c454",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mintBatch()": "6ecf11d7",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SHIELD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SILVER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SWORD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"THORS_HAMMER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"msc_token/ERC1155.sol\":\"GameItems\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/ERC1155.sol\":{\"keccak256\":\"0x2ee783b761b16497821c43bce5aa4e7f2d396ec36ea025abc3a6c233b2398e6c\",\"urls\":[\"bzz-raw://c9b0957efc4f9b1493182e3df1bf08106112b017df595eeb841601964b9f1243\",\"dweb:/ipfs/QmfYgLqPN1o1CxJBiG1pNqnkdXjnaM86HQ6SuSjQkBdVmB\"]},\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x04d6d1342ece664085921a4fabc928a7bcf1cf2873fa81780f61a54dc2b9b66e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6d2b052effa2e9a7479b0fea53b46f4cbbd91947848ef632aadad20ae2e9275\",\"dweb:/ipfs/QmcZp7f5cooGZrhHE8RC1yQR53RFZt19d5fyVqNfbHmPgY\"]},\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0x65283046c52a6bd3e57e456cc5eeab0dd86c00979b84495dc0109b609747fd16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cae1aa0113f29cb099e7ff5c2b8f559ede5fc9a8f1d57746e5ecea8fff9157de\",\"dweb:/ipfs/QmQrymH5ACUZcoWYSYZTQTGM1xVEZpnuQce8etBWTB33xm\"]},\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":{\"keccak256\":\"0xe243a49f159c97fdd011edb7a8ed1b48175f0fa6b8592bb6dcccac7e22d8c37b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9fcf3c76e66e7cbd95bc1d47eb41c2764670deea0e129a0bc8ed893f5ee20628\",\"dweb:/ipfs/QmUVYsGME7ikBfN638shb36WHbqecVAzxVMqSHT1eE5Qdk\"]},\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 163,
								"contract": "msc_token/ERC1155.sol:GameItems",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 169,
								"contract": "msc_token/ERC1155.sol:GameItems",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 171,
								"contract": "msc_token/ERC1155.sol:GameItems",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1092:1154  constructor(string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1147  _setURI(uri_) */\n  tag_6\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1142:1146  uri_ */\n  dup2\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1141  _setURI */\n  tag_7\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1147  _setURI(uri_) */\n  jump\t// in\ntag_6:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1092:1154  constructor(string memory uri_) {... */\n  pop\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_24)\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7936:8022  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8015  _uri = newuri */\n  dup1\n  mload\n  tag_10\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8006  _uri */\n  0x02\n  swap1\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8015  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7936:8022  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_15\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_18)\ntag_15:\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_18)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_21)\n    /* \"#utility.yul\":14:141   */\ntag_23:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1233   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":257:259   */\n  0x20\n    /* \"#utility.yul\":300:302   */\n  dup1\n    /* \"#utility.yul\":288:297   */\n  dup4\n    /* \"#utility.yul\":279:286   */\n  dup6\n    /* \"#utility.yul\":275:298   */\n  sub\n    /* \"#utility.yul\":271:303   */\n  slt\n    /* \"#utility.yul\":268:320   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":316:317   */\n  0x00\n    /* \"#utility.yul\":313:314   */\n  dup1\n    /* \"#utility.yul\":306:318   */\n  revert\n    /* \"#utility.yul\":268:320   */\ntag_27:\n    /* \"#utility.yul\":343:359   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":408:422   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":405:439   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":435:436   */\n  0x00\n    /* \"#utility.yul\":432:433   */\n  dup1\n    /* \"#utility.yul\":425:437   */\n  revert\n    /* \"#utility.yul\":405:439   */\ntag_28:\n    /* \"#utility.yul\":473:479   */\n  dup2\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":448:480   */\n  swap2\n  pop\n    /* \"#utility.yul\":518:525   */\n  dup6\n    /* \"#utility.yul\":511:515   */\n  0x1f\n    /* \"#utility.yul\":507:509   */\n  dup4\n    /* \"#utility.yul\":503:516   */\n  add\n    /* \"#utility.yul\":499:526   */\n  slt\n    /* \"#utility.yul\":489:544   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":540:541   */\n  0x00\n    /* \"#utility.yul\":537:538   */\n  dup1\n    /* \"#utility.yul\":530:542   */\n  revert\n    /* \"#utility.yul\":489:544   */\ntag_29:\n    /* \"#utility.yul\":569:571   */\n  dup2\n    /* \"#utility.yul\":563:572   */\n  mload\n    /* \"#utility.yul\":591:593   */\n  dup2\n    /* \"#utility.yul\":587:589   */\n  dup2\n    /* \"#utility.yul\":584:594   */\n  gt\n    /* \"#utility.yul\":581:617   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":597:615   */\n  tag_31\n  tag_23\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":672:674   */\n  0x40\n    /* \"#utility.yul\":666:675   */\n  mload\n    /* \"#utility.yul\":640:642   */\n  0x1f\n    /* \"#utility.yul\":726:739   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":722:744   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":746:748   */\n  0x3f\n    /* \"#utility.yul\":718:749   */\n  add\n    /* \"#utility.yul\":714:754   */\n  and\n    /* \"#utility.yul\":702:755   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":770:788   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":790:812   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":767:813   */\n  or\n    /* \"#utility.yul\":764:836   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":816:834   */\n  tag_33\n  tag_23\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":856:866   */\n  dup2\n    /* \"#utility.yul\":852:854   */\n  0x40\n    /* \"#utility.yul\":845:867   */\n  mstore\n    /* \"#utility.yul\":891:893   */\n  dup3\n    /* \"#utility.yul\":883:889   */\n  dup2\n    /* \"#utility.yul\":876:894   */\n  mstore\n    /* \"#utility.yul\":931:938   */\n  dup9\n    /* \"#utility.yul\":926:928   */\n  dup7\n    /* \"#utility.yul\":921:923   */\n  dup5\n    /* \"#utility.yul\":917:919   */\n  dup8\n    /* \"#utility.yul\":913:924   */\n  add\n    /* \"#utility.yul\":909:929   */\n  add\n    /* \"#utility.yul\":906:939   */\n  gt\n    /* \"#utility.yul\":903:956   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":952:953   */\n  0x00\n    /* \"#utility.yul\":949:950   */\n  dup1\n    /* \"#utility.yul\":942:954   */\n  revert\n    /* \"#utility.yul\":903:956   */\ntag_34:\n    /* \"#utility.yul\":974:975   */\n  0x00\n    /* \"#utility.yul\":965:975   */\n  swap4\n  pop\n    /* \"#utility.yul\":984:1113   */\ntag_35:\n    /* \"#utility.yul\":998:1000   */\n  dup3\n    /* \"#utility.yul\":995:996   */\n  dup5\n    /* \"#utility.yul\":992:1001   */\n  lt\n    /* \"#utility.yul\":984:1113   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1086:1096   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":1082:1101   */\n  dup7\n  add\n    /* \"#utility.yul\":1076:1102   */\n  mload\n    /* \"#utility.yul\":1055:1069   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":1051:1074   */\n  dup8\n  add\n    /* \"#utility.yul\":1044:1103   */\n  mstore\n    /* \"#utility.yul\":1009:1019   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":984:1113   */\n  jump(tag_35)\ntag_37:\n    /* \"#utility.yul\":1131:1133   */\n  dup3\n    /* \"#utility.yul\":1128:1129   */\n  dup5\n    /* \"#utility.yul\":1125:1134   */\n  gt\n    /* \"#utility.yul\":1122:1202   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1190:1191   */\n  0x00\n    /* \"#utility.yul\":1185:1187   */\n  dup7\n    /* \"#utility.yul\":1180:1182   */\n  dup5\n    /* \"#utility.yul\":1172:1178   */\n  dup4\n    /* \"#utility.yul\":1168:1183   */\n  add\n    /* \"#utility.yul\":1164:1188   */\n  add\n    /* \"#utility.yul\":1157:1192   */\n  mstore\n    /* \"#utility.yul\":1122:1202   */\ntag_38:\n    /* \"#utility.yul\":1221:1227   */\n  swap9\n    /* \"#utility.yul\":146:1233   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1238:1618   */\ntag_13:\n    /* \"#utility.yul\":1317:1318   */\n  0x01\n    /* \"#utility.yul\":1313:1325   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1360:1372   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1381:1442   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1435:1439   */\n  0x7f\n    /* \"#utility.yul\":1427:1433   */\n  dup3\n    /* \"#utility.yul\":1423:1440   */\n  and\n    /* \"#utility.yul\":1413:1440   */\n  swap2\n  pop\n    /* \"#utility.yul\":1381:1442   */\ntag_40:\n    /* \"#utility.yul\":1488:1490   */\n  0x20\n    /* \"#utility.yul\":1480:1486   */\n  dup3\n    /* \"#utility.yul\":1477:1491   */\n  lt\n    /* \"#utility.yul\":1457:1475   */\n  dup2\n    /* \"#utility.yul\":1454:1492   */\n  sub\n    /* \"#utility.yul\":1451:1612   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1534:1544   */\n  0x4e487b71\n    /* \"#utility.yul\":1529:1532   */\n  0xe0\n    /* \"#utility.yul\":1525:1545   */\n  shl\n    /* \"#utility.yul\":1522:1523   */\n  0x00\n    /* \"#utility.yul\":1515:1546   */\n  mstore\n    /* \"#utility.yul\":1569:1573   */\n  0x22\n    /* \"#utility.yul\":1566:1567   */\n  0x04\n    /* \"#utility.yul\":1559:1574   */\n  mstore\n    /* \"#utility.yul\":1597:1601   */\n  0x24\n    /* \"#utility.yul\":1594:1595   */\n  0x00\n    /* \"#utility.yul\":1587:1602   */\n  revert\n    /* \"#utility.yul\":1451:1612   */\ntag_41:\n  pop\n    /* \"#utility.yul\":1238:1618   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_24:\n    /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":597:622   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":1184:1198   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1177:1199   */\n      iszero\n        /* \"#utility.yul\":1159:1200   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1147:1149   */\n      0x20\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_16\n        /* \"#utility.yul\":1019:1206   */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_7:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3131:3284  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_9:\n      tag_18\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3450:3454  bool */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3491  _operatorApprovals */\n      0x01\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3510  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3584:3973  function safeTransferFrom(... */\n    tag_10:\n      tag_30\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_15:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2256:2263  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2283:2304  account != address(0) */\n      dup4\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2275:2352  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8258:8260   */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2275:2352  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8240:8261   */\n      mstore\n        /* \"#utility.yul\":8297:8299   */\n      0x2b\n        /* \"#utility.yul\":8277:8295   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8270:8300   */\n      mstore\n        /* \"#utility.yul\":8336:8370   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":8316:8334   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8309:8371   */\n      mstore\n      shl(0xa8, 0x65726f2061646472657373)\n        /* \"#utility.yul\":8387:8405   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8380:8421   */\n      mstore\n        /* \"#utility.yul\":8438:8457   */\n      0x84\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2275:2352  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2378  _balances */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2382  _balances[id] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2391  _balances[id][account] */\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1323:1327  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1399  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1467  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_58\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1415:1467  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1467  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_58:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1519  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_60\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1483:1519  super.supportsInterface(interfaceId) */\n    tag_60:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1339:1519  return... */\n      swap3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1985:1998  string memory */\n      0x60\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2017:2021  _uri */\n      0x02\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2010:2021  return _uri */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4290  from == _msgSender() */\n      dup6\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4290  from == _msgSender() */\n      eq\n      dup1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4330  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_73\n      jumpi\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4294:4330  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4311:4315  from */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4294:4330  isApprovedForAll(from, _msgSender()) */\n    tag_73:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9055:9057   */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9037:9058   */\n      mstore\n        /* \"#utility.yul\":9094:9096   */\n      0x32\n        /* \"#utility.yul\":9074:9092   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9067:9097   */\n      mstore\n        /* \"#utility.yul\":9133:9167   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":9113:9131   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9106:9168   */\n      mstore\n      shl(0x72, 0x1bdddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":9184:9202   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9177:9225   */\n      mstore\n        /* \"#utility.yul\":9242:9261   */\n      0x84\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n      tag_55\n        /* \"#utility.yul\":8853:9267   */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n    tag_75:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4468  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4439:4443  from */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4445:4447  to */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4449:4452  ids */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4454:4461  amounts */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4463:4467  data */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4438  _safeBatchTransferFrom */\n      tag_79\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4468  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_37:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2706:2722  uint256[] memory */\n      0x60\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2765:2768  ids */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2765:2775  ids.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2754  accounts */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2761  accounts.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2775  accounts.length == ids.length */\n      eq\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9474:9476   */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9456:9477   */\n      mstore\n        /* \"#utility.yul\":9513:9515   */\n      0x29\n        /* \"#utility.yul\":9493:9511   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9486:9516   */\n      mstore\n        /* \"#utility.yul\":9552:9586   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":9532:9550   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9525:9587   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":9603:9621   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9596:9635   */\n      mstore\n        /* \"#utility.yul\":9652:9671   */\n      0x84\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":9272:9677   */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_81:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2832:2862  uint256[] memory batchBalances */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2879:2887  accounts */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2879:2894  accounts.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2865:2895  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_85\n      jumpi\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_87:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2832:2895  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2911:2920  uint256 i */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_88:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2930:2938  accounts */\n      dup5\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2930:2945  accounts.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2926:2927  i */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2926:2945  i < accounts.length */\n      lt\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:3015  balanceOf(accounts[i], ids[i]) */\n      tag_91\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2995:3003  accounts */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3004:3005  i */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2995:3006  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_93\n      jumpi\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3008:3011  ids */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3012:3013  i */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3008:3014  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_96\n      jumpi\n      tag_96\n      tag_94\n      jump\t// in\n    tag_96:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:2994  balanceOf */\n      tag_15\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:3015  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_91:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:2979  batchBalances */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2980:2981  i */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:2982  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_98\n      jumpi\n      tag_98\n      tag_94\n      jump\t// in\n    tag_98:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:3015  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2947:2950  ++i */\n      tag_99\n      dup2\n      tag_100\n      jump\t// in\n    tag_99:\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_88)\n    tag_89:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3043:3056  batchBalances */\n      swap4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3131:3284  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_43:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3277  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_102\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3258:3266  operator */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3268:3276  approved */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3243  _setApprovalForAll */\n      tag_104\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3277  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_102:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3131:3284  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3584:3973  function safeTransferFrom(... */\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3804  from == _msgSender() */\n      dup6\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3804  from == _msgSender() */\n      eq\n      dup1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3844  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_109\n      jumpi\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3808:3844  isApprovedForAll(from, _msgSender()) */\n      tag_109\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3825:3829  from */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3808:3844  isApprovedForAll(from, _msgSender()) */\n    tag_109:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3763:3911  require(... */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10288:10290   */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3763:3911  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10270:10291   */\n      mstore\n        /* \"#utility.yul\":10327:10329   */\n      0x29\n        /* \"#utility.yul\":10307:10325   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10300:10330   */\n      mstore\n        /* \"#utility.yul\":10366:10400   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":10346:10364   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10339:10401   */\n      mstore\n      shl(0xba, 0x08185c1c1c9bdd9959)\n        /* \"#utility.yul\":10417:10435   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10410:10449   */\n      mstore\n        /* \"#utility.yul\":10466:10485   */\n      0x84\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3763:3911  require(... */\n      tag_55\n        /* \"#utility.yul\":10086:10491   */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3763:3911  require(... */\n    tag_111:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3966  _safeTransferFrom(from, to, id, amount, data) */\n      tag_78\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3939:3943  from */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3945:3947  to */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3949:3951  id */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3953:3959  amount */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3961:3965  data */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3938  _safeTransferFrom */\n      tag_115\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3966  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6068:7113  function _safeBatchTransferFrom(... */\n    tag_79:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6288:6295  amounts */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6288:6302  amounts.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6277  ids */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6284  ids.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6302  ids.length == amounts.length */\n      eq\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6266:6347  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10698:10700   */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6266:6347  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10680:10701   */\n      mstore\n        /* \"#utility.yul\":10737:10739   */\n      0x28\n        /* \"#utility.yul\":10717:10735   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10710:10740   */\n      mstore\n        /* \"#utility.yul\":10776:10810   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":10756:10774   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10749:10811   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":10827:10845   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10820:10858   */\n      mstore\n        /* \"#utility.yul\":10875:10894   */\n      0x84\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6266:6347  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":10496:10900   */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6266:6347  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6365:6381  to != address(0) */\n      dup5\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6357:6423  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_124\n      jump\t// in\n    tag_122:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6434:6450  address operator */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_128:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6571:6574  ids */\n      dup5\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6571:6581  ids.length */\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6567:6568  i */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6567:6581  i < ids.length */\n      lt\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6602:6612  uint256 id */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6615:6618  ids */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6619:6620  i */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6615:6621  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_132\n      jumpi\n      tag_132\n      tag_94\n      jump\t// in\n    tag_132:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6602:6621  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6635:6649  uint256 amount */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6659  amounts */\n      dup6\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6660:6661  i */\n      dup4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6662  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_134\n      jumpi\n      tag_134\n      tag_94\n      jump\t// in\n    tag_134:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6677:6696  uint256 fromBalance */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6699:6712  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6699:6718  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6662  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6740:6761  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6732:6808  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_137\n      jump\t// in\n    tag_135:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6859  _balances */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6863  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6869  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6892  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6892  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6937  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6947  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6892  fromBalance - amount */\n      dup5\n      swap3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6859  _balances */\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6947  _balances[id][to] += amount */\n      tag_138\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6892  fromBalance - amount */\n      dup5\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6947  _balances[id][to] += amount */\n      tag_139\n      jump\t// in\n    tag_138:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6588:6958  {... */\n      pop\n      pop\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6583:6586  ++i */\n      dup1\n      tag_140\n      swap1\n      tag_100\n      jump\t// in\n    tag_140:\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_128)\n    tag_129:\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7003:7005  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6997:7001  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6987:6995  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7007:7010  ids */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7012:7019  amounts */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_141\n      swap3\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7106  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_143\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7067:7075  operator */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7077:7081  from */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7083:7085  to */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7090  ids */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7092:7099  amounts */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7101:7105  data */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7066  _doSafeBatchTransferAcceptanceCheck */\n      tag_144\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7106  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_143:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6256:7113  {... */\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6068:7113  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12074:12397  function _setApprovalForAll(... */\n    tag_104:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12224:12232  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12232  owner != operator */\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12220  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12232  owner != operator */\n      and\n      sub\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12527:12529   */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12509:12530   */\n      mstore\n        /* \"#utility.yul\":12566:12568   */\n      0x29\n        /* \"#utility.yul\":12546:12564   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12539:12569   */\n      mstore\n        /* \"#utility.yul\":12605:12639   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":12585:12603   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12578:12640   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":12656:12674   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12649:12688   */\n      mstore\n        /* \"#utility.yul\":12705:12724   */\n      0x84\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_55\n        /* \"#utility.yul\":12325:12730   */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12313  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12306  _operatorApprovals */\n      0x01\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12313  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12323  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12334  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12349:12390  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":1159:1200   */\n      swap2\n      dup3\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12349:12390  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12349:12390  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12074:12397  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4925:5722  function _safeTransferFrom(... */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5106:5122  to != address(0) */\n      dup5\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5098:5164  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_124\n      jump\t// in\n    tag_151:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5217:5313  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_154\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5248:5252  from */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5256  to */\n      dup8\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5279  _asSingletonArray(id) */\n      tag_155\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5276:5278  id */\n      dup9\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5275  _asSingletonArray */\n      tag_156\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5279  _asSingletonArray(id) */\n      jump\t// in\n    tag_155:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5281:5306  _asSingletonArray(amount) */\n      tag_78\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5299:5305  amount */\n      dup9\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5281:5298  _asSingletonArray */\n      tag_156\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5281:5306  _asSingletonArray(amount) */\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5217:5313  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n    tag_154:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5324:5343  uint256 fromBalance */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5346:5359  _balances[id] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5346:5365  _balances[id][from] */\n      dup11\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5383:5404  fromBalance >= amount */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5375:5451  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_137\n      jump\t// in\n    tag_158:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5494  _balances */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5498  _balances[id] */\n      dup6\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5504  _balances[id][from] */\n      dup12\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5527  fromBalance - amount */\n      dup8\n      dup6\n      sub\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5527  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5564  _balances[id][to] */\n      swap1\n      dup9\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5574  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5527  fromBalance - amount */\n      dup7\n      swap3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5494  _balances */\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5574  _balances[id][to] += amount */\n      tag_160\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5527  fromBalance - amount */\n      dup5\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5574  _balances[id][to] += amount */\n      tag_139\n      jump\t// in\n    tag_160:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":12909:12934   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":12965:12967   */\n      0x20\n        /* \"#utility.yul\":12950:12968   */\n      dup2\n      add\n        /* \"#utility.yul\":12943:12977   */\n      dup7\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      dup10\n      and\n      swap3\n      dup11\n      dup3\n      and\n      swap3\n      swap2\n      dup7\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":12882:12900   */\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5715  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_163\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5678:5686  operator */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5688:5692  from */\n      dup9\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5694:5696  to */\n      dup9\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5698:5700  id */\n      dup9\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5702:5708  amount */\n      dup9\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5710:5714  data */\n      dup9\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5677  _doSafeTransferAcceptanceCheck */\n      tag_164\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5715  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_163:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5088:5722  {... */\n      pop\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4925:5722  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14282:15074  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14514:14527  to.isContract */\n      dup5\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":1087:1107  extcodesize(account) */\n      extcodesize\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":1133:1141  size > 0 */\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14510:15068  if (to.isContract()) {... */\n      tag_143\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14628  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14592  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14628  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_170\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14593:14601  operator */\n      dup10\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14603:14607  from */\n      dup10\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14609:14612  ids */\n      dup9\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14614:14621  amounts */\n      dup9\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14623:14627  data */\n      dup9\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14628  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_171\n      jump\t// in\n    tag_170:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_172\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_173\n      swap2\n      dup2\n      add\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      0x01\n    tag_172:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14545:15058  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_175\n      jumpi\n      tag_179\n      tag_180\n      jump\t// in\n    tag_179:\n      dup1\n      0x08c379a0\n      sub\n      tag_178\n      jumpi\n      pop\n      tag_181\n      tag_182\n      jump\t// in\n    tag_181:\n      dup1\n      tag_183\n      jumpi\n      pop\n      jump(tag_177)\n    tag_183:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14934:14940  reason */\n      dup1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14927:14941  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14545:15058  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_178:\n      pop\n    tag_177:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14981:15043  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15136:15138   */\n      0x20\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14981:15043  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15118:15139   */\n      mstore\n        /* \"#utility.yul\":15175:15177   */\n      0x34\n        /* \"#utility.yul\":15155:15173   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15148:15178   */\n      mstore\n        /* \"#utility.yul\":15214:15248   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":15194:15212   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15187:15249   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":15265:15283   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15258:15308   */\n      mstore\n        /* \"#utility.yul\":15325:15344   */\n      0x84\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14981:15043  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_55\n        /* \"#utility.yul\":14934:15350   */\n      jump\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14545:15058  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_175:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14707:14767  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14703:14860  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_163\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14791:14841  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_190\n      jump\t// in\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15080:15273  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_156:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15213:15214  1 */\n      0x01\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15146:15162  uint256[] memory */\n      0x60\n      swap2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15174:15196  uint256[] memory array */\n      0x00\n      swap2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15174:15215  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15236:15243  element */\n      dup3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15230  array */\n      dup2\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15231:15232  0 */\n      0x00\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15233  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_196\n      jumpi\n      tag_196\n      tag_94\n      jump\t// in\n    tag_196:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15243  array[0] = element */\n      mstore\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15261:15266  array */\n      swap3\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15080:15273  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13551:14276  function _doSafeTransferAcceptanceCheck(... */\n    tag_164:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13758:13771  to.isContract */\n      dup5\n      and\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":1087:1107  extcodesize(account) */\n      extcodesize\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":1133:1141  size > 0 */\n      iszero\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13754:14270  if (to.isContract()) {... */\n      tag_143\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13831  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_200\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13832:13840  operator */\n      dup10\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13842:13846  from */\n      dup10\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13848:13850  id */\n      dup9\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13852:13858  amount */\n      dup9\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13860:13864  data */\n      dup9\n      swap1\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_201\n      jump\t// in\n    tag_200:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_202\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_203\n      swap2\n      dup2\n      add\n      swap1\n      tag_174\n      jump\t// in\n    tag_203:\n      0x01\n    tag_202:\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13789:14260  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_204\n      jumpi\n      tag_179\n      tag_180\n      jump\t// in\n    tag_204:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13914:13969  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13910:14062  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_163\n      jumpi\n        /* \"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13993:14043  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_190\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_217:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_228\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_228:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_14:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_230:\n        /* \"#utility.yul\":360:389   */\n      tag_231\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_217\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":633:764   */\n    tag_218:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":707:739   */\n      dup2\n      and\n        /* \"#utility.yul\":697:740   */\n      dup2\n      eq\n        /* \"#utility.yul\":687:758   */\n      tag_234\n      jumpi\n        /* \"#utility.yul\":754:755   */\n      0x00\n        /* \"#utility.yul\":751:752   */\n      dup1\n        /* \"#utility.yul\":744:756   */\n      revert\n        /* \"#utility.yul\":687:758   */\n    tag_234:\n        /* \"#utility.yul\":633:764   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":769:1014   */\n    tag_20:\n        /* \"#utility.yul\":827:833   */\n      0x00\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":868:877   */\n      dup3\n        /* \"#utility.yul\":859:866   */\n      dup5\n        /* \"#utility.yul\":855:878   */\n      sub\n        /* \"#utility.yul\":851:883   */\n      slt\n        /* \"#utility.yul\":848:900   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":896:897   */\n      0x00\n        /* \"#utility.yul\":893:894   */\n      dup1\n        /* \"#utility.yul\":886:898   */\n      revert\n        /* \"#utility.yul\":848:900   */\n    tag_236:\n        /* \"#utility.yul\":935:944   */\n      dup2\n        /* \"#utility.yul\":922:945   */\n      calldataload\n        /* \"#utility.yul\":954:984   */\n      tag_237\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":954:984   */\n      tag_218\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":1003:1008   */\n      swap4\n        /* \"#utility.yul\":769:1014   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1211:1391   */\n    tag_26:\n        /* \"#utility.yul\":1270:1276   */\n      0x00\n        /* \"#utility.yul\":1323:1325   */\n      0x20\n        /* \"#utility.yul\":1311:1320   */\n      dup3\n        /* \"#utility.yul\":1302:1309   */\n      dup5\n        /* \"#utility.yul\":1298:1321   */\n      sub\n        /* \"#utility.yul\":1294:1326   */\n      slt\n        /* \"#utility.yul\":1291:1343   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":1339:1340   */\n      0x00\n        /* \"#utility.yul\":1336:1337   */\n      dup1\n        /* \"#utility.yul\":1329:1341   */\n      revert\n        /* \"#utility.yul\":1291:1343   */\n    tag_240:\n      pop\n        /* \"#utility.yul\":1362:1385   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1211:1391   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1396:1868   */\n    tag_219:\n        /* \"#utility.yul\":1438:1441   */\n      0x00\n        /* \"#utility.yul\":1476:1481   */\n      dup2\n        /* \"#utility.yul\":1470:1482   */\n      mload\n        /* \"#utility.yul\":1503:1509   */\n      dup1\n        /* \"#utility.yul\":1498:1501   */\n      dup5\n        /* \"#utility.yul\":1491:1510   */\n      mstore\n        /* \"#utility.yul\":1528:1529   */\n      0x00\n        /* \"#utility.yul\":1538:1700   */\n    tag_242:\n        /* \"#utility.yul\":1552:1558   */\n      dup2\n        /* \"#utility.yul\":1549:1550   */\n      dup2\n        /* \"#utility.yul\":1546:1559   */\n      lt\n        /* \"#utility.yul\":1538:1700   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":1614:1618   */\n      0x20\n        /* \"#utility.yul\":1670:1683   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":1666:1688   */\n      dup2\n      add\n        /* \"#utility.yul\":1660:1689   */\n      mload\n        /* \"#utility.yul\":1642:1653   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":1638:1658   */\n      dup3\n      add\n        /* \"#utility.yul\":1631:1690   */\n      mstore\n        /* \"#utility.yul\":1567:1579   */\n      add\n        /* \"#utility.yul\":1538:1700   */\n      jump(tag_242)\n    tag_244:\n        /* \"#utility.yul\":1718:1724   */\n      dup2\n        /* \"#utility.yul\":1715:1716   */\n      dup2\n        /* \"#utility.yul\":1712:1725   */\n      gt\n        /* \"#utility.yul\":1709:1796   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":1784:1785   */\n      0x00\n        /* \"#utility.yul\":1777:1781   */\n      0x20\n        /* \"#utility.yul\":1768:1774   */\n      dup4\n        /* \"#utility.yul\":1763:1766   */\n      dup8\n        /* \"#utility.yul\":1759:1775   */\n      add\n        /* \"#utility.yul\":1755:1782   */\n      add\n        /* \"#utility.yul\":1748:1786   */\n      mstore\n        /* \"#utility.yul\":1709:1796   */\n    tag_245:\n      pop\n        /* \"#utility.yul\":1850:1852   */\n      0x1f\n        /* \"#utility.yul\":1829:1844   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1825:1854   */\n      and\n        /* \"#utility.yul\":1816:1855   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1857:1861   */\n      0x20\n        /* \"#utility.yul\":1812:1862   */\n      add\n      swap3\n        /* \"#utility.yul\":1396:1868   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1873:2093   */\n    tag_29:\n        /* \"#utility.yul\":2022:2024   */\n      0x20\n        /* \"#utility.yul\":2011:2020   */\n      dup2\n        /* \"#utility.yul\":2004:2025   */\n      mstore\n        /* \"#utility.yul\":1985:1989   */\n      0x00\n        /* \"#utility.yul\":2042:2087   */\n      tag_237\n        /* \"#utility.yul\":2083:2085   */\n      0x20\n        /* \"#utility.yul\":2072:2081   */\n      dup4\n        /* \"#utility.yul\":2068:2086   */\n      add\n        /* \"#utility.yul\":2060:2066   */\n      dup5\n        /* \"#utility.yul\":2042:2087   */\n      tag_219\n      jump\t// in\n        /* \"#utility.yul\":2098:2225   */\n    tag_86:\n        /* \"#utility.yul\":2159:2169   */\n      0x4e487b71\n        /* \"#utility.yul\":2154:2157   */\n      0xe0\n        /* \"#utility.yul\":2150:2170   */\n      shl\n        /* \"#utility.yul\":2147:2148   */\n      0x00\n        /* \"#utility.yul\":2140:2171   */\n      mstore\n        /* \"#utility.yul\":2190:2194   */\n      0x41\n        /* \"#utility.yul\":2187:2188   */\n      0x04\n        /* \"#utility.yul\":2180:2195   */\n      mstore\n        /* \"#utility.yul\":2214:2218   */\n      0x24\n        /* \"#utility.yul\":2211:2212   */\n      0x00\n        /* \"#utility.yul\":2204:2219   */\n      revert\n        /* \"#utility.yul\":2230:2479   */\n    tag_220:\n        /* \"#utility.yul\":2340:2342   */\n      0x1f\n        /* \"#utility.yul\":2321:2334   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2317:2344   */\n      and\n        /* \"#utility.yul\":2305:2345   */\n      dup2\n      add\n        /* \"#utility.yul\":2375:2393   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2360:2394   */\n      dup2\n      gt\n        /* \"#utility.yul\":2396:2418   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2357:2419   */\n      or\n        /* \"#utility.yul\":2354:2442   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":2422:2440   */\n      tag_251\n      tag_86\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2458:2460   */\n      0x40\n        /* \"#utility.yul\":2451:2473   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":2230:2479   */\n      jump\t// out\n        /* \"#utility.yul\":2484:2667   */\n    tag_221:\n        /* \"#utility.yul\":2544:2548   */\n      0x00\n        /* \"#utility.yul\":2577:2595   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2569:2575   */\n      dup3\n        /* \"#utility.yul\":2566:2596   */\n      gt\n        /* \"#utility.yul\":2563:2619   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":2599:2617   */\n      tag_254\n      tag_86\n      jump\t// in\n    tag_254:\n      pop\n        /* \"#utility.yul\":2644:2645   */\n      0x05\n        /* \"#utility.yul\":2640:2654   */\n      shl\n        /* \"#utility.yul\":2656:2660   */\n      0x20\n        /* \"#utility.yul\":2636:2661   */\n      add\n      swap1\n        /* \"#utility.yul\":2484:2667   */\n      jump\t// out\n        /* \"#utility.yul\":2672:3396   */\n    tag_222:\n        /* \"#utility.yul\":2726:2731   */\n      0x00\n        /* \"#utility.yul\":2779:2782   */\n      dup3\n        /* \"#utility.yul\":2772:2776   */\n      0x1f\n        /* \"#utility.yul\":2764:2770   */\n      dup4\n        /* \"#utility.yul\":2760:2777   */\n      add\n        /* \"#utility.yul\":2756:2783   */\n      slt\n        /* \"#utility.yul\":2746:2801   */\n      tag_256\n      jumpi\n        /* \"#utility.yul\":2797:2798   */\n      0x00\n        /* \"#utility.yul\":2794:2795   */\n      dup1\n        /* \"#utility.yul\":2787:2799   */\n      revert\n        /* \"#utility.yul\":2746:2801   */\n    tag_256:\n        /* \"#utility.yul\":2833:2839   */\n      dup2\n        /* \"#utility.yul\":2820:2840   */\n      calldataload\n        /* \"#utility.yul\":2859:2863   */\n      0x20\n        /* \"#utility.yul\":2882:2925   */\n      tag_257\n        /* \"#utility.yul\":2922:2924   */\n      dup3\n        /* \"#utility.yul\":2882:2925   */\n      tag_221\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2954:2956   */\n      0x40\n        /* \"#utility.yul\":2948:2957   */\n      mload\n        /* \"#utility.yul\":2966:2997   */\n      tag_258\n        /* \"#utility.yul\":2994:2996   */\n      dup3\n        /* \"#utility.yul\":2986:2992   */\n      dup3\n        /* \"#utility.yul\":2966:2997   */\n      tag_220\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":3032:3050   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":3124:3125   */\n      0x05\n        /* \"#utility.yul\":3120:3130   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":3108:3131   */\n      dup6\n      add\n        /* \"#utility.yul\":3104:3136   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":3066:3081   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":3148:3163   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":3145:3180   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":3176:3177   */\n      0x00\n        /* \"#utility.yul\":3173:3174   */\n      dup1\n        /* \"#utility.yul\":3166:3178   */\n      revert\n        /* \"#utility.yul\":3145:3180   */\n    tag_259:\n        /* \"#utility.yul\":3212:3214   */\n      dup3\n        /* \"#utility.yul\":3204:3210   */\n      dup7\n        /* \"#utility.yul\":3200:3215   */\n      add\n        /* \"#utility.yul\":3224:3366   */\n    tag_260:\n        /* \"#utility.yul\":3240:3246   */\n      dup5\n        /* \"#utility.yul\":3235:3238   */\n      dup2\n        /* \"#utility.yul\":3232:3247   */\n      lt\n        /* \"#utility.yul\":3224:3366   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":3306:3323   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3294:3324   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3344:3356   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3257:3269   */\n      dup4\n      add\n        /* \"#utility.yul\":3224:3366   */\n      jump(tag_260)\n    tag_262:\n      pop\n        /* \"#utility.yul\":3384:3390   */\n      swap7\n        /* \"#utility.yul\":2672:3396   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3401:3956   */\n    tag_223:\n        /* \"#utility.yul\":3443:3448   */\n      0x00\n        /* \"#utility.yul\":3496:3499   */\n      dup3\n        /* \"#utility.yul\":3489:3493   */\n      0x1f\n        /* \"#utility.yul\":3481:3487   */\n      dup4\n        /* \"#utility.yul\":3477:3494   */\n      add\n        /* \"#utility.yul\":3473:3500   */\n      slt\n        /* \"#utility.yul\":3463:3518   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":3514:3515   */\n      0x00\n        /* \"#utility.yul\":3511:3512   */\n      dup1\n        /* \"#utility.yul\":3504:3516   */\n      revert\n        /* \"#utility.yul\":3463:3518   */\n    tag_264:\n        /* \"#utility.yul\":3550:3556   */\n      dup2\n        /* \"#utility.yul\":3537:3557   */\n      calldataload\n        /* \"#utility.yul\":3576:3594   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3572:3574   */\n      dup2\n        /* \"#utility.yul\":3569:3595   */\n      gt\n        /* \"#utility.yul\":3566:3618   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":3598:3616   */\n      tag_266\n      tag_86\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3647:3649   */\n      0x40\n        /* \"#utility.yul\":3641:3650   */\n      mload\n        /* \"#utility.yul\":3659:3726   */\n      tag_267\n        /* \"#utility.yul\":3714:3716   */\n      0x1f\n        /* \"#utility.yul\":3695:3708   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3691:3718   */\n      and\n        /* \"#utility.yul\":3720:3724   */\n      0x20\n        /* \"#utility.yul\":3687:3725   */\n      add\n        /* \"#utility.yul\":3641:3650   */\n      dup3\n        /* \"#utility.yul\":3659:3726   */\n      tag_220\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":3750:3752   */\n      dup2\n        /* \"#utility.yul\":3742:3748   */\n      dup2\n        /* \"#utility.yul\":3735:3753   */\n      mstore\n        /* \"#utility.yul\":3796:3799   */\n      dup5\n        /* \"#utility.yul\":3789:3793   */\n      0x20\n        /* \"#utility.yul\":3784:3786   */\n      dup4\n        /* \"#utility.yul\":3776:3782   */\n      dup7\n        /* \"#utility.yul\":3772:3787   */\n      add\n        /* \"#utility.yul\":3768:3794   */\n      add\n        /* \"#utility.yul\":3765:3800   */\n      gt\n        /* \"#utility.yul\":3762:3817   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":3813:3814   */\n      0x00\n        /* \"#utility.yul\":3810:3811   */\n      dup1\n        /* \"#utility.yul\":3803:3815   */\n      revert\n        /* \"#utility.yul\":3762:3817   */\n    tag_268:\n        /* \"#utility.yul\":3877:3879   */\n      dup2\n        /* \"#utility.yul\":3870:3874   */\n      0x20\n        /* \"#utility.yul\":3862:3868   */\n      dup6\n        /* \"#utility.yul\":3858:3875   */\n      add\n        /* \"#utility.yul\":3851:3855   */\n      0x20\n        /* \"#utility.yul\":3843:3849   */\n      dup4\n        /* \"#utility.yul\":3839:3856   */\n      add\n        /* \"#utility.yul\":3826:3880   */\n      calldatacopy\n        /* \"#utility.yul\":3924:3925   */\n      0x00\n        /* \"#utility.yul\":3900:3915   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":3917:3921   */\n      0x20\n        /* \"#utility.yul\":3896:3922   */\n      add\n        /* \"#utility.yul\":3889:3926   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3904:3910   */\n      swap4\n        /* \"#utility.yul\":3401:3956   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3961:4904   */\n    tag_32:\n        /* \"#utility.yul\":4115:4121   */\n      0x00\n        /* \"#utility.yul\":4123:4129   */\n      dup1\n        /* \"#utility.yul\":4131:4137   */\n      0x00\n        /* \"#utility.yul\":4139:4145   */\n      dup1\n        /* \"#utility.yul\":4147:4153   */\n      0x00\n        /* \"#utility.yul\":4200:4203   */\n      0xa0\n        /* \"#utility.yul\":4188:4197   */\n      dup7\n        /* \"#utility.yul\":4179:4186   */\n      dup9\n        /* \"#utility.yul\":4175:4198   */\n      sub\n        /* \"#utility.yul\":4171:4204   */\n      slt\n        /* \"#utility.yul\":4168:4221   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":4217:4218   */\n      0x00\n        /* \"#utility.yul\":4214:4215   */\n      dup1\n        /* \"#utility.yul\":4207:4219   */\n      revert\n        /* \"#utility.yul\":4168:4221   */\n    tag_270:\n        /* \"#utility.yul\":4240:4269   */\n      tag_271\n        /* \"#utility.yul\":4259:4268   */\n      dup7\n        /* \"#utility.yul\":4240:4269   */\n      tag_217\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":4230:4269   */\n      swap5\n      pop\n        /* \"#utility.yul\":4288:4326   */\n      tag_272\n        /* \"#utility.yul\":4322:4324   */\n      0x20\n        /* \"#utility.yul\":4311:4320   */\n      dup8\n        /* \"#utility.yul\":4307:4325   */\n      add\n        /* \"#utility.yul\":4288:4326   */\n      tag_217\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":4278:4326   */\n      swap4\n      pop\n        /* \"#utility.yul\":4377:4379   */\n      0x40\n        /* \"#utility.yul\":4366:4375   */\n      dup7\n        /* \"#utility.yul\":4362:4380   */\n      add\n        /* \"#utility.yul\":4349:4381   */\n      calldataload\n        /* \"#utility.yul\":4400:4418   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4441:4443   */\n      dup1\n        /* \"#utility.yul\":4433:4439   */\n      dup3\n        /* \"#utility.yul\":4430:4444   */\n      gt\n        /* \"#utility.yul\":4427:4461   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":4457:4458   */\n      0x00\n        /* \"#utility.yul\":4454:4455   */\n      dup1\n        /* \"#utility.yul\":4447:4459   */\n      revert\n        /* \"#utility.yul\":4427:4461   */\n    tag_273:\n        /* \"#utility.yul\":4480:4541   */\n      tag_274\n        /* \"#utility.yul\":4533:4540   */\n      dup10\n        /* \"#utility.yul\":4524:4530   */\n      dup4\n        /* \"#utility.yul\":4513:4522   */\n      dup11\n        /* \"#utility.yul\":4509:4531   */\n      add\n        /* \"#utility.yul\":4480:4541   */\n      tag_222\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":4470:4541   */\n      swap5\n      pop\n        /* \"#utility.yul\":4594:4596   */\n      0x60\n        /* \"#utility.yul\":4583:4592   */\n      dup9\n        /* \"#utility.yul\":4579:4597   */\n      add\n        /* \"#utility.yul\":4566:4598   */\n      calldataload\n        /* \"#utility.yul\":4550:4598   */\n      swap2\n      pop\n        /* \"#utility.yul\":4623:4625   */\n      dup1\n        /* \"#utility.yul\":4613:4621   */\n      dup3\n        /* \"#utility.yul\":4610:4626   */\n      gt\n        /* \"#utility.yul\":4607:4643   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":4639:4640   */\n      0x00\n        /* \"#utility.yul\":4636:4637   */\n      dup1\n        /* \"#utility.yul\":4629:4641   */\n      revert\n        /* \"#utility.yul\":4607:4643   */\n    tag_275:\n        /* \"#utility.yul\":4662:4725   */\n      tag_276\n        /* \"#utility.yul\":4717:4724   */\n      dup10\n        /* \"#utility.yul\":4706:4714   */\n      dup4\n        /* \"#utility.yul\":4695:4704   */\n      dup11\n        /* \"#utility.yul\":4691:4715   */\n      add\n        /* \"#utility.yul\":4662:4725   */\n      tag_222\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":4652:4725   */\n      swap4\n      pop\n        /* \"#utility.yul\":4778:4781   */\n      0x80\n        /* \"#utility.yul\":4767:4776   */\n      dup9\n        /* \"#utility.yul\":4763:4782   */\n      add\n        /* \"#utility.yul\":4750:4783   */\n      calldataload\n        /* \"#utility.yul\":4734:4783   */\n      swap2\n      pop\n        /* \"#utility.yul\":4808:4810   */\n      dup1\n        /* \"#utility.yul\":4798:4806   */\n      dup3\n        /* \"#utility.yul\":4795:4811   */\n      gt\n        /* \"#utility.yul\":4792:4828   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":4824:4825   */\n      0x00\n        /* \"#utility.yul\":4821:4822   */\n      dup1\n        /* \"#utility.yul\":4814:4826   */\n      revert\n        /* \"#utility.yul\":4792:4828   */\n    tag_277:\n      pop\n        /* \"#utility.yul\":4847:4898   */\n      tag_278\n        /* \"#utility.yul\":4890:4897   */\n      dup9\n        /* \"#utility.yul\":4879:4887   */\n      dup3\n        /* \"#utility.yul\":4868:4877   */\n      dup10\n        /* \"#utility.yul\":4864:4888   */\n      add\n        /* \"#utility.yul\":4847:4898   */\n      tag_223\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4837:4898   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3961:4904   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4909:6117   */\n    tag_36:\n        /* \"#utility.yul\":5027:5033   */\n      0x00\n        /* \"#utility.yul\":5035:5041   */\n      dup1\n        /* \"#utility.yul\":5088:5090   */\n      0x40\n        /* \"#utility.yul\":5076:5085   */\n      dup4\n        /* \"#utility.yul\":5067:5074   */\n      dup6\n        /* \"#utility.yul\":5063:5086   */\n      sub\n        /* \"#utility.yul\":5059:5091   */\n      slt\n        /* \"#utility.yul\":5056:5108   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":5104:5105   */\n      0x00\n        /* \"#utility.yul\":5101:5102   */\n      dup1\n        /* \"#utility.yul\":5094:5106   */\n      revert\n        /* \"#utility.yul\":5056:5108   */\n    tag_280:\n        /* \"#utility.yul\":5144:5153   */\n      dup3\n        /* \"#utility.yul\":5131:5154   */\n      calldataload\n        /* \"#utility.yul\":5173:5191   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5214:5216   */\n      dup1\n        /* \"#utility.yul\":5206:5212   */\n      dup3\n        /* \"#utility.yul\":5203:5217   */\n      gt\n        /* \"#utility.yul\":5200:5234   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":5230:5231   */\n      0x00\n        /* \"#utility.yul\":5227:5228   */\n      dup1\n        /* \"#utility.yul\":5220:5232   */\n      revert\n        /* \"#utility.yul\":5200:5234   */\n    tag_281:\n        /* \"#utility.yul\":5268:5274   */\n      dup2\n        /* \"#utility.yul\":5257:5266   */\n      dup6\n        /* \"#utility.yul\":5253:5275   */\n      add\n        /* \"#utility.yul\":5243:5275   */\n      swap2\n      pop\n        /* \"#utility.yul\":5313:5320   */\n      dup6\n        /* \"#utility.yul\":5306:5310   */\n      0x1f\n        /* \"#utility.yul\":5302:5304   */\n      dup4\n        /* \"#utility.yul\":5298:5311   */\n      add\n        /* \"#utility.yul\":5294:5321   */\n      slt\n        /* \"#utility.yul\":5284:5339   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":5335:5336   */\n      0x00\n        /* \"#utility.yul\":5332:5333   */\n      dup1\n        /* \"#utility.yul\":5325:5337   */\n      revert\n        /* \"#utility.yul\":5284:5339   */\n    tag_282:\n        /* \"#utility.yul\":5371:5373   */\n      dup2\n        /* \"#utility.yul\":5358:5374   */\n      calldataload\n        /* \"#utility.yul\":5393:5397   */\n      0x20\n        /* \"#utility.yul\":5416:5459   */\n      tag_283\n        /* \"#utility.yul\":5456:5458   */\n      dup3\n        /* \"#utility.yul\":5416:5459   */\n      tag_221\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":5488:5490   */\n      0x40\n        /* \"#utility.yul\":5482:5491   */\n      mload\n        /* \"#utility.yul\":5500:5531   */\n      tag_284\n        /* \"#utility.yul\":5528:5530   */\n      dup3\n        /* \"#utility.yul\":5520:5526   */\n      dup3\n        /* \"#utility.yul\":5500:5531   */\n      tag_220\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":5566:5584   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":5654:5655   */\n      0x05\n        /* \"#utility.yul\":5650:5660   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":5642:5661   */\n      dup6\n      add\n        /* \"#utility.yul\":5638:5666   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":5600:5615   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":5678:5697   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":5675:5714   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":5710:5711   */\n      0x00\n        /* \"#utility.yul\":5707:5708   */\n      dup1\n        /* \"#utility.yul\":5700:5712   */\n      revert\n        /* \"#utility.yul\":5675:5714   */\n    tag_285:\n        /* \"#utility.yul\":5734:5745   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5754:5902   */\n    tag_286:\n        /* \"#utility.yul\":5770:5776   */\n      dup4\n        /* \"#utility.yul\":5765:5768   */\n      dup7\n        /* \"#utility.yul\":5762:5777   */\n      lt\n        /* \"#utility.yul\":5754:5902   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":5836:5859   */\n      tag_289\n        /* \"#utility.yul\":5855:5858   */\n      dup7\n        /* \"#utility.yul\":5836:5859   */\n      tag_217\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":5824:5860   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5787:5799   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5880:5892   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":5754:5902   */\n      jump(tag_286)\n    tag_288:\n        /* \"#utility.yul\":5921:5927   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":5965:5983   */\n      dup7\n      add\n        /* \"#utility.yul\":5952:5984   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5996:6012   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5993:6029   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":6025:6026   */\n      0x00\n        /* \"#utility.yul\":6022:6023   */\n      dup1\n        /* \"#utility.yul\":6015:6027   */\n      revert\n        /* \"#utility.yul\":5993:6029   */\n    tag_290:\n      pop\n        /* \"#utility.yul\":6048:6111   */\n      tag_291\n        /* \"#utility.yul\":6103:6110   */\n      dup6\n        /* \"#utility.yul\":6092:6100   */\n      dup3\n        /* \"#utility.yul\":6081:6090   */\n      dup7\n        /* \"#utility.yul\":6077:6101   */\n      add\n        /* \"#utility.yul\":6048:6111   */\n      tag_222\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":6038:6111   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4909:6117   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6122:6557   */\n    tag_224:\n        /* \"#utility.yul\":6175:6178   */\n      0x00\n        /* \"#utility.yul\":6213:6218   */\n      dup2\n        /* \"#utility.yul\":6207:6219   */\n      mload\n        /* \"#utility.yul\":6240:6246   */\n      dup1\n        /* \"#utility.yul\":6235:6238   */\n      dup5\n        /* \"#utility.yul\":6228:6247   */\n      mstore\n        /* \"#utility.yul\":6266:6270   */\n      0x20\n        /* \"#utility.yul\":6295:6297   */\n      dup1\n        /* \"#utility.yul\":6290:6293   */\n      dup6\n        /* \"#utility.yul\":6286:6298   */\n      add\n        /* \"#utility.yul\":6279:6298   */\n      swap5\n      pop\n        /* \"#utility.yul\":6332:6334   */\n      dup1\n        /* \"#utility.yul\":6325:6330   */\n      dup5\n        /* \"#utility.yul\":6321:6335   */\n      add\n        /* \"#utility.yul\":6353:6354   */\n      0x00\n        /* \"#utility.yul\":6363:6532   */\n    tag_293:\n        /* \"#utility.yul\":6377:6383   */\n      dup4\n        /* \"#utility.yul\":6374:6375   */\n      dup2\n        /* \"#utility.yul\":6371:6384   */\n      lt\n        /* \"#utility.yul\":6363:6532   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":6438:6451   */\n      dup2\n      mload\n        /* \"#utility.yul\":6426:6452   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6472:6484   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6507:6522   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6399:6400   */\n      0x01\n        /* \"#utility.yul\":6392:6401   */\n      add\n        /* \"#utility.yul\":6363:6532   */\n      jump(tag_293)\n    tag_295:\n      pop\n        /* \"#utility.yul\":6548:6551   */\n      swap5\n      swap6\n        /* \"#utility.yul\":6122:6557   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6562:6823   */\n    tag_39:\n        /* \"#utility.yul\":6741:6743   */\n      0x20\n        /* \"#utility.yul\":6730:6739   */\n      dup2\n        /* \"#utility.yul\":6723:6744   */\n      mstore\n        /* \"#utility.yul\":6704:6708   */\n      0x00\n        /* \"#utility.yul\":6761:6817   */\n      tag_237\n        /* \"#utility.yul\":6813:6815   */\n      0x20\n        /* \"#utility.yul\":6802:6811   */\n      dup4\n        /* \"#utility.yul\":6798:6816   */\n      add\n        /* \"#utility.yul\":6790:6796   */\n      dup5\n        /* \"#utility.yul\":6761:6817   */\n      tag_224\n      jump\t// in\n        /* \"#utility.yul\":6828:7175   */\n    tag_42:\n        /* \"#utility.yul\":6893:6899   */\n      0x00\n        /* \"#utility.yul\":6901:6907   */\n      dup1\n        /* \"#utility.yul\":6954:6956   */\n      0x40\n        /* \"#utility.yul\":6942:6951   */\n      dup4\n        /* \"#utility.yul\":6933:6940   */\n      dup6\n        /* \"#utility.yul\":6929:6952   */\n      sub\n        /* \"#utility.yul\":6925:6957   */\n      slt\n        /* \"#utility.yul\":6922:6974   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":6970:6971   */\n      0x00\n        /* \"#utility.yul\":6967:6968   */\n      dup1\n        /* \"#utility.yul\":6960:6972   */\n      revert\n        /* \"#utility.yul\":6922:6974   */\n    tag_299:\n        /* \"#utility.yul\":6993:7022   */\n      tag_300\n        /* \"#utility.yul\":7012:7021   */\n      dup4\n        /* \"#utility.yul\":6993:7022   */\n      tag_217\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":6983:7022   */\n      swap2\n      pop\n        /* \"#utility.yul\":7072:7074   */\n      0x20\n        /* \"#utility.yul\":7061:7070   */\n      dup4\n        /* \"#utility.yul\":7057:7075   */\n      add\n        /* \"#utility.yul\":7044:7076   */\n      calldataload\n        /* \"#utility.yul\":7119:7124   */\n      dup1\n        /* \"#utility.yul\":7112:7125   */\n      iszero\n        /* \"#utility.yul\":7105:7126   */\n      iszero\n        /* \"#utility.yul\":7098:7103   */\n      dup2\n        /* \"#utility.yul\":7095:7127   */\n      eq\n        /* \"#utility.yul\":7085:7145   */\n      tag_301\n      jumpi\n        /* \"#utility.yul\":7141:7142   */\n      0x00\n        /* \"#utility.yul\":7138:7139   */\n      dup1\n        /* \"#utility.yul\":7131:7143   */\n      revert\n        /* \"#utility.yul\":7085:7145   */\n    tag_301:\n        /* \"#utility.yul\":7164:7169   */\n      dup1\n        /* \"#utility.yul\":7154:7169   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6828:7175   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7180:7440   */\n    tag_46:\n        /* \"#utility.yul\":7248:7254   */\n      0x00\n        /* \"#utility.yul\":7256:7262   */\n      dup1\n        /* \"#utility.yul\":7309:7311   */\n      0x40\n        /* \"#utility.yul\":7297:7306   */\n      dup4\n        /* \"#utility.yul\":7288:7295   */\n      dup6\n        /* \"#utility.yul\":7284:7307   */\n      sub\n        /* \"#utility.yul\":7280:7312   */\n      slt\n        /* \"#utility.yul\":7277:7329   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":7325:7326   */\n      0x00\n        /* \"#utility.yul\":7322:7323   */\n      dup1\n        /* \"#utility.yul\":7315:7327   */\n      revert\n        /* \"#utility.yul\":7277:7329   */\n    tag_303:\n        /* \"#utility.yul\":7348:7377   */\n      tag_304\n        /* \"#utility.yul\":7367:7376   */\n      dup4\n        /* \"#utility.yul\":7348:7377   */\n      tag_217\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":7338:7377   */\n      swap2\n      pop\n        /* \"#utility.yul\":7396:7434   */\n      tag_305\n        /* \"#utility.yul\":7430:7432   */\n      0x20\n        /* \"#utility.yul\":7419:7428   */\n      dup5\n        /* \"#utility.yul\":7415:7433   */\n      add\n        /* \"#utility.yul\":7396:7434   */\n      tag_217\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":7386:7434   */\n      swap1\n      pop\n        /* \"#utility.yul\":7180:7440   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7445:8051   */\n    tag_51:\n        /* \"#utility.yul\":7549:7555   */\n      0x00\n        /* \"#utility.yul\":7557:7563   */\n      dup1\n        /* \"#utility.yul\":7565:7571   */\n      0x00\n        /* \"#utility.yul\":7573:7579   */\n      dup1\n        /* \"#utility.yul\":7581:7587   */\n      0x00\n        /* \"#utility.yul\":7634:7637   */\n      0xa0\n        /* \"#utility.yul\":7622:7631   */\n      dup7\n        /* \"#utility.yul\":7613:7620   */\n      dup9\n        /* \"#utility.yul\":7609:7632   */\n      sub\n        /* \"#utility.yul\":7605:7638   */\n      slt\n        /* \"#utility.yul\":7602:7655   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":7651:7652   */\n      0x00\n        /* \"#utility.yul\":7648:7649   */\n      dup1\n        /* \"#utility.yul\":7641:7653   */\n      revert\n        /* \"#utility.yul\":7602:7655   */\n    tag_307:\n        /* \"#utility.yul\":7674:7703   */\n      tag_308\n        /* \"#utility.yul\":7693:7702   */\n      dup7\n        /* \"#utility.yul\":7674:7703   */\n      tag_217\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":7664:7703   */\n      swap5\n      pop\n        /* \"#utility.yul\":7722:7760   */\n      tag_309\n        /* \"#utility.yul\":7756:7758   */\n      0x20\n        /* \"#utility.yul\":7745:7754   */\n      dup8\n        /* \"#utility.yul\":7741:7759   */\n      add\n        /* \"#utility.yul\":7722:7760   */\n      tag_217\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":7712:7760   */\n      swap4\n      pop\n        /* \"#utility.yul\":7807:7809   */\n      0x40\n        /* \"#utility.yul\":7796:7805   */\n      dup7\n        /* \"#utility.yul\":7792:7810   */\n      add\n        /* \"#utility.yul\":7779:7811   */\n      calldataload\n        /* \"#utility.yul\":7769:7811   */\n      swap3\n      pop\n        /* \"#utility.yul\":7858:7860   */\n      0x60\n        /* \"#utility.yul\":7847:7856   */\n      dup7\n        /* \"#utility.yul\":7843:7861   */\n      add\n        /* \"#utility.yul\":7830:7862   */\n      calldataload\n        /* \"#utility.yul\":7820:7862   */\n      swap2\n      pop\n        /* \"#utility.yul\":7913:7916   */\n      0x80\n        /* \"#utility.yul\":7902:7911   */\n      dup7\n        /* \"#utility.yul\":7898:7917   */\n      add\n        /* \"#utility.yul\":7885:7918   */\n      calldataload\n        /* \"#utility.yul\":7941:7959   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7933:7939   */\n      dup2\n        /* \"#utility.yul\":7930:7960   */\n      gt\n        /* \"#utility.yul\":7927:7977   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":7973:7974   */\n      0x00\n        /* \"#utility.yul\":7970:7971   */\n      dup1\n        /* \"#utility.yul\":7963:7975   */\n      revert\n        /* \"#utility.yul\":7927:7977   */\n    tag_310:\n        /* \"#utility.yul\":7996:8045   */\n      tag_278\n        /* \"#utility.yul\":8037:8044   */\n      dup9\n        /* \"#utility.yul\":8028:8034   */\n      dup3\n        /* \"#utility.yul\":8017:8026   */\n      dup10\n        /* \"#utility.yul\":8013:8035   */\n      add\n        /* \"#utility.yul\":7996:8045   */\n      tag_223\n      jump\t// in\n        /* \"#utility.yul\":8468:8848   */\n    tag_64:\n        /* \"#utility.yul\":8547:8548   */\n      0x01\n        /* \"#utility.yul\":8543:8555   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":8590:8602   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":8611:8672   */\n      tag_314\n      jumpi\n        /* \"#utility.yul\":8665:8669   */\n      0x7f\n        /* \"#utility.yul\":8657:8663   */\n      dup3\n        /* \"#utility.yul\":8653:8670   */\n      and\n        /* \"#utility.yul\":8643:8670   */\n      swap2\n      pop\n        /* \"#utility.yul\":8611:8672   */\n    tag_314:\n        /* \"#utility.yul\":8718:8720   */\n      0x20\n        /* \"#utility.yul\":8710:8716   */\n      dup3\n        /* \"#utility.yul\":8707:8721   */\n      lt\n        /* \"#utility.yul\":8687:8705   */\n      dup2\n        /* \"#utility.yul\":8684:8722   */\n      sub\n        /* \"#utility.yul\":8681:8842   */\n      tag_315\n      jumpi\n        /* \"#utility.yul\":8764:8774   */\n      0x4e487b71\n        /* \"#utility.yul\":8759:8762   */\n      0xe0\n        /* \"#utility.yul\":8755:8775   */\n      shl\n        /* \"#utility.yul\":8752:8753   */\n      0x00\n        /* \"#utility.yul\":8745:8776   */\n      mstore\n        /* \"#utility.yul\":8799:8803   */\n      0x22\n        /* \"#utility.yul\":8796:8797   */\n      0x04\n        /* \"#utility.yul\":8789:8804   */\n      mstore\n        /* \"#utility.yul\":8827:8831   */\n      0x24\n        /* \"#utility.yul\":8824:8825   */\n      0x00\n        /* \"#utility.yul\":8817:8832   */\n      revert\n        /* \"#utility.yul\":8681:8842   */\n    tag_315:\n      pop\n        /* \"#utility.yul\":8468:8848   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9682:9809   */\n    tag_94:\n        /* \"#utility.yul\":9743:9753   */\n      0x4e487b71\n        /* \"#utility.yul\":9738:9741   */\n      0xe0\n        /* \"#utility.yul\":9734:9754   */\n      shl\n        /* \"#utility.yul\":9731:9732   */\n      0x00\n        /* \"#utility.yul\":9724:9755   */\n      mstore\n        /* \"#utility.yul\":9774:9778   */\n      0x32\n        /* \"#utility.yul\":9771:9772   */\n      0x04\n        /* \"#utility.yul\":9764:9779   */\n      mstore\n        /* \"#utility.yul\":9798:9802   */\n      0x24\n        /* \"#utility.yul\":9795:9796   */\n      0x00\n        /* \"#utility.yul\":9788:9803   */\n      revert\n        /* \"#utility.yul\":9814:9941   */\n    tag_225:\n        /* \"#utility.yul\":9875:9885   */\n      0x4e487b71\n        /* \"#utility.yul\":9870:9873   */\n      0xe0\n        /* \"#utility.yul\":9866:9886   */\n      shl\n        /* \"#utility.yul\":9863:9864   */\n      0x00\n        /* \"#utility.yul\":9856:9887   */\n      mstore\n        /* \"#utility.yul\":9906:9910   */\n      0x11\n        /* \"#utility.yul\":9903:9904   */\n      0x04\n        /* \"#utility.yul\":9896:9911   */\n      mstore\n        /* \"#utility.yul\":9930:9934   */\n      0x24\n        /* \"#utility.yul\":9927:9928   */\n      0x00\n        /* \"#utility.yul\":9920:9935   */\n      revert\n        /* \"#utility.yul\":9946:10081   */\n    tag_100:\n        /* \"#utility.yul\":9985:9988   */\n      0x00\n        /* \"#utility.yul\":10006:10023   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":10003:10046   */\n      tag_322\n      jumpi\n        /* \"#utility.yul\":10026:10044   */\n      tag_322\n      tag_225\n      jump\t// in\n    tag_322:\n      pop\n        /* \"#utility.yul\":10073:10074   */\n      0x01\n        /* \"#utility.yul\":10062:10075   */\n      add\n      swap1\n        /* \"#utility.yul\":9946:10081   */\n      jump\t// out\n        /* \"#utility.yul\":10905:11306   */\n    tag_124:\n        /* \"#utility.yul\":11107:11109   */\n      0x20\n        /* \"#utility.yul\":11089:11110   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11146:11148   */\n      0x25\n        /* \"#utility.yul\":11126:11144   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11119:11149   */\n      mstore\n        /* \"#utility.yul\":11185:11219   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":11180:11182   */\n      0x40\n        /* \"#utility.yul\":11165:11183   */\n      dup3\n      add\n        /* \"#utility.yul\":11158:11220   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":11251:11253   */\n      0x60\n        /* \"#utility.yul\":11236:11254   */\n      dup3\n      add\n        /* \"#utility.yul\":11229:11264   */\n      mstore\n        /* \"#utility.yul\":11296:11299   */\n      0x80\n        /* \"#utility.yul\":11281:11300   */\n      add\n      swap1\n        /* \"#utility.yul\":10905:11306   */\n      jump\t// out\n        /* \"#utility.yul\":11311:11717   */\n    tag_137:\n        /* \"#utility.yul\":11513:11515   */\n      0x20\n        /* \"#utility.yul\":11495:11516   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11552:11554   */\n      0x2a\n        /* \"#utility.yul\":11532:11550   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11525:11555   */\n      mstore\n        /* \"#utility.yul\":11591:11625   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":11586:11588   */\n      0x40\n        /* \"#utility.yul\":11571:11589   */\n      dup3\n      add\n        /* \"#utility.yul\":11564:11626   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":11657:11659   */\n      0x60\n        /* \"#utility.yul\":11642:11660   */\n      dup3\n      add\n        /* \"#utility.yul\":11635:11675   */\n      mstore\n        /* \"#utility.yul\":11707:11710   */\n      0x80\n        /* \"#utility.yul\":11692:11711   */\n      add\n      swap1\n        /* \"#utility.yul\":11311:11717   */\n      jump\t// out\n        /* \"#utility.yul\":11722:11850   */\n    tag_139:\n        /* \"#utility.yul\":11762:11765   */\n      0x00\n        /* \"#utility.yul\":11793:11794   */\n      dup3\n        /* \"#utility.yul\":11789:11795   */\n      not\n        /* \"#utility.yul\":11786:11787   */\n      dup3\n        /* \"#utility.yul\":11783:11796   */\n      gt\n        /* \"#utility.yul\":11780:11819   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":11799:11817   */\n      tag_329\n      tag_225\n      jump\t// in\n    tag_329:\n      pop\n        /* \"#utility.yul\":11835:11844   */\n      add\n      swap1\n        /* \"#utility.yul\":11722:11850   */\n      jump\t// out\n        /* \"#utility.yul\":11855:12320   */\n    tag_142:\n        /* \"#utility.yul\":12112:12114   */\n      0x40\n        /* \"#utility.yul\":12101:12110   */\n      dup2\n        /* \"#utility.yul\":12094:12115   */\n      mstore\n        /* \"#utility.yul\":12075:12079   */\n      0x00\n        /* \"#utility.yul\":12138:12194   */\n      tag_331\n        /* \"#utility.yul\":12190:12192   */\n      0x40\n        /* \"#utility.yul\":12179:12188   */\n      dup4\n        /* \"#utility.yul\":12175:12193   */\n      add\n        /* \"#utility.yul\":12167:12173   */\n      dup6\n        /* \"#utility.yul\":12138:12194   */\n      tag_224\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":12242:12251   */\n      dup3\n        /* \"#utility.yul\":12234:12240   */\n      dup2\n        /* \"#utility.yul\":12230:12252   */\n      sub\n        /* \"#utility.yul\":12225:12227   */\n      0x20\n        /* \"#utility.yul\":12214:12223   */\n      dup5\n        /* \"#utility.yul\":12210:12228   */\n      add\n        /* \"#utility.yul\":12203:12253   */\n      mstore\n        /* \"#utility.yul\":12270:12314   */\n      tag_332\n        /* \"#utility.yul\":12307:12313   */\n      dup2\n        /* \"#utility.yul\":12299:12305   */\n      dup6\n        /* \"#utility.yul\":12270:12314   */\n      tag_224\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":12262:12314   */\n      swap6\n        /* \"#utility.yul\":11855:12320   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12988:13815   */\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13385:13400   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":13367:13401   */\n      dup3\n      mstore\n        /* \"#utility.yul\":13437:13452   */\n      dup6\n      and\n        /* \"#utility.yul\":13432:13434   */\n      0x20\n        /* \"#utility.yul\":13417:13435   */\n      dup3\n      add\n        /* \"#utility.yul\":13410:13453   */\n      mstore\n        /* \"#utility.yul\":13347:13350   */\n      0xa0\n        /* \"#utility.yul\":13484:13486   */\n      0x40\n        /* \"#utility.yul\":13469:13487   */\n      dup3\n      add\n        /* \"#utility.yul\":13462:13493   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13310:13314   */\n      0x00\n      swap1\n        /* \"#utility.yul\":13516:13573   */\n      tag_336\n      swap1\n        /* \"#utility.yul\":13553:13572   */\n      dup4\n      add\n        /* \"#utility.yul\":13545:13551   */\n      dup7\n        /* \"#utility.yul\":13516:13573   */\n      tag_224\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":13621:13630   */\n      dup3\n        /* \"#utility.yul\":13613:13619   */\n      dup2\n        /* \"#utility.yul\":13609:13631   */\n      sub\n        /* \"#utility.yul\":13604:13606   */\n      0x60\n        /* \"#utility.yul\":13593:13602   */\n      dup5\n        /* \"#utility.yul\":13589:13607   */\n      add\n        /* \"#utility.yul\":13582:13632   */\n      mstore\n        /* \"#utility.yul\":13655:13699   */\n      tag_337\n        /* \"#utility.yul\":13692:13698   */\n      dup2\n        /* \"#utility.yul\":13684:13690   */\n      dup7\n        /* \"#utility.yul\":13655:13699   */\n      tag_224\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":13641:13699   */\n      swap1\n      pop\n        /* \"#utility.yul\":13748:13757   */\n      dup3\n        /* \"#utility.yul\":13740:13746   */\n      dup2\n        /* \"#utility.yul\":13736:13758   */\n      sub\n        /* \"#utility.yul\":13730:13733   */\n      0x80\n        /* \"#utility.yul\":13719:13728   */\n      dup5\n        /* \"#utility.yul\":13715:13734   */\n      add\n        /* \"#utility.yul\":13708:13759   */\n      mstore\n        /* \"#utility.yul\":13776:13809   */\n      tag_338\n        /* \"#utility.yul\":13802:13808   */\n      dup2\n        /* \"#utility.yul\":13794:13800   */\n      dup6\n        /* \"#utility.yul\":13776:13809   */\n      tag_219\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":13768:13809   */\n      swap9\n        /* \"#utility.yul\":12988:13815   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13820:14069   */\n    tag_174:\n        /* \"#utility.yul\":13889:13895   */\n      0x00\n        /* \"#utility.yul\":13942:13944   */\n      0x20\n        /* \"#utility.yul\":13930:13939   */\n      dup3\n        /* \"#utility.yul\":13921:13928   */\n      dup5\n        /* \"#utility.yul\":13917:13940   */\n      sub\n        /* \"#utility.yul\":13913:13945   */\n      slt\n        /* \"#utility.yul\":13910:13962   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":13958:13959   */\n      0x00\n        /* \"#utility.yul\":13955:13956   */\n      dup1\n        /* \"#utility.yul\":13948:13960   */\n      revert\n        /* \"#utility.yul\":13910:13962   */\n    tag_340:\n        /* \"#utility.yul\":13990:13999   */\n      dup2\n        /* \"#utility.yul\":13984:14000   */\n      mload\n        /* \"#utility.yul\":14009:14039   */\n      tag_237\n        /* \"#utility.yul\":14033:14038   */\n      dup2\n        /* \"#utility.yul\":14009:14039   */\n      tag_218\n      jump\t// in\n        /* \"#utility.yul\":14074:14253   */\n    tag_180:\n        /* \"#utility.yul\":14109:14112   */\n      0x00\n        /* \"#utility.yul\":14151:14152   */\n      0x03\n        /* \"#utility.yul\":14133:14149   */\n      returndatasize\n        /* \"#utility.yul\":14130:14153   */\n      gt\n        /* \"#utility.yul\":14127:14247   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":14197:14198   */\n      0x04\n        /* \"#utility.yul\":14194:14195   */\n      0x00\n        /* \"#utility.yul\":14191:14192   */\n      dup1\n        /* \"#utility.yul\":14176:14199   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":14234:14235   */\n      0x00\n        /* \"#utility.yul\":14228:14236   */\n      mload\n        /* \"#utility.yul\":14223:14226   */\n      0xe0\n        /* \"#utility.yul\":14219:14237   */\n      shr\n        /* \"#utility.yul\":14127:14247   */\n    tag_343:\n        /* \"#utility.yul\":14074:14253   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14258:14929   */\n    tag_182:\n        /* \"#utility.yul\":14297:14300   */\n      0x00\n        /* \"#utility.yul\":14339:14343   */\n      0x44\n        /* \"#utility.yul\":14321:14337   */\n      returndatasize\n        /* \"#utility.yul\":14318:14344   */\n      lt\n        /* \"#utility.yul\":14315:14354   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":14258:14929   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14315:14354   */\n    tag_345:\n        /* \"#utility.yul\":14381:14383   */\n      0x40\n        /* \"#utility.yul\":14375:14384   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":14446:14462   */\n      returndatasize\n        /* \"#utility.yul\":14442:14467   */\n      dup2\n      add\n        /* \"#utility.yul\":14439:14440   */\n      0x04\n        /* \"#utility.yul\":14375:14384   */\n      dup4\n        /* \"#utility.yul\":14418:14468   */\n      returndatacopy\n        /* \"#utility.yul\":14497:14501   */\n      dup2\n        /* \"#utility.yul\":14491:14502   */\n      mload\n        /* \"#utility.yul\":14521:14537   */\n      returndatasize\n        /* \"#utility.yul\":14556:14574   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14627:14629   */\n      dup2\n        /* \"#utility.yul\":14620:14624   */\n      0x24\n        /* \"#utility.yul\":14612:14618   */\n      dup5\n        /* \"#utility.yul\":14608:14625   */\n      add\n        /* \"#utility.yul\":14605:14630   */\n      gt\n        /* \"#utility.yul\":14600:14602   */\n      dup2\n        /* \"#utility.yul\":14592:14598   */\n      dup5\n        /* \"#utility.yul\":14589:14603   */\n      gt\n        /* \"#utility.yul\":14586:14631   */\n      or\n        /* \"#utility.yul\":14583:14641   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":14634:14639   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14258:14929   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14583:14641   */\n    tag_346:\n        /* \"#utility.yul\":14671:14677   */\n      dup3\n        /* \"#utility.yul\":14665:14669   */\n      dup6\n        /* \"#utility.yul\":14661:14678   */\n      add\n        /* \"#utility.yul\":14650:14678   */\n      swap2\n      pop\n        /* \"#utility.yul\":14707:14710   */\n      dup2\n        /* \"#utility.yul\":14701:14711   */\n      mload\n        /* \"#utility.yul\":14734:14736   */\n      dup2\n        /* \"#utility.yul\":14726:14732   */\n      dup2\n        /* \"#utility.yul\":14723:14737   */\n      gt\n        /* \"#utility.yul\":14720:14747   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":14740:14745   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14258:14929   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14720:14747   */\n    tag_347:\n        /* \"#utility.yul\":14824:14826   */\n      dup5\n        /* \"#utility.yul\":14805:14821   */\n      returndatasize\n        /* \"#utility.yul\":14799:14803   */\n      dup8\n        /* \"#utility.yul\":14795:14822   */\n      add\n        /* \"#utility.yul\":14791:14827   */\n      add\n        /* \"#utility.yul\":14784:14788   */\n      0x20\n        /* \"#utility.yul\":14775:14781   */\n      dup3\n        /* \"#utility.yul\":14770:14773   */\n      dup6\n        /* \"#utility.yul\":14766:14782   */\n      add\n        /* \"#utility.yul\":14762:14789   */\n      add\n        /* \"#utility.yul\":14759:14828   */\n      gt\n        /* \"#utility.yul\":14756:14838   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":14831:14836   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14258:14929   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14756:14838   */\n    tag_348:\n        /* \"#utility.yul\":14847:14904   */\n      tag_349\n        /* \"#utility.yul\":14898:14902   */\n      0x20\n        /* \"#utility.yul\":14889:14895   */\n      dup3\n        /* \"#utility.yul\":14881:14887   */\n      dup7\n        /* \"#utility.yul\":14877:14896   */\n      add\n        /* \"#utility.yul\":14873:14903   */\n      add\n        /* \"#utility.yul\":14867:14871   */\n      dup8\n        /* \"#utility.yul\":14847:14904   */\n      tag_220\n      jump\t// in\n    tag_349:\n      pop\n        /* \"#utility.yul\":14920:14923   */\n      swap1\n      swap6\n        /* \"#utility.yul\":14258:14929   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15355:15759   */\n    tag_190:\n        /* \"#utility.yul\":15557:15559   */\n      0x20\n        /* \"#utility.yul\":15539:15560   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15596:15598   */\n      0x28\n        /* \"#utility.yul\":15576:15594   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15569:15599   */\n      mstore\n        /* \"#utility.yul\":15635:15669   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":15630:15632   */\n      0x40\n        /* \"#utility.yul\":15615:15633   */\n      dup3\n      add\n        /* \"#utility.yul\":15608:15670   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":15701:15703   */\n      0x60\n        /* \"#utility.yul\":15686:15704   */\n      dup3\n      add\n        /* \"#utility.yul\":15679:15717   */\n      mstore\n        /* \"#utility.yul\":15749:15752   */\n      0x80\n        /* \"#utility.yul\":15734:15753   */\n      add\n      swap1\n        /* \"#utility.yul\":15355:15759   */\n      jump\t// out\n        /* \"#utility.yul\":15764:16325   */\n    tag_201:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16061:16076   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":16043:16077   */\n      dup3\n      mstore\n        /* \"#utility.yul\":16113:16128   */\n      dup6\n      and\n        /* \"#utility.yul\":16108:16110   */\n      0x20\n        /* \"#utility.yul\":16093:16111   */\n      dup3\n      add\n        /* \"#utility.yul\":16086:16129   */\n      mstore\n        /* \"#utility.yul\":16160:16162   */\n      0x40\n        /* \"#utility.yul\":16145:16163   */\n      dup2\n      add\n        /* \"#utility.yul\":16138:16172   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":16203:16205   */\n      0x60\n        /* \"#utility.yul\":16188:16206   */\n      dup2\n      add\n        /* \"#utility.yul\":16181:16215   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":16023:16026   */\n      0xa0\n        /* \"#utility.yul\":16246:16249   */\n      0x80\n        /* \"#utility.yul\":16231:16250   */\n      dup3\n      add\n        /* \"#utility.yul\":16224:16256   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":15986:15990   */\n      0x00\n      swap1\n        /* \"#utility.yul\":16273:16319   */\n      tag_353\n      swap1\n        /* \"#utility.yul\":16299:16318   */\n      dup4\n      add\n        /* \"#utility.yul\":16291:16297   */\n      dup5\n        /* \"#utility.yul\":16273:16319   */\n      tag_219\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":16265:16319   */\n      swap8\n        /* \"#utility.yul\":15764:16325   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c26a2eb90291c87befd801307205dbc525445b5bb3395721aabf57e0c9c5bbb764736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_182": {
									"entryPoint": null,
									"id": 182,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_661": {
									"entryPoint": 70,
									"id": 661,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 261,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1620:11",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "237:996:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "247:12:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "257:2:11",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "251:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "304:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "313:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "316:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "306:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "306:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "306:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "279:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "288:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "275:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "275:23:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "300:2:11"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "271:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:32:11"
															},
															"nodeType": "YulIf",
															"src": "268:52:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "329:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "349:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "343:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:16:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "333:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "368:28:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "386:2:11",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "390:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "382:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "382:10:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "394:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "378:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "378:18:11"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "372:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "423:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "432:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "435:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "425:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "425:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "425:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "411:6:11"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "419:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "408:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:14:11"
															},
															"nodeType": "YulIf",
															"src": "405:34:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "448:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:11"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "473:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "458:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "458:22:11"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "452:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "528:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "537:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "540:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "530:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "530:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "530:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "507:2:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "511:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "503:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "503:13:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "518:7:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "499:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "492:35:11"
															},
															"nodeType": "YulIf",
															"src": "489:55:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "553:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "569:2:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "563:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "563:9:11"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "557:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "595:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "597:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "597:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "597:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "587:2:11"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "591:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "584:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:10:11"
															},
															"nodeType": "YulIf",
															"src": "581:36:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "626:17:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "640:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "636:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:7:11"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "630:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "652:23:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "672:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "666:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "666:9:11"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "656:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "684:71:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "706:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nodeType": "YulIdentifier",
																										"src": "730:2:11"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "734:4:11",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "726:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "726:13:11"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "741:2:11"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "722:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "722:22:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "746:2:11",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "718:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "718:31:11"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "751:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "714:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "714:40:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "702:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "702:53:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "688:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "814:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "816:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "816:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "816:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "773:10:11"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "785:2:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "770:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "770:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "793:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "805:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "790:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "767:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:46:11"
															},
															"nodeType": "YulIf",
															"src": "764:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "852:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "856:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "845:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "845:22:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "883:6:11"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "891:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "876:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "876:18:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "876:18:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "940:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "949:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "952:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "942:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "942:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "942:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "917:2:11"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "921:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "913:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "913:11:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "926:2:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "909:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "909:20:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "931:7:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "906:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "906:33:11"
															},
															"nodeType": "YulIf",
															"src": "903:53:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "965:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "974:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "969:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1030:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1059:6:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1067:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1055:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1055:14:11"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1071:2:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1051:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1051:23:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "1090:2:11"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1094:1:11"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1086:3:11"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1086:10:11"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1098:2:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1082:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1082:19:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1076:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1076:26:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1044:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1044:59:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1044:59:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "995:1:11"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "998:2:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "992:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "992:9:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1002:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1004:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1013:1:11"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1016:2:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1009:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1009:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1004:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "988:3:11",
																"statements": []
															},
															"src": "984:129:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1143:59:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1172:6:11"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "1180:2:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1168:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1168:15:11"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1185:2:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1164:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1164:24:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1190:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:35:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:35:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1128:1:11"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1131:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1125:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1125:9:11"
															},
															"nodeType": "YulIf",
															"src": "1122:80:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1211:16:11",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1221:6:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1211:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:11",
														"type": ""
													}
												],
												"src": "146:1087:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1293:325:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1303:22:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1317:1:11",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1320:4:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1313:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1313:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1334:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1364:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1370:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1360:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1360:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1338:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1411:31:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1413:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1427:6:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1435:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1423:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1423:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1413:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1391:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1384:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1384:26:11"
															},
															"nodeType": "YulIf",
															"src": "1381:61:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1501:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1522:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1529:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1534:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1525:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1525:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1515:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1515:31:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1515:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1566:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1569:4:11",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1559:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1559:15:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1559:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1594:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1597:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1587:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1587:15:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1587:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1457:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1480:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1488:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1477:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1477:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1454:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1454:38:11"
															},
															"nodeType": "YulIf",
															"src": "1451:161:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1273:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1282:6:11",
														"type": ""
													}
												],
												"src": "1238:380:11"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), 0)\n        }\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620015fe380380620015fe83398101604081905262000034916200011b565b6200003f8162000046565b5062000233565b80516200005b9060029060208401906200005f565b5050565b8280546200006d90620001f7565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200012f57600080fd5b82516001600160401b03808211156200014757600080fd5b818501915085601f8301126200015c57600080fd5b81518181111562000171576200017162000105565b604051601f8201601f19908116603f011681019083821181831017156200019c576200019c62000105565b816040528281528886848701011115620001b557600080fd5b600093505b82841015620001d95784840186015181850187015292850192620001ba565b82841115620001eb5760008684830101525b98975050505050505050565b600181811c908216806200020c57607f821691505b6020821081036200022d57634e487b7160e01b600052602260045260246000fd5b50919050565b6113bb80620002436000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610bc0565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610c03565b610223565b60405190151581526020016100a9565b6100e86100e3366004610c27565b610275565b6040516100a99190610c8d565b610108610103366004610dec565b610309565b005b61011d610118366004610e96565b6103a0565b6040516100a99190610f9c565b610108610138366004610faf565b6104ca565b6100c561014b366004610feb565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61010861018736600461101e565b6104d9565b60006001600160a01b0383166101fd5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061025457506001600160e01b031982166303a24d0760e21b145b8061026f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461028490611083565b80601f01602080910402602001604051908101604052809291908181526020018280546102b090611083565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103255750610325853361014b565b61038c5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016101f4565b6103998585858585610560565b5050505050565b606081518351146104055760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f4565b6000835167ffffffffffffffff81111561042157610421610ca0565b60405190808252806020026020018201604052801561044a578160200160208202803683370190505b50905060005b84518110156104c25761049585828151811061046e5761046e6110bd565b6020026020010151858381518110610488576104886110bd565b602002602001015161018c565b8282815181106104a7576104a76110bd565b60209081029190910101526104bb816110e9565b9050610450565b509392505050565b6104d533838361073d565b5050565b6001600160a01b0385163314806104f557506104f5853361014b565b6105535760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016101f4565b610399858585858561081d565b81518351146105c25760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f4565b6001600160a01b0384166105e85760405162461bcd60e51b81526004016101f490611102565b3360005b84518110156106cf576000858281518110610609576106096110bd565b602002602001015190506000858381518110610627576106276110bd565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156106775760405162461bcd60e51b81526004016101f490611147565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906106b4908490611191565b92505081905550505050806106c8906110e9565b90506105ec565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161071f9291906111a9565b60405180910390a4610735818787878787610943565b505050505050565b816001600160a01b0316836001600160a01b0316036107b05760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f4565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166108435760405162461bcd60e51b81526004016101f490611102565b3361085c81878761085388610a9e565b61039988610a9e565b6000848152602081815260408083206001600160a01b038a1684529091529020548381101561089d5760405162461bcd60e51b81526004016101f490611147565b6000858152602081815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906108da908490611191565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461093a828888888888610ae9565b50505050505050565b6001600160a01b0384163b156107355760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061098790899089908890889088906004016111d7565b6020604051808303816000875af19250505080156109c2575060408051601f3d908101601f191682019092526109bf91810190611235565b60015b610a6e576109ce611252565b806308c379a003610a0757506109e261126e565b806109ed5750610a09565b8060405162461bcd60e51b81526004016101f49190610c8d565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f4565b6001600160e01b0319811663bc197c8160e01b1461093a5760405162461bcd60e51b81526004016101f4906112f8565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610ad857610ad86110bd565b602090810291909101015292915050565b6001600160a01b0384163b156107355760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610b2d9089908990889088908890600401611340565b6020604051808303816000875af1925050508015610b68575060408051601f3d908101601f19168201909252610b6591810190611235565b60015b610b74576109ce611252565b6001600160e01b0319811663f23a6e6160e01b1461093a5760405162461bcd60e51b81526004016101f4906112f8565b80356001600160a01b0381168114610bbb57600080fd5b919050565b60008060408385031215610bd357600080fd5b610bdc83610ba4565b946020939093013593505050565b6001600160e01b031981168114610c0057600080fd5b50565b600060208284031215610c1557600080fd5b8135610c2081610bea565b9392505050565b600060208284031215610c3957600080fd5b5035919050565b6000815180845260005b81811015610c6657602081850181015186830182015201610c4a565b81811115610c78576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610c206020830184610c40565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610cdc57610cdc610ca0565b6040525050565b600067ffffffffffffffff821115610cfd57610cfd610ca0565b5060051b60200190565b600082601f830112610d1857600080fd5b81356020610d2582610ce3565b604051610d328282610cb6565b83815260059390931b8501820192828101915086841115610d5257600080fd5b8286015b84811015610d6d5780358352918301918301610d56565b509695505050505050565b600082601f830112610d8957600080fd5b813567ffffffffffffffff811115610da357610da3610ca0565b604051610dba601f8301601f191660200182610cb6565b818152846020838601011115610dcf57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610e0457600080fd5b610e0d86610ba4565b9450610e1b60208701610ba4565b9350604086013567ffffffffffffffff80821115610e3857600080fd5b610e4489838a01610d07565b94506060880135915080821115610e5a57600080fd5b610e6689838a01610d07565b93506080880135915080821115610e7c57600080fd5b50610e8988828901610d78565b9150509295509295909350565b60008060408385031215610ea957600080fd5b823567ffffffffffffffff80821115610ec157600080fd5b818501915085601f830112610ed557600080fd5b81356020610ee282610ce3565b604051610eef8282610cb6565b83815260059390931b8501820192828101915089841115610f0f57600080fd5b948201945b83861015610f3457610f2586610ba4565b82529482019490820190610f14565b96505086013592505080821115610f4a57600080fd5b50610f5785828601610d07565b9150509250929050565b600081518084526020808501945080840160005b83811015610f9157815187529582019590820190600101610f75565b509495945050505050565b602081526000610c206020830184610f61565b60008060408385031215610fc257600080fd5b610fcb83610ba4565b915060208301358015158114610fe057600080fd5b809150509250929050565b60008060408385031215610ffe57600080fd5b61100783610ba4565b915061101560208401610ba4565b90509250929050565b600080600080600060a0868803121561103657600080fd5b61103f86610ba4565b945061104d60208701610ba4565b93506040860135925060608601359150608086013567ffffffffffffffff81111561107757600080fd5b610e8988828901610d78565b600181811c9082168061109757607f821691505b6020821081036110b757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016110fb576110fb6110d3565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600082198211156111a4576111a46110d3565b500190565b6040815260006111bc6040830185610f61565b82810360208401526111ce8185610f61565b95945050505050565b6001600160a01b0386811682528516602082015260a06040820181905260009061120390830186610f61565b82810360608401526112158186610f61565b905082810360808401526112298185610c40565b98975050505050505050565b60006020828403121561124757600080fd5b8151610c2081610bea565b600060033d111561126b5760046000803e5060005160e01c5b90565b600060443d101561127c5790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156112ac57505050505090565b82850191508151818111156112c45750505050505090565b843d87010160208285010111156112de5750505050505090565b6112ed60208286010187610cb6565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061137a90830184610c40565b97965050505050505056fea2646970667358221220c26a2eb90291c87befd801307205dbc525445b5bb3395721aabf57e0c9c5bbb764736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x15FE CODESIZE SUB DUP1 PUSH3 0x15FE DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11B JUMP JUMPDEST PUSH3 0x3F DUP2 PUSH3 0x46 JUMP JUMPDEST POP PUSH3 0x233 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x5B SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x5F JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x6D SWAP1 PUSH3 0x1F7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x91 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xAC JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xDC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xDC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xBF JUMP JUMPDEST POP PUSH3 0xEA SWAP3 SWAP2 POP PUSH3 0xEE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xEA JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xEF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x171 JUMPI PUSH3 0x171 PUSH3 0x105 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x19C JUMPI PUSH3 0x19C PUSH3 0x105 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x1D9 JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x1BA JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH3 0x1EB JUMPI PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x20C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x22D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13BB DUP1 PUSH3 0x243 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xBC0 JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC03 JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xDEC JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xE96 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xF9C JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xFAF JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x101E JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x254 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x26F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x284 SWAP1 PUSH2 0x1083 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0x1083 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x325 JUMPI POP PUSH2 0x325 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x38C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x560 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x421 JUMPI PUSH2 0x421 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x44A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4C2 JUMPI PUSH2 0x495 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46E JUMPI PUSH2 0x46E PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x488 JUMPI PUSH2 0x488 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A7 JUMPI PUSH2 0x4A7 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4BB DUP2 PUSH2 0x10E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x450 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D5 CALLER DUP4 DUP4 PUSH2 0x73D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4F5 JUMPI POP PUSH2 0x4F5 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x553 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x81D JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1102 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x609 JUMPI PUSH2 0x609 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x627 JUMPI PUSH2 0x627 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B4 SWAP1 DUP5 SWAP1 PUSH2 0x1191 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x6C8 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x5EC JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x71F SWAP3 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x735 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x943 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x7B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x843 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1102 JUMP JUMPDEST CALLER PUSH2 0x85C DUP2 DUP8 DUP8 PUSH2 0x853 DUP9 PUSH2 0xA9E JUMP JUMPDEST PUSH2 0x399 DUP9 PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x89D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x8DA SWAP1 DUP5 SWAP1 PUSH2 0x1191 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x93A DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xAE9 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x987 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9C2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9BF SWAP2 DUP2 ADD SWAP1 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA6E JUMPI PUSH2 0x9CE PUSH2 0x1252 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xA07 JUMPI POP PUSH2 0x9E2 PUSH2 0x126E JUMP JUMPDEST DUP1 PUSH2 0x9ED JUMPI POP PUSH2 0xA09 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x93A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAD8 JUMPI PUSH2 0xAD8 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xB2D SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB68 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB65 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB74 JUMPI PUSH2 0x9CE PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x93A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBDC DUP4 PUSH2 0xBA4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xC00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC20 DUP2 PUSH2 0xBEA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC66 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xC4A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC78 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC20 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC40 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCDC JUMPI PUSH2 0xCDC PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xCFD JUMPI PUSH2 0xCFD PUSH2 0xCA0 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xD25 DUP3 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD32 DUP3 DUP3 PUSH2 0xCB6 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xD52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xD6D JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xD56 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDA3 JUMPI PUSH2 0xDA3 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDBA PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xCB6 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xDCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xE04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE0D DUP7 PUSH2 0xBA4 JUMP JUMPDEST SWAP5 POP PUSH2 0xE1B PUSH1 0x20 DUP8 ADD PUSH2 0xBA4 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE44 DUP10 DUP4 DUP11 ADD PUSH2 0xD07 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE66 DUP10 DUP4 DUP11 ADD PUSH2 0xD07 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE89 DUP9 DUP3 DUP10 ADD PUSH2 0xD78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xED5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xEE2 DUP3 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEEF DUP3 DUP3 PUSH2 0xCB6 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xF0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xF34 JUMPI PUSH2 0xF25 DUP7 PUSH2 0xBA4 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xF14 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xF4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF57 DUP6 DUP3 DUP7 ADD PUSH2 0xD07 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF91 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF75 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC20 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFCB DUP4 PUSH2 0xBA4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1007 DUP4 PUSH2 0xBA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1015 PUSH1 0x20 DUP5 ADD PUSH2 0xBA4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1036 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x103F DUP7 PUSH2 0xBA4 JUMP JUMPDEST SWAP5 POP PUSH2 0x104D PUSH1 0x20 DUP8 ADD PUSH2 0xBA4 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1077 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE89 DUP9 DUP3 DUP10 ADD PUSH2 0xD78 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1097 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10B7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x10FB JUMPI PUSH2 0x10FB PUSH2 0x10D3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x11A4 JUMPI PUSH2 0x11A4 PUSH2 0x10D3 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x11BC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF61 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11CE DUP2 DUP6 PUSH2 0xF61 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1203 SWAP1 DUP4 ADD DUP7 PUSH2 0xF61 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1215 DUP2 DUP7 PUSH2 0xF61 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1229 DUP2 DUP6 PUSH2 0xC40 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC20 DUP2 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x126B JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x127C JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x12AC JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x12C4 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12DE JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x12ED PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xCB6 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x137A SWAP1 DUP4 ADD DUP5 PUSH2 0xC40 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 PUSH11 0x2EB90291C87BEFD8013072 SDIV 0xDB 0xC5 0x25 DIFFICULTY JUMPDEST JUMPDEST 0xB3 CODECOPY JUMPI 0x21 0xAA 0xBF JUMPI 0xE0 0xC9 0xC5 0xBB 0xB7 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "555:14720:1:-:0;;;1092:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1134:13;1142:4;1134:7;:13::i;:::-;1092:62;555:14720;;7936:86;8002:13;;;;:4;;:13;;;;;:::i;:::-;;7936:86;:::o;555:14720::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;555:14720:1;;;-1:-1:-1;555:14720:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:11;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1087;226:6;257:2;300;288:9;279:7;275:23;271:32;268:52;;;316:1;313;306:12;268:52;343:16;;-1:-1:-1;;;;;408:14:11;;;405:34;;;435:1;432;425:12;405:34;473:6;462:9;458:22;448:32;;518:7;511:4;507:2;503:13;499:27;489:55;;540:1;537;530:12;489:55;569:2;563:9;591:2;587;584:10;581:36;;;597:18;;:::i;:::-;672:2;666:9;640:2;726:13;;-1:-1:-1;;722:22:11;;;746:2;718:31;714:40;702:53;;;770:18;;;790:22;;;767:46;764:72;;;816:18;;:::i;:::-;856:10;852:2;845:22;891:2;883:6;876:18;931:7;926:2;921;917;913:11;909:20;906:33;903:53;;;952:1;949;942:12;903:53;974:1;965:10;;984:129;998:2;995:1;992:9;984:129;;;1086:10;;;1082:19;;1076:26;1055:14;;;1051:23;;1044:59;1009:10;;;;984:129;;;1131:2;1128:1;1125:9;1122:80;;;1190:1;1185:2;1180;1172:6;1168:15;1164:24;1157:35;1122:80;1221:6;146:1087;-1:-1:-1;;;;;;;;146:1087:11:o;1238:380::-;1317:1;1313:12;;;;1360;;;1381:61;;1435:4;1427:6;1423:17;1413:27;;1381:61;1488:2;1480:6;1477:14;1457:18;1454:38;1451:161;;1534:10;1529:3;1525:20;1522:1;1515:31;1569:4;1566:1;1559:15;1597:4;1594:1;1587:15;1451:161;;1238:380;;;:::o;:::-;555:14720:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArray_1232": {
									"entryPoint": 2718,
									"id": 1232,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1076": {
									"entryPoint": null,
									"id": 1076,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1204": {
									"entryPoint": 2371,
									"id": 1204,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1139": {
									"entryPoint": 2793,
									"id": 1139,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_1922": {
									"entryPoint": null,
									"id": 1922,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_650": {
									"entryPoint": 1376,
									"id": 650,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_524": {
									"entryPoint": 2077,
									"id": 524,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1057": {
									"entryPoint": 1853,
									"id": 1057,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_317": {
									"entryPoint": 928,
									"id": 317,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_253": {
									"entryPoint": 396,
									"id": 253,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_352": {
									"entryPoint": null,
									"id": 352,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1633": {
									"entryPoint": null,
									"id": 1633,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_430": {
									"entryPoint": 777,
									"id": 430,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_390": {
									"entryPoint": 1241,
									"id": 390,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_334": {
									"entryPoint": 1226,
									"id": 334,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1955": {
									"entryPoint": null,
									"id": 1955,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_213": {
									"entryPoint": 547,
									"id": 213,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_225": {
									"entryPoint": 629,
									"id": 225,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 3335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 3448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 3564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 4126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 3937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4567,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4928,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4521,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 3299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 4329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4307,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4285,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3232,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 4690,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 4718,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 3050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16327:11",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:11"
															},
															"nodeType": "YulIf",
															"src": "111:70:11"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:11",
														"type": ""
													}
												],
												"src": "14:173:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:167:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:11"
															},
															"nodeType": "YulIf",
															"src": "289:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:11",
														"type": ""
													}
												],
												"src": "192:254:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:76:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "562:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "585:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "562:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "615:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "521:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "532:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "543:4:11",
														"type": ""
													}
												],
												"src": "451:177:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "677:87:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "742:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "751:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "754:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "744:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "744:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "700:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "711:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "722:3:11",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "727:10:11",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "718:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "718:20:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "707:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "707:32:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "697:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "697:43:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:51:11"
															},
															"nodeType": "YulIf",
															"src": "687:71:11"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "666:5:11",
														"type": ""
													}
												],
												"src": "633:131:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "838:176:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "884:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "893:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "896:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "886:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "886:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "859:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "868:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "851:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:32:11"
															},
															"nodeType": "YulIf",
															"src": "848:52:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "909:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "935:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "922:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "913:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "978:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "954:23:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "954:30:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "993:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1003:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "804:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "815:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "827:6:11",
														"type": ""
													}
												],
												"src": "769:245:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:92:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1124:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1136:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1147:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1132:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1124:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1166:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1191:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1184:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1184:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1177:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1177:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:41:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1159:41:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1083:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1094:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1105:4:11",
														"type": ""
													}
												],
												"src": "1019:187:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1281:110:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1327:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1336:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1329:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1329:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1329:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1302:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1311:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1298:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1298:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1323:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1294:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1294:32:11"
															},
															"nodeType": "YulIf",
															"src": "1291:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1352:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1375:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1362:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:23:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1352:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1247:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1258:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1270:6:11",
														"type": ""
													}
												],
												"src": "1211:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1446:422:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1456:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1476:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1470:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:12:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1460:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1498:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1503:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1491:19:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1519:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1528:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1523:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1590:110:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1604:14:11",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1614:4:11",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1608:2:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1646:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1651:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1642:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1642:11:11"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1655:2:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1638:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1638:20:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1674:5:11"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1681:1:11"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1670:3:11"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1670:13:11"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1685:2:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1666:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1666:22:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1660:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1660:29:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1631:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1631:59:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1631:59:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1549:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1552:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1546:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1560:21:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1562:17:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1571:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1574:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1567:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1567:12:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1562:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1542:3:11",
																"statements": []
															},
															"src": "1538:162:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:62:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1763:3:11"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1768:6:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1759:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1759:16:11"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1777:4:11",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1755:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1755:27:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1784:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:38:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:38:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1715:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1718:6:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1712:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1712:13:11"
															},
															"nodeType": "YulIf",
															"src": "1709:87:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1805:57:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1820:3:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1833:6:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1841:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1829:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1829:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1850:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1846:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1846:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1825:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1825:29:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1816:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1816:39:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1857:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1812:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1812:50:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1805:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1423:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1430:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1438:3:11",
														"type": ""
													}
												],
												"src": "1396:472:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1994:99:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2011:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2022:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2004:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2004:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2004:21:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2034:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2060:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2072:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2083:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2068:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2068:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "2042:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:45:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2034:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1963:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1974:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1985:4:11",
														"type": ""
													}
												],
												"src": "1873:220:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2130:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2147:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2154:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2159:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2150:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2150:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2140:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2140:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2140:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2187:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2190:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2180:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2180:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2211:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2214:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2204:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2204:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2204:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2098:127:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2277:202:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2287:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2309:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2325:4:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2331:2:11",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2321:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2321:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2340:2:11",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2336:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2336:7:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2317:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2317:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2305:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2305:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2291:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2420:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2422:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2422:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2422:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2363:10:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2375:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2360:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2360:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2399:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2411:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2396:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2396:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2357:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2357:62:11"
															},
															"nodeType": "YulIf",
															"src": "2354:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2458:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2462:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2451:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2451:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2451:22:11"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2259:6:11",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2267:4:11",
														"type": ""
													}
												],
												"src": "2230:249:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2553:114:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2597:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2599:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2599:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2599:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2569:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2577:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2566:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2566:30:11"
															},
															"nodeType": "YulIf",
															"src": "2563:56:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2628:33:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2644:1:11",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2640:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2640:14:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2656:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2636:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2636:25:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2628:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2533:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2544:4:11",
														"type": ""
													}
												],
												"src": "2484:183:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2736:660:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2785:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2794:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2797:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2787:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2787:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2787:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2764:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2772:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2760:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2760:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2779:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2756:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2756:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2749:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2749:35:11"
															},
															"nodeType": "YulIf",
															"src": "2746:55:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2810:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2820:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2820:20:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2814:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2849:14:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2859:4:11",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2853:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2872:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2922:2:11"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2882:39:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2882:43:11"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2876:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2934:23:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2954:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2948:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2948:9:11"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2938:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2986:6:11"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2994:2:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2966:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2966:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2966:31:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3006:17:11",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3017:6:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3010:3:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3039:6:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3047:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3032:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3032:18:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3032:18:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3059:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3070:6:11"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3078:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3066:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3066:15:11"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3059:3:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3090:46:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3112:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3124:1:11",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3127:2:11"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3120:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3120:10:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3108:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3108:23:11"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3133:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3104:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3104:32:11"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3094:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3164:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3173:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3176:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3166:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3166:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3166:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3151:6:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3159:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3148:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3148:15:11"
															},
															"nodeType": "YulIf",
															"src": "3145:35:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3189:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3204:6:11"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3212:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3200:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3200:15:11"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3193:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3280:86:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3301:3:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3319:3:11"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "3306:12:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3306:17:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3294:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3294:30:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3294:30:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3337:19:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3348:3:11"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3353:2:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3344:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3344:12:11"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3337:3:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3235:3:11"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3240:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3232:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3232:15:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3248:23:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3250:19:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3261:3:11"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3266:2:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3257:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3257:12:11"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3250:3:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3228:3:11",
																"statements": []
															},
															"src": "3224:142:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3375:15:11",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3384:6:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3375:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2710:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2718:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2726:5:11",
														"type": ""
													}
												],
												"src": "2672:724:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3453:503:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3502:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3511:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3514:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3504:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3504:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3504:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3481:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3489:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3477:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3477:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3496:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3473:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3473:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3466:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3466:35:11"
															},
															"nodeType": "YulIf",
															"src": "3463:55:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3527:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3550:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3537:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3537:20:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3531:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3596:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3598:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3598:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3598:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3572:2:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3576:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3569:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:26:11"
															},
															"nodeType": "YulIf",
															"src": "3566:52:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3627:23:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3647:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3641:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3641:9:11"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3631:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3679:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "3699:2:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3703:4:11",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3695:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3695:13:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3714:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3710:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3710:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3691:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3691:27:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3720:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3687:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3687:38:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3659:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3659:67:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3659:67:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3742:6:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3750:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3735:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3735:18:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3735:18:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3801:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3810:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3813:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3803:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3803:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3803:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3776:6:11"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3784:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3772:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3772:15:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3789:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3768:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3768:26:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3796:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3765:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3765:35:11"
															},
															"nodeType": "YulIf",
															"src": "3762:55:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3843:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3851:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3839:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3839:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3862:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3870:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3858:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3858:17:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3877:2:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3826:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3826:54:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3826:54:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3904:6:11"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3912:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3900:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3900:15:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3917:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3896:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3896:26:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3924:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3889:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3889:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3889:37:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3935:15:11",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3944:6:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3935:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3427:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3435:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3443:5:11",
														"type": ""
													}
												],
												"src": "3401:555:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4158:746:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4205:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4214:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4217:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4207:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4207:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4207:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4179:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4188:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4175:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4175:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4200:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4171:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4171:33:11"
															},
															"nodeType": "YulIf",
															"src": "4168:53:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4230:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4259:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4240:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4240:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4230:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4278:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4311:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4322:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4307:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4307:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4288:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4288:38:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4278:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4335:46:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4366:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4377:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4362:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4362:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4349:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4349:32:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4339:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4390:28:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4400:18:11",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4394:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4445:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4454:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4457:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4447:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4447:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4447:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4433:6:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4441:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4430:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4430:14:11"
															},
															"nodeType": "YulIf",
															"src": "4427:34:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4470:71:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4513:9:11"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4524:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4509:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4509:22:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4533:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4480:28:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4480:61:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4470:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4550:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4583:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4594:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4579:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4579:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4566:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4566:32:11"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4554:8:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4627:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4636:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4639:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4629:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4629:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4629:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4613:8:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4623:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4610:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4610:16:11"
															},
															"nodeType": "YulIf",
															"src": "4607:36:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4652:73:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4695:9:11"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4706:8:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4691:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4691:24:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4717:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4662:28:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4662:63:11"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4652:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4734:49:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4767:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4778:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4763:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4763:19:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4750:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4750:33:11"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "4738:8:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4812:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4821:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4824:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4814:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4814:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4814:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "4798:8:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4808:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4795:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4795:16:11"
															},
															"nodeType": "YulIf",
															"src": "4792:36:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4837:61:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4868:9:11"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "4879:8:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4864:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4864:24:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4890:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4847:16:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4847:51:11"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4837:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4092:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4103:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4115:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4123:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4131:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4139:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4147:6:11",
														"type": ""
													}
												],
												"src": "3961:943:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5046:1071:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5092:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5101:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5104:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5094:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5094:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5094:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5067:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5076:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5063:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5063:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5088:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5059:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5059:32:11"
															},
															"nodeType": "YulIf",
															"src": "5056:52:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5117:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5144:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5131:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5131:23:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5121:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5163:28:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5173:18:11",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5167:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5218:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5227:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5230:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5220:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5220:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5220:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5206:6:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5214:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5203:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5203:14:11"
															},
															"nodeType": "YulIf",
															"src": "5200:34:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5243:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5257:9:11"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5268:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5253:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5253:22:11"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5247:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5323:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5332:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5335:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5325:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5325:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5325:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5302:2:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5306:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5298:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5298:13:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5313:7:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5294:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5294:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5287:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5287:35:11"
															},
															"nodeType": "YulIf",
															"src": "5284:55:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5348:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5371:2:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5358:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5358:16:11"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5352:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5383:14:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5393:4:11",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "5387:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5406:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5456:2:11"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5416:39:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5416:43:11"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "5410:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5468:23:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5488:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5482:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5482:9:11"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "5472:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5520:6:11"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "5528:2:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5500:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5500:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5500:31:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5540:17:11",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5551:6:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5544:3:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5573:6:11"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5581:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5566:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5566:18:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5566:18:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5593:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5604:6:11"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5612:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5600:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5600:15:11"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "5593:3:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5624:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "5646:2:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5654:1:11",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5657:2:11"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "5650:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5650:10:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5642:19:11"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5663:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5638:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5638:28:11"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "5628:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5698:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5707:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5710:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5700:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5700:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5700:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5681:6:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5689:7:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5678:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5678:19:11"
															},
															"nodeType": "YulIf",
															"src": "5675:39:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5723:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5738:2:11"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5742:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5734:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5734:11:11"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "5727:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5810:92:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5831:3:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5855:3:11"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "5836:18:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5836:23:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5824:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5824:36:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5824:36:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5873:19:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5884:3:11"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5889:2:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5880:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5880:12:11"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5873:3:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5765:3:11"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5770:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5762:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5762:15:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5778:23:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5780:19:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5791:3:11"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5796:2:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5787:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5787:12:11"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5780:3:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5758:3:11",
																"statements": []
															},
															"src": "5754:148:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5911:16:11",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5921:6:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5911:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5936:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5969:9:11"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5980:2:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5965:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5965:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5952:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5952:32:11"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5940:8:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6013:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6022:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6025:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6015:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6015:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6015:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5999:8:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6009:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5996:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5996:16:11"
															},
															"nodeType": "YulIf",
															"src": "5993:36:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6038:73:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6081:9:11"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6092:8:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6077:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6077:24:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6103:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6048:28:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6048:63:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6038:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5004:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5015:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5027:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5035:6:11",
														"type": ""
													}
												],
												"src": "4909:1208:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6183:374:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6193:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6213:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6207:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6207:12:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6197:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6235:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6240:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6228:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6228:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6228:19:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6256:14:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6266:4:11",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6260:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6279:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6290:3:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6295:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6286:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6286:12:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6279:3:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6307:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6325:5:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6332:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6321:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6321:14:11"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6311:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6344:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6353:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6348:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6412:120:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6433:3:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6444:6:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6438:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6438:13:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6426:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6426:26:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6426:26:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6465:19:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6476:3:11"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6481:2:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6472:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6472:12:11"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6465:3:11"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6497:25:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6511:6:11"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6519:2:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6507:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6507:15:11"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6497:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6374:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6377:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6371:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6371:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6385:18:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6387:14:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6396:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6399:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6392:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6392:9:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6387:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6367:3:11",
																"statements": []
															},
															"src": "6363:169:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6541:10:11",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6548:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6541:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6160:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6167:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6175:3:11",
														"type": ""
													}
												],
												"src": "6122:435:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6713:110:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6730:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6741:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6723:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6723:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6723:21:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6753:64:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6790:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6802:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6813:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6798:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6798:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6761:28:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6761:56:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6753:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6682:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6693:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6704:4:11",
														"type": ""
													}
												],
												"src": "6562:261:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6912:263:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6958:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6967:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6970:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6960:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6960:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6960:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6933:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6942:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6929:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6929:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6954:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6925:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6925:32:11"
															},
															"nodeType": "YulIf",
															"src": "6922:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6983:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7012:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6993:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6993:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6983:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7031:45:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7061:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7072:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7057:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7057:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7044:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7044:32:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7035:5:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7129:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7138:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7141:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7131:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7131:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7131:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7098:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "7119:5:11"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "7112:6:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7112:13:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7105:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7105:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7095:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7095:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7088:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7088:40:11"
															},
															"nodeType": "YulIf",
															"src": "7085:60:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7154:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7164:5:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7154:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6870:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6881:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6893:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6901:6:11",
														"type": ""
													}
												],
												"src": "6828:347:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7267:173:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7313:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7322:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7325:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7315:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7315:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7315:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7288:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7297:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7284:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7284:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7309:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7280:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7280:32:11"
															},
															"nodeType": "YulIf",
															"src": "7277:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7338:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7367:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7348:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7348:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7338:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7386:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7419:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7430:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7415:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7415:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7396:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7396:38:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7386:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7225:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7236:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7248:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7256:6:11",
														"type": ""
													}
												],
												"src": "7180:260:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7592:459:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7639:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7648:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7651:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7641:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7641:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7641:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7613:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7622:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7609:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7609:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7634:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7605:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7605:33:11"
															},
															"nodeType": "YulIf",
															"src": "7602:53:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7664:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7693:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7674:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7674:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7664:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7712:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7745:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7756:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7741:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7741:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7722:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7722:38:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7712:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7769:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7796:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7807:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7792:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7792:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7779:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7779:32:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7769:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7820:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7847:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7858:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7843:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7843:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7830:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7830:32:11"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "7820:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7871:47:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7902:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7913:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7898:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7898:19:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7885:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7885:33:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "7875:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7961:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7970:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7973:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7963:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7963:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7963:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7933:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7941:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7930:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7930:30:11"
															},
															"nodeType": "YulIf",
															"src": "7927:50:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7986:59:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8017:9:11"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8028:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8013:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8013:22:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8037:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7996:16:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7996:49:11"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "7986:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7526:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7537:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7549:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7557:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7565:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7573:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7581:6:11",
														"type": ""
													}
												],
												"src": "7445:606:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8230:233:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8247:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8258:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8240:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8240:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8240:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8281:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8292:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8277:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8277:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8297:2:11",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8270:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8270:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8270:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8320:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8331:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8316:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8316:18:11"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8336:34:11",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8309:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8309:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8309:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8391:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8402:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8387:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8387:18:11"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8407:13:11",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8380:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8380:41:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8380:41:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8430:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8442:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8453:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8438:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8438:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8430:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8207:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8221:4:11",
														"type": ""
													}
												],
												"src": "8056:407:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8523:325:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8533:22:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8547:1:11",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8550:4:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8543:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8543:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8533:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8564:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8594:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8600:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8590:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8590:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8568:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8641:31:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8643:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8657:6:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8665:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8653:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8653:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8643:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8621:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8614:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8614:26:11"
															},
															"nodeType": "YulIf",
															"src": "8611:61:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8731:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8752:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8759:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8764:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8755:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8755:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8745:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8745:31:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8745:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8796:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8799:4:11",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8789:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8789:15:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8789:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8824:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8827:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8817:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8817:15:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8817:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8687:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8710:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8718:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8707:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8707:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8684:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8684:38:11"
															},
															"nodeType": "YulIf",
															"src": "8681:161:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8503:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8512:6:11",
														"type": ""
													}
												],
												"src": "8468:380:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9027:240:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9044:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9055:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9037:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9037:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9037:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9078:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9089:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9074:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9074:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9094:2:11",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9067:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9067:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9067:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9117:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9128:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9113:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9113:18:11"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9133:34:11",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9106:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9106:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9106:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9188:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9199:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9184:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9184:18:11"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9204:20:11",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9177:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9177:48:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9177:48:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9234:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9246:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9257:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9242:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9242:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9234:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9004:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9018:4:11",
														"type": ""
													}
												],
												"src": "8853:414:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9446:231:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9463:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9474:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9456:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9456:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9456:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9497:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9508:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9493:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9493:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9513:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9486:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9486:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9486:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9536:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9547:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9532:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9532:18:11"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9552:34:11",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9525:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9525:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9525:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9607:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9618:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9603:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9603:18:11"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9623:11:11",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9596:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9596:39:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9596:39:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9644:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9656:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9667:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9652:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9652:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9644:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9423:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9437:4:11",
														"type": ""
													}
												],
												"src": "9272:405:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9714:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9731:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9738:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9743:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9734:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9734:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9724:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9724:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9724:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9771:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9774:4:11",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9764:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9764:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9764:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9795:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9798:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9788:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9788:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9788:15:11"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "9682:127:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9846:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9863:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9870:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9875:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9866:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9866:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9856:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9856:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9856:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9903:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9906:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9896:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9896:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9896:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9927:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9930:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9920:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9920:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9920:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9814:127:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9993:88:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10024:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10026:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10026:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10026:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10009:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10020:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10016:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10016:6:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10006:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10006:17:11"
															},
															"nodeType": "YulIf",
															"src": "10003:43:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10055:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10066:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10073:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10062:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10062:13:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10055:3:11"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9975:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9985:3:11",
														"type": ""
													}
												],
												"src": "9946:135:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10260:231:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10277:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10288:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10270:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10270:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10270:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10311:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10322:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10307:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10307:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10327:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10300:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10300:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10300:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10350:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10361:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10346:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10346:18:11"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10366:34:11",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10339:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10339:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10339:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10421:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10432:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10417:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10417:18:11"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10437:11:11",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10410:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10410:39:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10410:39:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10458:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10470:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10481:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10466:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10466:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10458:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10237:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10251:4:11",
														"type": ""
													}
												],
												"src": "10086:405:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10670:230:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10687:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10698:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10680:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10680:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10680:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10721:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10732:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10717:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10717:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10737:2:11",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10710:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10710:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10710:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10760:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10771:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10756:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10756:18:11"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10776:34:11",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10749:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10749:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10749:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10831:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10842:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10827:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10827:18:11"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10847:10:11",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10820:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10820:38:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10820:38:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10867:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10879:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10890:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10875:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10875:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10867:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10647:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10661:4:11",
														"type": ""
													}
												],
												"src": "10496:404:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11079:227:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11096:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11107:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11089:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11089:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11089:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11130:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11141:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11126:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11126:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11146:2:11",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11119:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11119:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11119:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11169:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11180:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11165:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11165:18:11"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11185:34:11",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11158:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11158:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11158:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11240:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11251:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11236:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11236:18:11"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11256:7:11",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11229:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11229:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11229:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11273:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11285:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11296:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11281:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11281:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11273:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11056:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11070:4:11",
														"type": ""
													}
												],
												"src": "10905:401:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11485:232:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11502:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11513:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11495:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11495:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11495:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11536:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11547:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11532:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11532:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11552:2:11",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11525:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11525:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11525:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11575:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11586:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11571:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11571:18:11"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11591:34:11",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11564:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11564:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11564:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11646:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11657:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11642:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11642:18:11"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11662:12:11",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11635:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11635:40:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11635:40:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11684:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11696:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11707:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11692:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11692:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11684:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11462:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11476:4:11",
														"type": ""
													}
												],
												"src": "11311:406:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11770:80:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11797:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11799:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11799:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11799:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11786:1:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11793:1:11"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11789:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11789:6:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11783:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11783:13:11"
															},
															"nodeType": "YulIf",
															"src": "11780:39:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11828:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11839:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11842:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11835:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11835:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11828:3:11"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11753:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11756:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11762:3:11",
														"type": ""
													}
												],
												"src": "11722:128:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12084:236:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12101:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12112:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12094:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12094:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12094:21:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12124:70:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12167:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12179:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12190:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12175:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12175:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "12138:28:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12138:56:11"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "12128:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12214:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12225:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12210:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12210:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "12234:6:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12242:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12230:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12230:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12203:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12203:50:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12203:50:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12262:52:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12299:6:11"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "12307:6:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "12270:28:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12270:44:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12262:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12045:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12056:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12064:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12075:4:11",
														"type": ""
													}
												],
												"src": "11855:465:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12499:231:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12516:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12527:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12509:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12509:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12509:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12550:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12561:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12546:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12546:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12566:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12539:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12539:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12539:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12589:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12600:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12585:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12585:18:11"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12605:34:11",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12578:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12578:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12578:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12660:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12671:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12656:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12656:18:11"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12676:11:11",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12649:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12649:39:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12649:39:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12697:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12709:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12720:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12705:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12705:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12697:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12476:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12490:4:11",
														"type": ""
													}
												],
												"src": "12325:405:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12864:119:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12874:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12886:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12897:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12882:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12882:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12874:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12916:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12927:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12909:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12909:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12909:25:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12954:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12965:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12950:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12950:18:11"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12970:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12943:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12943:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12943:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12825:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12836:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12844:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12855:4:11",
														"type": ""
													}
												],
												"src": "12735:248:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13319:496:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13329:29:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13347:3:11",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13352:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13343:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13343:11:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13356:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13339:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13339:19:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13333:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13374:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13389:6:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13397:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13385:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13385:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13367:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13367:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13367:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13421:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13432:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13417:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13417:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "13441:6:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13449:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13437:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13437:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13410:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13410:43:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13410:43:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13473:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13484:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13469:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13469:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13489:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13462:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13462:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13462:31:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13502:71:11",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13545:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13557:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13568:3:11",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13553:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13553:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13516:28:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13516:57:11"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "13506:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13593:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13604:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13589:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13589:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "13613:6:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13621:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13609:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13609:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13582:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13582:50:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13582:50:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13641:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13684:6:11"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "13692:6:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13655:28:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13655:44:11"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "13645:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13719:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13730:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13715:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13715:19:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "13740:6:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13748:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13736:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13736:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13708:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13708:51:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13708:51:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13768:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "13794:6:11"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "13802:6:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "13776:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13776:33:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13768:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13256:9:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "13267:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13275:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13283:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13291:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13299:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13310:4:11",
														"type": ""
													}
												],
												"src": "12988:827:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13900:169:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13946:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13955:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13958:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13948:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13948:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13948:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13921:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13930:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13917:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13917:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13942:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13913:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13913:32:11"
															},
															"nodeType": "YulIf",
															"src": "13910:52:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13971:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13990:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13984:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13984:16:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "13975:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14033:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "14009:23:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14009:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14009:30:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14048:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14058:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "14048:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13866:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13877:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13889:6:11",
														"type": ""
													}
												],
												"src": "13820:249:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14117:136:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14162:85:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14191:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14194:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14197:1:11",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "14176:14:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14176:23:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14176:23:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14212:25:11",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14223:3:11",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14234:1:11",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "14228:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14228:8:11"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "14219:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14219:18:11"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "14212:3:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "14133:14:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14133:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14151:1:11",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14130:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14130:23:11"
															},
															"nodeType": "YulIf",
															"src": "14127:120:11"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "14109:3:11",
														"type": ""
													}
												],
												"src": "14074:179:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14305:624:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14345:9:11",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14347:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "14321:14:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14321:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14339:4:11",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14318:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14318:26:11"
															},
															"nodeType": "YulIf",
															"src": "14315:39:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14363:21:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14381:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14375:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14375:9:11"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "14367:4:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14393:16:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14407:1:11",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "14403:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14403:6:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14397:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14433:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14439:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "14446:14:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14446:16:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14464:2:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14442:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14442:25:11"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "14418:14:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14418:50:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14418:50:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14477:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14497:4:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14491:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14491:11:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "14481:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14511:26:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "14521:14:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14521:16:11"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "14515:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14546:28:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14556:18:11",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "14550:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14632:9:11",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14634:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "14592:6:11"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "14600:2:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14589:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14589:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14612:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14620:4:11",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14608:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14608:17:11"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "14627:2:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14605:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14605:25:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "14586:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14586:45:11"
															},
															"nodeType": "YulIf",
															"src": "14583:58:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14650:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14665:4:11"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14671:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14661:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14661:17:11"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "14654:3:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14687:24:11",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "14707:3:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14701:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14701:10:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14691:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14738:9:11",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14740:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14726:6:11"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "14734:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14723:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14723:14:11"
															},
															"nodeType": "YulIf",
															"src": "14720:27:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14829:9:11",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14831:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "14770:3:11"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "14775:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14766:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14766:16:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14784:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14762:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14762:27:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "14799:4:11"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "14805:14:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14805:16:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14795:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14795:27:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14824:2:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14791:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14791:36:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14759:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14759:69:11"
															},
															"nodeType": "YulIf",
															"src": "14756:82:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14867:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14881:6:11"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "14889:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14877:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14877:19:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14898:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14873:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14873:30:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "14847:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14847:57:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14847:57:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14913:10:11",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "14920:3:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14913:3:11"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14297:3:11",
														"type": ""
													}
												],
												"src": "14258:671:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15108:242:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15125:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15136:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15118:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15118:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15118:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15159:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15170:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15155:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15155:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15175:2:11",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15148:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15148:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15148:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15198:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15209:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15194:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15194:18:11"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15214:34:11",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15187:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15187:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15187:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15269:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15280:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15265:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15265:18:11"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15285:22:11",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15258:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15258:50:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15258:50:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15317:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15329:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15340:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15325:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15325:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15317:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15085:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15099:4:11",
														"type": ""
													}
												],
												"src": "14934:416:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15529:230:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15546:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15557:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15539:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15539:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15539:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15580:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15591:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15576:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15576:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15596:2:11",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15569:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15569:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15569:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15619:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15630:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15615:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15615:18:11"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15635:34:11",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15608:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15608:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15608:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15690:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15701:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15686:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15686:18:11"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15706:10:11",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15679:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15679:38:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15679:38:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15726:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15738:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15749:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15734:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15734:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15726:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15506:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15520:4:11",
														"type": ""
													}
												],
												"src": "15355:404:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15995:330:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16005:29:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16023:3:11",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16028:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16019:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16019:11:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16032:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "16015:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16015:19:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "16009:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16050:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16065:6:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16073:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16061:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16061:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16043:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16043:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16043:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16097:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16108:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16093:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16093:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "16117:6:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16125:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16113:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16113:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16086:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16086:43:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16086:43:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16149:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16160:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16145:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16145:18:11"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16165:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16138:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16138:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16138:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16192:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16203:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16188:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16188:18:11"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16208:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16181:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16181:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16181:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16235:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16246:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16231:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16231:19:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16252:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16224:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16224:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16224:32:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16265:54:11",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "16291:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16303:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16314:3:11",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16299:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16299:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "16273:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16273:46:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16265:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15932:9:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15943:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15951:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15959:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15967:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15975:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15986:4:11",
														"type": ""
													}
												],
												"src": "15764:561:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610bc0565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610c03565b610223565b60405190151581526020016100a9565b6100e86100e3366004610c27565b610275565b6040516100a99190610c8d565b610108610103366004610dec565b610309565b005b61011d610118366004610e96565b6103a0565b6040516100a99190610f9c565b610108610138366004610faf565b6104ca565b6100c561014b366004610feb565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61010861018736600461101e565b6104d9565b60006001600160a01b0383166101fd5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061025457506001600160e01b031982166303a24d0760e21b145b8061026f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461028490611083565b80601f01602080910402602001604051908101604052809291908181526020018280546102b090611083565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103255750610325853361014b565b61038c5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016101f4565b6103998585858585610560565b5050505050565b606081518351146104055760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f4565b6000835167ffffffffffffffff81111561042157610421610ca0565b60405190808252806020026020018201604052801561044a578160200160208202803683370190505b50905060005b84518110156104c25761049585828151811061046e5761046e6110bd565b6020026020010151858381518110610488576104886110bd565b602002602001015161018c565b8282815181106104a7576104a76110bd565b60209081029190910101526104bb816110e9565b9050610450565b509392505050565b6104d533838361073d565b5050565b6001600160a01b0385163314806104f557506104f5853361014b565b6105535760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016101f4565b610399858585858561081d565b81518351146105c25760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f4565b6001600160a01b0384166105e85760405162461bcd60e51b81526004016101f490611102565b3360005b84518110156106cf576000858281518110610609576106096110bd565b602002602001015190506000858381518110610627576106276110bd565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156106775760405162461bcd60e51b81526004016101f490611147565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906106b4908490611191565b92505081905550505050806106c8906110e9565b90506105ec565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161071f9291906111a9565b60405180910390a4610735818787878787610943565b505050505050565b816001600160a01b0316836001600160a01b0316036107b05760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f4565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166108435760405162461bcd60e51b81526004016101f490611102565b3361085c81878761085388610a9e565b61039988610a9e565b6000848152602081815260408083206001600160a01b038a1684529091529020548381101561089d5760405162461bcd60e51b81526004016101f490611147565b6000858152602081815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906108da908490611191565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461093a828888888888610ae9565b50505050505050565b6001600160a01b0384163b156107355760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061098790899089908890889088906004016111d7565b6020604051808303816000875af19250505080156109c2575060408051601f3d908101601f191682019092526109bf91810190611235565b60015b610a6e576109ce611252565b806308c379a003610a0757506109e261126e565b806109ed5750610a09565b8060405162461bcd60e51b81526004016101f49190610c8d565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f4565b6001600160e01b0319811663bc197c8160e01b1461093a5760405162461bcd60e51b81526004016101f4906112f8565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610ad857610ad86110bd565b602090810291909101015292915050565b6001600160a01b0384163b156107355760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610b2d9089908990889088908890600401611340565b6020604051808303816000875af1925050508015610b68575060408051601f3d908101601f19168201909252610b6591810190611235565b60015b610b74576109ce611252565b6001600160e01b0319811663f23a6e6160e01b1461093a5760405162461bcd60e51b81526004016101f4906112f8565b80356001600160a01b0381168114610bbb57600080fd5b919050565b60008060408385031215610bd357600080fd5b610bdc83610ba4565b946020939093013593505050565b6001600160e01b031981168114610c0057600080fd5b50565b600060208284031215610c1557600080fd5b8135610c2081610bea565b9392505050565b600060208284031215610c3957600080fd5b5035919050565b6000815180845260005b81811015610c6657602081850181015186830182015201610c4a565b81811115610c78576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610c206020830184610c40565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610cdc57610cdc610ca0565b6040525050565b600067ffffffffffffffff821115610cfd57610cfd610ca0565b5060051b60200190565b600082601f830112610d1857600080fd5b81356020610d2582610ce3565b604051610d328282610cb6565b83815260059390931b8501820192828101915086841115610d5257600080fd5b8286015b84811015610d6d5780358352918301918301610d56565b509695505050505050565b600082601f830112610d8957600080fd5b813567ffffffffffffffff811115610da357610da3610ca0565b604051610dba601f8301601f191660200182610cb6565b818152846020838601011115610dcf57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610e0457600080fd5b610e0d86610ba4565b9450610e1b60208701610ba4565b9350604086013567ffffffffffffffff80821115610e3857600080fd5b610e4489838a01610d07565b94506060880135915080821115610e5a57600080fd5b610e6689838a01610d07565b93506080880135915080821115610e7c57600080fd5b50610e8988828901610d78565b9150509295509295909350565b60008060408385031215610ea957600080fd5b823567ffffffffffffffff80821115610ec157600080fd5b818501915085601f830112610ed557600080fd5b81356020610ee282610ce3565b604051610eef8282610cb6565b83815260059390931b8501820192828101915089841115610f0f57600080fd5b948201945b83861015610f3457610f2586610ba4565b82529482019490820190610f14565b96505086013592505080821115610f4a57600080fd5b50610f5785828601610d07565b9150509250929050565b600081518084526020808501945080840160005b83811015610f9157815187529582019590820190600101610f75565b509495945050505050565b602081526000610c206020830184610f61565b60008060408385031215610fc257600080fd5b610fcb83610ba4565b915060208301358015158114610fe057600080fd5b809150509250929050565b60008060408385031215610ffe57600080fd5b61100783610ba4565b915061101560208401610ba4565b90509250929050565b600080600080600060a0868803121561103657600080fd5b61103f86610ba4565b945061104d60208701610ba4565b93506040860135925060608601359150608086013567ffffffffffffffff81111561107757600080fd5b610e8988828901610d78565b600181811c9082168061109757607f821691505b6020821081036110b757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016110fb576110fb6110d3565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600082198211156111a4576111a46110d3565b500190565b6040815260006111bc6040830185610f61565b82810360208401526111ce8185610f61565b95945050505050565b6001600160a01b0386811682528516602082015260a06040820181905260009061120390830186610f61565b82810360608401526112158186610f61565b905082810360808401526112298185610c40565b98975050505050505050565b60006020828403121561124757600080fd5b8151610c2081610bea565b600060033d111561126b5760046000803e5060005160e01c5b90565b600060443d101561127c5790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156112ac57505050505090565b82850191508151818111156112c45750505050505090565b843d87010160208285010111156112de5750505050505090565b6112ed60208286010187610cb6565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061137a90830184610c40565b97965050505050505056fea2646970667358221220c26a2eb90291c87befd801307205dbc525445b5bb3395721aabf57e0c9c5bbb764736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xBC0 JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC03 JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xDEC JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xE96 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xF9C JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xFAF JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x101E JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x254 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x26F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x284 SWAP1 PUSH2 0x1083 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0x1083 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x325 JUMPI POP PUSH2 0x325 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x38C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x560 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x421 JUMPI PUSH2 0x421 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x44A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4C2 JUMPI PUSH2 0x495 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46E JUMPI PUSH2 0x46E PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x488 JUMPI PUSH2 0x488 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A7 JUMPI PUSH2 0x4A7 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4BB DUP2 PUSH2 0x10E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x450 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D5 CALLER DUP4 DUP4 PUSH2 0x73D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4F5 JUMPI POP PUSH2 0x4F5 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x553 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x81D JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1102 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x609 JUMPI PUSH2 0x609 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x627 JUMPI PUSH2 0x627 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B4 SWAP1 DUP5 SWAP1 PUSH2 0x1191 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x6C8 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x5EC JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x71F SWAP3 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x735 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x943 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x7B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x843 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1102 JUMP JUMPDEST CALLER PUSH2 0x85C DUP2 DUP8 DUP8 PUSH2 0x853 DUP9 PUSH2 0xA9E JUMP JUMPDEST PUSH2 0x399 DUP9 PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x89D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x8DA SWAP1 DUP5 SWAP1 PUSH2 0x1191 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x93A DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xAE9 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x987 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9C2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9BF SWAP2 DUP2 ADD SWAP1 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA6E JUMPI PUSH2 0x9CE PUSH2 0x1252 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xA07 JUMPI POP PUSH2 0x9E2 PUSH2 0x126E JUMP JUMPDEST DUP1 PUSH2 0x9ED JUMPI POP PUSH2 0xA09 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x93A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAD8 JUMPI PUSH2 0xAD8 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xB2D SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB68 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB65 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB74 JUMPI PUSH2 0x9CE PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x93A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBDC DUP4 PUSH2 0xBA4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xC00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC20 DUP2 PUSH2 0xBEA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC66 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xC4A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC78 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC20 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC40 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCDC JUMPI PUSH2 0xCDC PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xCFD JUMPI PUSH2 0xCFD PUSH2 0xCA0 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xD25 DUP3 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD32 DUP3 DUP3 PUSH2 0xCB6 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xD52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xD6D JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xD56 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDA3 JUMPI PUSH2 0xDA3 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDBA PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xCB6 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xDCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xE04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE0D DUP7 PUSH2 0xBA4 JUMP JUMPDEST SWAP5 POP PUSH2 0xE1B PUSH1 0x20 DUP8 ADD PUSH2 0xBA4 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE44 DUP10 DUP4 DUP11 ADD PUSH2 0xD07 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE66 DUP10 DUP4 DUP11 ADD PUSH2 0xD07 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE89 DUP9 DUP3 DUP10 ADD PUSH2 0xD78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xED5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xEE2 DUP3 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEEF DUP3 DUP3 PUSH2 0xCB6 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xF0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xF34 JUMPI PUSH2 0xF25 DUP7 PUSH2 0xBA4 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xF14 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xF4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF57 DUP6 DUP3 DUP7 ADD PUSH2 0xD07 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF91 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF75 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC20 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFCB DUP4 PUSH2 0xBA4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1007 DUP4 PUSH2 0xBA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1015 PUSH1 0x20 DUP5 ADD PUSH2 0xBA4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1036 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x103F DUP7 PUSH2 0xBA4 JUMP JUMPDEST SWAP5 POP PUSH2 0x104D PUSH1 0x20 DUP8 ADD PUSH2 0xBA4 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1077 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE89 DUP9 DUP3 DUP10 ADD PUSH2 0xD78 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1097 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10B7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x10FB JUMPI PUSH2 0x10FB PUSH2 0x10D3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x11A4 JUMPI PUSH2 0x11A4 PUSH2 0x10D3 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x11BC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF61 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11CE DUP2 DUP6 PUSH2 0xF61 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1203 SWAP1 DUP4 ADD DUP7 PUSH2 0xF61 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1215 DUP2 DUP7 PUSH2 0xF61 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1229 DUP2 DUP6 PUSH2 0xC40 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC20 DUP2 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x126B JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x127C JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x12AC JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x12C4 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12DE JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x12ED PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xCB6 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x137A SWAP1 DUP4 ADD DUP5 PUSH2 0xC40 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 PUSH11 0x2EB90291C87BEFD8013072 SDIV 0xDB 0xC5 0x25 DIFFICULTY JUMPDEST JUMPDEST 0xB3 CODECOPY JUMPI 0x21 0xAA 0xBF JUMPI 0xE0 0xC9 0xC5 0xBB 0xB7 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "555:14720:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2170:228;;;;;;:::i;:::-;;:::i;:::-;;;597:25:11;;;585:2;570:18;2170:228:1;;;;;;;;1221:305;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:11;;1177:22;1159:41;;1147:2;1132:18;1221:305:1;1019:187:11;1925:103:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4045:430::-;;;;;;:::i;:::-;;:::i;:::-;;2555:508;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3131:153::-;;;;;;:::i;:::-;;:::i;3351:166::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3473:27:1;;;3450:4;3473:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3351:166;3584:389;;;;;;:::i;:::-;;:::i;2170:228::-;2256:7;-1:-1:-1;;;;;2283:21:1;;2275:77;;;;-1:-1:-1;;;2275:77:1;;8258:2:11;2275:77:1;;;8240:21:11;8297:2;8277:18;;;8270:30;8336:34;8316:18;;;8309:62;-1:-1:-1;;;8387:18:11;;;8380:41;8438:19;;2275:77:1;;;;;;;;;-1:-1:-1;2369:9:1;:13;;;;;;;;;;;-1:-1:-1;;;;;2369:22:1;;;;;;;;;;;;2170:228::o;1221:305::-;1323:4;-1:-1:-1;;;;;;1358:41:1;;-1:-1:-1;;;1358:41:1;;:109;;-1:-1:-1;;;;;;;1415:52:1;;-1:-1:-1;;;1415:52:1;1358:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:9;;;1483:36:1;1339:180;1221:305;-1:-1:-1;;1221:305:1:o;1925:103::-;1985:13;2017:4;2010:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1925:103;;;:::o;4045:430::-;-1:-1:-1;;;;;4270:20:1;;719:10:8;4270:20:1;;:60;;-1:-1:-1;4294:36:1;4311:4;719:10:8;3351:166:1;:::i;4294:36::-;4249:157;;;;-1:-1:-1;;;4249:157:1;;9055:2:11;4249:157:1;;;9037:21:11;9094:2;9074:18;;;9067:30;9133:34;9113:18;;;9106:62;-1:-1:-1;;;9184:18:11;;;9177:48;9242:19;;4249:157:1;8853:414:11;4249:157:1;4416:52;4439:4;4445:2;4449:3;4454:7;4463:4;4416:22;:52::i;:::-;4045:430;;;;;:::o;2555:508::-;2706:16;2765:3;:10;2746:8;:15;:29;2738:83;;;;-1:-1:-1;;;2738:83:1;;9474:2:11;2738:83:1;;;9456:21:11;9513:2;9493:18;;;9486:30;9552:34;9532:18;;;9525:62;-1:-1:-1;;;9603:18:11;;;9596:39;9652:19;;2738:83:1;9272:405:11;2738:83:1;2832:30;2879:8;:15;2865:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2865:30:1;;2832:63;;2911:9;2906:120;2930:8;:15;2926:1;:19;2906:120;;;2985:30;2995:8;3004:1;2995:11;;;;;;;;:::i;:::-;;;;;;;3008:3;3012:1;3008:6;;;;;;;;:::i;:::-;;;;;;;2985:9;:30::i;:::-;2966:13;2980:1;2966:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2947:3;;;:::i;:::-;;;2906:120;;;-1:-1:-1;3043:13:1;2555:508;-1:-1:-1;;;2555:508:1:o;3131:153::-;3225:52;719:10:8;3258:8:1;3268;3225:18;:52::i;:::-;3131:153;;:::o;3584:389::-;-1:-1:-1;;;;;3784:20:1;;719:10:8;3784:20:1;;:60;;-1:-1:-1;3808:36:1;3825:4;719:10:8;3351:166:1;:::i;3808:36::-;3763:148;;;;-1:-1:-1;;;3763:148:1;;10288:2:11;3763:148:1;;;10270:21:11;10327:2;10307:18;;;10300:30;10366:34;10346:18;;;10339:62;-1:-1:-1;;;10417:18:11;;;10410:39;10466:19;;3763:148:1;10086:405:11;3763:148:1;3921:45;3939:4;3945:2;3949;3953:6;3961:4;3921:17;:45::i;6068:1045::-;6288:7;:14;6274:3;:10;:28;6266:81;;;;-1:-1:-1;;;6266:81:1;;10698:2:11;6266:81:1;;;10680:21:11;10737:2;10717:18;;;10710:30;10776:34;10756:18;;;10749:62;-1:-1:-1;;;10827:18:11;;;10820:38;10875:19;;6266:81:1;10496:404:11;6266:81:1;-1:-1:-1;;;;;6365:16:1;;6357:66;;;;-1:-1:-1;;;6357:66:1;;;;;;;:::i;:::-;719:10:8;6434:16:1;6547:411;6571:3;:10;6567:1;:14;6547:411;;;6602:10;6615:3;6619:1;6615:6;;;;;;;;:::i;:::-;;;;;;;6602:19;;6635:14;6652:7;6660:1;6652:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6677:19;6699:13;;;;;;;;;;-1:-1:-1;;;;;6699:19:1;;;;;;;;;;;;6652:10;;-1:-1:-1;6740:21:1;;;;6732:76;;;;-1:-1:-1;;;6732:76:1;;;;;;;:::i;:::-;6850:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6850:19:1;;;;;;;;;;6872:20;;;6850:42;;6920:17;;;;;;;:27;;6872:20;;6850:9;6920:27;;6872:20;;6920:27;:::i;:::-;;;;;;;;6588:370;;;6583:3;;;;:::i;:::-;;;6547:411;;;;7003:2;-1:-1:-1;;;;;6973:47:1;6997:4;-1:-1:-1;;;;;6973:47:1;6987:8;-1:-1:-1;;;;;6973:47:1;;7007:3;7012:7;6973:47;;;;;;;:::i;:::-;;;;;;;;7031:75;7067:8;7077:4;7083:2;7087:3;7092:7;7101:4;7031:35;:75::i;:::-;6256:857;6068:1045;;;;;:::o;12074:323::-;12224:8;-1:-1:-1;;;;;12215:17:1;:5;-1:-1:-1;;;;;12215:17:1;;12207:71;;;;-1:-1:-1;;;12207:71:1;;12527:2:11;12207:71:1;;;12509:21:11;12566:2;12546:18;;;12539:30;12605:34;12585:18;;;12578:62;-1:-1:-1;;;12656:18:11;;;12649:39;12705:19;;12207:71:1;12325:405:11;12207:71:1;-1:-1:-1;;;;;12288:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12288:46:1;;;;;;;;;;12349:41;;1159::11;;;12349::1;;1132:18:11;12349:41:1;;;;;;;12074:323;;;:::o;4925:797::-;-1:-1:-1;;;;;5106:16:1;;5098:66;;;;-1:-1:-1;;;5098:66:1;;;;;;;:::i;:::-;719:10:8;5217:96:1;719:10:8;5248:4:1;5254:2;5258:21;5276:2;5258:17;:21::i;:::-;5281:25;5299:6;5281:17;:25::i;5217:96::-;5324:19;5346:13;;;;;;;;;;;-1:-1:-1;;;;;5346:19:1;;;;;;;;;;5383:21;;;;5375:76;;;;-1:-1:-1;;;5375:76:1;;;;;;;:::i;:::-;5485:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5485:19:1;;;;;;;;;;5507:20;;;5485:42;;5547:17;;;;;;;:27;;5507:20;;5485:9;5547:27;;5507:20;;5547:27;:::i;:::-;;;;-1:-1:-1;;5590:46:1;;;12909:25:11;;;12965:2;12950:18;;12943:34;;;-1:-1:-1;;;;;5590:46:1;;;;;;;;;;;;;;12882:18:11;5590:46:1;;;;;;;5647:68;5678:8;5688:4;5694:2;5698;5702:6;5710:4;5647:30;:68::i;:::-;5088:634;;4925:797;;;;;:::o;14282:792::-;-1:-1:-1;;;;;14514:13:1;;1087:20:7;1133:8;14510:558:1;;14549:79;;-1:-1:-1;;;14549:79:1;;-1:-1:-1;;;;;14549:43:1;;;;;:79;;14593:8;;14603:4;;14609:3;;14614:7;;14623:4;;14549:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14549:79:1;;;;;;;;-1:-1:-1;;14549:79:1;;;;;;;;;;;;:::i;:::-;;;14545:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;14934:6;14927:14;;-1:-1:-1;;;14927:14:1;;;;;;;;:::i;14545:513::-;;;14981:62;;-1:-1:-1;;;14981:62:1;;15136:2:11;14981:62:1;;;15118:21:11;15175:2;15155:18;;;15148:30;15214:34;15194:18;;;15187:62;-1:-1:-1;;;15265:18:11;;;15258:50;15325:19;;14981:62:1;14934:416:11;14545:513:1;-1:-1:-1;;;;;;14707:60:1;;-1:-1:-1;;;14707:60:1;14703:157;;14791:50;;-1:-1:-1;;;14791:50:1;;;;;;;:::i;15080:193::-;15199:16;;;15213:1;15199:16;;;;;;;;;15146;;15174:22;;15199:16;;;;;;;;;;;;-1:-1:-1;15199:16:1;15174:41;;15236:7;15225:5;15231:1;15225:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;15261:5;15080:193;-1:-1:-1;;15080:193:1:o;13551:725::-;-1:-1:-1;;;;;13758:13:1;;1087:20:7;1133:8;13754:516:1;;13793:72;;-1:-1:-1;;;13793:72:1;;-1:-1:-1;;;;;13793:38:1;;;;;:72;;13832:8;;13842:4;;13848:2;;13852:6;;13860:4;;13793:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13793:72:1;;;;;;;;-1:-1:-1;;13793:72:1;;;;;;;;;;;;:::i;:::-;;;13789:471;;;;:::i;:::-;-1:-1:-1;;;;;;13914:55:1;;-1:-1:-1;;;13914:55:1;13910:152;;13993:50;;-1:-1:-1;;;13993:50:1;;;;;;;:::i;14:173:11:-;82:20;;-1:-1:-1;;;;;131:31:11;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:11:o;633:131::-;-1:-1:-1;;;;;;707:32:11;;697:43;;687:71;;754:1;751;744:12;687:71;633:131;:::o;769:245::-;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:11:o;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:11;;1211:180;-1:-1:-1;1211:180:11:o;1396:472::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1528:1;1538:162;1552:6;1549:1;1546:13;1538:162;;;1614:4;1670:13;;;1666:22;;1660:29;1642:11;;;1638:20;;1631:59;1567:12;1538:162;;;1718:6;1715:1;1712:13;1709:87;;;1784:1;1777:4;1768:6;1763:3;1759:16;1755:27;1748:38;1709:87;-1:-1:-1;1850:2:11;1829:15;-1:-1:-1;;1825:29:11;1816:39;;;;1857:4;1812:50;;1396:472;-1:-1:-1;;1396:472:11:o;1873:220::-;2022:2;2011:9;2004:21;1985:4;2042:45;2083:2;2072:9;2068:18;2060:6;2042:45;:::i;2098:127::-;2159:10;2154:3;2150:20;2147:1;2140:31;2190:4;2187:1;2180:15;2214:4;2211:1;2204:15;2230:249;2340:2;2321:13;;-1:-1:-1;;2317:27:11;2305:40;;2375:18;2360:34;;2396:22;;;2357:62;2354:88;;;2422:18;;:::i;:::-;2458:2;2451:22;-1:-1:-1;;2230:249:11:o;2484:183::-;2544:4;2577:18;2569:6;2566:30;2563:56;;;2599:18;;:::i;:::-;-1:-1:-1;2644:1:11;2640:14;2656:4;2636:25;;2484:183::o;2672:724::-;2726:5;2779:3;2772:4;2764:6;2760:17;2756:27;2746:55;;2797:1;2794;2787:12;2746:55;2833:6;2820:20;2859:4;2882:43;2922:2;2882:43;:::i;:::-;2954:2;2948:9;2966:31;2994:2;2986:6;2966:31;:::i;:::-;3032:18;;;3124:1;3120:10;;;;3108:23;;3104:32;;;3066:15;;;;-1:-1:-1;3148:15:11;;;3145:35;;;3176:1;3173;3166:12;3145:35;3212:2;3204:6;3200:15;3224:142;3240:6;3235:3;3232:15;3224:142;;;3306:17;;3294:30;;3344:12;;;;3257;;3224:142;;;-1:-1:-1;3384:6:11;2672:724;-1:-1:-1;;;;;;2672:724:11:o;3401:555::-;3443:5;3496:3;3489:4;3481:6;3477:17;3473:27;3463:55;;3514:1;3511;3504:12;3463:55;3550:6;3537:20;3576:18;3572:2;3569:26;3566:52;;;3598:18;;:::i;:::-;3647:2;3641:9;3659:67;3714:2;3695:13;;-1:-1:-1;;3691:27:11;3720:4;3687:38;3641:9;3659:67;:::i;:::-;3750:2;3742:6;3735:18;3796:3;3789:4;3784:2;3776:6;3772:15;3768:26;3765:35;3762:55;;;3813:1;3810;3803:12;3762:55;3877:2;3870:4;3862:6;3858:17;3851:4;3843:6;3839:17;3826:54;3924:1;3900:15;;;3917:4;3896:26;3889:37;;;;3904:6;3401:555;-1:-1:-1;;;3401:555:11:o;3961:943::-;4115:6;4123;4131;4139;4147;4200:3;4188:9;4179:7;4175:23;4171:33;4168:53;;;4217:1;4214;4207:12;4168:53;4240:29;4259:9;4240:29;:::i;:::-;4230:39;;4288:38;4322:2;4311:9;4307:18;4288:38;:::i;:::-;4278:48;;4377:2;4366:9;4362:18;4349:32;4400:18;4441:2;4433:6;4430:14;4427:34;;;4457:1;4454;4447:12;4427:34;4480:61;4533:7;4524:6;4513:9;4509:22;4480:61;:::i;:::-;4470:71;;4594:2;4583:9;4579:18;4566:32;4550:48;;4623:2;4613:8;4610:16;4607:36;;;4639:1;4636;4629:12;4607:36;4662:63;4717:7;4706:8;4695:9;4691:24;4662:63;:::i;:::-;4652:73;;4778:3;4767:9;4763:19;4750:33;4734:49;;4808:2;4798:8;4795:16;4792:36;;;4824:1;4821;4814:12;4792:36;;4847:51;4890:7;4879:8;4868:9;4864:24;4847:51;:::i;:::-;4837:61;;;3961:943;;;;;;;;:::o;4909:1208::-;5027:6;5035;5088:2;5076:9;5067:7;5063:23;5059:32;5056:52;;;5104:1;5101;5094:12;5056:52;5144:9;5131:23;5173:18;5214:2;5206:6;5203:14;5200:34;;;5230:1;5227;5220:12;5200:34;5268:6;5257:9;5253:22;5243:32;;5313:7;5306:4;5302:2;5298:13;5294:27;5284:55;;5335:1;5332;5325:12;5284:55;5371:2;5358:16;5393:4;5416:43;5456:2;5416:43;:::i;:::-;5488:2;5482:9;5500:31;5528:2;5520:6;5500:31;:::i;:::-;5566:18;;;5654:1;5650:10;;;;5642:19;;5638:28;;;5600:15;;;;-1:-1:-1;5678:19:11;;;5675:39;;;5710:1;5707;5700:12;5675:39;5734:11;;;;5754:148;5770:6;5765:3;5762:15;5754:148;;;5836:23;5855:3;5836:23;:::i;:::-;5824:36;;5787:12;;;;5880;;;;5754:148;;;5921:6;-1:-1:-1;;5965:18:11;;5952:32;;-1:-1:-1;;5996:16:11;;;5993:36;;;6025:1;6022;6015:12;5993:36;;6048:63;6103:7;6092:8;6081:9;6077:24;6048:63;:::i;:::-;6038:73;;;4909:1208;;;;;:::o;6122:435::-;6175:3;6213:5;6207:12;6240:6;6235:3;6228:19;6266:4;6295:2;6290:3;6286:12;6279:19;;6332:2;6325:5;6321:14;6353:1;6363:169;6377:6;6374:1;6371:13;6363:169;;;6438:13;;6426:26;;6472:12;;;;6507:15;;;;6399:1;6392:9;6363:169;;;-1:-1:-1;6548:3:11;;6122:435;-1:-1:-1;;;;;6122:435:11:o;6562:261::-;6741:2;6730:9;6723:21;6704:4;6761:56;6813:2;6802:9;6798:18;6790:6;6761:56;:::i;6828:347::-;6893:6;6901;6954:2;6942:9;6933:7;6929:23;6925:32;6922:52;;;6970:1;6967;6960:12;6922:52;6993:29;7012:9;6993:29;:::i;:::-;6983:39;;7072:2;7061:9;7057:18;7044:32;7119:5;7112:13;7105:21;7098:5;7095:32;7085:60;;7141:1;7138;7131:12;7085:60;7164:5;7154:15;;;6828:347;;;;;:::o;7180:260::-;7248:6;7256;7309:2;7297:9;7288:7;7284:23;7280:32;7277:52;;;7325:1;7322;7315:12;7277:52;7348:29;7367:9;7348:29;:::i;:::-;7338:39;;7396:38;7430:2;7419:9;7415:18;7396:38;:::i;:::-;7386:48;;7180:260;;;;;:::o;7445:606::-;7549:6;7557;7565;7573;7581;7634:3;7622:9;7613:7;7609:23;7605:33;7602:53;;;7651:1;7648;7641:12;7602:53;7674:29;7693:9;7674:29;:::i;:::-;7664:39;;7722:38;7756:2;7745:9;7741:18;7722:38;:::i;:::-;7712:48;;7807:2;7796:9;7792:18;7779:32;7769:42;;7858:2;7847:9;7843:18;7830:32;7820:42;;7913:3;7902:9;7898:19;7885:33;7941:18;7933:6;7930:30;7927:50;;;7973:1;7970;7963:12;7927:50;7996:49;8037:7;8028:6;8017:9;8013:22;7996:49;:::i;8468:380::-;8547:1;8543:12;;;;8590;;;8611:61;;8665:4;8657:6;8653:17;8643:27;;8611:61;8718:2;8710:6;8707:14;8687:18;8684:38;8681:161;;8764:10;8759:3;8755:20;8752:1;8745:31;8799:4;8796:1;8789:15;8827:4;8824:1;8817:15;8681:161;;8468:380;;;:::o;9682:127::-;9743:10;9738:3;9734:20;9731:1;9724:31;9774:4;9771:1;9764:15;9798:4;9795:1;9788:15;9814:127;9875:10;9870:3;9866:20;9863:1;9856:31;9906:4;9903:1;9896:15;9930:4;9927:1;9920:15;9946:135;9985:3;10006:17;;;10003:43;;10026:18;;:::i;:::-;-1:-1:-1;10073:1:11;10062:13;;9946:135::o;10905:401::-;11107:2;11089:21;;;11146:2;11126:18;;;11119:30;11185:34;11180:2;11165:18;;11158:62;-1:-1:-1;;;11251:2:11;11236:18;;11229:35;11296:3;11281:19;;10905:401::o;11311:406::-;11513:2;11495:21;;;11552:2;11532:18;;;11525:30;11591:34;11586:2;11571:18;;11564:62;-1:-1:-1;;;11657:2:11;11642:18;;11635:40;11707:3;11692:19;;11311:406::o;11722:128::-;11762:3;11793:1;11789:6;11786:1;11783:13;11780:39;;;11799:18;;:::i;:::-;-1:-1:-1;11835:9:11;;11722:128::o;11855:465::-;12112:2;12101:9;12094:21;12075:4;12138:56;12190:2;12179:9;12175:18;12167:6;12138:56;:::i;:::-;12242:9;12234:6;12230:22;12225:2;12214:9;12210:18;12203:50;12270:44;12307:6;12299;12270:44;:::i;:::-;12262:52;11855:465;-1:-1:-1;;;;;11855:465:11:o;12988:827::-;-1:-1:-1;;;;;13385:15:11;;;13367:34;;13437:15;;13432:2;13417:18;;13410:43;13347:3;13484:2;13469:18;;13462:31;;;13310:4;;13516:57;;13553:19;;13545:6;13516:57;:::i;:::-;13621:9;13613:6;13609:22;13604:2;13593:9;13589:18;13582:50;13655:44;13692:6;13684;13655:44;:::i;:::-;13641:58;;13748:9;13740:6;13736:22;13730:3;13719:9;13715:19;13708:51;13776:33;13802:6;13794;13776:33;:::i;:::-;13768:41;12988:827;-1:-1:-1;;;;;;;;12988:827:11:o;13820:249::-;13889:6;13942:2;13930:9;13921:7;13917:23;13913:32;13910:52;;;13958:1;13955;13948:12;13910:52;13990:9;13984:16;14009:30;14033:5;14009:30;:::i;14074:179::-;14109:3;14151:1;14133:16;14130:23;14127:120;;;14197:1;14194;14191;14176:23;-1:-1:-1;14234:1:11;14228:8;14223:3;14219:18;14127:120;14074:179;:::o;14258:671::-;14297:3;14339:4;14321:16;14318:26;14315:39;;;14258:671;:::o;14315:39::-;14381:2;14375:9;-1:-1:-1;;14446:16:11;14442:25;;14439:1;14375:9;14418:50;14497:4;14491:11;14521:16;14556:18;14627:2;14620:4;14612:6;14608:17;14605:25;14600:2;14592:6;14589:14;14586:45;14583:58;;;14634:5;;;;;14258:671;:::o;14583:58::-;14671:6;14665:4;14661:17;14650:28;;14707:3;14701:10;14734:2;14726:6;14723:14;14720:27;;;14740:5;;;;;;14258:671;:::o;14720:27::-;14824:2;14805:16;14799:4;14795:27;14791:36;14784:4;14775:6;14770:3;14766:16;14762:27;14759:69;14756:82;;;14831:5;;;;;;14258:671;:::o;14756:82::-;14847:57;14898:4;14889:6;14881;14877:19;14873:30;14867:4;14847:57;:::i;:::-;-1:-1:-1;14920:3:11;;14258:671;-1:-1:-1;;;;;14258:671:11:o;15355:404::-;15557:2;15539:21;;;15596:2;15576:18;;;15569:30;15635:34;15630:2;15615:18;;15608:62;-1:-1:-1;;;15701:2:11;15686:18;;15679:38;15749:3;15734:19;;15355:404::o;15764:561::-;-1:-1:-1;;;;;16061:15:11;;;16043:34;;16113:15;;16108:2;16093:18;;16086:43;16160:2;16145:18;;16138:34;;;16203:2;16188:18;;16181:34;;;16023:3;16246;16231:19;;16224:32;;;15986:4;;16273:46;;16299:19;;16291:6;16273:46;:::i;:::-;16265:54;15764:561;-1:-1:-1;;;;;;;15764:561:11:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1010200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2672",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26705",
								"supportsInterface(bytes4)": "544",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1142,
									"end": 1146,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1134,
									"end": 1141,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8006,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8002,
									"end": 8006,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 259,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 300,
									"end": 302,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 288,
									"end": 297,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 279,
									"end": 286,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 275,
									"end": 298,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 271,
									"end": 303,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 268,
									"end": 320,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 268,
									"end": 320,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 268,
									"end": 320,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 316,
									"end": 317,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 314,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 306,
									"end": 318,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 268,
									"end": 320,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 268,
									"end": 320,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 343,
									"end": 359,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 343,
									"end": 359,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 408,
									"end": 422,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 408,
									"end": 422,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 408,
									"end": 422,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 405,
									"end": 439,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 405,
									"end": 439,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 405,
									"end": 439,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 435,
									"end": 436,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 433,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 425,
									"end": 437,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 405,
									"end": 439,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 405,
									"end": 439,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 448,
									"end": 480,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 448,
									"end": 480,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 518,
									"end": 525,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 511,
									"end": 515,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 507,
									"end": 509,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 503,
									"end": 516,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 499,
									"end": 526,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 489,
									"end": 544,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 489,
									"end": 544,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 540,
									"end": 541,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 537,
									"end": 538,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 530,
									"end": 542,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 489,
									"end": 544,
									"name": "tag",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 489,
									"end": 544,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 569,
									"end": 571,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 563,
									"end": 572,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 591,
									"end": 593,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 587,
									"end": 589,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 584,
									"end": 594,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 581,
									"end": 617,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 581,
									"end": 617,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 581,
									"end": 617,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 597,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 666,
									"end": 675,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 640,
									"end": 642,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 726,
									"end": 739,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 726,
									"end": 739,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 722,
									"end": 744,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 722,
									"end": 744,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 722,
									"end": 744,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 746,
									"end": 748,
									"name": "PUSH",
									"source": 11,
									"value": "3F"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 714,
									"end": 754,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 702,
									"end": 755,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 702,
									"end": 755,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 702,
									"end": 755,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 770,
									"end": 788,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 770,
									"end": 788,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 770,
									"end": 788,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 790,
									"end": 812,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 790,
									"end": 812,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 790,
									"end": 812,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 767,
									"end": 813,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 764,
									"end": 836,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 764,
									"end": 836,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 764,
									"end": 836,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 816,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 856,
									"end": 866,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 852,
									"end": 854,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 845,
									"end": 867,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 891,
									"end": 893,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 883,
									"end": 889,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 876,
									"end": 894,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 931,
									"end": 938,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 926,
									"end": 928,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 921,
									"end": 923,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 917,
									"end": 919,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 913,
									"end": 924,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 909,
									"end": 929,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 906,
									"end": 939,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 903,
									"end": 956,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 903,
									"end": 956,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 903,
									"end": 956,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 952,
									"end": 953,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 950,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 942,
									"end": 954,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 903,
									"end": 956,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 903,
									"end": 956,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 974,
									"end": 975,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 965,
									"end": 975,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 965,
									"end": 975,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "tag",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 995,
									"end": 996,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 992,
									"end": 1001,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1076,
									"end": 1102,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1051,
									"end": 1074,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1051,
									"end": 1074,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1044,
									"end": 1103,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1133,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1128,
									"end": 1129,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1125,
									"end": 1134,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1190,
									"end": 1191,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1185,
									"end": 1187,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1180,
									"end": 1182,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1172,
									"end": 1178,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1168,
									"end": 1183,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1164,
									"end": 1188,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1157,
									"end": 1192,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "tag",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1221,
									"end": 1227,
									"name": "SWAP9",
									"source": 11
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "SWAP8",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "tag",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1317,
									"end": 1318,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1325,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1313,
									"end": 1325,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1313,
									"end": 1325,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1313,
									"end": 1325,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1360,
									"end": 1372,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1360,
									"end": 1372,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1360,
									"end": 1372,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1381,
									"end": 1442,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1442,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1435,
									"end": 1439,
									"name": "PUSH",
									"source": 11,
									"value": "7F"
								},
								{
									"begin": 1427,
									"end": 1433,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1423,
									"end": 1440,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1413,
									"end": 1440,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1413,
									"end": 1440,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1381,
									"end": 1442,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1442,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1488,
									"end": 1490,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1480,
									"end": 1486,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1477,
									"end": 1491,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1457,
									"end": 1475,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1454,
									"end": 1492,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1534,
									"end": 1544,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B71"
								},
								{
									"begin": 1529,
									"end": 1532,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 1525,
									"end": 1545,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1522,
									"end": 1523,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1515,
									"end": 1546,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1569,
									"end": 1573,
									"name": "PUSH",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1566,
									"end": 1567,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1559,
									"end": 1574,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1597,
									"end": 1601,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1594,
									"end": 1595,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1587,
									"end": 1602,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "tag",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c26a2eb90291c87befd801307205dbc525445b5bb3395721aabf57e0c9c5bbb764736f6c634300080d0033",
									".code": [
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "4E1273F4"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "4E1273F4"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "E985E9C5"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "F242432A"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "FDD58E"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "E89341C"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "2EB2C2D6"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 597,
											"end": 622,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1177,
											"end": 1199,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1019,
											"end": 1206,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3491,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2263,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2283,
											"end": 2304,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2304,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8260,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8261,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8297,
											"end": 8299,
											"name": "PUSH",
											"source": 11,
											"value": "2B"
										},
										{
											"begin": 8277,
											"end": 8295,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8277,
											"end": 8295,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8277,
											"end": 8295,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8270,
											"end": 8300,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8336,
											"end": 8370,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 8316,
											"end": 8334,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 8316,
											"end": 8334,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8316,
											"end": 8334,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8309,
											"end": 8371,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8380,
											"end": 8421,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2369,
											"end": 2378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1483,
											"end": 1519,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1483,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1519,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 1998,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2017,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4311,
											"end": 4315,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9055,
											"end": 9057,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9037,
											"end": 9058,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9094,
											"end": 9096,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 9074,
											"end": 9092,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 9074,
											"end": 9092,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9074,
											"end": 9092,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9067,
											"end": 9097,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9133,
											"end": 9167,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 9113,
											"end": 9131,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 9113,
											"end": 9131,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9113,
											"end": 9131,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9106,
											"end": 9168,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9184,
											"end": 9202,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 9184,
											"end": 9202,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9184,
											"end": 9202,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9177,
											"end": 9225,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9242,
											"end": 9261,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 9242,
											"end": 9261,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 8853,
											"end": 9267,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4439,
											"end": 4443,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4447,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4449,
											"end": 4452,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4454,
											"end": 4461,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4467,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 2722,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2765,
											"end": 2768,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2754,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9476,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9456,
											"end": 9477,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9513,
											"end": 9515,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9516,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9552,
											"end": 9586,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 9532,
											"end": 9550,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 9532,
											"end": 9550,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9532,
											"end": 9550,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9525,
											"end": 9587,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9596,
											"end": 9635,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9652,
											"end": 9671,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 9652,
											"end": 9671,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 9272,
											"end": 9677,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2879,
											"end": 2887,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2879,
											"end": 2894,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2938,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2945,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2927,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2945,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2995,
											"end": 3003,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3005,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3011,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3012,
											"end": 3013,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 2981,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 3015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3043,
											"end": 3056,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3258,
											"end": 3266,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3276,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3825,
											"end": 3829,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10288,
											"end": 10290,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10270,
											"end": 10291,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10327,
											"end": 10329,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 10307,
											"end": 10325,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10307,
											"end": 10325,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10307,
											"end": 10325,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10300,
											"end": 10330,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10366,
											"end": 10400,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10339,
											"end": 10401,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10417,
											"end": 10435,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 10417,
											"end": 10435,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10417,
											"end": 10435,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10410,
											"end": 10449,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10466,
											"end": 10485,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 10466,
											"end": 10485,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 10086,
											"end": 10491,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3939,
											"end": 3943,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3947,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3949,
											"end": 3951,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 3959,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3961,
											"end": 3965,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3921,
											"end": 3966,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6295,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6302,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6274,
											"end": 6277,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6274,
											"end": 6284,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6274,
											"end": 6302,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 10700,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10680,
											"end": 10701,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10737,
											"end": 10739,
											"name": "PUSH",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 10717,
											"end": 10735,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10717,
											"end": 10735,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10717,
											"end": 10735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10710,
											"end": 10740,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10776,
											"end": 10810,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 10756,
											"end": 10774,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 10756,
											"end": 10774,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10756,
											"end": 10774,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10749,
											"end": 10811,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10827,
											"end": 10845,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 10827,
											"end": 10845,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10827,
											"end": 10845,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10820,
											"end": 10858,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10875,
											"end": 10894,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 10875,
											"end": 10894,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 10496,
											"end": 10900,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6365,
											"end": 6381,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6365,
											"end": 6381,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6574,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6581,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6567,
											"end": 6568,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6567,
											"end": 6581,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6612,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6618,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6619,
											"end": 6620,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6635,
											"end": 6649,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6659,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6677,
											"end": 6696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "DUP15",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP15",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6892,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7003,
											"end": 7005,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6997,
											"end": 7001,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 6995,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 1,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7007,
											"end": 7010,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7012,
											"end": 7019,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7067,
											"end": 7075,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7081,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7085,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7087,
											"end": 7090,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7099,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7105,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6256,
											"end": 7113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12224,
											"end": 12232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12215,
											"end": 12220,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12527,
											"end": 12529,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12509,
											"end": 12530,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12566,
											"end": 12568,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 12546,
											"end": 12564,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 12546,
											"end": 12564,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12546,
											"end": 12564,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12539,
											"end": 12569,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12605,
											"end": 12639,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 12585,
											"end": 12603,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 12585,
											"end": 12603,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12585,
											"end": 12603,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12578,
											"end": 12640,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12656,
											"end": 12674,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 12656,
											"end": 12674,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12656,
											"end": 12674,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12649,
											"end": 12688,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12705,
											"end": 12724,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 12705,
											"end": 12724,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 12325,
											"end": 12730,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12306,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5106,
											"end": 5122,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5122,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5248,
											"end": 5252,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5256,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5276,
											"end": 5278,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5281,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5299,
											"end": 5305,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5281,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 5281,
											"end": 5306,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5324,
											"end": 5343,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5527,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12909,
											"end": 12934,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 12909,
											"end": 12934,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12909,
											"end": 12934,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12965,
											"end": 12967,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12950,
											"end": 12968,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12950,
											"end": 12968,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12943,
											"end": 12977,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 12943,
											"end": 12977,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12943,
											"end": 12977,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 1,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12882,
											"end": 12900,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 5678,
											"end": 5686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5692,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5694,
											"end": 5696,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5698,
											"end": 5700,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5702,
											"end": 5708,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5710,
											"end": 5714,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5088,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5088,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14282,
											"end": 15074,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 14282,
											"end": 15074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14514,
											"end": 14527,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14514,
											"end": 14527,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14510,
											"end": 15068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 14510,
											"end": 15068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "PUSH",
											"source": 1,
											"value": "BC197C81"
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14593,
											"end": 14601,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 14593,
											"end": 14601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14609,
											"end": 14612,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14609,
											"end": 14612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14614,
											"end": 14621,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14614,
											"end": 14621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14623,
											"end": 14627,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14623,
											"end": 14627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A0"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14934,
											"end": 14940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15136,
											"end": 15138,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15118,
											"end": 15139,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15175,
											"end": 15177,
											"name": "PUSH",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 15155,
											"end": 15173,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 15155,
											"end": 15173,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15155,
											"end": 15173,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15148,
											"end": 15178,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15214,
											"end": 15248,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 15194,
											"end": 15212,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 15194,
											"end": 15212,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15194,
											"end": 15212,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15187,
											"end": 15249,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15265,
											"end": 15283,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 15265,
											"end": 15283,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15265,
											"end": 15283,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15258,
											"end": 15308,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15325,
											"end": 15344,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 15325,
											"end": 15344,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 14934,
											"end": 15350,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14703,
											"end": 14860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 14703,
											"end": 14860,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15213,
											"end": 15214,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15146,
											"end": 15162,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15146,
											"end": 15162,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15174,
											"end": 15196,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15174,
											"end": 15196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15174,
											"end": 15215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15174,
											"end": 15215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15236,
											"end": 15243,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15231,
											"end": 15232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15243,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15261,
											"end": 15266,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13551,
											"end": 14276,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 13551,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13758,
											"end": 13771,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13758,
											"end": 13771,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13754,
											"end": 14270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 13754,
											"end": 14270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "PUSH",
											"source": 1,
											"value": "F23A6E61"
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13832,
											"end": 13840,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 13832,
											"end": 13840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13842,
											"end": 13846,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 13842,
											"end": 13846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13848,
											"end": 13850,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 13848,
											"end": 13850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13852,
											"end": 13858,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 13852,
											"end": 13858,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13860,
											"end": 13864,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 13860,
											"end": 13864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 13910,
											"end": 14062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 13910,
											"end": 14062,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 707,
											"end": 739,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 697,
											"end": 740,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 697,
											"end": 740,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 687,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 744,
											"end": 756,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 687,
											"end": 758,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 633,
											"end": 764,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 827,
											"end": 833,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 877,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 859,
											"end": 866,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 855,
											"end": 878,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 851,
											"end": 883,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 848,
											"end": 900,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 848,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 896,
											"end": 897,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 886,
											"end": 898,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 848,
											"end": 900,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 922,
											"end": 945,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1325,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1320,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1309,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1298,
											"end": 1321,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1339,
											"end": 1340,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1329,
											"end": 1341,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1438,
											"end": 1441,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1481,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1470,
											"end": 1482,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1503,
											"end": 1509,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1501,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1510,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1528,
											"end": 1529,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1552,
											"end": 1558,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1546,
											"end": 1559,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1614,
											"end": 1618,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1631,
											"end": 1690,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1567,
											"end": 1579,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1718,
											"end": 1724,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1715,
											"end": 1716,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1712,
											"end": 1725,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1784,
											"end": 1785,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1777,
											"end": 1781,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1768,
											"end": 1774,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1763,
											"end": 1766,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1759,
											"end": 1775,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1755,
											"end": 1782,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1748,
											"end": 1786,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1850,
											"end": 1852,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1829,
											"end": 1844,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1825,
											"end": 1854,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1857,
											"end": 1861,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1812,
											"end": 1862,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1812,
											"end": 1862,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1873,
											"end": 2093,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1873,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2022,
											"end": 2024,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2004,
											"end": 2025,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1985,
											"end": 1989,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 2083,
											"end": 2085,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2072,
											"end": 2081,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2060,
											"end": 2066,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2098,
											"end": 2225,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 2098,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2159,
											"end": 2169,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 2154,
											"end": 2157,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2150,
											"end": 2170,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2147,
											"end": 2148,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2171,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2190,
											"end": 2194,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 2187,
											"end": 2188,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2180,
											"end": 2195,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2214,
											"end": 2218,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 2211,
											"end": 2212,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2219,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2230,
											"end": 2479,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 2230,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2340,
											"end": 2342,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2321,
											"end": 2334,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2321,
											"end": 2334,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2344,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2305,
											"end": 2345,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2305,
											"end": 2345,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2396,
											"end": 2418,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2396,
											"end": 2418,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2396,
											"end": 2418,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2357,
											"end": 2419,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2442,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2354,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 2354,
											"end": 2442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2458,
											"end": 2460,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2230,
											"end": 2479,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2484,
											"end": 2667,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 2484,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2544,
											"end": 2548,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2595,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2566,
											"end": 2596,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2619,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 2563,
											"end": 2619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2644,
											"end": 2645,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2640,
											"end": 2654,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2656,
											"end": 2660,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2636,
											"end": 2661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2636,
											"end": 2661,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2484,
											"end": 2667,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "tag",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2731,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2782,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2772,
											"end": 2776,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2764,
											"end": 2770,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2777,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2756,
											"end": 2783,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2797,
											"end": 2798,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2795,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2787,
											"end": 2799,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "tag",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2820,
											"end": 2840,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2859,
											"end": 2863,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 2922,
											"end": 2924,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2954,
											"end": 2956,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2948,
											"end": 2957,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 2994,
											"end": 2996,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2986,
											"end": 2992,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3050,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3050,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3050,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3108,
											"end": 3131,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3108,
											"end": 3131,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3104,
											"end": 3136,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3104,
											"end": 3136,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3104,
											"end": 3136,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3148,
											"end": 3163,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3148,
											"end": 3163,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3148,
											"end": 3163,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3176,
											"end": 3177,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3174,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3166,
											"end": 3178,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3212,
											"end": 3214,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3204,
											"end": 3210,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3200,
											"end": 3215,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3240,
											"end": 3246,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3235,
											"end": 3238,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3247,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3306,
											"end": 3323,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3306,
											"end": 3323,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3294,
											"end": 3324,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3294,
											"end": 3324,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3257,
											"end": 3269,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3257,
											"end": 3269,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3384,
											"end": 3390,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "tag",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3443,
											"end": 3448,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3496,
											"end": 3499,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3489,
											"end": 3493,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3481,
											"end": 3487,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3477,
											"end": 3494,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3515,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3511,
											"end": 3512,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3504,
											"end": 3516,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3550,
											"end": 3556,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3537,
											"end": 3557,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3576,
											"end": 3594,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3572,
											"end": 3574,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3569,
											"end": 3595,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3647,
											"end": 3649,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3641,
											"end": 3650,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 3714,
											"end": 3716,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3691,
											"end": 3718,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 3724,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3687,
											"end": 3725,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3641,
											"end": 3650,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3742,
											"end": 3748,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3735,
											"end": 3753,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3796,
											"end": 3799,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3789,
											"end": 3793,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3784,
											"end": 3786,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3768,
											"end": 3794,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3765,
											"end": 3800,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3811,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3803,
											"end": 3815,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3870,
											"end": 3874,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3862,
											"end": 3868,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3858,
											"end": 3875,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3851,
											"end": 3855,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3839,
											"end": 3856,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3826,
											"end": 3880,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3915,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3900,
											"end": 3915,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3900,
											"end": 3915,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 3921,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 3922,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3904,
											"end": 3910,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4115,
											"end": 4121,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4123,
											"end": 4129,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4131,
											"end": 4137,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4145,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4147,
											"end": 4153,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 4188,
											"end": 4197,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4179,
											"end": 4186,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4175,
											"end": 4198,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4171,
											"end": 4204,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4217,
											"end": 4218,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4215,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4207,
											"end": 4219,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 4259,
											"end": 4268,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4230,
											"end": 4269,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 4230,
											"end": 4269,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 4322,
											"end": 4324,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4311,
											"end": 4320,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4326,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4326,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4377,
											"end": 4379,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4362,
											"end": 4380,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4349,
											"end": 4381,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4441,
											"end": 4443,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4433,
											"end": 4439,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4430,
											"end": 4444,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4457,
											"end": 4458,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4454,
											"end": 4455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4447,
											"end": 4459,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 4533,
											"end": 4540,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 4524,
											"end": 4530,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4513,
											"end": 4522,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4531,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4470,
											"end": 4541,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 4470,
											"end": 4541,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4594,
											"end": 4596,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4583,
											"end": 4592,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4579,
											"end": 4597,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4566,
											"end": 4598,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4550,
											"end": 4598,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4550,
											"end": 4598,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4623,
											"end": 4625,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4613,
											"end": 4621,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4610,
											"end": 4626,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4639,
											"end": 4640,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4636,
											"end": 4637,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4629,
											"end": 4641,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 4717,
											"end": 4724,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 4706,
											"end": 4714,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4695,
											"end": 4704,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 4691,
											"end": 4715,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4652,
											"end": 4725,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4652,
											"end": 4725,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4778,
											"end": 4781,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 4767,
											"end": 4776,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4763,
											"end": 4782,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4750,
											"end": 4783,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4734,
											"end": 4783,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4734,
											"end": 4783,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4808,
											"end": 4810,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4798,
											"end": 4806,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4795,
											"end": 4811,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4824,
											"end": 4825,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4821,
											"end": 4822,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4814,
											"end": 4826,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "tag",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 4890,
											"end": 4897,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4879,
											"end": 4887,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4868,
											"end": 4877,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 4864,
											"end": 4888,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4837,
											"end": 4898,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4837,
											"end": 4898,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4837,
											"end": 4898,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5027,
											"end": 5033,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5035,
											"end": 5041,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5088,
											"end": 5090,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5085,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5067,
											"end": 5074,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5063,
											"end": 5086,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5059,
											"end": 5091,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5102,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5094,
											"end": 5106,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5144,
											"end": 5153,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5214,
											"end": 5216,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5206,
											"end": 5212,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5203,
											"end": 5217,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5230,
											"end": 5231,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5227,
											"end": 5228,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5232,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5268,
											"end": 5274,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5257,
											"end": 5266,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5253,
											"end": 5275,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5243,
											"end": 5275,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5243,
											"end": 5275,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5313,
											"end": 5320,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5306,
											"end": 5310,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5302,
											"end": 5304,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5298,
											"end": 5311,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5294,
											"end": 5321,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5335,
											"end": 5336,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5325,
											"end": 5337,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5371,
											"end": 5373,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5374,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5393,
											"end": 5397,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 5456,
											"end": 5458,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5488,
											"end": 5490,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5482,
											"end": 5491,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 5528,
											"end": 5530,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5520,
											"end": 5526,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5566,
											"end": 5584,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5566,
											"end": 5584,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5566,
											"end": 5584,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5654,
											"end": 5655,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 5642,
											"end": 5661,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5642,
											"end": 5661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5638,
											"end": 5666,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5638,
											"end": 5666,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5638,
											"end": 5666,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5678,
											"end": 5697,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 5678,
											"end": 5697,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5678,
											"end": 5697,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5710,
											"end": 5711,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5707,
											"end": 5708,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5700,
											"end": 5712,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5770,
											"end": 5776,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5765,
											"end": 5768,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5762,
											"end": 5777,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 5855,
											"end": 5858,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5824,
											"end": 5860,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5824,
											"end": 5860,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5921,
											"end": 5927,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5965,
											"end": 5983,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5965,
											"end": 5983,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5952,
											"end": 5984,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5952,
											"end": 5984,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5996,
											"end": 6012,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5996,
											"end": 6012,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5996,
											"end": 6012,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6025,
											"end": 6026,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6022,
											"end": 6023,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6015,
											"end": 6027,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 6103,
											"end": 6110,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6092,
											"end": 6100,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6081,
											"end": 6090,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6077,
											"end": 6101,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6111,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6111,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6111,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6175,
											"end": 6178,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6218,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6240,
											"end": 6246,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6235,
											"end": 6238,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6228,
											"end": 6247,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6266,
											"end": 6270,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6295,
											"end": 6297,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6290,
											"end": 6293,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6286,
											"end": 6298,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6279,
											"end": 6298,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 6279,
											"end": 6298,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6332,
											"end": 6334,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6325,
											"end": 6330,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6321,
											"end": 6335,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6353,
											"end": 6354,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6377,
											"end": 6383,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6374,
											"end": 6375,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6371,
											"end": 6384,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6438,
											"end": 6451,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6438,
											"end": 6451,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6426,
											"end": 6452,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6426,
											"end": 6452,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6399,
											"end": 6400,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6392,
											"end": 6401,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6548,
											"end": 6551,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 6548,
											"end": 6551,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6562,
											"end": 6823,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 6562,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6741,
											"end": 6743,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6730,
											"end": 6739,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6723,
											"end": 6744,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6704,
											"end": 6708,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6761,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 6813,
											"end": 6815,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6802,
											"end": 6811,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6798,
											"end": 6816,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6790,
											"end": 6796,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6761,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 6761,
											"end": 6817,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6893,
											"end": 6899,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6901,
											"end": 6907,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6954,
											"end": 6956,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6942,
											"end": 6951,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6933,
											"end": 6940,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6929,
											"end": 6952,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6925,
											"end": 6957,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6970,
											"end": 6971,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6967,
											"end": 6968,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6960,
											"end": 6972,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 7012,
											"end": 7021,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6983,
											"end": 7022,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6983,
											"end": 7022,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7074,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7061,
											"end": 7070,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7057,
											"end": 7075,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7044,
											"end": 7076,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 7119,
											"end": 7124,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7112,
											"end": 7125,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7105,
											"end": 7126,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7098,
											"end": 7103,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7095,
											"end": 7127,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 7085,
											"end": 7145,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 7085,
											"end": 7145,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7141,
											"end": 7142,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7138,
											"end": 7139,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7131,
											"end": 7143,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7085,
											"end": 7145,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 7085,
											"end": 7145,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7164,
											"end": 7169,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7169,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7169,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7169,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7248,
											"end": 7254,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7256,
											"end": 7262,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7309,
											"end": 7311,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7297,
											"end": 7306,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7288,
											"end": 7295,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7284,
											"end": 7307,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7280,
											"end": 7312,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7322,
											"end": 7323,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7315,
											"end": 7327,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 7367,
											"end": 7376,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7338,
											"end": 7377,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7338,
											"end": 7377,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 7430,
											"end": 7432,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7419,
											"end": 7428,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7415,
											"end": 7433,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7386,
											"end": 7434,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7386,
											"end": 7434,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7445,
											"end": 8051,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 7445,
											"end": 8051,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7549,
											"end": 7555,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7557,
											"end": 7563,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7565,
											"end": 7571,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7573,
											"end": 7579,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7581,
											"end": 7587,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7634,
											"end": 7637,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 7622,
											"end": 7631,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7613,
											"end": 7620,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 7609,
											"end": 7632,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7605,
											"end": 7638,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7651,
											"end": 7652,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7648,
											"end": 7649,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7641,
											"end": 7653,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 7693,
											"end": 7702,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7664,
											"end": 7703,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 7664,
											"end": 7703,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 7756,
											"end": 7758,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7745,
											"end": 7754,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7741,
											"end": 7759,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7712,
											"end": 7760,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7712,
											"end": 7760,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 7809,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7796,
											"end": 7805,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7792,
											"end": 7810,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7779,
											"end": 7811,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 7769,
											"end": 7811,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7769,
											"end": 7811,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7858,
											"end": 7860,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7847,
											"end": 7856,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7843,
											"end": 7861,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7830,
											"end": 7862,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 7820,
											"end": 7862,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7820,
											"end": 7862,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7913,
											"end": 7916,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 7902,
											"end": 7911,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7898,
											"end": 7917,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7885,
											"end": 7918,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 7941,
											"end": 7959,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7933,
											"end": 7939,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7930,
											"end": 7960,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7973,
											"end": 7974,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7970,
											"end": 7971,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7963,
											"end": 7975,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7996,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 8037,
											"end": 8044,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8028,
											"end": 8034,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8017,
											"end": 8026,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 8013,
											"end": 8035,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7996,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 7996,
											"end": 8045,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8547,
											"end": 8548,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 8543,
											"end": 8555,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8543,
											"end": 8555,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8543,
											"end": 8555,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 8543,
											"end": 8555,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8590,
											"end": 8602,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8590,
											"end": 8602,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8590,
											"end": 8602,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8611,
											"end": 8672,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 8611,
											"end": 8672,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8665,
											"end": 8669,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 8657,
											"end": 8663,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8653,
											"end": 8670,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8643,
											"end": 8670,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8643,
											"end": 8670,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8611,
											"end": 8672,
											"name": "tag",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 8611,
											"end": 8672,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8718,
											"end": 8720,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8710,
											"end": 8716,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8707,
											"end": 8721,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 8687,
											"end": 8705,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8684,
											"end": 8722,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8764,
											"end": 8774,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 8759,
											"end": 8762,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 8755,
											"end": 8775,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 8752,
											"end": 8753,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8745,
											"end": 8776,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8799,
											"end": 8803,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 8796,
											"end": 8797,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8789,
											"end": 8804,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8827,
											"end": 8831,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8824,
											"end": 8825,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8817,
											"end": 8832,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 9682,
											"end": 9809,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 9682,
											"end": 9809,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9743,
											"end": 9753,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 9738,
											"end": 9741,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 9734,
											"end": 9754,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 9731,
											"end": 9732,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9724,
											"end": 9755,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9774,
											"end": 9778,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 9771,
											"end": 9772,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9764,
											"end": 9779,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9798,
											"end": 9802,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 9795,
											"end": 9796,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9788,
											"end": 9803,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9814,
											"end": 9941,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 9814,
											"end": 9941,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9875,
											"end": 9885,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 9870,
											"end": 9873,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 9866,
											"end": 9886,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 9863,
											"end": 9864,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9856,
											"end": 9887,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9906,
											"end": 9910,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 9903,
											"end": 9904,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9896,
											"end": 9911,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9930,
											"end": 9934,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 9927,
											"end": 9928,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9920,
											"end": 9935,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9946,
											"end": 10081,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 9946,
											"end": 10081,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9985,
											"end": 9988,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10023,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10023,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10006,
											"end": 10023,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10003,
											"end": 10046,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 10003,
											"end": 10046,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10073,
											"end": 10074,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9946,
											"end": 10081,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 10905,
											"end": 11306,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 10905,
											"end": 11306,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11107,
											"end": 11109,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11089,
											"end": 11110,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11089,
											"end": 11110,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11089,
											"end": 11110,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11146,
											"end": 11148,
											"name": "PUSH",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 11126,
											"end": 11144,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11126,
											"end": 11144,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11126,
											"end": 11144,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11119,
											"end": 11149,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11185,
											"end": 11219,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 11180,
											"end": 11182,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11165,
											"end": 11183,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11165,
											"end": 11183,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11251,
											"end": 11253,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 11236,
											"end": 11254,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11236,
											"end": 11254,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11229,
											"end": 11264,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11296,
											"end": 11299,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 11281,
											"end": 11300,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11281,
											"end": 11300,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10905,
											"end": 11306,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11311,
											"end": 11717,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 11311,
											"end": 11717,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11513,
											"end": 11515,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11495,
											"end": 11516,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11495,
											"end": 11516,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11495,
											"end": 11516,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11552,
											"end": 11554,
											"name": "PUSH",
											"source": 11,
											"value": "2A"
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11525,
											"end": 11555,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11591,
											"end": 11625,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 11586,
											"end": 11588,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11571,
											"end": 11589,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11571,
											"end": 11589,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11564,
											"end": 11626,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11657,
											"end": 11659,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11635,
											"end": 11675,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11707,
											"end": 11710,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 11692,
											"end": 11711,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11692,
											"end": 11711,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11311,
											"end": 11717,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11722,
											"end": 11850,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 11722,
											"end": 11850,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11762,
											"end": 11765,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11793,
											"end": 11794,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11789,
											"end": 11795,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 11786,
											"end": 11787,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11783,
											"end": 11796,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 11780,
											"end": 11819,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11780,
											"end": 11819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 11780,
											"end": 11819,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11835,
											"end": 11844,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11835,
											"end": 11844,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11722,
											"end": 11850,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11855,
											"end": 12320,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 11855,
											"end": 12320,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12112,
											"end": 12114,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12101,
											"end": 12110,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12094,
											"end": 12115,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12075,
											"end": 12079,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12138,
											"end": 12194,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 12190,
											"end": 12192,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12179,
											"end": 12188,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12175,
											"end": 12193,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12167,
											"end": 12173,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 12138,
											"end": 12194,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 12138,
											"end": 12194,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 12138,
											"end": 12194,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 12138,
											"end": 12194,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12242,
											"end": 12251,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12234,
											"end": 12240,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12230,
											"end": 12252,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12225,
											"end": 12227,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12214,
											"end": 12223,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12210,
											"end": 12228,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12203,
											"end": 12253,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12270,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 12307,
											"end": 12313,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12299,
											"end": 12305,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 12270,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 12270,
											"end": 12314,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 12270,
											"end": 12314,
											"name": "tag",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 12270,
											"end": 12314,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12262,
											"end": 12314,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 11855,
											"end": 12320,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11855,
											"end": 12320,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 12988,
											"end": 13815,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 12988,
											"end": 13815,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13385,
											"end": 13400,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 13385,
											"end": 13400,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13385,
											"end": 13400,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13367,
											"end": 13401,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13367,
											"end": 13401,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13437,
											"end": 13452,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13437,
											"end": 13452,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13432,
											"end": 13434,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13417,
											"end": 13435,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13417,
											"end": 13435,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13410,
											"end": 13453,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13347,
											"end": 13350,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 13484,
											"end": 13486,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13469,
											"end": 13487,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13469,
											"end": 13487,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13462,
											"end": 13493,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13462,
											"end": 13493,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13462,
											"end": 13493,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13310,
											"end": 13314,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13310,
											"end": 13314,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13553,
											"end": 13572,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13553,
											"end": 13572,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13545,
											"end": 13551,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "tag",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13621,
											"end": 13630,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13613,
											"end": 13619,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13609,
											"end": 13631,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13604,
											"end": 13606,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 13593,
											"end": 13602,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13589,
											"end": 13607,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13582,
											"end": 13632,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13655,
											"end": 13699,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 13692,
											"end": 13698,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13684,
											"end": 13690,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 13655,
											"end": 13699,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 13655,
											"end": 13699,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 13655,
											"end": 13699,
											"name": "tag",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 13655,
											"end": 13699,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13641,
											"end": 13699,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13641,
											"end": 13699,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13748,
											"end": 13757,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13740,
											"end": 13746,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13736,
											"end": 13758,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13730,
											"end": 13733,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 13719,
											"end": 13728,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13715,
											"end": 13734,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13708,
											"end": 13759,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13776,
											"end": 13809,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 13802,
											"end": 13808,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13794,
											"end": 13800,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13776,
											"end": 13809,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 13776,
											"end": 13809,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 13776,
											"end": 13809,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 13776,
											"end": 13809,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13768,
											"end": 13809,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 12988,
											"end": 13815,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12988,
											"end": 13815,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 13820,
											"end": 14069,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 13820,
											"end": 14069,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13889,
											"end": 13895,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13942,
											"end": 13944,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13930,
											"end": 13939,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13921,
											"end": 13928,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13917,
											"end": 13940,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13913,
											"end": 13945,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 13910,
											"end": 13962,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13910,
											"end": 13962,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 13910,
											"end": 13962,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13958,
											"end": 13959,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13955,
											"end": 13956,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13948,
											"end": 13960,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13910,
											"end": 13962,
											"name": "tag",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 13910,
											"end": 13962,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13990,
											"end": 13999,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13984,
											"end": 14000,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14009,
											"end": 14039,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 14033,
											"end": 14038,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14009,
											"end": 14039,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 14009,
											"end": 14039,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 14074,
											"end": 14253,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 14074,
											"end": 14253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14109,
											"end": 14112,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14151,
											"end": 14152,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 14133,
											"end": 14149,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 14130,
											"end": 14153,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 14127,
											"end": 14247,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14127,
											"end": 14247,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 14127,
											"end": 14247,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14197,
											"end": 14198,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 14194,
											"end": 14195,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14191,
											"end": 14192,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14176,
											"end": 14199,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14234,
											"end": 14235,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14228,
											"end": 14236,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14223,
											"end": 14226,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 14219,
											"end": 14237,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 14127,
											"end": 14247,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 14127,
											"end": 14247,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14074,
											"end": 14253,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14074,
											"end": 14253,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14297,
											"end": 14300,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14339,
											"end": 14343,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 14321,
											"end": 14337,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 14318,
											"end": 14344,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 14315,
											"end": 14354,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14315,
											"end": 14354,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 14315,
											"end": 14354,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 14315,
											"end": 14354,
											"name": "tag",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 14315,
											"end": 14354,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14381,
											"end": 14383,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14375,
											"end": 14384,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14446,
											"end": 14462,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 14442,
											"end": 14467,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14442,
											"end": 14467,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14439,
											"end": 14440,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 14375,
											"end": 14384,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14418,
											"end": 14468,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 14497,
											"end": 14501,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14491,
											"end": 14502,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14521,
											"end": 14537,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 14556,
											"end": 14574,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14627,
											"end": 14629,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14620,
											"end": 14624,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 14612,
											"end": 14618,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14608,
											"end": 14625,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14605,
											"end": 14630,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 14600,
											"end": 14602,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14592,
											"end": 14598,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14589,
											"end": 14603,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 14586,
											"end": 14631,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 14583,
											"end": 14641,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14583,
											"end": 14641,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 14583,
											"end": 14641,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14634,
											"end": 14639,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14634,
											"end": 14639,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14634,
											"end": 14639,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14634,
											"end": 14639,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14634,
											"end": 14639,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 14583,
											"end": 14641,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 14583,
											"end": 14641,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14671,
											"end": 14677,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14665,
											"end": 14669,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 14661,
											"end": 14678,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14650,
											"end": 14678,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14650,
											"end": 14678,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14707,
											"end": 14710,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14701,
											"end": 14711,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14734,
											"end": 14736,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14726,
											"end": 14732,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14723,
											"end": 14737,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 14720,
											"end": 14747,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14720,
											"end": 14747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 14720,
											"end": 14747,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 14720,
											"end": 14747,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 14720,
											"end": 14747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14824,
											"end": 14826,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14805,
											"end": 14821,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 14799,
											"end": 14803,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 14795,
											"end": 14822,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14791,
											"end": 14827,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14784,
											"end": 14788,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14775,
											"end": 14781,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14770,
											"end": 14773,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 14766,
											"end": 14782,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14762,
											"end": 14789,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14759,
											"end": 14828,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 14756,
											"end": 14838,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14756,
											"end": 14838,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 14756,
											"end": 14838,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 14756,
											"end": 14838,
											"name": "tag",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 14756,
											"end": 14838,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14847,
											"end": 14904,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 14898,
											"end": 14902,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14889,
											"end": 14895,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14881,
											"end": 14887,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 14877,
											"end": 14896,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14873,
											"end": 14903,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14867,
											"end": 14871,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 14847,
											"end": 14904,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 14847,
											"end": 14904,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 14847,
											"end": 14904,
											"name": "tag",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 14847,
											"end": 14904,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14920,
											"end": 14923,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14920,
											"end": 14923,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 15355,
											"end": 15759,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 15355,
											"end": 15759,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15557,
											"end": 15559,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15539,
											"end": 15560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15539,
											"end": 15560,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15539,
											"end": 15560,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15596,
											"end": 15598,
											"name": "PUSH",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 15576,
											"end": 15594,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15576,
											"end": 15594,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15576,
											"end": 15594,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15569,
											"end": 15599,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15635,
											"end": 15669,
											"name": "PUSH",
											"source": 11,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 15630,
											"end": 15632,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15608,
											"end": 15670,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15701,
											"end": 15703,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 15686,
											"end": 15704,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15686,
											"end": 15704,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15679,
											"end": 15717,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15749,
											"end": 15752,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 15734,
											"end": 15753,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15734,
											"end": 15753,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15355,
											"end": 15759,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 15764,
											"end": 16325,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 15764,
											"end": 16325,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16061,
											"end": 16076,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 16061,
											"end": 16076,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16061,
											"end": 16076,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16043,
											"end": 16077,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16043,
											"end": 16077,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16113,
											"end": 16128,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 16113,
											"end": 16128,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16108,
											"end": 16110,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16093,
											"end": 16111,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16093,
											"end": 16111,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16086,
											"end": 16129,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16160,
											"end": 16162,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16145,
											"end": 16163,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16145,
											"end": 16163,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16138,
											"end": 16172,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 16138,
											"end": 16172,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16138,
											"end": 16172,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16203,
											"end": 16205,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 16188,
											"end": 16206,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16188,
											"end": 16206,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16181,
											"end": 16215,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16181,
											"end": 16215,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16181,
											"end": 16215,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16023,
											"end": 16026,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 16246,
											"end": 16249,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 16231,
											"end": 16250,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16231,
											"end": 16250,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16224,
											"end": 16256,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16224,
											"end": 16256,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16224,
											"end": 16256,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15986,
											"end": 15990,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15986,
											"end": 15990,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16299,
											"end": 16318,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16299,
											"end": 16318,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16291,
											"end": 16297,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "tag",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16265,
											"end": 16319,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 15764,
											"end": 16325,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15764,
											"end": 16325,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x04d6d1342ece664085921a4fabc928a7bcf1cf2873fa81780f61a54dc2b9b66e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6d2b052effa2e9a7479b0fea53b46f4cbbd91947848ef632aadad20ae2e9275\",\"dweb:/ipfs/QmcZp7f5cooGZrhHE8RC1yQR53RFZt19d5fyVqNfbHmPgY\"]},\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 163,
								"contract": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 169,
								"contract": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 171,
								"contract": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol": {
				"ERC1155Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "burnBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"burnBatch(address,uint256[],uint256[])": "6b20c454",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":\"ERC1155Burnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x04d6d1342ece664085921a4fabc928a7bcf1cf2873fa81780f61a54dc2b9b66e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6d2b052effa2e9a7479b0fea53b46f4cbbd91947848ef632aadad20ae2e9275\",\"dweb:/ipfs/QmcZp7f5cooGZrhHE8RC1yQR53RFZt19d5fyVqNfbHmPgY\"]},\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0x65283046c52a6bd3e57e456cc5eeab0dd86c00979b84495dc0109b609747fd16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cae1aa0113f29cb099e7ff5c2b8f559ede5fc9a8f1d57746e5ecea8fff9157de\",\"dweb:/ipfs/QmQrymH5ACUZcoWYSYZTQTGM1xVEZpnuQce8etBWTB33xm\"]},\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 163,
								"contract": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 169,
								"contract": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 171,
								"contract": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol": {
				"ERC1155Supply": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "exists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of ERC1155 that adds tracking of total supply per id. Useful for scenarios where Fungible and Non-fungible tokens have to be clearly identified. Note: While a totalSupply of 1 might mean the corresponding is an NFT, there is no guarantees that no other token with the same id are not going to be minted.",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"exists(uint256)": {
								"details": "Indicates whether any token exist with a given id, or not."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"totalSupply(uint256)": {
								"details": "Total amount of tokens in with a given id."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"exists(uint256)": "4f558e79",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply(uint256)": "bd85b039",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC1155 that adds tracking of total supply per id. Useful for scenarios where Fungible and Non-fungible tokens have to be clearly identified. Note: While a totalSupply of 1 might mean the corresponding is an NFT, there is no guarantees that no other token with the same id are not going to be minted.\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply(uint256)\":{\"details\":\"Total amount of tokens in with a given id.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":\"ERC1155Supply\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x04d6d1342ece664085921a4fabc928a7bcf1cf2873fa81780f61a54dc2b9b66e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6d2b052effa2e9a7479b0fea53b46f4cbbd91947848ef632aadad20ae2e9275\",\"dweb:/ipfs/QmcZp7f5cooGZrhHE8RC1yQR53RFZt19d5fyVqNfbHmPgY\"]},\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":{\"keccak256\":\"0xe243a49f159c97fdd011edb7a8ed1b48175f0fa6b8592bb6dcccac7e22d8c37b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9fcf3c76e66e7cbd95bc1d47eb41c2764670deea0e129a0bc8ed893f5ee20628\",\"dweb:/ipfs/QmUVYsGME7ikBfN638shb36WHbqecVAzxVMqSHT1eE5Qdk\"]},\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 163,
								"contract": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 169,
								"contract": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 171,
								"contract": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1475,
								"contract": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":179:7908  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":179:7908  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ad64e6d450c6eceb6c1518d947cba75fc5c64b47f8814f4ee30868f24b8a2a1064736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ad64e6d450c6eceb6c1518d947cba75fc5c64b47f8814f4ee30868f24b8a2a1064736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD PUSH5 0xE6D450C6EC 0xEB PUSH13 0x1518D947CBA75FC5C64B47F881 0x4F 0x4E 0xE3 ADDMOD PUSH9 0xF24B8A2A1064736F6C PUSH4 0x4300080D STOP CALLER ",
							"sourceMap": "179:7729:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;179:7729:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ad64e6d450c6eceb6c1518d947cba75fc5c64b47f8814f4ee30868f24b8a2a1064736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD PUSH5 0xE6D450C6EC 0xEB PUSH13 0x1518D947CBA75FC5C64B47F881 0x4F 0x4E 0xE3 ADDMOD PUSH9 0xF24B8A2A1064736F6C PUSH4 0x4300080D STOP CALLER ",
							"sourceMap": "179:7729:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ad64e6d450c6eceb6c1518d947cba75fc5c64b47f8814f4ee30868f24b8a2a1064736f6c634300080d0033",
									".code": [
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> msc_token/ERC1155.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "msc_token/ERC1155.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"msc_token/ERC1155.sol": {
				"ast": {
					"absolutePath": "msc_token/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1910
						],
						"Context": [
							1932
						],
						"ERC1155": [
							1233
						],
						"ERC1155Burnable": [
							1465
						],
						"ERC1155Supply": [
							1598
						],
						"ERC165": [
							1956
						],
						"GameItems": [
							137
						],
						"IERC1155": [
							1355
						],
						"IERC1155MetadataURI": [
							1613
						],
						"IERC1155Receiver": [
							1396
						],
						"IERC165": [
							1968
						]
					},
					"id": 138,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "2:23:0"
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "./node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 138,
							"sourceUnit": 1234,
							"src": "31:74:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
							"file": "./node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 138,
							"sourceUnit": 1466,
							"src": "107:93:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
							"file": "./node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 138,
							"sourceUnit": 1599,
							"src": "202:91:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "ERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1233,
										"src": "319:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "319:7:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "ERC1155Burnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1465,
										"src": "329:15:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "329:15:0"
								}
							],
							"canonicalName": "GameItems",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 137,
							"linearizedBaseContracts": [
								137,
								1465,
								1233,
								1613,
								1355,
								1956,
								1968,
								1932
							],
							"name": "GameItems",
							"nameLocation": "306:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "3e4bee38",
									"id": 11,
									"mutability": "constant",
									"name": "GOLD",
									"nameLocation": "375:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 137,
									"src": "351:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "351:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "382:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e3e55f08",
									"id": 14,
									"mutability": "constant",
									"name": "SILVER",
									"nameLocation": "414:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 137,
									"src": "390:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 12,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "390:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "423:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d562e204",
									"id": 17,
									"mutability": "constant",
									"name": "THORS_HAMMER",
									"nameLocation": "455:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 137,
									"src": "431:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 15,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "431:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "470:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "13dc989f",
									"id": 20,
									"mutability": "constant",
									"name": "SWORD",
									"nameLocation": "502:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 137,
									"src": "478:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "478:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "510:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5b2725ed",
									"id": 23,
									"mutability": "constant",
									"name": "SHIELD",
									"nameLocation": "542:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 137,
									"src": "518:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 21,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "518:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 22,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "551:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "626:244:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 30,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "643:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "643:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 32,
															"name": "GOLD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "655:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "661:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "665:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "661:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														{
															"hexValue": "",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "669:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 29,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "637:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "637:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "637:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 40,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "689:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "689:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 42,
															"name": "SILVER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "701:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000000"
															},
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 43,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "709:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3237",
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "713:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_27_by_1",
																	"typeString": "int_const 27"
																},
																"value": "27"
															},
															"src": "709:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000000"
															}
														},
														{
															"hexValue": "",
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "717:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000000"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 39,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "683:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "683:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "683:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 50,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "737:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "737:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 52,
															"name": "THORS_HAMMER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "749:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "763:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "",
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "766:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 49,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "731:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "731:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "731:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 58,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "786:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "786:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 60,
															"name": "SWORD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "798:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "805:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "39",
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "809:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_9_by_1",
																	"typeString": "int_const 9"
																},
																"value": "9"
															},
															"src": "805:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															}
														},
														{
															"hexValue": "",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "812:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 57,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "780:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "780:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "780:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 68,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "832:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "832:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 70,
															"name": "SHIELD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "844:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															},
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "852:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "39",
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "856:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_9_by_1",
																	"typeString": "int_const 9"
																},
																"value": "9"
															},
															"src": "852:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															}
														},
														{
															"hexValue": "",
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "859:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 67,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "826:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "826:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "826:36:0"
											}
										]
									},
									"id": 78,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "68747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e",
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "583:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9be393994f02169c966a8f7d954e5f555f9d6fdea83c170362ff79cf2c5ce4f1",
														"typeString": "literal_string \"https://game.example/api/item/{id}.json\""
													},
													"value": "https://game.example/api/item/{id}.json"
												}
											],
											"id": 27,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 25,
												"name": "ERC1155",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1233,
												"src": "575:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "575:50:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "572:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "626:0:0"
									},
									"scope": 137,
									"src": "561:309:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "906:280:0",
										"statements": [
											{
												"assignments": [
													85
												],
												"declarations": [
													{
														"constant": false,
														"id": 85,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "934:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 135,
														"src": "917:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 83,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "917:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 84,
															"nodeType": "ArrayTypeName",
															"src": "917:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 91,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31303030",
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "954:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"id": 88,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "940:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 86,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "944:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 87,
															"nodeType": "ArrayTypeName",
															"src": "944:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "940:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "917:42:0"
											},
											{
												"assignments": [
													96
												],
												"declarations": [
													{
														"constant": false,
														"id": 96,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "987:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 135,
														"src": "970:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 94,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "970:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 95,
															"nodeType": "ArrayTypeName",
															"src": "970:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 102,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31303030",
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1011:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "997:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 97,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1001:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 98,
															"nodeType": "ArrayTypeName",
															"src": "1001:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "997:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "970:46:0"
											},
											{
												"body": {
													"id": 125,
													"nodeType": "Block",
													"src": "1062:66:0",
													"statements": [
														{
															"expression": {
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 113,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 85,
																		"src": "1077:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 115,
																	"indexExpression": {
																		"id": 114,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 104,
																		"src": "1081:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1077:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 116,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "1086:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1077:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 118,
															"nodeType": "ExpressionStatement",
															"src": "1077:10:0"
														},
														{
															"expression": {
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 119,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "1102:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 121,
																	"indexExpression": {
																		"id": 120,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 104,
																		"src": "1110:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1102:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1115:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1102:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 124,
															"nodeType": "ExpressionStatement",
															"src": "1102:14:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 107,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "1047:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1051:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "1047:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 126,
												"initializationExpression": {
													"assignments": [
														104
													],
													"declarations": [
														{
															"constant": false,
															"id": 104,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1040:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 126,
															"src": "1032:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 103,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1032:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 106,
													"initialValue": {
														"hexValue": "30",
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1044:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1032:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1057:3:0",
														"subExpression": {
															"id": 110,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "1057:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 112,
													"nodeType": "ExpressionStatement",
													"src": "1057:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1027:101:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 128,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1149:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1149:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 130,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "1161:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 131,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "1166:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1175:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 127,
														"name": "_mintBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "1138:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1138:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "1138:40:0"
											}
										]
									},
									"functionSelector": "6ecf11d7",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintBatch",
									"nameLocation": "887:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "896:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:0:0"
									},
									"scope": 137,
									"src": "878:308:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 138,
							"src": "297:892:0",
							"usedErrors": []
						}
					],
					"src": "2:1187:0"
				},
				"id": 0
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1910
						],
						"Context": [
							1932
						],
						"ERC1155": [
							1233
						],
						"ERC165": [
							1956
						],
						"IERC1155": [
							1355
						],
						"IERC1155MetadataURI": [
							1613
						],
						"IERC1155Receiver": [
							1396
						],
						"IERC165": [
							1968
						]
					},
					"id": 1234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 139,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:1"
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1234,
							"sourceUnit": 1356,
							"src": "119:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 141,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1234,
							"sourceUnit": 1397,
							"src": "144:32:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1234,
							"sourceUnit": 1614,
							"src": "177:46:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 143,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1234,
							"sourceUnit": 1911,
							"src": "224:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1234,
							"sourceUnit": 1933,
							"src": "258:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 145,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1234,
							"sourceUnit": 1957,
							"src": "292:46:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 147,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1932,
										"src": "575:7:1"
									},
									"id": 148,
									"nodeType": "InheritanceSpecifier",
									"src": "575:7:1"
								},
								{
									"baseName": {
										"id": 149,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1956,
										"src": "584:6:1"
									},
									"id": 150,
									"nodeType": "InheritanceSpecifier",
									"src": "584:6:1"
								},
								{
									"baseName": {
										"id": 151,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1355,
										"src": "592:8:1"
									},
									"id": 152,
									"nodeType": "InheritanceSpecifier",
									"src": "592:8:1"
								},
								{
									"baseName": {
										"id": 153,
										"name": "IERC1155MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1613,
										"src": "602:19:1"
									},
									"id": 154,
									"nodeType": "InheritanceSpecifier",
									"src": "602:19:1"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 146,
								"nodeType": "StructuredDocumentation",
								"src": "340:214:1",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1233,
							"linearizedBaseContracts": [
								1233,
								1613,
								1355,
								1956,
								1968,
								1932
							],
							"name": "ERC1155",
							"nameLocation": "564:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 157,
									"libraryName": {
										"id": 155,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1910,
										"src": "634:7:1"
									},
									"nodeType": "UsingForDirective",
									"src": "628:26:1",
									"typeName": {
										"id": 156,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "646:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 163,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "765:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1233,
									"src": "709:65:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 162,
										"keyType": {
											"id": 158,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "717:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "709:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 161,
											"keyType": {
												"id": 159,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "736:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "728:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 160,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "747:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "884:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1233,
									"src": "831:71:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 168,
										"keyType": {
											"id": 164,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "839:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "831:44:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 167,
											"keyType": {
												"id": 165,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "858:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "850:24:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 166,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "869:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1038:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 1233,
									"src": "1023:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1023:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1124:30:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 178,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "1142:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 177,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "1134:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1134:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "1134:13:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1049:38:1",
										"text": " @dev See {_setURI}."
									},
									"id": 182,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1118:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1104:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1104:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:20:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1124:0:1"
									},
									"scope": 1233,
									"src": "1092:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1955,
										1967
									],
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "1329:197:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 193,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "1358:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 195,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1355,
																			"src": "1378:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1355_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1355_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 194,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1373:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1373:14:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1355",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1373:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1358:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 199,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "1415:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 201,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1613,
																			"src": "1435:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1613_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1613_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 200,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1430:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1430:25:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1613",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1430:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1415:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1358:109:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 208,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "1507:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 206,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1483:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1233_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1955,
															"src": "1483:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1483:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1358:161:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 192,
												"id": 211,
												"nodeType": "Return",
												"src": "1339:180:1"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "1160:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1230:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 189,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 187,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1956,
												"src": "1297:6:1"
											},
											{
												"id": 188,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1968,
												"src": "1305:7:1"
											}
										],
										"src": "1288:25:1"
									},
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1255:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1248:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 184,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1248:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1247:20:1"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1323:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1323:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:6:1"
									},
									"scope": 1233,
									"src": "1221:305:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1612
									],
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "2000:28:1",
										"statements": [
											{
												"expression": {
													"id": 222,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2017:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 221,
												"id": 223,
												"nodeType": "Return",
												"src": "2010:11:1"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "1532:388:1",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1934:3:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 218,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1967:8:1"
									},
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "1938:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1937:9:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "1985:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 219,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1985:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1984:15:1"
									},
									"scope": 1233,
									"src": "1925:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1293
									],
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "2265:133:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 237,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "2283:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2302:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2294:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 238,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2294:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2294:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2283:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2306:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															},
															"value": "ERC1155: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															}
														],
														"id": 236,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2275:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2275:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "2275:77:1"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 246,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "2369:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 248,
														"indexExpression": {
															"id": 247,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "2379:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2369:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 250,
													"indexExpression": {
														"id": 249,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "2383:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2369:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 235,
												"id": 251,
												"nodeType": "Return",
												"src": "2362:29:1"
											}
										]
									},
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "2034:131:1",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2179:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 232,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2238:8:1"
									},
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2197:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2189:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2214:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2206:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2188:29:1"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2256:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2255:9:1"
									},
									"scope": 1233,
									"src": "2170:228:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1306
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "2728:335:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 268,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "2746:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2746:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 270,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 260,
																	"src": "2765:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2765:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2746:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2777:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 267,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2738:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2738:83:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "2738:83:1"
											},
											{
												"assignments": [
													280
												],
												"declarations": [
													{
														"constant": false,
														"id": 280,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2849:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "2832:30:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 278,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2832:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 279,
															"nodeType": "ArrayTypeName",
															"src": "2832:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 287,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 284,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "2879:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2879:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2865:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 281,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2869:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 282,
															"nodeType": "ArrayTypeName",
															"src": "2869:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2865:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2832:63:1"
											},
											{
												"body": {
													"id": 312,
													"nodeType": "Block",
													"src": "2952:74:1",
													"statements": [
														{
															"expression": {
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 299,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 280,
																		"src": "2966:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 301,
																	"indexExpression": {
																		"id": 300,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 289,
																		"src": "2980:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2966:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 303,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 257,
																				"src": "2995:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 305,
																			"indexExpression": {
																				"id": 304,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 289,
																				"src": "3004:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2995:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 306,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 260,
																				"src": "3008:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 308,
																			"indexExpression": {
																				"id": 307,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 289,
																				"src": "3012:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3008:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 302,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 253,
																		"src": "2985:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2985:30:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2966:49:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 311,
															"nodeType": "ExpressionStatement",
															"src": "2966:49:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 292,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "2926:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 293,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "2930:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2930:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2926:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 313,
												"initializationExpression": {
													"assignments": [
														289
													],
													"declarations": [
														{
															"constant": false,
															"id": 289,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2919:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 313,
															"src": "2911:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 288,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2911:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 291,
													"initialValue": {
														"hexValue": "30",
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2911:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2947:3:1",
														"subExpression": {
															"id": 296,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "2949:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 298,
													"nodeType": "ExpressionStatement",
													"src": "2947:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2906:120:1"
											},
											{
												"expression": {
													"id": 314,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 280,
													"src": "3043:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 266,
												"id": 315,
												"nodeType": "Return",
												"src": "3036:20:1"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2404:146:1",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2564:14:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 262,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2680:8:1"
									},
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2596:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2579:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 255,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2579:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 256,
													"nodeType": "ArrayTypeName",
													"src": "2579:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2623:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2606:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 258,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2606:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 259,
													"nodeType": "ArrayTypeName",
													"src": "2606:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2578:49:1"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2706:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 263,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2706:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 264,
													"nodeType": "ArrayTypeName",
													"src": "2706:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2705:18:1"
									},
									"scope": 1233,
									"src": "2555:508:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1314
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "3215:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 327,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1922,
																"src": "3244:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3244:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 329,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "3258:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 330,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "3268:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 326,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "3225:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "3225:52:1"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "3069:57:1",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3140:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 324,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3206:8:1"
									},
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3166:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "3158:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3158:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3181:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "3176:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 321,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3176:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:33:1"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3215:0:1"
									},
									"scope": 1233,
									"src": "3131:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1324
									],
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "3456:61:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 345,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "3473:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 347,
														"indexExpression": {
															"id": 346,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "3492:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3473:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 349,
													"indexExpression": {
														"id": 348,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "3501:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3473:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 344,
												"id": 350,
												"nodeType": "Return",
												"src": "3466:44:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "3290:56:1",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3360:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 341,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3432:8:1"
									},
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3385:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "3377:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3377:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3402:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "3394:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3376:35:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "3450:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3450:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3449:6:1"
									},
									"scope": 1233,
									"src": "3351:166:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1338
									],
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "3753:220:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 368,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "3784:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 369,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1922,
																		"src": "3792:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3792:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3784:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 373,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 355,
																		"src": "3825:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 374,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1922,
																			"src": "3831:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3831:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 372,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "3808:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3808:36:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3784:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3858:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 367,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3763:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3763:148:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "3763:148:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 382,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "3939:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 383,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "3945:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 384,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "3949:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 385,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "3953:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 386,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "3961:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 381,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "3921:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3921:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "3921:45:1"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "3523:56:1",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3593:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 365,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3744:8:1"
									},
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3627:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3619:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3619:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3649:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3641:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3641:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3669:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3661:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3661:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3689:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3681:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3681:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3718:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3705:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 362,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3705:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3609:119:1"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3753:0:1"
									},
									"scope": 1233,
									"src": "3584:389:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1354
									],
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "4239:236:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "4270:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 409,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1922,
																		"src": "4278:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4278:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4270:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 413,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 393,
																		"src": "4311:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 414,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1922,
																			"src": "4317:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4317:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 412,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "4294:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4294:36:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4270:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4344:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 407,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4249:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4249:157:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "4249:157:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 422,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "4439:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 423,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "4445:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 424,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "4449:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 425,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "4454:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 426,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "4463:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 421,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4416:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4416:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "4416:52:1"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "3979:61:1",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4054:21:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 405,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4230:8:1"
									},
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4093:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "4085:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4085:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4115:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "4107:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4107:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4144:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "4127:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 396,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4127:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 397,
													"nodeType": "ArrayTypeName",
													"src": "4127:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4174:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "4157:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 399,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4157:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 400,
													"nodeType": "ArrayTypeName",
													"src": "4157:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4204:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "4191:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 402,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4191:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:139:1"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4239:0:1"
									},
									"scope": 1233,
									"src": "4045:430:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "5088:634:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 445,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "5106:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5120:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5112:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 446,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5112:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5112:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5106:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5124:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 444,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "5098:66:1"
											},
											{
												"assignments": [
													455
												],
												"declarations": [
													{
														"constant": false,
														"id": 455,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5183:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 523,
														"src": "5175:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 454,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5175:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 458,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 456,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "5194:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5194:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5175:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 460,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5238:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "5248:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 462,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "5254:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 464,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "5276:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 463,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "5258:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5258:21:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 467,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "5299:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 466,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "5281:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5281:25:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 469,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "5308:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 459,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "5217:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5217:96:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "5217:96:1"
											},
											{
												"assignments": [
													473
												],
												"declarations": [
													{
														"constant": false,
														"id": 473,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "5332:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 523,
														"src": "5324:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 472,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5324:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 479,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 474,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5346:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 476,
														"indexExpression": {
															"id": 475,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "5356:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5346:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 478,
													"indexExpression": {
														"id": 477,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "5360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5346:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5324:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 481,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 473,
																"src": "5383:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 482,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 439,
																"src": "5398:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5383:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5406:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 480,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5375:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 486,
												"nodeType": "ExpressionStatement",
												"src": "5375:76:1"
											},
											{
												"id": 497,
												"nodeType": "UncheckedBlock",
												"src": "5461:77:1",
												"statements": [
													{
														"expression": {
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 487,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 163,
																		"src": "5485:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 490,
																	"indexExpression": {
																		"id": 488,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "5495:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5485:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 491,
																"indexExpression": {
																	"id": 489,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "5499:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5485:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 492,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 473,
																	"src": "5507:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 493,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "5521:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5507:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5485:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 496,
														"nodeType": "ExpressionStatement",
														"src": "5485:42:1"
													}
												]
											},
											{
												"expression": {
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 498,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 163,
																"src": "5547:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 501,
															"indexExpression": {
																"id": 499,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "5557:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5547:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 502,
														"indexExpression": {
															"id": 500,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "5561:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5547:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 503,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "5568:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5547:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "5547:27:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 507,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5605:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "5615:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "5621:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 510,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "5625:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 511,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "5629:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "5590:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5590:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 513,
												"nodeType": "EmitStatement",
												"src": "5585:51:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5678:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 516,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "5688:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 517,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "5694:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "5698:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 519,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "5702:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 520,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "5710:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 514,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "5647:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5647:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "5647:68:1"
											}
										]
									},
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "4481:439:1",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "4934:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4969:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "4961:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4961:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4991:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "4983:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5011:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "5003:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5003:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5031:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "5023:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5023:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5060:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "5047:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 440,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5047:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4951:119:1"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:1"
									},
									"scope": 1233,
									"src": "4925:797:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "6256:857:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 541,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6274:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6274:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 543,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "6288:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6288:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6274:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6304:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 540,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6266:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6266:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "6266:81:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 550,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "6365:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6379:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6371:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 551,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6371:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6371:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6365:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6383:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 549,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6357:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "6357:66:1"
											},
											{
												"assignments": [
													560
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "6442:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "6434:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 559,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6434:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 563,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 561,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "6453:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6453:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6434:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 565,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "6497:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "6507:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 567,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "6513:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 568,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "6517:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 569,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "6522:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 570,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "6531:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 564,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "6476:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6476:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 572,
												"nodeType": "ExpressionStatement",
												"src": "6476:60:1"
											},
											{
												"body": {
													"id": 630,
													"nodeType": "Block",
													"src": "6588:370:1",
													"statements": [
														{
															"assignments": [
																585
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 585,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6610:2:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 630,
																	"src": "6602:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 584,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6602:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 589,
															"initialValue": {
																"baseExpression": {
																	"id": 586,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6615:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 588,
																"indexExpression": {
																	"id": 587,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "6619:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6615:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6602:19:1"
														},
														{
															"assignments": [
																591
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 591,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "6643:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 630,
																	"src": "6635:14:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 590,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6635:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 595,
															"initialValue": {
																"baseExpression": {
																	"id": 592,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "6652:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 594,
																"indexExpression": {
																	"id": 593,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "6660:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6652:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6635:27:1"
														},
														{
															"assignments": [
																597
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 597,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6685:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 630,
																	"src": "6677:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 596,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6677:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 603,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 598,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 163,
																		"src": "6699:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 600,
																	"indexExpression": {
																		"id": 599,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "6709:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6699:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 602,
																"indexExpression": {
																	"id": 601,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 527,
																	"src": "6713:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6699:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6677:41:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 605,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 597,
																			"src": "6740:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 606,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 591,
																			"src": "6755:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6740:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6763:44:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 604,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6732:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6732:76:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 610,
															"nodeType": "ExpressionStatement",
															"src": "6732:76:1"
														},
														{
															"id": 621,
															"nodeType": "UncheckedBlock",
															"src": "6822:85:1",
															"statements": [
																{
																	"expression": {
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 611,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 163,
																					"src": "6850:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 614,
																				"indexExpression": {
																					"id": 612,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 585,
																					"src": "6860:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6850:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 615,
																			"indexExpression": {
																				"id": 613,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 527,
																				"src": "6864:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6850:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 616,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 597,
																				"src": "6872:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 617,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 591,
																				"src": "6886:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6872:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6850:42:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 620,
																	"nodeType": "ExpressionStatement",
																	"src": "6850:42:1"
																}
															]
														},
														{
															"expression": {
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 622,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 163,
																			"src": "6920:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 625,
																		"indexExpression": {
																			"id": 623,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 585,
																			"src": "6930:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6920:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 626,
																	"indexExpression": {
																		"id": 624,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "6934:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6920:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 627,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "6941:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6920:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 629,
															"nodeType": "ExpressionStatement",
															"src": "6920:27:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 577,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "6567:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 578,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "6571:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6571:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6567:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 631,
												"initializationExpression": {
													"assignments": [
														574
													],
													"declarations": [
														{
															"constant": false,
															"id": 574,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6560:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 631,
															"src": "6552:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 573,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6552:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 576,
													"initialValue": {
														"hexValue": "30",
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6564:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6552:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6583:3:1",
														"subExpression": {
															"id": 581,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "6585:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 583,
													"nodeType": "ExpressionStatement",
													"src": "6583:3:1"
												},
												"nodeType": "ForStatement",
												"src": "6547:411:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 633,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "6987:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "6997:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "7003:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 636,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7007:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 637,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "7012:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 632,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "6973:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6973:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 639,
												"nodeType": "EmitStatement",
												"src": "6968:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 641,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "7067:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 642,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "7077:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 643,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "7083:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 644,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7087:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 645,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "7092:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 646,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "7101:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 640,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "7031:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7031:75:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "7031:75:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "5728:335:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "6077:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6117:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "6109:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6109:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6139:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "6131:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6131:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6168:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "6151:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 530,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6151:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 531,
													"nodeType": "ArrayTypeName",
													"src": "6151:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6198:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "6181:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 533,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6181:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 534,
													"nodeType": "ArrayTypeName",
													"src": "6181:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6228:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "6215:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 536,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6215:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6099:139:1"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6256:0:1"
									},
									"scope": 1233,
									"src": "6068:1045:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "7992:30:1",
										"statements": [
											{
												"expression": {
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 656,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "8002:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 657,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "8009:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8002:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "8002:13:1"
											}
										]
									},
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "7119:812:1",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "7945:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "7967:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "7953:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 652,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7953:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7952:22:1"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7992:0:1"
									},
									"scope": 1233,
									"src": "7936:86:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "8524:424:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 674,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "8542:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8556:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8548:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 675,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8548:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8548:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8542:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8560:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 673,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8534:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8534:62:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 682,
												"nodeType": "ExpressionStatement",
												"src": "8534:62:1"
											},
											{
												"assignments": [
													684
												],
												"declarations": [
													{
														"constant": false,
														"id": 684,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "8615:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 735,
														"src": "8607:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 683,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8607:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 687,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 685,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "8626:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8626:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8607:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 689,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "8670:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8688:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8680:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 690,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8680:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8680:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 694,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "8692:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 696,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 666,
																	"src": "8714:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 695,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "8696:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8696:21:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 699,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 668,
																	"src": "8737:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 698,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "8719:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8719:25:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 701,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "8746:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 688,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "8649:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8649:102:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "8649:102:1"
											},
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 704,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 163,
																"src": "8762:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 707,
															"indexExpression": {
																"id": 705,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "8772:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8762:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 708,
														"indexExpression": {
															"id": 706,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "8776:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8762:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 709,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "8783:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8762:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "8762:27:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 713,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "8819:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8837:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8829:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 714,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8829:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8829:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 718,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "8841:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 719,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "8845:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 720,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "8849:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 712,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "8804:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8804:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 722,
												"nodeType": "EmitStatement",
												"src": "8799:57:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 724,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "8898:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8916:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8908:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 725,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8908:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8908:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 729,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "8920:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 730,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "8924:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 731,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "8928:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 732,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "8936:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 723,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "8867:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8867:74:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "8867:74:1"
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "8028:362:1",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8404:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8427:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "8419:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8419:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8447:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "8439:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8439:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8467:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "8459:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8459:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8496:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "8483:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 669,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8483:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8409:97:1"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8524:0:1"
									},
									"scope": 1233,
									"src": "8395:553:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "9447:561:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 751,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 739,
																"src": "9465:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9479:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9471:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 752,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9471:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9471:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9465:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9483:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 750,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9457:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9457:62:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "9457:62:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 761,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "9537:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9537:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 763,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 745,
																	"src": "9551:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9551:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9537:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9567:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 760,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9529:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9529:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 768,
												"nodeType": "ExpressionStatement",
												"src": "9529:81:1"
											},
											{
												"assignments": [
													770
												],
												"declarations": [
													{
														"constant": false,
														"id": 770,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "9629:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 834,
														"src": "9621:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 769,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9621:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 773,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 771,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "9640:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9640:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9621:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 775,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "9684:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9702:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9694:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 776,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9694:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9694:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 780,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "9706:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 781,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "9710:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 782,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "9715:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 783,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "9724:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 774,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "9663:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9663:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "9663:66:1"
											},
											{
												"body": {
													"id": 809,
													"nodeType": "Block",
													"src": "9781:60:1",
													"statements": [
														{
															"expression": {
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 797,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 163,
																			"src": "9795:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 802,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 798,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 742,
																				"src": "9805:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 800,
																			"indexExpression": {
																				"id": 799,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 787,
																				"src": "9809:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9805:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9795:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 803,
																	"indexExpression": {
																		"id": 801,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 739,
																		"src": "9813:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9795:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 804,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 745,
																		"src": "9820:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 806,
																	"indexExpression": {
																		"id": 805,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 787,
																		"src": "9828:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9820:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9795:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 808,
															"nodeType": "ExpressionStatement",
															"src": "9795:35:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 790,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "9760:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 791,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "9764:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9764:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9760:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 810,
												"initializationExpression": {
													"assignments": [
														787
													],
													"declarations": [
														{
															"constant": false,
															"id": 787,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "9753:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 810,
															"src": "9745:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 786,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9745:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 789,
													"initialValue": {
														"hexValue": "30",
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9757:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9745:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9776:3:1",
														"subExpression": {
															"id": 794,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "9776:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 796,
													"nodeType": "ExpressionStatement",
													"src": "9776:3:1"
												},
												"nodeType": "ForStatement",
												"src": "9740:101:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 812,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "9870:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9888:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9880:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 813,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9880:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9880:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 817,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "9892:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 818,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "9896:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 819,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "9901:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 811,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "9856:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9856:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "EmitStatement",
												"src": "9851:58:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 823,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "9956:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9974:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9966:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 824,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9966:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9966:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 828,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "9978:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 829,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "9982:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 830,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "9987:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 831,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "9996:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 822,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "9920:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9920:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 833,
												"nodeType": "ExpressionStatement",
												"src": "9920:81:1"
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "8954:334:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "9302:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9330:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "9322:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9322:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9359:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "9342:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 740,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9342:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 741,
													"nodeType": "ArrayTypeName",
													"src": "9342:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "9389:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "9372:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 743,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9372:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 744,
													"nodeType": "ArrayTypeName",
													"src": "9372:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "9406:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 746,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9312:117:1"
									},
									"returnParameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9447:0:1"
									},
									"scope": 1233,
									"src": "9293:715:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "10352:526:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 846,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 838,
																"src": "10370:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10386:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10378:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 847,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10378:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10378:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10370:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10390:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 845,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10362:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10362:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "10362:66:1"
											},
											{
												"assignments": [
													856
												],
												"declarations": [
													{
														"constant": false,
														"id": 856,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10447:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 913,
														"src": "10439:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 855,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10439:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 859,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 857,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "10458:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10458:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10439:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 861,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "10502:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 862,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "10512:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10526:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10518:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 863,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10518:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10518:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 868,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "10548:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 867,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "10530:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10530:21:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 871,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "10571:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 870,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "10553:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10553:25:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10580:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 860,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "10481:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10481:102:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 875,
												"nodeType": "ExpressionStatement",
												"src": "10481:102:1"
											},
											{
												"assignments": [
													877
												],
												"declarations": [
													{
														"constant": false,
														"id": 877,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "10602:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 913,
														"src": "10594:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 876,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10594:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 883,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 878,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "10616:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 880,
														"indexExpression": {
															"id": 879,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "10626:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10616:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 882,
													"indexExpression": {
														"id": 881,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "10630:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10616:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10594:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 885,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "10653:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 886,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 842,
																"src": "10668:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10653:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10676:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 884,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10645:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10645:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "10645:70:1"
											},
											{
												"id": 901,
												"nodeType": "UncheckedBlock",
												"src": "10725:77:1",
												"statements": [
													{
														"expression": {
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 891,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 163,
																		"src": "10749:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 894,
																	"indexExpression": {
																		"id": 892,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 840,
																		"src": "10759:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10749:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 895,
																"indexExpression": {
																	"id": 893,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 838,
																	"src": "10763:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10749:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 896,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "10771:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 897,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "10785:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10771:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10749:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 900,
														"nodeType": "ExpressionStatement",
														"src": "10749:42:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 903,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "10832:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 904,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "10842:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10848:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 905,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10848:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "10860:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 910,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "10864:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 902,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "10817:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10817:54:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 912,
												"nodeType": "EmitStatement",
												"src": "10812:59:1"
											}
										]
									},
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "10014:229:1",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10257:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10280:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "10272:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10272:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10302:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "10294:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10294:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10322:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "10314:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10262:72:1"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10352:0:1"
									},
									"scope": 1233,
									"src": "10248:630:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "11201:738:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 927,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 917,
																"src": "11219:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11235:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11227:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 928,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11227:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11227:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11219:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11239:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 926,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11211:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11211:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 935,
												"nodeType": "ExpressionStatement",
												"src": "11211:66:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 937,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "11295:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11295:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 939,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 923,
																	"src": "11309:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11309:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11295:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11325:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 936,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11287:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11287:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "11287:81:1"
											},
											{
												"assignments": [
													946
												],
												"declarations": [
													{
														"constant": false,
														"id": 946,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "11387:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 1024,
														"src": "11379:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 945,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11379:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 949,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 947,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "11398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11379:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 951,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "11442:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 952,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "11452:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11466:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11458:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 953,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11458:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11458:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 957,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "11470:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 958,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "11475:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11484:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 950,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "11421:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11421:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "11421:66:1"
											},
											{
												"body": {
													"id": 1011,
													"nodeType": "Block",
													"src": "11539:323:1",
													"statements": [
														{
															"assignments": [
																974
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 974,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "11561:2:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1011,
																	"src": "11553:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 973,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11553:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 978,
															"initialValue": {
																"baseExpression": {
																	"id": 975,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "11566:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 977,
																"indexExpression": {
																	"id": 976,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 963,
																	"src": "11570:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11566:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11553:19:1"
														},
														{
															"assignments": [
																980
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 980,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "11594:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1011,
																	"src": "11586:14:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 979,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11586:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 984,
															"initialValue": {
																"baseExpression": {
																	"id": 981,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 923,
																	"src": "11603:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 983,
																"indexExpression": {
																	"id": 982,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 963,
																	"src": "11611:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11603:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11586:27:1"
														},
														{
															"assignments": [
																986
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 986,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "11636:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1011,
																	"src": "11628:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 985,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11628:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 992,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 987,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 163,
																		"src": "11650:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 989,
																	"indexExpression": {
																		"id": 988,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 974,
																		"src": "11660:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11650:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 991,
																"indexExpression": {
																	"id": 990,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "11664:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11650:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11628:41:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 994,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 986,
																			"src": "11691:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 995,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "11706:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11691:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11714:38:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 993,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11683:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11683:70:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 999,
															"nodeType": "ExpressionStatement",
															"src": "11683:70:1"
														},
														{
															"id": 1010,
															"nodeType": "UncheckedBlock",
															"src": "11767:85:1",
															"statements": [
																{
																	"expression": {
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1000,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 163,
																					"src": "11795:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1003,
																				"indexExpression": {
																					"id": 1001,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 974,
																					"src": "11805:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "11795:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1004,
																			"indexExpression": {
																				"id": 1002,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 917,
																				"src": "11809:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "11795:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1005,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 986,
																				"src": "11817:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1006,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 980,
																				"src": "11831:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11817:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11795:42:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1009,
																	"nodeType": "ExpressionStatement",
																	"src": "11795:42:1"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 966,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "11518:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 967,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "11522:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11522:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11518:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1012,
												"initializationExpression": {
													"assignments": [
														963
													],
													"declarations": [
														{
															"constant": false,
															"id": 963,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "11511:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 1012,
															"src": "11503:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 962,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11503:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 965,
													"initialValue": {
														"hexValue": "30",
														"id": 964,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11515:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11503:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11534:3:1",
														"subExpression": {
															"id": 970,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "11534:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 972,
													"nodeType": "ExpressionStatement",
													"src": "11534:3:1"
												},
												"nodeType": "ForStatement",
												"src": "11498:364:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1014,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "11891:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1015,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "11901:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11915:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11907:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1016,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11907:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11907:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1020,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "11919:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1021,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "11924:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1013,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "11877:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11877:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1023,
												"nodeType": "EmitStatement",
												"src": "11872:60:1"
											}
										]
									},
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "10884:183:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "11081:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11109:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "11101:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11101:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11140:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "11123:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 918,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11123:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 919,
													"nodeType": "ArrayTypeName",
													"src": "11123:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "11170:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "11153:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 921,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11153:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 922,
													"nodeType": "ArrayTypeName",
													"src": "11153:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11091:92:1"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11201:0:1"
									},
									"scope": 1233,
									"src": "11072:867:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "12197:200:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1036,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "12215:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1037,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1030,
																"src": "12224:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12215:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12234:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1035,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12207:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12207:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1041,
												"nodeType": "ExpressionStatement",
												"src": "12207:71:1"
											},
											{
												"expression": {
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1042,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 169,
																"src": "12288:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1045,
															"indexExpression": {
																"id": 1043,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "12307:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12288:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1046,
														"indexExpression": {
															"id": 1044,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "12314:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12288:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1047,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "12326:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12288:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "12288:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1051,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "12364:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1052,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "12371:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1053,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "12381:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1050,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1276,
														"src": "12349:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12349:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1055,
												"nodeType": "EmitStatement",
												"src": "12344:46:1"
											}
										]
									},
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "11945:124:1",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "12083:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12119:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "12111:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12111:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12142:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "12134:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12134:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "12165:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "12160:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1031,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12160:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12101:78:1"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12197:0:1"
									},
									"scope": 1233,
									"src": "12074:323:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "13543:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "12403:923:1",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "13340:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13378:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "13370:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13370:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13404:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "13396:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13396:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13426:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "13418:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13418:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "13455:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "13438:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1065,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13438:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1066,
													"nodeType": "ArrayTypeName",
													"src": "13438:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "13485:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "13468:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1068,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13468:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1069,
													"nodeType": "ArrayTypeName",
													"src": "13468:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13515:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "13502:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1071,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13502:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13360:165:1"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13543:0:1"
									},
									"scope": 1233,
									"src": "13331:214:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "13744:532:1",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1091,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "13758:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1633,
														"src": "13758:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13758:15:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1137,
												"nodeType": "IfStatement",
												"src": "13754:516:1",
												"trueBody": {
													"id": 1136,
													"nodeType": "Block",
													"src": "13775:495:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1118,
																		"nodeType": "Block",
																		"src": "13892:184:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1111,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1107,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1105,
																						"src": "13914:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1108,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1396,
																								"src": "13926:16:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1396_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1109,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1377,
																							"src": "13926:34:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1110,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "13926:43:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "13914:55:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1117,
																				"nodeType": "IfStatement",
																				"src": "13910:152:1",
																				"trueBody": {
																					"id": 1116,
																					"nodeType": "Block",
																					"src": "13971:91:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1113,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14000:42:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1112,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "13993:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1114,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13993:50:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1115,
																							"nodeType": "ExpressionStatement",
																							"src": "13993:50:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1119,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1106,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1105,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "13882:8:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1119,
																				"src": "13875:15:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1104,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "13875:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "13874:17:1"
																	},
																	"src": "13866:210:1"
																},
																{
																	"block": {
																		"id": 1127,
																		"nodeType": "Block",
																		"src": "14111:47:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1124,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1121,
																							"src": "14136:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1123,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14129:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1125,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14129:14:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1126,
																				"nodeType": "ExpressionStatement",
																				"src": "14129:14:1"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1128,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1122,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1121,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14103:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1128,
																				"src": "14089:20:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1120,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "14089:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14088:22:1"
																	},
																	"src": "14077:81:1"
																},
																{
																	"block": {
																		"id": 1133,
																		"nodeType": "Block",
																		"src": "14165:95:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1130,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14190:54:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1129,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14183:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1131,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14183:62:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1132,
																				"nodeType": "ExpressionStatement",
																				"src": "14183:62:1"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1134,
																	"nodeType": "TryCatchClause",
																	"src": "14159:101:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1098,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1078,
																		"src": "13832:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1099,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1080,
																		"src": "13842:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1100,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1084,
																		"src": "13848:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1101,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1086,
																		"src": "13852:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1102,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1088,
																		"src": "13860:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1095,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1082,
																				"src": "13810:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1094,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1396,
																			"src": "13793:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1396_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13793:20:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1396",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1377,
																	"src": "13793:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13793:72:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1135,
															"nodeType": "TryStatement",
															"src": "13789:471:1"
														}
													]
												}
											}
										]
									},
									"id": 1139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "13560:30:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13608:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "13600:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13600:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13634:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "13626:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13626:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13656:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "13648:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13648:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "13676:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "13668:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13696:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "13688:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13688:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13725:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "13712:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1087,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13712:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13590:145:1"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13744:0:1"
									},
									"scope": 1233,
									"src": "13551:725:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "14500:574:1",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1156,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "14514:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1633,
														"src": "14514:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14514:15:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1202,
												"nodeType": "IfStatement",
												"src": "14510:558:1",
												"trueBody": {
													"id": 1201,
													"nodeType": "Block",
													"src": "14531:537:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1183,
																		"nodeType": "Block",
																		"src": "14685:189:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1176,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1172,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1170,
																						"src": "14707:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1173,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1396,
																								"src": "14719:16:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1396_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1174,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1395,
																							"src": "14719:39:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1175,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14719:48:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14707:60:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1182,
																				"nodeType": "IfStatement",
																				"src": "14703:157:1",
																				"trueBody": {
																					"id": 1181,
																					"nodeType": "Block",
																					"src": "14769:91:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1178,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14798:42:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1177,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "14791:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1179,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14791:50:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1180,
																							"nodeType": "ExpressionStatement",
																							"src": "14791:50:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1184,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1171,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1170,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "14662:8:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1184,
																				"src": "14655:15:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1169,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14655:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14637:47:1"
																	},
																	"src": "14629:245:1"
																},
																{
																	"block": {
																		"id": 1192,
																		"nodeType": "Block",
																		"src": "14909:47:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1189,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1186,
																							"src": "14934:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1188,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14927:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1190,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14927:14:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1191,
																				"nodeType": "ExpressionStatement",
																				"src": "14927:14:1"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1193,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1187,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1186,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14901:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1193,
																				"src": "14887:20:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1185,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "14887:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14886:22:1"
																	},
																	"src": "14875:81:1"
																},
																{
																	"block": {
																		"id": 1198,
																		"nodeType": "Block",
																		"src": "14963:95:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1195,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14988:54:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1194,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14981:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1196,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14981:62:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1197,
																				"nodeType": "ExpressionStatement",
																				"src": "14981:62:1"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1199,
																	"nodeType": "TryCatchClause",
																	"src": "14957:101:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1163,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1141,
																		"src": "14593:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1164,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1143,
																		"src": "14603:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1165,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1148,
																		"src": "14609:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1166,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1151,
																		"src": "14614:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1167,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1153,
																		"src": "14623:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1160,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1145,
																				"src": "14566:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1159,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1396,
																			"src": "14549:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1396_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14549:20:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1396",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1395,
																	"src": "14549:43:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14549:79:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1200,
															"nodeType": "TryStatement",
															"src": "14545:513:1"
														}
													]
												}
											}
										]
									},
									"id": 1204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "14291:35:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14344:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "14336:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14370:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "14362:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14362:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14392:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "14384:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14384:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "14421:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "14404:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1146,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14404:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1147,
													"nodeType": "ArrayTypeName",
													"src": "14404:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14451:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "14434:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1149,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14434:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1150,
													"nodeType": "ArrayTypeName",
													"src": "14434:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14481:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "14468:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1152,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14468:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14326:165:1"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14500:0:1"
									},
									"scope": 1233,
									"src": "14282:792:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1231,
										"nodeType": "Block",
										"src": "15164:109:1",
										"statements": [
											{
												"assignments": [
													1216
												],
												"declarations": [
													{
														"constant": false,
														"id": 1216,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "15191:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 1231,
														"src": "15174:22:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1214,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15174:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1215,
															"nodeType": "ArrayTypeName",
															"src": "15174:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1222,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15213:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "15199:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1217,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15203:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1218,
															"nodeType": "ArrayTypeName",
															"src": "15203:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15199:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15174:41:1"
											},
											{
												"expression": {
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1223,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "15225:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1225,
														"indexExpression": {
															"hexValue": "30",
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15231:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15225:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1226,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "15236:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15225:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1228,
												"nodeType": "ExpressionStatement",
												"src": "15225:18:1"
											},
											{
												"expression": {
													"id": 1229,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1216,
													"src": "15261:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1211,
												"id": 1230,
												"nodeType": "Return",
												"src": "15254:12:1"
											}
										]
									},
									"id": 1232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "15089:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "15115:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "15107:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15107:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15106:17:1"
									},
									"returnParameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "15146:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1208,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15146:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1209,
													"nodeType": "ArrayTypeName",
													"src": "15146:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15145:18:1"
									},
									"scope": 1233,
									"src": "15080:193:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1234,
							"src": "555:14720:1",
							"usedErrors": []
						}
					],
					"src": "94:15182:1"
				},
				"id": 1
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1355
						],
						"IERC165": [
							1968
						]
					},
					"id": 1356,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:2"
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1236,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1356,
							"sourceUnit": 1969,
							"src": "120:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1238,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1968,
										"src": "357:7:2"
									},
									"id": 1239,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:2"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1237,
								"nodeType": "StructuredDocumentation",
								"src": "169:165:2",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1355,
							"linearizedBaseContracts": [
								1355,
								1968
							],
							"name": "IERC1155",
							"nameLocation": "345:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1240,
										"nodeType": "StructuredDocumentation",
										"src": "371:121:2",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1252,
									"name": "TransferSingle",
									"nameLocation": "503:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "534:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "518:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "560:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "544:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "582:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "566:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "594:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "586:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "606:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "598:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:95:2"
									},
									"src": "497:116:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "619:144:2",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1267,
									"name": "TransferBatch",
									"nameLocation": "774:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "813:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "797:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "847:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "831:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "877:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "861:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "899:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "889:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1260,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "889:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1261,
													"nodeType": "ArrayTypeName",
													"src": "889:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "922:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "912:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1263,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "912:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1264,
													"nodeType": "ArrayTypeName",
													"src": "912:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:147:2"
									},
									"src": "768:167:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1268,
										"nodeType": "StructuredDocumentation",
										"src": "941:147:2",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1276,
									"name": "ApprovalForAll",
									"nameLocation": "1099:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1130:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "1114:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "1139:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1170:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "1165:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1273,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1165:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:66:2"
									},
									"src": "1093:87:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1277,
										"nodeType": "StructuredDocumentation",
										"src": "1186:343:2",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1283,
									"name": "URI",
									"nameLocation": "1540:3:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "1544:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1278,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1574:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "1558:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:34:2"
									},
									"src": "1534:44:2"
								},
								{
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "1584:173:2",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1771:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1789:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "1781:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1806:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "1798:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:29:2"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "1833:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:9:2"
									},
									"scope": 1355,
									"src": "1762:80:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "1848:188:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1306,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2050:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2084:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "2065:27:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1295,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2065:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1296,
													"nodeType": "ArrayTypeName",
													"src": "2065:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2113:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "2094:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1298,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2094:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1299,
													"nodeType": "ArrayTypeName",
													"src": "2094:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:53:2"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "2165:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1302,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2165:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1303,
													"nodeType": "ArrayTypeName",
													"src": "2165:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:18:2"
									},
									"scope": 1355,
									"src": "2041:142:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1307,
										"nodeType": "StructuredDocumentation",
										"src": "2189:248:2",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2451:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2477:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "2469:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2492:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "2487:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2487:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:33:2"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2510:0:2"
									},
									"scope": 1355,
									"src": "2442:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1315,
										"nodeType": "StructuredDocumentation",
										"src": "2517:135:2",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1324,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2666:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2691:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "2683:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2708:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "2700:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:35:2"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "2741:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1321,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2741:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:6:2"
									},
									"scope": 1355,
									"src": "2657:90:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1325,
										"nodeType": "StructuredDocumentation",
										"src": "2753:559:2",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1338,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3326:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3360:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "3352:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3382:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "3374:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3402:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "3394:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3422:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "3414:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3453:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "3438:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1334,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3438:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:121:2"
									},
									"returnParameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:0:2"
									},
									"scope": 1355,
									"src": "3317:156:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1339,
										"nodeType": "StructuredDocumentation",
										"src": "3479:390:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3883:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3922:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "3914:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3914:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3944:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "3936:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3975:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "3956:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1344,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3956:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1345,
													"nodeType": "ArrayTypeName",
													"src": "3956:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "3988:26:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1347,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3988:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1348,
													"nodeType": "ArrayTypeName",
													"src": "3988:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4039:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "4024:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1350,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4024:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:145:2"
									},
									"returnParameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4058:0:2"
									},
									"scope": 1355,
									"src": "3874:185:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1356,
							"src": "335:3726:2",
							"usedErrors": []
						}
					],
					"src": "95:3967:2"
				},
				"id": 2
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1396
						],
						"IERC165": [
							1968
						]
					},
					"id": 1397,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1357,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:3"
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1358,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1397,
							"sourceUnit": 1969,
							"src": "128:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1360,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1968,
										"src": "247:7:3"
									},
									"id": 1361,
									"nodeType": "InheritanceSpecifier",
									"src": "247:7:3"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1359,
								"nodeType": "StructuredDocumentation",
								"src": "177:39:3",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1396,
							"linearizedBaseContracts": [
								1396,
								1968
							],
							"name": "IERC1155Receiver",
							"nameLocation": "227:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "261:816:3",
										"text": "@dev Handles the receipt of a single ERC1155 token type. This function is\ncalled at the end of a `safeTransferFrom` after the balance has been updated.\nTo accept the transfer, this must return\n`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n(i.e. 0xf23a6e61, or its own function selector).\n@param operator The address which initiated the transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param id The ID of the token being transferred\n@param value The amount of tokens being transferred\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1091:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1126:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "1118:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1118:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1152:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "1144:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1174:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "1166:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1194:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "1186:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1224:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "1209:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1371,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1209:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1108:126:3"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "1253:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1374,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1253:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1252:8:3"
									},
									"scope": 1396,
									"src": "1082:179:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1378,
										"nodeType": "StructuredDocumentation",
										"src": "1267:977:3",
										"text": "@dev Handles the receipt of a multiple ERC1155 token types. This function\nis called at the end of a `safeBatchTransferFrom` after the balances have\nbeen updated. To accept the transfer(s), this must return\n`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n(i.e. 0xbc197c81, or its own function selector).\n@param operator The address which initiated the batch transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param ids An array containing ids of each token being transferred (order and length must match values array)\n@param values An array containing amounts of each token being transferred (order and length must match ids array)\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1395,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2258:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2298:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "2290:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "2316:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2357:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "2338:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1383,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2338:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1384,
													"nodeType": "ArrayTypeName",
													"src": "2338:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2389:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "2370:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1386,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2370:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1387,
													"nodeType": "ArrayTypeName",
													"src": "2370:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "2405:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1389,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2405:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2280:150:3"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "2449:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1392,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2449:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:8:3"
									},
									"scope": 1396,
									"src": "2249:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1397,
							"src": "217:2242:3",
							"usedErrors": []
						}
					],
					"src": "103:2357:3"
				},
				"id": 3
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol": {
				"ast": {
					"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
					"exportedSymbols": {
						"Address": [
							1910
						],
						"Context": [
							1932
						],
						"ERC1155": [
							1233
						],
						"ERC1155Burnable": [
							1465
						],
						"ERC165": [
							1956
						],
						"IERC1155": [
							1355
						],
						"IERC1155MetadataURI": [
							1613
						],
						"IERC1155Receiver": [
							1396
						],
						"IERC165": [
							1968
						]
					},
					"id": 1466,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1398,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:4"
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "../ERC1155.sol",
							"id": 1399,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1466,
							"sourceUnit": 1234,
							"src": "138:24:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1401,
										"name": "ERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1233,
										"src": "379:7:4"
									},
									"id": 1402,
									"nodeType": "InheritanceSpecifier",
									"src": "379:7:4"
								}
							],
							"canonicalName": "ERC1155Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1400,
								"nodeType": "StructuredDocumentation",
								"src": "164:177:4",
								"text": " @dev Extension of {ERC1155} that allows token holders to destroy both their\n own tokens and those that they have been approved to use.\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1465,
							"linearizedBaseContracts": [
								1465,
								1233,
								1613,
								1355,
								1956,
								1968,
								1932
							],
							"name": "ERC1155Burnable",
							"nameLocation": "360:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1431,
										"nodeType": "Block",
										"src": "496:207:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1412,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "527:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1413,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1922,
																		"src": "538:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "538:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "527:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1417,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1404,
																		"src": "571:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1418,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1922,
																			"src": "580:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "580:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1416,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "554:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "554:39:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "527:66:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "607:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 1411,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "506:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "506:154:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1424,
												"nodeType": "ExpressionStatement",
												"src": "506:154:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1426,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "677:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1427,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "686:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1428,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "690:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1425,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "671:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "671:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1430,
												"nodeType": "ExpressionStatement",
												"src": "671:25:4"
											}
										]
									},
									"functionSelector": "f5298aca",
									"id": 1432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "402:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "424:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "416:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "416:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "449:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "441:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "441:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "469:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "461:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "406:74:4"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "496:0:4"
									},
									"scope": 1465,
									"src": "393:310:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1463,
										"nodeType": "Block",
										"src": "837:214:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1444,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1434,
																	"src": "868:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1445,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1922,
																		"src": "879:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "879:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "868:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1449,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1434,
																		"src": "912:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1450,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1922,
																			"src": "921:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "921:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1448,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "895:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "895:39:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "868:66:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 1443,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "847:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "847:154:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1456,
												"nodeType": "ExpressionStatement",
												"src": "847:154:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1458,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "1023:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1459,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "1032:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1460,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "1037:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1457,
														"name": "_burnBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "1012:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1012:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1462,
												"nodeType": "ExpressionStatement",
												"src": "1012:32:4"
											}
										]
									},
									"functionSelector": "6b20c454",
									"id": 1464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnBatch",
									"nameLocation": "718:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "737:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "779:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "762:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1435,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "762:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1436,
													"nodeType": "ArrayTypeName",
													"src": "762:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "809:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "792:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1438,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "792:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1439,
													"nodeType": "ArrayTypeName",
													"src": "792:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:94:4"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "837:0:4"
									},
									"scope": 1465,
									"src": "709:342:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1466,
							"src": "342:711:4",
							"usedErrors": []
						}
					],
					"src": "113:941:4"
				},
				"id": 4
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol": {
				"ast": {
					"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
					"exportedSymbols": {
						"Address": [
							1910
						],
						"Context": [
							1932
						],
						"ERC1155": [
							1233
						],
						"ERC1155Supply": [
							1598
						],
						"ERC165": [
							1956
						],
						"IERC1155": [
							1355
						],
						"IERC1155MetadataURI": [
							1613
						],
						"IERC1155Receiver": [
							1396
						],
						"IERC165": [
							1968
						]
					},
					"id": 1599,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1467,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "111:23:5"
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "../ERC1155.sol",
							"id": 1468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1599,
							"sourceUnit": 1234,
							"src": "136:24:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1470,
										"name": "ERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1233,
										"src": "542:7:5"
									},
									"id": 1471,
									"nodeType": "InheritanceSpecifier",
									"src": "542:7:5"
								}
							],
							"canonicalName": "ERC1155Supply",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1469,
								"nodeType": "StructuredDocumentation",
								"src": "162:344:5",
								"text": " @dev Extension of ERC1155 that adds tracking of total supply per id.\n Useful for scenarios where Fungible and Non-fungible tokens have to be\n clearly identified. Note: While a totalSupply of 1 might mean the\n corresponding is an NFT, there is no guarantees that no other token with the\n same id are not going to be minted."
							},
							"fullyImplemented": false,
							"id": 1598,
							"linearizedBaseContracts": [
								1598,
								1233,
								1613,
								1355,
								1956,
								1968,
								1932
							],
							"name": "ERC1155Supply",
							"nameLocation": "525:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1475,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "592:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1598,
									"src": "556:48:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1474,
										"keyType": {
											"id": 1472,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "564:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "556:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 1473,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "575:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1487,
										"nodeType": "Block",
										"src": "753:40:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1483,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1475,
														"src": "770:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1485,
													"indexExpression": {
														"id": 1484,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1478,
														"src": "783:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "770:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1482,
												"id": 1486,
												"nodeType": "Return",
												"src": "763:23:5"
											}
										]
									},
									"documentation": {
										"id": 1476,
										"nodeType": "StructuredDocumentation",
										"src": "611:66:5",
										"text": " @dev Total amount of tokens in with a given id."
									},
									"functionSelector": "bd85b039",
									"id": 1488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "691:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "711:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "703:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:12:5"
									},
									"returnParameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "744:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "743:9:5"
									},
									"scope": 1598,
									"src": "682:111:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1503,
										"nodeType": "Block",
										"src": "949:57:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1498,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1491,
																"src": "992:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1496,
																"name": "ERC1155Supply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1598,
																"src": "966:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC1155Supply_$1598_$",
																	"typeString": "type(contract ERC1155Supply)"
																}
															},
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "totalSupply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1488,
															"src": "966:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "966:29:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1500,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "998:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "966:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1495,
												"id": 1502,
												"nodeType": "Return",
												"src": "959:40:5"
											}
										]
									},
									"documentation": {
										"id": 1489,
										"nodeType": "StructuredDocumentation",
										"src": "799:82:5",
										"text": " @dev Indicates whether any token exist with a given id, or not."
									},
									"functionSelector": "4f558e79",
									"id": 1504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exists",
									"nameLocation": "895:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "910:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "902:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:12:5"
									},
									"returnParameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "943:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1493,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "943:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:6:5"
									},
									"scope": 1598,
									"src": "886:120:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1076
									],
									"body": {
										"id": 1596,
										"nodeType": "Block",
										"src": "1297:413:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1526,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "1334:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1527,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1509,
															"src": "1344:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1528,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "1350:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1529,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "1354:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1530,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1517,
															"src": "1359:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1531,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "1368:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1523,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1307:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC1155Supply_$1598_$",
																"typeString": "type(contract super ERC1155Supply)"
															}
														},
														"id": 1525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1076,
														"src": "1307:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1307:66:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1533,
												"nodeType": "ExpressionStatement",
												"src": "1307:66:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1534,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1509,
														"src": "1388:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1404:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1396:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1535,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1396:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1396:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1388:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1564,
												"nodeType": "IfStatement",
												"src": "1384:156:5",
												"trueBody": {
													"id": 1563,
													"nodeType": "Block",
													"src": "1408:132:5",
													"statements": [
														{
															"body": {
																"id": 1561,
																"nodeType": "Block",
																"src": "1463:67:5",
																"statements": [
																	{
																		"expression": {
																			"id": 1559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1551,
																					"name": "_totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1475,
																					"src": "1481:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																						"typeString": "mapping(uint256 => uint256)"
																					}
																				},
																				"id": 1555,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 1552,
																						"name": "ids",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1514,
																						"src": "1494:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 1554,
																					"indexExpression": {
																						"id": 1553,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1541,
																						"src": "1498:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1494:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "1481:20:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1556,
																					"name": "amounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1517,
																					"src": "1505:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1558,
																				"indexExpression": {
																					"id": 1557,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1541,
																					"src": "1513:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1505:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1481:34:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1560,
																		"nodeType": "ExpressionStatement",
																		"src": "1481:34:5"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1544,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1541,
																	"src": "1442:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1545,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1514,
																		"src": "1446:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1446:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1442:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1562,
															"initializationExpression": {
																"assignments": [
																	1541
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1541,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "1435:1:5",
																		"nodeType": "VariableDeclaration",
																		"scope": 1562,
																		"src": "1427:9:5",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1540,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1427:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1543,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1439:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "1427:13:5"
															},
															"loopExpression": {
																"expression": {
																	"id": 1549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "1458:3:5",
																	"subExpression": {
																		"id": 1548,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1541,
																		"src": "1460:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1550,
																"nodeType": "ExpressionStatement",
																"src": "1458:3:5"
															},
															"nodeType": "ForStatement",
															"src": "1422:108:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1565,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1511,
														"src": "1554:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1568:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1560:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1566,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1560:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1560:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1554:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1595,
												"nodeType": "IfStatement",
												"src": "1550:154:5",
												"trueBody": {
													"id": 1594,
													"nodeType": "Block",
													"src": "1572:132:5",
													"statements": [
														{
															"body": {
																"id": 1592,
																"nodeType": "Block",
																"src": "1627:67:5",
																"statements": [
																	{
																		"expression": {
																			"id": 1590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1582,
																					"name": "_totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1475,
																					"src": "1645:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																						"typeString": "mapping(uint256 => uint256)"
																					}
																				},
																				"id": 1586,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 1583,
																						"name": "ids",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1514,
																						"src": "1658:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 1585,
																					"indexExpression": {
																						"id": 1584,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1572,
																						"src": "1662:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1658:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "1645:20:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1587,
																					"name": "amounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1517,
																					"src": "1669:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1589,
																				"indexExpression": {
																					"id": 1588,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1572,
																					"src": "1677:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1669:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1645:34:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1591,
																		"nodeType": "ExpressionStatement",
																		"src": "1645:34:5"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1575,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1572,
																	"src": "1606:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1576,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1514,
																		"src": "1610:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1610:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1606:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1593,
															"initializationExpression": {
																"assignments": [
																	1572
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1572,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "1599:1:5",
																		"nodeType": "VariableDeclaration",
																		"scope": 1593,
																		"src": "1591:9:5",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1571,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1591:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1574,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1603:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "1591:13:5"
															},
															"loopExpression": {
																"expression": {
																	"id": 1580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "1622:3:5",
																	"subExpression": {
																		"id": 1579,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1572,
																		"src": "1624:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1581,
																"nodeType": "ExpressionStatement",
																"src": "1622:3:5"
															},
															"nodeType": "ForStatement",
															"src": "1586:108:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1505,
										"nodeType": "StructuredDocumentation",
										"src": "1012:59:5",
										"text": " @dev See {ERC1155-_beforeTokenTransfer}."
									},
									"id": 1597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "1085:20:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1521,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1288:8:5"
									},
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1123:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "1115:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1115:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1149:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "1141:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1141:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1171:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "1163:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1163:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1200:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "1183:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1512,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1183:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1513,
													"nodeType": "ArrayTypeName",
													"src": "1183:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1230:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "1213:24:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1515,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1213:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1516,
													"nodeType": "ArrayTypeName",
													"src": "1213:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1260:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "1247:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1518,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1247:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1105:165:5"
									},
									"returnParameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1297:0:5"
									},
									"scope": 1598,
									"src": "1076:634:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1599,
							"src": "507:1205:5",
							"usedErrors": []
						}
					],
					"src": "111:1602:5"
				},
				"id": 5
			},
			"msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1355
						],
						"IERC1155MetadataURI": [
							1613
						],
						"IERC165": [
							1968
						]
					},
					"id": 1614,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1600,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "117:23:6"
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1601,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1614,
							"sourceUnit": 1356,
							"src": "142:25:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1603,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1355,
										"src": "397:8:6"
									},
									"id": 1604,
									"nodeType": "InheritanceSpecifier",
									"src": "397:8:6"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1602,
								"nodeType": "StructuredDocumentation",
								"src": "169:194:6",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1613,
							"linearizedBaseContracts": [
								1613,
								1355,
								1968
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "374:19:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1605,
										"nodeType": "StructuredDocumentation",
										"src": "412:192:6",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "618:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "630:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "622:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:12:6"
									},
									"returnParameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "657:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1609,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "657:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:15:6"
									},
									"scope": 1613,
									"src": "609:63:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1614,
							"src": "364:310:6",
							"usedErrors": []
						}
					],
					"src": "117:558:6"
				},
				"id": 6
			},
			"msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1910
						]
					},
					"id": 1911,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1615,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1616,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1910,
							"linearizedBaseContracts": [
								1910
							],
							"name": "Address",
							"nameLocation": "187:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1632,
										"nodeType": "Block",
										"src": "837:311:7",
										"statements": [
											{
												"assignments": [
													1625
												],
												"declarations": [
													{
														"constant": false,
														"id": 1625,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1042:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1632,
														"src": "1034:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1624,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1034:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1626,
												"nodeType": "VariableDeclarationStatement",
												"src": "1034:12:7"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1065:52:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1079:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1099:7:7"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1087:11:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:20:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1079:4:7"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1619,
														"isOffset": false,
														"isSlot": false,
														"src": "1099:7:7",
														"valueSize": 1
													},
													{
														"declaration": 1625,
														"isOffset": false,
														"isSlot": false,
														"src": "1079:4:7",
														"valueSize": 1
													}
												],
												"id": 1627,
												"nodeType": "InlineAssembly",
												"src": "1056:61:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1628,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1625,
														"src": "1133:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1629,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1140:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1133:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1623,
												"id": 1631,
												"nodeType": "Return",
												"src": "1126:15:7"
											}
										]
									},
									"documentation": {
										"id": 1617,
										"nodeType": "StructuredDocumentation",
										"src": "201:565:7",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "780:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "799:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "791:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "790:17:7"
									},
									"returnParameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "831:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1621,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "831:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:6:7"
									},
									"scope": 1910,
									"src": "771:377:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1666,
										"nodeType": "Block",
										"src": "2136:241:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1644,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2162:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1910",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1910",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2154:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1642,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2154:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2154:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2154:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1647,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1638,
																"src": "2179:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2154:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2187:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2146:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1651,
												"nodeType": "ExpressionStatement",
												"src": "2146:73:7"
											},
											{
												"assignments": [
													1653,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1653,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2236:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1666,
														"src": "2231:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1652,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2231:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1660,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2279:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1654,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1636,
																"src": "2249:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2249:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1656,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1638,
																"src": "2271:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2249:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2230:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1662,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "2300:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2309:60:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1661,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2292:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2292:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1665,
												"nodeType": "ExpressionStatement",
												"src": "2292:78:7"
											}
										]
									},
									"documentation": {
										"id": 1634,
										"nodeType": "StructuredDocumentation",
										"src": "1154:906:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2074:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2100:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "2084:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2119:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "2111:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:43:7"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2136:0:7"
									},
									"scope": 1910,
									"src": "2065:312:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1683,
										"nodeType": "Block",
										"src": "3208:84:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1678,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1670,
															"src": "3238:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1679,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1672,
															"src": "3246:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3252:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1677,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1684,
															1704
														],
														"referencedDeclaration": 1704,
														"src": "3225:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1676,
												"id": 1682,
												"nodeType": "Return",
												"src": "3218:67:7"
											}
										]
									},
									"documentation": {
										"id": 1668,
										"nodeType": "StructuredDocumentation",
										"src": "2383:731:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3128:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3149:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "3141:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3170:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "3157:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1671,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3157:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:35:7"
									},
									"returnParameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "3194:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1674,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3194:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:14:7"
									},
									"scope": 1910,
									"src": "3119:173:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "3661:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1697,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1687,
															"src": "3700:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1698,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1689,
															"src": "3708:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3714:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1700,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1691,
															"src": "3717:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1696,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1724,
															1774
														],
														"referencedDeclaration": 1774,
														"src": "3678:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3678:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1695,
												"id": 1702,
												"nodeType": "Return",
												"src": "3671:59:7"
											}
										]
									},
									"documentation": {
										"id": 1685,
										"nodeType": "StructuredDocumentation",
										"src": "3298:211:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3523:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3553:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "3545:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3582:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "3569:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1688,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3569:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3610:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "3596:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1690,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3596:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:93:7"
									},
									"returnParameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "3647:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1693,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3647:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3646:14:7"
									},
									"scope": 1910,
									"src": "3514:223:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1723,
										"nodeType": "Block",
										"src": "4242:111:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1717,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1707,
															"src": "4281:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1718,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1709,
															"src": "4289:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1719,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "4295:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4302:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1716,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1724,
															1774
														],
														"referencedDeclaration": 1774,
														"src": "4259:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1715,
												"id": 1722,
												"nodeType": "Return",
												"src": "4252:94:7"
											}
										]
									},
									"documentation": {
										"id": 1705,
										"nodeType": "StructuredDocumentation",
										"src": "3743:351:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4108:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "4139:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "4163:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1708,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4198:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "4190:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:80:7"
									},
									"returnParameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "4228:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1713,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4228:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:14:7"
									},
									"scope": 1910,
									"src": "4099:254:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1773,
										"nodeType": "Block",
										"src": "4780:320:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1741,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4806:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1910",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1910",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4798:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1739,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4798:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4798:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4798:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1744,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1731,
																"src": "4823:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4798:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4830:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1738,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4790:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1748,
												"nodeType": "ExpressionStatement",
												"src": "4790:81:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1751,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1727,
																	"src": "4900:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1750,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1633,
																"src": "4889:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4889:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1749,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4881:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1755,
												"nodeType": "ExpressionStatement",
												"src": "4881:60:7"
											},
											{
												"assignments": [
													1757,
													1759
												],
												"declarations": [
													{
														"constant": false,
														"id": 1757,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4958:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1773,
														"src": "4953:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1756,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4953:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1759,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4980:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1773,
														"src": "4967:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1758,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4967:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1766,
												"initialValue": {
													"arguments": [
														{
															"id": 1764,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "5020:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1760,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1727,
																"src": "4994:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4994:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1762,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1731,
																"src": "5013:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4994:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4994:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4952:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1768,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1757,
															"src": "5059:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1769,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1759,
															"src": "5068:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1770,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "5080:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1767,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1909,
														"src": "5042:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1737,
												"id": 1772,
												"nodeType": "Return",
												"src": "5035:58:7"
											}
										]
									},
									"documentation": {
										"id": 1725,
										"nodeType": "StructuredDocumentation",
										"src": "4359:237:7",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4610:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4649:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "4641:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4641:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4678:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "4665:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1728,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4665:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4700:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "4692:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4729:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "4715:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1732,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4715:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4631:116:7"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "4766:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1735,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4766:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4765:14:7"
									},
									"scope": 1910,
									"src": "4601:499:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1790,
										"nodeType": "Block",
										"src": "5377:97:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1785,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "5413:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1786,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "5421:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5427:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1784,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1791,
															1826
														],
														"referencedDeclaration": 1826,
														"src": "5394:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5394:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1783,
												"id": 1789,
												"nodeType": "Return",
												"src": "5387:80:7"
											}
										]
									},
									"documentation": {
										"id": 1775,
										"nodeType": "StructuredDocumentation",
										"src": "5106:166:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5286:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5313:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "5305:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5305:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5334:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "5321:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1778,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5321:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5304:35:7"
									},
									"returnParameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "5363:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1781,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5363:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5362:14:7"
									},
									"scope": 1910,
									"src": "5277:197:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1825,
										"nodeType": "Block",
										"src": "5816:228:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1805,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1794,
																	"src": "5845:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1804,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1633,
																"src": "5834:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5834:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5854:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1803,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5826:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5826:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1809,
												"nodeType": "ExpressionStatement",
												"src": "5826:67:7"
											},
											{
												"assignments": [
													1811,
													1813
												],
												"declarations": [
													{
														"constant": false,
														"id": 1811,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5910:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1825,
														"src": "5905:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1810,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5905:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1813,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5932:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1825,
														"src": "5919:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1812,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5919:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1818,
												"initialValue": {
													"arguments": [
														{
															"id": 1816,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1796,
															"src": "5964:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1814,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1794,
															"src": "5946:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5946:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5946:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5904:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1820,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1811,
															"src": "6003:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1821,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "6012:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1822,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1798,
															"src": "6024:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1819,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1909,
														"src": "5986:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5986:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1802,
												"id": 1824,
												"nodeType": "Return",
												"src": "5979:58:7"
											}
										]
									},
									"documentation": {
										"id": 1792,
										"nodeType": "StructuredDocumentation",
										"src": "5480:173:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5667:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5703:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "5695:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5695:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5732:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "5719:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1795,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5719:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5760:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "5746:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1797,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5746:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5685:93:7"
									},
									"returnParameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "5802:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1800,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5802:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5801:14:7"
									},
									"scope": 1910,
									"src": "5658:386:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1842,
										"nodeType": "Block",
										"src": "6320:101:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1837,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1829,
															"src": "6358:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1838,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "6366:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6372:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1836,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1843,
															1878
														],
														"referencedDeclaration": 1878,
														"src": "6337:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6337:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1835,
												"id": 1841,
												"nodeType": "Return",
												"src": "6330:84:7"
											}
										]
									},
									"documentation": {
										"id": 1827,
										"nodeType": "StructuredDocumentation",
										"src": "6050:168:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6232:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6261:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "6253:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6253:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6282:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "6269:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1830,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6269:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6252:35:7"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "6306:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1833,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6306:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6305:14:7"
									},
									"scope": 1910,
									"src": "6223:198:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1877,
										"nodeType": "Block",
										"src": "6762:232:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1857,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1846,
																	"src": "6791:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1856,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1633,
																"src": "6780:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6780:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6800:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1855,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6772:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6772:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1861,
												"nodeType": "ExpressionStatement",
												"src": "6772:69:7"
											},
											{
												"assignments": [
													1863,
													1865
												],
												"declarations": [
													{
														"constant": false,
														"id": 1863,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6858:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1877,
														"src": "6853:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1862,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6853:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1865,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6880:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1877,
														"src": "6867:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1864,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6867:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1870,
												"initialValue": {
													"arguments": [
														{
															"id": 1868,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "6914:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1866,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1846,
															"src": "6894:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6894:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6894:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6852:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1872,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1863,
															"src": "6953:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1873,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1865,
															"src": "6962:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1874,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1850,
															"src": "6974:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1871,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1909,
														"src": "6936:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6936:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1854,
												"id": 1876,
												"nodeType": "Return",
												"src": "6929:58:7"
											}
										]
									},
									"documentation": {
										"id": 1844,
										"nodeType": "StructuredDocumentation",
										"src": "6427:175:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6616:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6654:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "6646:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6683:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "6670:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1847,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6670:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6711:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "6697:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1849,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6697:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6636:93:7"
									},
									"returnParameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "6748:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1852,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6748:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6747:14:7"
									},
									"scope": 1910,
									"src": "6607:387:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1908,
										"nodeType": "Block",
										"src": "7374:532:7",
										"statements": [
											{
												"condition": {
													"id": 1890,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1881,
													"src": "7388:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1906,
													"nodeType": "Block",
													"src": "7445:455:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1894,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1883,
																		"src": "7529:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7529:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7549:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7529:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1904,
																"nodeType": "Block",
																"src": "7837:53:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1901,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1885,
																					"src": "7862:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1900,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7855:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7855:20:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1903,
																		"nodeType": "ExpressionStatement",
																		"src": "7855:20:7"
																	}
																]
															},
															"id": 1905,
															"nodeType": "IfStatement",
															"src": "7525:365:7",
															"trueBody": {
																"id": 1899,
																"nodeType": "Block",
																"src": "7552:279:7",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7672:145:7",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7694:40:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7723:10:7"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7717:5:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7717:17:7"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7698:15:7",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7766:2:7",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7770:10:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7762:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7762:19:7"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7783:15:7"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7755:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7755:44:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7755:44:7"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1883,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7723:10:7",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1883,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7770:10:7",
																				"valueSize": 1
																			}
																		],
																		"id": 1898,
																		"nodeType": "InlineAssembly",
																		"src": "7663:154:7"
																	}
																]
															}
														}
													]
												},
												"id": 1907,
												"nodeType": "IfStatement",
												"src": "7384:516:7",
												"trueBody": {
													"id": 1893,
													"nodeType": "Block",
													"src": "7397:42:7",
													"statements": [
														{
															"expression": {
																"id": 1891,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1883,
																"src": "7418:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1889,
															"id": 1892,
															"nodeType": "Return",
															"src": "7411:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1879,
										"nodeType": "StructuredDocumentation",
										"src": "7000:209:7",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7223:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7254:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "7249:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1880,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7249:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7284:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "7271:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1882,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7271:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7318:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "7304:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1884,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7304:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7239:97:7"
									},
									"returnParameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "7360:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1887,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7360:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7359:14:7"
									},
									"scope": 1910,
									"src": "7214:692:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1911,
							"src": "179:7729:7",
							"usedErrors": []
						}
					],
					"src": "86:7823:7"
				},
				"id": 7
			},
			"msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1932
						]
					},
					"id": 1933,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1912,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1913,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1932,
							"linearizedBaseContracts": [
								1932
							],
							"name": "Context",
							"nameLocation": "626:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1921,
										"nodeType": "Block",
										"src": "702:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1918,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1917,
												"id": 1920,
												"nodeType": "Return",
												"src": "712:17:8"
											}
										]
									},
									"id": 1922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:8"
									},
									"returnParameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "693:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:8"
									},
									"scope": 1932,
									"src": "640:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1930,
										"nodeType": "Block",
										"src": "809:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1927,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1926,
												"id": 1929,
												"nodeType": "Return",
												"src": "819:15:8"
											}
										]
									},
									"id": 1931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:8"
									},
									"returnParameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "793:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1924,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:8"
									},
									"scope": 1932,
									"src": "742:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1933,
							"src": "608:235:8",
							"usedErrors": []
						}
					],
					"src": "86:758:8"
				},
				"id": 8
			},
			"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1956
						],
						"IERC165": [
							1968
						]
					},
					"id": 1957,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1934,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:9"
						},
						{
							"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1935,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1957,
							"sourceUnit": 1969,
							"src": "124:23:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1937,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1968,
										"src": "754:7:9"
									},
									"id": 1938,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1936,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1956,
							"linearizedBaseContracts": [
								1956,
								1968
							],
							"name": "ERC165",
							"nameLocation": "744:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1967
									],
									"body": {
										"id": 1954,
										"nodeType": "Block",
										"src": "920:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1947,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1941,
														"src": "937:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1949,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1968,
																	"src": "957:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1968_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1968_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1948,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1968",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1951,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1946,
												"id": 1953,
												"nodeType": "Return",
												"src": "930:47:9"
											}
										]
									},
									"documentation": {
										"id": 1939,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1943,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:9"
									},
									"parameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "856:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1940,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:9"
									},
									"returnParameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "914:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1944,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:9"
									},
									"scope": 1956,
									"src": "829:155:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1957,
							"src": "726:260:9",
							"usedErrors": []
						}
					],
					"src": "99:888:9"
				},
				"id": 9
			},
			"msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "msc_token/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1968
						]
					},
					"id": 1969,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1958,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1959,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:10",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1968,
							"linearizedBaseContracts": [
								1968
							],
							"name": "IERC165",
							"nameLocation": "415:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1960,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1967,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "801:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1961,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:10"
									},
									"returnParameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "844:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1964,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:10"
									},
									"scope": 1968,
									"src": "774:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1969,
							"src": "405:447:10",
							"usedErrors": []
						}
					],
					"src": "100:753:10"
				},
				"id": 10
			}
		}
	}
}
{
	"id": "67c863f585406699d6cc4fe874f2555b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"inviter_presell/stake.sol": {
				"content": "pragma solidity ^0.8.10;\r\n\r\n\r\nimport \"./adminable.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract StakingRewards is Adminable , ReentrancyGuard{\r\n    using SafeMath for uint256;\r\n\r\n    IERC20 public rewardsToken;\r\n    mapping(address => uint256) public rewards;\r\n\r\n    uint256 public totalRewards = 168000 * 10 ** 18;\r\n    uint256 public startTime;\r\n    uint256 public rateInterval = 10 seconds;\r\n    uint256 public rateIntervalNumerator = 5;\r\n    uint256 public rateIntervalDenominator = 1000;\r\n    uint256 public lastUpdateTime;\r\n    uint256 public rewardPerTokenStored;\r\n    uint256 private _totalPowers;\r\n\r\n    mapping(address => uint256) public userRewardPerTokenPaid;\r\n    mapping(address => uint256) public userLastUpdateTime;\r\n    mapping(address => uint256) public claimedBalances;\r\n\r\n    mapping(address => uint256) private _balances;\r\n\r\n\r\n\r\n    modifier updateReward(address account) {\r\n        uint256 time = userLastUpdateTime[account];\r\n        if(time <= startTime) {\r\n            time = startTime;\r\n        }\r\n        uint256 rate = getTimeWeightedAveRate(time, block.timestamp);\r\n        rewardPerTokenStored = rewardPerToken(rate);\r\n        lastUpdateTime = lastTimeRewardApplicable();\r\n        if (account != address(0)) {\r\n            rewards[account] = earned(account);\r\n            userRewardPerTokenPaid[account] = rewardPerTokenStored;\r\n            userLastUpdateTime[account] = block.timestamp;\r\n        }\r\n        _;\r\n    }\r\n\r\n    function setStartTime(uint256 time) external onlyAdmin {\r\n        startTime = time;\r\n        lastUpdateTime = time;\r\n    }\r\n\r\n    function totalPowers() external view returns (uint256) {\r\n        return _totalPowers;\r\n    }\r\n\r\n    function curTime() external  view  returns (uint256) {\r\n        return block.timestamp;\r\n    }\r\n\r\n    function powersOf(address account) external view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function getCurRewardPool() public view returns (uint256) {\r\n        return getRewardPool(block.timestamp);\r\n    }\r\n\r\n    function getRewardPool(uint256 time) public view returns (uint256) {\r\n        if(startTime == 0) {\r\n            return totalRewards;\r\n        }\r\n        uint256 times = (time - startTime) / rateInterval + 1;\r\n        uint256 value = totalRewards;\r\n        for(uint256 i = 0; i < times; ++i) {\r\n            value = value - value * rateIntervalNumerator / rateIntervalDenominator;\r\n        }\r\n        // TODO 精度问题\r\n        return value * rateIntervalNumerator / rateIntervalDenominator;\r\n    }\r\n\r\n    function _getRemainPool(uint256 time) private view returns (uint256) {\r\n        if(startTime == 0) {\r\n            return startTime;\r\n        }\r\n        uint256 times = (time - startTime) / rateInterval + 1;\r\n        uint256 value = totalRewards;\r\n        for(uint256 i = 0; i < times; ++i) {\r\n            value = value - value * rateIntervalNumerator / rateIntervalDenominator;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    function getRemainPool(uint256 time) public view returns (uint256) {\r\n        if(startTime == 0) {\r\n            return startTime;\r\n        }\r\n        uint256 times = (time - startTime) / rateInterval + 1;\r\n        uint256 value = totalRewards;\r\n        for(uint256 i = 0; i < times; ++i) {\r\n            value = value - value * rateIntervalNumerator / rateIntervalDenominator;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    function getCurRewardRate() public view returns (uint256) {\r\n        return _getRewardRate(block.timestamp);\r\n    }\r\n\r\n    function _getRewardRate(uint256 time) private view returns (uint256) {\r\n        uint256 curPoolAmount = getRewardPool(time);\r\n        uint256 rewardRate = curPoolAmount.div(rateInterval);\r\n        return rewardRate;\r\n    }\r\n\r\n\r\n    function lastTimeRewardApplicable() public view returns (uint256) {\r\n        return block.timestamp;\r\n    }\r\n\r\n    function rewardPerToken(uint256 rewardRate) public view returns (uint256) {\r\n        if (_totalPowers == 0) {\r\n            return rewardPerTokenStored;\r\n        }\r\n        return\r\n            rewardPerTokenStored.add(\r\n                lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalPowers)\r\n            );\r\n    }\r\n\r\n    function earned(address account) public view returns (uint256) {\r\n        uint256 rate = getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp);\r\n        return _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]);\r\n    }\r\n\r\n    // Time-weighted average rate\r\n    function getTimeWeightedAveRate(uint256 leftTime, uint256 rightTime) public view returns (uint256){\r\n        \r\n        if(startTime == 0 || leftTime >= rightTime || leftTime == 0) {\r\n            return 0;\r\n        }\r\n\r\n        if(leftTime < startTime) {\r\n            leftTime = startTime;\r\n        }\r\n\r\n        uint256 leftInterval = (rateInterval - (leftTime - startTime) % rateInterval) % rateInterval;\r\n        uint256 leftReward = getRewardPool(leftTime) * leftInterval / rateInterval;\r\n\r\n        uint256 rightInterval = (rightTime - startTime) % rateInterval;\r\n        uint256 rightReward = getRewardPool(rightTime) * rightInterval / rateInterval;\r\n\r\n        if(leftTime + leftInterval > rightTime) {\r\n            return _getRewardRate(leftTime);\r\n        }\r\n\r\n        uint256 midInterval = rightTime - rightInterval - leftTime - leftInterval;\r\n        uint256 startReward = getRemainPool(leftTime); \r\n        uint256 midTotalReward = 0;\r\n        uint256 nextReward = 0;\r\n        uint256 value = startReward;\r\n        uint256 times = midInterval / rateInterval;\r\n        for(uint256 i = 0; i < times; ++i) {\r\n            nextReward = value * rateIntervalNumerator / rateIntervalDenominator;\r\n            value = value - nextReward;\r\n            midTotalReward += nextReward;\r\n        }\r\n        return (midTotalReward + leftReward + rightReward) / (rightTime - leftTime);\r\n    }\r\n\r\n\r\n    function stake(address user, uint256 amount) external nonReentrant onlyAdmin updateReward(user) {\r\n        require(amount > 0, \"Cannot stake 0\");\r\n        _totalPowers = _totalPowers.add(amount);\r\n        _balances[user] = _balances[user].add(amount);\r\n        emit Staked(user, amount);\r\n    }\r\n\r\n\r\n\r\n    function getReward() external nonReentrant updateReward(msg.sender) {\r\n        uint256 reward = rewards[msg.sender];\r\n        if (reward > 0) {\r\n            rewards[msg.sender] = 0;\r\n            rewardsToken.transfer(msg.sender, reward);\r\n            emit RewardPaid(msg.sender, reward);\r\n        }\r\n    }\r\n\r\n    function setRewardToken(address token) external onlyOwner {\r\n        rewardsToken = IERC20(token);\r\n    }\r\n\r\n\r\n\r\n\r\n    event Staked(address indexed user, uint256 amount);\r\n    event RewardPaid(address indexed user, uint256 reward);\r\n\r\n    function emergencyWithdraw() external onlyOwner {\r\n        payable(owner()).transfer(address(this).balance);\r\n    }\r\n\r\n    function emergencyWithdrawToken(address token, uint256 amount) external onlyOwner {\r\n        IERC20(token).transfer(msg.sender, amount);\r\n    }\r\n}"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Contract module that helps prevent reentrant calls to a function.\r\n *\r\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\r\n * available, which can be applied to functions to make sure there are no nested\r\n * (reentrant) calls to them.\r\n *\r\n * Note that because there is a single `nonReentrant` guard, functions marked as\r\n * `nonReentrant` may not call one another. This can be worked around by making\r\n * those functions `private`, and then adding `external` `nonReentrant` entry\r\n * points to them.\r\n *\r\n * TIP: If you would like to learn more about reentrancy and alternative ways\r\n * to protect against it, check out our blog post\r\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\r\n */\r\nabstract contract ReentrancyGuard {\r\n    // Booleans are more expensive than uint256 or any type that takes up a full\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // slot's contents, replace the bits taken up by the boolean, and then write\r\n    // back. This is the compiler's defense against contract upgrades and\r\n    // pointer aliasing, and it cannot be disabled.\r\n\r\n    // The values being non-zero value makes deployment a bit more expensive,\r\n    // but in exchange the refund on every call to nonReentrant will be lower in\r\n    // amount. Since refunds are capped to a percentage of the total\r\n    // transaction's gas, it is best to keep them low in cases like this one, to\r\n    // increase the likelihood of the full refund coming into effect.\r\n    uint256 private constant _NOT_ENTERED = 1;\r\n    uint256 private constant _ENTERED = 2;\r\n\r\n    uint256 private _status;\r\n\r\n    constructor() {\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and making it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        // On the first call to nonReentrant, _notEntered will be true\r\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\r\n\r\n        // Any calls to nonReentrant after this point will fail\r\n        _status = _ENTERED;\r\n\r\n        _;\r\n\r\n        // By storing the original value once again, a refund is triggered (see\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        _status = _NOT_ENTERED;\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../IERC20.sol\";\r\nimport \"../../../utils/Address.sol\";\r\n\r\n/**\r\n * @title SafeERC20\r\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeERC20 {\r\n    using Address for address;\r\n\r\n    function safeTransfer(\r\n        IERC20 token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        IERC20 token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        unchecked {\r\n            uint256 oldAllowance = token.allowance(address(this), spender);\r\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\r\n            uint256 newAllowance = oldAllowance - value;\r\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n// CAUTION\r\n// This version of SafeMath should only be used with Solidity 0.8 or later,\r\n// because it relies on the compiler's built in overflow checks.\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations.\r\n *\r\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\r\n * now has built in overflow checking.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}\r\n"
			},
			"inviter_presell/adminable.sol": {
				"content": "\r\npragma solidity ^0.8.16;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n\r\nabstract contract Adminable is Context {\r\n    mapping(address => bool) private _admins;\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    event ModificationAdmin(address indexed admin, bool oldState, bool newState);\r\n\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Adminable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyAdmin() {\r\n        require(isAdmin(_msgSender()), \"Adminable: caller is not the admin\");\r\n        _;\r\n    }\r\n\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    function isAdmin(address account) public view virtual returns (bool) {\r\n        return _admins[account];\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n\r\n    function modificationAdmin(address admin, bool state) public virtual onlyOwner {\r\n        emit ModificationAdmin(admin,  _admins[admin], state);\r\n        _admins[admin] = state;\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        assembly {\r\n            size := extcodesize(account)\r\n        }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"inviter_presell/adminable.sol": {
				"Adminable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "oldState",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "newState",
									"type": "bool"
								}
							],
							"name": "ModificationAdmin",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "state",
									"type": "bool"
								}
							],
							"name": "modificationAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isAdmin(address)": "24d7806c",
							"modificationAdmin(address,bool)": "18e20ecf",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"oldState\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newState\",\"type\":\"bool\"}],\"name\":\"ModificationAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"modificationAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"inviter_presell/adminable.sol\":\"Adminable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"inviter_presell/adminable.sol\":{\"keccak256\":\"0x077c3b664bd79c85f8dcbcfb38594ca46e79324915b0db87e9adff3431025837\",\"urls\":[\"bzz-raw://4a0d86ef7c9f4e8601f58977faa5232d325604963aebb0de4ff455f0bd5b893c\",\"dweb:/ipfs/QmTr9KaGYYdn4FvWKq1RDJL3xY8wZcaJMoJubTDz5YWM2p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "inviter_presell/adminable.sol:Adminable",
								"label": "_admins",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 28,
								"contract": "inviter_presell/adminable.sol:Adminable",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"inviter_presell/adminable.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"inviter_presell/adminable.sol\":{\"keccak256\":\"0x077c3b664bd79c85f8dcbcfb38594ca46e79324915b0db87e9adff3431025837\",\"urls\":[\"bzz-raw://4a0d86ef7c9f4e8601f58977faa5232d325604963aebb0de4ff455f0bd5b893c\",\"dweb:/ipfs/QmTr9KaGYYdn4FvWKq1RDJL3xY8wZcaJMoJubTDz5YWM2p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"inviter_presell/stake.sol": {
				"StakingRewards": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "oldState",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "newState",
									"type": "bool"
								}
							],
							"name": "ModificationAdmin",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "claimedBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "curTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdrawToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurRewardPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurRewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "getRemainPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "getRewardPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "leftTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rightTime",
									"type": "uint256"
								}
							],
							"name": "getTimeWeightedAveRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTimeRewardApplicable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "state",
									"type": "bool"
								}
							],
							"name": "modificationAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "powersOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rateInterval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rateIntervalDenominator",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rateIntervalNumerator",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								}
							],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerTokenStored",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "setRewardToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "setStartTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalPowers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userLastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userRewardPerTokenPaid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"inviter_presell/stake.sol\":371:7355  contract StakingRewards is Adminable , ReentrancyGuard{... */\n  mstore(0x40, 0x80)\n    /* \"inviter_presell/stake.sol\":581:598  168000 * 10 ** 18 */\n  0x23934c5a09da19000000\n    /* \"inviter_presell/stake.sol\":551:598  uint256 public totalRewards = 168000 * 10 ** 18 */\n  0x05\n  sstore\n    /* \"inviter_presell/stake.sol\":666:676  10 seconds */\n  0x0a\n    /* \"inviter_presell/stake.sol\":636:676  uint256 public rateInterval = 10 seconds */\n  0x07\n  sstore\n    /* \"inviter_presell/stake.sol\":722:723  5 */\n  0x05\n    /* \"inviter_presell/stake.sol\":683:723  uint256 public rateIntervalNumerator = 5 */\n  0x08\n  sstore\n    /* \"inviter_presell/stake.sol\":771:775  1000 */\n  0x03e8\n    /* \"inviter_presell/stake.sol\":730:775  uint256 public rateIntervalDenominator = 1000 */\n  0x09\n  sstore\n    /* \"inviter_presell/stake.sol\":371:7355  contract StakingRewards is Adminable , ReentrancyGuard{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"inviter_presell/adminable.sol\":603:635  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"inviter_presell/adminable.sol\":622:634  _msgSender() */\n  tag_6\n    /* \"inviter_presell/adminable.sol\":622:632  _msgSender */\n  shl(0x20, tag_7)\n    /* \"inviter_presell/adminable.sol\":622:634  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"inviter_presell/adminable.sol\":603:621  _transferOwnership */\n  shl(0x20, tag_8)\n    /* \"inviter_presell/adminable.sol\":603:635  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1734:1735  1 */\n  0x01\n    /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1845:1852  _status */\n  0x02\n    /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1845:1867  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"inviter_presell/stake.sol\":371:7355  contract StakingRewards is Adminable , ReentrancyGuard{... */\n  jump(tag_10)\n    /* \"inviter_presell/adminable.sol\":63:161  function _msgSender() internal view virtual returns (address) {... */\ntag_7:\n    /* \"inviter_presell/adminable.sol\":116:123  address */\n  0x00\n    /* \"inviter_presell/adminable.sol\":143:153  msg.sender */\n  caller\n    /* \"inviter_presell/adminable.sol\":136:153  return msg.sender */\n  swap1\n  pop\n    /* \"inviter_presell/adminable.sol\":63:161  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"inviter_presell/adminable.sol\":1443:1634  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"inviter_presell/adminable.sol\":1517:1533  address oldOwner */\n  0x00\n    /* \"inviter_presell/adminable.sol\":1536:1542  _owner */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"inviter_presell/adminable.sol\":1517:1542  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"inviter_presell/adminable.sol\":1562:1570  newOwner */\n  dup2\n    /* \"inviter_presell/adminable.sol\":1553:1559  _owner */\n  0x01\n  0x00\n    /* \"inviter_presell/adminable.sol\":1553:1570  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"inviter_presell/adminable.sol\":1617:1625  newOwner */\n  dup2\n    /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"inviter_presell/adminable.sol\":1607:1615  oldOwner */\n  dup2\n    /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"inviter_presell/adminable.sol\":1506:1634  {... */\n  pop\n    /* \"inviter_presell/adminable.sol\":1443:1634  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"inviter_presell/stake.sol\":371:7355  contract StakingRewards is Adminable , ReentrancyGuard{... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"inviter_presell/stake.sol\":371:7355  contract StakingRewards is Adminable , ReentrancyGuard{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x874c120b\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xb79ec812\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xd42b779d\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xd42b779d\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xda4f8431\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xdb2e21bc\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xdf136d65\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_36\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0xb79ec812\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xc8f33c91\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xcdda56e0\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_31\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x9499c549\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x9499c549\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x9a5b17b0\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa4c3b091\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xadc9772e\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x874c120b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8aee8127\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8b876347\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x4dbdc4eb\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x715018a6\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x78e97925\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x7a6fcee7\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x80faa57d\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8107368b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x4dbdc4eb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5cfa91f4\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6139d4b4\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6917c501\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x24d7806c\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x24d7806c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3c4045cf\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3d18b912\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3e0a322d\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0700037d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e15561a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18e20ecf\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"inviter_presell/stake.sol\":4496:4792  function earned(address account) public view returns (uint256) {... */\n    tag_3:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":500:542  mapping(address => uint256) public rewards */\n    tag_4:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":551:598  uint256 public totalRewards = 168000 * 10 ** 18 */\n    tag_5:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/adminable.sol\":1642:1826  function modificationAdmin(address admin, bool state) public virtual onlyOwner {... */\n    tag_6:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      stop\n        /* \"inviter_presell/adminable.sol\":1004:1115  function isAdmin(address account) public view virtual returns (bool) {... */\n    tag_7:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":683:723  uint256 public rateIntervalNumerator = 5 */\n    tag_8:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":6534:6839  function getReward() external nonReentrant updateReward(msg.sender) {... */\n    tag_9:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      stop\n        /* \"inviter_presell/stake.sol\":1739:1861  function setStartTime(uint256 time) external onlyAdmin {... */\n    tag_10:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      stop\n        /* \"inviter_presell/stake.sol\":3246:3662  function getRemainPool(uint256 time) public view returns (uint256) {... */\n    tag_11:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":2313:2812  function getRewardPool(uint256 time) public view returns (uint256) {... */\n    tag_12:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":636:676  uint256 public rateInterval = 10 seconds */\n    tag_13:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":1869:1962  function totalPowers() external view returns (uint256) {... */\n    tag_14:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/adminable.sol\":1123:1226  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      stop\n        /* \"inviter_presell/stake.sol\":605:629  uint256 public startTime */\n    tag_16:\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":730:775  uint256 public rateIntervalDenominator = 1000 */\n    tag_17:\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":4025:4132  function lastTimeRewardApplicable() public view returns (uint256) {... */\n    tag_18:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":961:1014  mapping(address => uint256) public userLastUpdateTime */\n    tag_19:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":4140:4488  function rewardPerToken(uint256 rewardRate) public view returns (uint256) {... */\n    tag_20:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":6847:6952  function setRewardToken(address token) external onlyOwner {... */\n    tag_21:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n    tag_108:\n      stop\n        /* \"inviter_presell/stake.sol\":897:954  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_22:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/adminable.sol\":909:996  function owner() public view virtual returns (address) {... */\n    tag_23:\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":2191:2305  function getCurRewardPool() public view returns (uint256) {... */\n    tag_24:\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":1970:2064  function curTime() external  view  returns (uint256) {... */\n    tag_25:\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":7209:7352  function emergencyWithdrawToken(address token, uint256 amount) external onlyOwner {... */\n    tag_26:\n      tag_125\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      tag_128\n      jump\t// in\n    tag_125:\n      stop\n        /* \"inviter_presell/stake.sol\":6228:6522  function stake(address user, uint256 amount) external nonReentrant onlyAdmin updateReward(user) {... */\n    tag_27:\n      tag_129\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_130\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_130:\n      tag_131\n      jump\t// in\n    tag_129:\n      stop\n        /* \"inviter_presell/stake.sol\":2072:2183  function powersOf(address account) external view returns (uint256) {... */\n    tag_28:\n      tag_132\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":782:811  uint256 public lastUpdateTime */\n    tag_29:\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      tag_138\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":3670:3785  function getCurRewardRate() public view returns (uint256) {... */\n    tag_30:\n      tag_139\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      tag_141\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":467:493  IERC20 public rewardsToken */\n    tag_31:\n      tag_142\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":1021:1071  mapping(address => uint256) public claimedBalances */\n    tag_32:\n      tag_146\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_147:\n      tag_148\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      tag_149\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":4835:6218  function getTimeWeightedAveRate(uint256 leftTime, uint256 rightTime) public view returns (uint256){... */\n    tag_33:\n      tag_150\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      tag_153\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      tag_154\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":7086:7201  function emergencyWithdraw() external onlyOwner {... */\n    tag_34:\n      tag_155\n      tag_156\n      jump\t// in\n    tag_155:\n      stop\n        /* \"inviter_presell/stake.sol\":818:853  uint256 public rewardPerTokenStored */\n    tag_35:\n      tag_157\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      tag_159\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/adminable.sol\":1234:1435  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_36:\n      tag_160\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_161\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_161:\n      tag_162\n      jump\t// in\n    tag_160:\n      stop\n        /* \"inviter_presell/stake.sol\":4496:4792  function earned(address account) public view returns (uint256) {... */\n    tag_47:\n        /* \"inviter_presell/stake.sol\":4550:4557  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":4570:4582  uint256 rate */\n      dup1\n        /* \"inviter_presell/stake.sol\":4585:4653  getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      tag_164\n        /* \"inviter_presell/stake.sol\":4608:4626  userLastUpdateTime */\n      0x0e\n        /* \"inviter_presell/stake.sol\":4608:4635  userLastUpdateTime[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":4627:4634  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":4608:4635  userLastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":4637:4652  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":4585:4607  getTimeWeightedAveRate */\n      tag_153\n        /* \"inviter_presell/stake.sol\":4585:4653  getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      jump\t// in\n    tag_164:\n        /* \"inviter_presell/stake.sol\":4570:4653  uint256 rate = getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4671:4784  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      tag_165\n        /* \"inviter_presell/stake.sol\":4767:4774  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":4767:4783  rewards[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":4775:4782  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":4767:4783  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":4671:4762  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18) */\n      tag_166\n        /* \"inviter_presell/stake.sol\":4757:4761  1e18 */\n      0x0de0b6b3a7640000\n        /* \"inviter_presell/stake.sol\":4671:4752  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])) */\n      tag_167\n        /* \"inviter_presell/stake.sol\":4694:4751  rewardPerToken(rate).sub(userRewardPerTokenPaid[account]) */\n      tag_168\n        /* \"inviter_presell/stake.sol\":4719:4741  userRewardPerTokenPaid */\n      0x0d\n        /* \"inviter_presell/stake.sol\":4719:4750  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":4742:4749  account */\n      dup11\n        /* \"inviter_presell/stake.sol\":4719:4750  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":4694:4714  rewardPerToken(rate) */\n      tag_169\n        /* \"inviter_presell/stake.sol\":4709:4713  rate */\n      dup9\n        /* \"inviter_presell/stake.sol\":4694:4708  rewardPerToken */\n      tag_106\n        /* \"inviter_presell/stake.sol\":4694:4714  rewardPerToken(rate) */\n      jump\t// in\n    tag_169:\n        /* \"inviter_presell/stake.sol\":4694:4718  rewardPerToken(rate).sub */\n      tag_170\n      swap1\n        /* \"inviter_presell/stake.sol\":4694:4751  rewardPerToken(rate).sub(userRewardPerTokenPaid[account]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_168:\n        /* \"inviter_presell/stake.sol\":4671:4680  _balances */\n      0x10\n        /* \"inviter_presell/stake.sol\":4671:4689  _balances[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":4681:4688  account */\n      dup11\n        /* \"inviter_presell/stake.sol\":4671:4689  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":4671:4693  _balances[account].mul */\n      tag_171\n      swap1\n        /* \"inviter_presell/stake.sol\":4671:4752  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_167:\n        /* \"inviter_presell/stake.sol\":4671:4756  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div */\n      tag_172\n      swap1\n        /* \"inviter_presell/stake.sol\":4671:4762  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_166:\n        /* \"inviter_presell/stake.sol\":4671:4766  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add */\n      tag_173\n      swap1\n        /* \"inviter_presell/stake.sol\":4671:4784  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_165:\n        /* \"inviter_presell/stake.sol\":4664:4784  return _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      swap2\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":4496:4792  function earned(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":500:542  mapping(address => uint256) public rewards */\n    tag_52:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":551:598  uint256 public totalRewards = 168000 * 10 ** 18 */\n    tag_55:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1642:1826  function modificationAdmin(address admin, bool state) public virtual onlyOwner {... */\n    tag_60:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_175\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_176\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_175:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_177\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_116\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_177:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"inviter_presell/adminable.sol\":1755:1760  admin */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1737:1785  ModificationAdmin(admin,  _admins[admin], state) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x82f1fa40a3d82dea3e406073819290601f436580aa7c69f9feb61f885bdd8854\n        /* \"inviter_presell/adminable.sol\":1763:1770  _admins */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1763:1777  _admins[admin] */\n      dup1\n        /* \"inviter_presell/adminable.sol\":1771:1776  admin */\n      dup6\n        /* \"inviter_presell/adminable.sol\":1763:1777  _admins[admin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"inviter_presell/adminable.sol\":1779:1784  state */\n      dup4\n        /* \"inviter_presell/adminable.sol\":1737:1785  ModificationAdmin(admin,  _admins[admin], state) */\n      mload(0x40)\n      tag_182\n      swap3\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"inviter_presell/adminable.sol\":1813:1818  state */\n      dup1\n        /* \"inviter_presell/adminable.sol\":1796:1803  _admins */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1796:1810  _admins[admin] */\n      dup1\n        /* \"inviter_presell/adminable.sol\":1804:1809  admin */\n      dup5\n        /* \"inviter_presell/adminable.sol\":1796:1810  _admins[admin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"inviter_presell/adminable.sol\":1796:1818  _admins[admin] = state */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/adminable.sol\":1642:1826  function modificationAdmin(address admin, bool state) public virtual onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1004:1115  function isAdmin(address account) public view virtual returns (bool) {... */\n    tag_63:\n        /* \"inviter_presell/adminable.sol\":1067:1071  bool */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1091:1098  _admins */\n      dup1\n        /* \"inviter_presell/adminable.sol\":1091:1107  _admins[account] */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1099:1106  account */\n      dup4\n        /* \"inviter_presell/adminable.sol\":1091:1107  _admins[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"inviter_presell/adminable.sol\":1084:1107  return _admins[account] */\n      swap1\n      pop\n        /* \"inviter_presell/adminable.sol\":1004:1115  function isAdmin(address account) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":683:723  uint256 public rateIntervalNumerator = 5 */\n    tag_67:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":6534:6839  function getReward() external nonReentrant updateReward(msg.sender) {... */\n    tag_70:\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2376:2383  _status */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2376:2395  _status != _ENTERED */\n      sub\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2509:2516  _status */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2509:2527  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":6590:6600  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":1188:1200  uint256 time */\n      0x00\n        /* \"inviter_presell/stake.sol\":1203:1221  userLastUpdateTime */\n      0x0e\n        /* \"inviter_presell/stake.sol\":1203:1230  userLastUpdateTime[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1222:1229  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1203:1230  userLastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":1188:1230  uint256 time = userLastUpdateTime[account] */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1252:1261  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":1244:1248  time */\n      dup2\n        /* \"inviter_presell/stake.sol\":1244:1261  time <= startTime */\n      gt\n        /* \"inviter_presell/stake.sol\":1241:1306  if(time <= startTime) {... */\n      tag_190\n      jumpi\n        /* \"inviter_presell/stake.sol\":1285:1294  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":1278:1294  time = startTime */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1241:1306  if(time <= startTime) {... */\n    tag_190:\n        /* \"inviter_presell/stake.sol\":1316:1328  uint256 rate */\n      0x00\n        /* \"inviter_presell/stake.sol\":1331:1376  getTimeWeightedAveRate(time, block.timestamp) */\n      tag_191\n        /* \"inviter_presell/stake.sol\":1354:1358  time */\n      dup3\n        /* \"inviter_presell/stake.sol\":1360:1375  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1331:1353  getTimeWeightedAveRate */\n      tag_153\n        /* \"inviter_presell/stake.sol\":1331:1376  getTimeWeightedAveRate(time, block.timestamp) */\n      jump\t// in\n    tag_191:\n        /* \"inviter_presell/stake.sol\":1316:1376  uint256 rate = getTimeWeightedAveRate(time, block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1410:1430  rewardPerToken(rate) */\n      tag_192\n        /* \"inviter_presell/stake.sol\":1425:1429  rate */\n      dup2\n        /* \"inviter_presell/stake.sol\":1410:1424  rewardPerToken */\n      tag_106\n        /* \"inviter_presell/stake.sol\":1410:1430  rewardPerToken(rate) */\n      jump\t// in\n    tag_192:\n        /* \"inviter_presell/stake.sol\":1387:1407  rewardPerTokenStored */\n      0x0b\n        /* \"inviter_presell/stake.sol\":1387:1430  rewardPerTokenStored = rewardPerToken(rate) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1458:1484  lastTimeRewardApplicable() */\n      tag_193\n        /* \"inviter_presell/stake.sol\":1458:1482  lastTimeRewardApplicable */\n      tag_98\n        /* \"inviter_presell/stake.sol\":1458:1484  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_193:\n        /* \"inviter_presell/stake.sol\":1441:1455  lastUpdateTime */\n      0x0a\n        /* \"inviter_presell/stake.sol\":1441:1484  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1518:1519  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":1499:1520  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/stake.sol\":1499:1506  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1499:1520  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/stake.sol\":1495:1712  if (account != address(0)) {... */\n      tag_194\n      jumpi\n        /* \"inviter_presell/stake.sol\":1556:1571  earned(account) */\n      tag_195\n        /* \"inviter_presell/stake.sol\":1563:1570  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1556:1562  earned */\n      tag_47\n        /* \"inviter_presell/stake.sol\":1556:1571  earned(account) */\n      jump\t// in\n    tag_195:\n        /* \"inviter_presell/stake.sol\":1537:1544  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":1537:1553  rewards[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1545:1552  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":1537:1553  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1537:1571  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1620:1640  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"inviter_presell/stake.sol\":1586:1608  userRewardPerTokenPaid */\n      0x0d\n        /* \"inviter_presell/stake.sol\":1586:1617  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1609:1616  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":1586:1617  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1586:1640  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1685:1700  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1655:1673  userLastUpdateTime */\n      0x0e\n        /* \"inviter_presell/stake.sol\":1655:1682  userLastUpdateTime[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1674:1681  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":1655:1682  userLastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1655:1700  userLastUpdateTime[account] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1495:1712  if (account != address(0)) {... */\n    tag_194:\n        /* \"inviter_presell/stake.sol\":6613:6627  uint256 reward */\n      0x00\n        /* \"inviter_presell/stake.sol\":6630:6637  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":6630:6649  rewards[msg.sender] */\n      0x00\n        /* \"inviter_presell/stake.sol\":6638:6648  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":6630:6649  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":6613:6649  uint256 reward = rewards[msg.sender] */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":6673:6674  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":6664:6670  reward */\n      dup2\n        /* \"inviter_presell/stake.sol\":6664:6674  reward > 0 */\n      gt\n        /* \"inviter_presell/stake.sol\":6660:6832  if (reward > 0) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"inviter_presell/stake.sol\":6713:6714  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":6691:6698  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":6691:6710  rewards[msg.sender] */\n      0x00\n        /* \"inviter_presell/stake.sol\":6699:6709  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":6691:6710  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":6691:6714  rewards[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":6729:6741  rewardsToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/stake.sol\":6729:6750  rewardsToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"inviter_presell/stake.sol\":6751:6761  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":6763:6769  reward */\n      dup4\n        /* \"inviter_presell/stake.sol\":6729:6770  rewardsToken.transfer(msg.sender, reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap3\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_201:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_202\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      pop\n        /* \"inviter_presell/stake.sol\":6801:6811  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":6790:6820  RewardPaid(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"inviter_presell/stake.sol\":6813:6819  reward */\n      dup3\n        /* \"inviter_presell/stake.sol\":6790:6820  RewardPaid(msg.sender, reward) */\n      mload(0x40)\n      tag_204\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"inviter_presell/stake.sol\":6660:6832  if (reward > 0) {... */\n    tag_197:\n        /* \"inviter_presell/stake.sol\":6602:6839  {... */\n      pop\n        /* \"inviter_presell/stake.sol\":1177:1731  {... */\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2540:2541  _ */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1734:1735  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2688:2695  _status */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2688:2710  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":6534:6839  function getReward() external nonReentrant updateReward(msg.sender) {... */\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":1739:1861  function setStartTime(uint256 time) external onlyAdmin {... */\n    tag_74:\n        /* \"inviter_presell/adminable.sol\":821:842  isAdmin(_msgSender()) */\n      tag_206\n        /* \"inviter_presell/adminable.sol\":829:841  _msgSender() */\n      tag_207\n        /* \"inviter_presell/adminable.sol\":829:839  _msgSender */\n      tag_176\n        /* \"inviter_presell/adminable.sol\":829:841  _msgSender() */\n      jump\t// in\n    tag_207:\n        /* \"inviter_presell/adminable.sol\":821:828  isAdmin */\n      tag_63\n        /* \"inviter_presell/adminable.sol\":821:842  isAdmin(_msgSender()) */\n      jump\t// in\n    tag_206:\n        /* \"inviter_presell/adminable.sol\":813:881  require(isAdmin(_msgSender()), \"Adminable: caller is not the admin\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"inviter_presell/stake.sol\":1817:1821  time */\n      dup1\n        /* \"inviter_presell/stake.sol\":1805:1814  startTime */\n      0x06\n        /* \"inviter_presell/stake.sol\":1805:1821  startTime = time */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1849:1853  time */\n      dup1\n        /* \"inviter_presell/stake.sol\":1832:1846  lastUpdateTime */\n      0x0a\n        /* \"inviter_presell/stake.sol\":1832:1853  lastUpdateTime = time */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1739:1861  function setStartTime(uint256 time) external onlyAdmin {... */\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":3246:3662  function getRemainPool(uint256 time) public view returns (uint256) {... */\n    tag_77:\n        /* \"inviter_presell/stake.sol\":3304:3311  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":3340:3341  0 */\n      dup1\n        /* \"inviter_presell/stake.sol\":3327:3336  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":3327:3341  startTime == 0 */\n      sub\n        /* \"inviter_presell/stake.sol\":3324:3386  if(startTime == 0) {... */\n      tag_213\n      jumpi\n        /* \"inviter_presell/stake.sol\":3365:3374  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":3358:3374  return startTime */\n      swap1\n      pop\n      jump(tag_212)\n        /* \"inviter_presell/stake.sol\":3324:3386  if(startTime == 0) {... */\n    tag_213:\n        /* \"inviter_presell/stake.sol\":3396:3409  uint256 times */\n      0x00\n        /* \"inviter_presell/stake.sol\":3448:3449  1 */\n      0x01\n        /* \"inviter_presell/stake.sol\":3433:3445  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":3420:3429  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":3413:3417  time */\n      dup6\n        /* \"inviter_presell/stake.sol\":3413:3429  time - startTime */\n      tag_214\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n        /* \"inviter_presell/stake.sol\":3412:3445  (time - startTime) / rateInterval */\n      tag_216\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n        /* \"inviter_presell/stake.sol\":3412:3449  (time - startTime) / rateInterval + 1 */\n      tag_218\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"inviter_presell/stake.sol\":3396:3449  uint256 times = (time - startTime) / rateInterval + 1 */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":3460:3473  uint256 value */\n      0x00\n        /* \"inviter_presell/stake.sol\":3476:3488  totalRewards */\n      sload(0x05)\n        /* \"inviter_presell/stake.sol\":3460:3488  uint256 value = totalRewards */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":3503:3512  uint256 i */\n      0x00\n        /* \"inviter_presell/stake.sol\":3499:3632  for(uint256 i = 0; i < times; ++i) {... */\n    tag_220:\n        /* \"inviter_presell/stake.sol\":3522:3527  times */\n      dup3\n        /* \"inviter_presell/stake.sol\":3518:3519  i */\n      dup2\n        /* \"inviter_presell/stake.sol\":3518:3527  i < times */\n      lt\n        /* \"inviter_presell/stake.sol\":3499:3632  for(uint256 i = 0; i < times; ++i) {... */\n      iszero\n      tag_221\n      jumpi\n        /* \"inviter_presell/stake.sol\":3597:3620  rateIntervalDenominator */\n      sload(0x09)\n        /* \"inviter_presell/stake.sol\":3573:3594  rateIntervalNumerator */\n      sload(0x08)\n        /* \"inviter_presell/stake.sol\":3565:3570  value */\n      dup4\n        /* \"inviter_presell/stake.sol\":3565:3594  value * rateIntervalNumerator */\n      tag_223\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n        /* \"inviter_presell/stake.sol\":3565:3620  value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_225\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_225:\n        /* \"inviter_presell/stake.sol\":3557:3562  value */\n      dup3\n        /* \"inviter_presell/stake.sol\":3557:3620  value - value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_226\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_226:\n        /* \"inviter_presell/stake.sol\":3549:3620  value = value - value * rateIntervalNumerator / rateIntervalDenominator */\n      swap2\n      pop\n        /* \"inviter_presell/stake.sol\":3529:3532  ++i */\n      dup1\n      tag_227\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":3499:3632  for(uint256 i = 0; i < times; ++i) {... */\n      jump(tag_220)\n    tag_221:\n      pop\n        /* \"inviter_presell/stake.sol\":3649:3654  value */\n      dup1\n        /* \"inviter_presell/stake.sol\":3642:3654  return value */\n      swap3\n      pop\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":3246:3662  function getRemainPool(uint256 time) public view returns (uint256) {... */\n    tag_212:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2313:2812  function getRewardPool(uint256 time) public view returns (uint256) {... */\n    tag_81:\n        /* \"inviter_presell/stake.sol\":2371:2378  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2407:2408  0 */\n      dup1\n        /* \"inviter_presell/stake.sol\":2394:2403  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":2394:2408  startTime == 0 */\n      sub\n        /* \"inviter_presell/stake.sol\":2391:2456  if(startTime == 0) {... */\n      tag_230\n      jumpi\n        /* \"inviter_presell/stake.sol\":2432:2444  totalRewards */\n      sload(0x05)\n        /* \"inviter_presell/stake.sol\":2425:2444  return totalRewards */\n      swap1\n      pop\n      jump(tag_229)\n        /* \"inviter_presell/stake.sol\":2391:2456  if(startTime == 0) {... */\n    tag_230:\n        /* \"inviter_presell/stake.sol\":2466:2479  uint256 times */\n      0x00\n        /* \"inviter_presell/stake.sol\":2518:2519  1 */\n      0x01\n        /* \"inviter_presell/stake.sol\":2503:2515  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":2490:2499  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":2483:2487  time */\n      dup6\n        /* \"inviter_presell/stake.sol\":2483:2499  time - startTime */\n      tag_231\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_231:\n        /* \"inviter_presell/stake.sol\":2482:2515  (time - startTime) / rateInterval */\n      tag_232\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_232:\n        /* \"inviter_presell/stake.sol\":2482:2519  (time - startTime) / rateInterval + 1 */\n      tag_233\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_233:\n        /* \"inviter_presell/stake.sol\":2466:2519  uint256 times = (time - startTime) / rateInterval + 1 */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2530:2543  uint256 value */\n      0x00\n        /* \"inviter_presell/stake.sol\":2546:2558  totalRewards */\n      sload(0x05)\n        /* \"inviter_presell/stake.sol\":2530:2558  uint256 value = totalRewards */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2573:2582  uint256 i */\n      0x00\n        /* \"inviter_presell/stake.sol\":2569:2702  for(uint256 i = 0; i < times; ++i) {... */\n    tag_234:\n        /* \"inviter_presell/stake.sol\":2592:2597  times */\n      dup3\n        /* \"inviter_presell/stake.sol\":2588:2589  i */\n      dup2\n        /* \"inviter_presell/stake.sol\":2588:2597  i < times */\n      lt\n        /* \"inviter_presell/stake.sol\":2569:2702  for(uint256 i = 0; i < times; ++i) {... */\n      iszero\n      tag_235\n      jumpi\n        /* \"inviter_presell/stake.sol\":2667:2690  rateIntervalDenominator */\n      sload(0x09)\n        /* \"inviter_presell/stake.sol\":2643:2664  rateIntervalNumerator */\n      sload(0x08)\n        /* \"inviter_presell/stake.sol\":2635:2640  value */\n      dup4\n        /* \"inviter_presell/stake.sol\":2635:2664  value * rateIntervalNumerator */\n      tag_237\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_237:\n        /* \"inviter_presell/stake.sol\":2635:2690  value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_238\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_238:\n        /* \"inviter_presell/stake.sol\":2627:2632  value */\n      dup3\n        /* \"inviter_presell/stake.sol\":2627:2690  value - value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_239\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_239:\n        /* \"inviter_presell/stake.sol\":2619:2690  value = value - value * rateIntervalNumerator / rateIntervalDenominator */\n      swap2\n      pop\n        /* \"inviter_presell/stake.sol\":2599:2602  ++i */\n      dup1\n      tag_240\n      swap1\n      tag_228\n      jump\t// in\n    tag_240:\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2569:2702  for(uint256 i = 0; i < times; ++i) {... */\n      jump(tag_234)\n    tag_235:\n      pop\n        /* \"inviter_presell/stake.sol\":2781:2804  rateIntervalDenominator */\n      sload(0x09)\n        /* \"inviter_presell/stake.sol\":2757:2778  rateIntervalNumerator */\n      sload(0x08)\n        /* \"inviter_presell/stake.sol\":2749:2754  value */\n      dup3\n        /* \"inviter_presell/stake.sol\":2749:2778  value * rateIntervalNumerator */\n      tag_241\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_241:\n        /* \"inviter_presell/stake.sol\":2749:2804  value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_242\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_242:\n        /* \"inviter_presell/stake.sol\":2742:2804  return value * rateIntervalNumerator / rateIntervalDenominator */\n      swap3\n      pop\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":2313:2812  function getRewardPool(uint256 time) public view returns (uint256) {... */\n    tag_229:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":636:676  uint256 public rateInterval = 10 seconds */\n    tag_84:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":1869:1962  function totalPowers() external view returns (uint256) {... */\n    tag_87:\n        /* \"inviter_presell/stake.sol\":1915:1922  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":1942:1954  _totalPowers */\n      sload(0x0c)\n        /* \"inviter_presell/stake.sol\":1935:1954  return _totalPowers */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1869:1962  function totalPowers() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1123:1226  function renounceOwnership() public virtual onlyOwner {... */\n    tag_90:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_245\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_176\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_245:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_246\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_116\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_246:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap1\n      tag_180\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_247:\n        /* \"inviter_presell/adminable.sol\":1188:1218  _transferOwnership(address(0)) */\n      tag_250\n        /* \"inviter_presell/adminable.sol\":1215:1216  0 */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1188:1206  _transferOwnership */\n      tag_251\n        /* \"inviter_presell/adminable.sol\":1188:1218  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_250:\n        /* \"inviter_presell/adminable.sol\":1123:1226  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":605:629  uint256 public startTime */\n    tag_92:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":730:775  uint256 public rateIntervalDenominator = 1000 */\n    tag_95:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":4025:4132  function lastTimeRewardApplicable() public view returns (uint256) {... */\n    tag_98:\n        /* \"inviter_presell/stake.sol\":4082:4089  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":4109:4124  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":4102:4124  return block.timestamp */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4025:4132  function lastTimeRewardApplicable() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":961:1014  mapping(address => uint256) public userLastUpdateTime */\n    tag_102:\n      mstore(0x20, 0x0e)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":4140:4488  function rewardPerToken(uint256 rewardRate) public view returns (uint256) {... */\n    tag_106:\n        /* \"inviter_presell/stake.sol\":4205:4212  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":4245:4246  0 */\n      dup1\n        /* \"inviter_presell/stake.sol\":4229:4241  _totalPowers */\n      sload(0x0c)\n        /* \"inviter_presell/stake.sol\":4229:4246  _totalPowers == 0 */\n      sub\n        /* \"inviter_presell/stake.sol\":4225:4302  if (_totalPowers == 0) {... */\n      tag_254\n      jumpi\n        /* \"inviter_presell/stake.sol\":4270:4290  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"inviter_presell/stake.sol\":4263:4290  return rewardPerTokenStored */\n      swap1\n      pop\n      jump(tag_253)\n        /* \"inviter_presell/stake.sol\":4225:4302  if (_totalPowers == 0) {... */\n    tag_254:\n        /* \"inviter_presell/stake.sol\":4332:4480  rewardPerTokenStored.add(... */\n      tag_255\n        /* \"inviter_presell/stake.sol\":4375:4465  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalPowers) */\n      tag_256\n        /* \"inviter_presell/stake.sol\":4452:4464  _totalPowers */\n      sload(0x0c)\n        /* \"inviter_presell/stake.sol\":4375:4447  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18) */\n      tag_257\n        /* \"inviter_presell/stake.sol\":4442:4446  1e18 */\n      0x0de0b6b3a7640000\n        /* \"inviter_presell/stake.sol\":4375:4437  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      tag_258\n        /* \"inviter_presell/stake.sol\":4426:4436  rewardRate */\n      dup8\n        /* \"inviter_presell/stake.sol\":4375:4421  lastTimeRewardApplicable().sub(lastUpdateTime) */\n      tag_259\n        /* \"inviter_presell/stake.sol\":4406:4420  lastUpdateTime */\n      sload(0x0a)\n        /* \"inviter_presell/stake.sol\":4375:4401  lastTimeRewardApplicable() */\n      tag_260\n        /* \"inviter_presell/stake.sol\":4375:4399  lastTimeRewardApplicable */\n      tag_98\n        /* \"inviter_presell/stake.sol\":4375:4401  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_260:\n        /* \"inviter_presell/stake.sol\":4375:4405  lastTimeRewardApplicable().sub */\n      tag_170\n      swap1\n        /* \"inviter_presell/stake.sol\":4375:4421  lastTimeRewardApplicable().sub(lastUpdateTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_259:\n        /* \"inviter_presell/stake.sol\":4375:4425  lastTimeRewardApplicable().sub(lastUpdateTime).mul */\n      tag_171\n      swap1\n        /* \"inviter_presell/stake.sol\":4375:4437  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_258:\n        /* \"inviter_presell/stake.sol\":4375:4441  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul */\n      tag_171\n      swap1\n        /* \"inviter_presell/stake.sol\":4375:4447  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_257:\n        /* \"inviter_presell/stake.sol\":4375:4451  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div */\n      tag_172\n      swap1\n        /* \"inviter_presell/stake.sol\":4375:4465  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalPowers) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_256:\n        /* \"inviter_presell/stake.sol\":4332:4352  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"inviter_presell/stake.sol\":4332:4356  rewardPerTokenStored.add */\n      tag_173\n      swap1\n        /* \"inviter_presell/stake.sol\":4332:4480  rewardPerTokenStored.add(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_255:\n        /* \"inviter_presell/stake.sol\":4312:4480  return... */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4140:4488  function rewardPerToken(uint256 rewardRate) public view returns (uint256) {... */\n    tag_253:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":6847:6952  function setRewardToken(address token) external onlyOwner {... */\n    tag_110:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_262\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_176\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_262:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_263\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_116\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_263:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap1\n      tag_180\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_264:\n        /* \"inviter_presell/stake.sol\":6938:6943  token */\n      dup1\n        /* \"inviter_presell/stake.sol\":6916:6928  rewardsToken */\n      0x03\n      0x00\n        /* \"inviter_presell/stake.sol\":6916:6944  rewardsToken = IERC20(token) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":6847:6952  function setRewardToken(address token) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":897:954  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_113:\n      mstore(0x20, 0x0d)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":909:996  function owner() public view virtual returns (address) {... */\n    tag_116:\n        /* \"inviter_presell/adminable.sol\":955:962  address */\n      0x00\n        /* \"inviter_presell/adminable.sol\":982:988  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":975:988  return _owner */\n      swap1\n      pop\n        /* \"inviter_presell/adminable.sol\":909:996  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2191:2305  function getCurRewardPool() public view returns (uint256) {... */\n    tag_120:\n        /* \"inviter_presell/stake.sol\":2240:2247  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2267:2297  getRewardPool(block.timestamp) */\n      tag_269\n        /* \"inviter_presell/stake.sol\":2281:2296  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":2267:2280  getRewardPool */\n      tag_81\n        /* \"inviter_presell/stake.sol\":2267:2297  getRewardPool(block.timestamp) */\n      jump\t// in\n    tag_269:\n        /* \"inviter_presell/stake.sol\":2260:2297  return getRewardPool(block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2191:2305  function getCurRewardPool() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":1970:2064  function curTime() external  view  returns (uint256) {... */\n    tag_123:\n        /* \"inviter_presell/stake.sol\":2014:2021  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2041:2056  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":2034:2056  return block.timestamp */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1970:2064  function curTime() external  view  returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":7209:7352  function emergencyWithdrawToken(address token, uint256 amount) external onlyOwner {... */\n    tag_128:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_272\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_176\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_272:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_273\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_116\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_273:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap1\n      tag_180\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_274:\n        /* \"inviter_presell/stake.sol\":7309:7314  token */\n      dup2\n        /* \"inviter_presell/stake.sol\":7302:7324  IERC20(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"inviter_presell/stake.sol\":7325:7335  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":7337:7343  amount */\n      dup4\n        /* \"inviter_presell/stake.sol\":7302:7344  IERC20(token).transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap3\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_277:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_279\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_279:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_280\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_280:\n      pop\n        /* \"inviter_presell/stake.sol\":7209:7352  function emergencyWithdrawToken(address token, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":6228:6522  function stake(address user, uint256 amount) external nonReentrant onlyAdmin updateReward(user) {... */\n    tag_131:\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2376:2383  _status */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2376:2395  _status != _ENTERED */\n      sub\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_282\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_283\n      swap1\n      tag_188\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_282:\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2509:2516  _status */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2509:2527  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/adminable.sol\":821:842  isAdmin(_msgSender()) */\n      tag_285\n        /* \"inviter_presell/adminable.sol\":829:841  _msgSender() */\n      tag_286\n        /* \"inviter_presell/adminable.sol\":829:839  _msgSender */\n      tag_176\n        /* \"inviter_presell/adminable.sol\":829:841  _msgSender() */\n      jump\t// in\n    tag_286:\n        /* \"inviter_presell/adminable.sol\":821:828  isAdmin */\n      tag_63\n        /* \"inviter_presell/adminable.sol\":821:842  isAdmin(_msgSender()) */\n      jump\t// in\n    tag_285:\n        /* \"inviter_presell/adminable.sol\":813:881  require(isAdmin(_msgSender()), \"Adminable: caller is not the admin\") */\n      tag_287\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_288\n      swap1\n      tag_210\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_287:\n        /* \"inviter_presell/stake.sol\":6318:6322  user */\n      dup2\n        /* \"inviter_presell/stake.sol\":1188:1200  uint256 time */\n      0x00\n        /* \"inviter_presell/stake.sol\":1203:1221  userLastUpdateTime */\n      0x0e\n        /* \"inviter_presell/stake.sol\":1203:1230  userLastUpdateTime[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1222:1229  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1203:1230  userLastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":1188:1230  uint256 time = userLastUpdateTime[account] */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1252:1261  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":1244:1248  time */\n      dup2\n        /* \"inviter_presell/stake.sol\":1244:1261  time <= startTime */\n      gt\n        /* \"inviter_presell/stake.sol\":1241:1306  if(time <= startTime) {... */\n      tag_290\n      jumpi\n        /* \"inviter_presell/stake.sol\":1285:1294  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":1278:1294  time = startTime */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1241:1306  if(time <= startTime) {... */\n    tag_290:\n        /* \"inviter_presell/stake.sol\":1316:1328  uint256 rate */\n      0x00\n        /* \"inviter_presell/stake.sol\":1331:1376  getTimeWeightedAveRate(time, block.timestamp) */\n      tag_291\n        /* \"inviter_presell/stake.sol\":1354:1358  time */\n      dup3\n        /* \"inviter_presell/stake.sol\":1360:1375  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1331:1353  getTimeWeightedAveRate */\n      tag_153\n        /* \"inviter_presell/stake.sol\":1331:1376  getTimeWeightedAveRate(time, block.timestamp) */\n      jump\t// in\n    tag_291:\n        /* \"inviter_presell/stake.sol\":1316:1376  uint256 rate = getTimeWeightedAveRate(time, block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1410:1430  rewardPerToken(rate) */\n      tag_292\n        /* \"inviter_presell/stake.sol\":1425:1429  rate */\n      dup2\n        /* \"inviter_presell/stake.sol\":1410:1424  rewardPerToken */\n      tag_106\n        /* \"inviter_presell/stake.sol\":1410:1430  rewardPerToken(rate) */\n      jump\t// in\n    tag_292:\n        /* \"inviter_presell/stake.sol\":1387:1407  rewardPerTokenStored */\n      0x0b\n        /* \"inviter_presell/stake.sol\":1387:1430  rewardPerTokenStored = rewardPerToken(rate) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1458:1484  lastTimeRewardApplicable() */\n      tag_293\n        /* \"inviter_presell/stake.sol\":1458:1482  lastTimeRewardApplicable */\n      tag_98\n        /* \"inviter_presell/stake.sol\":1458:1484  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_293:\n        /* \"inviter_presell/stake.sol\":1441:1455  lastUpdateTime */\n      0x0a\n        /* \"inviter_presell/stake.sol\":1441:1484  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1518:1519  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":1499:1520  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/stake.sol\":1499:1506  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1499:1520  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/stake.sol\":1495:1712  if (account != address(0)) {... */\n      tag_294\n      jumpi\n        /* \"inviter_presell/stake.sol\":1556:1571  earned(account) */\n      tag_295\n        /* \"inviter_presell/stake.sol\":1563:1570  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1556:1562  earned */\n      tag_47\n        /* \"inviter_presell/stake.sol\":1556:1571  earned(account) */\n      jump\t// in\n    tag_295:\n        /* \"inviter_presell/stake.sol\":1537:1544  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":1537:1553  rewards[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1545:1552  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":1537:1553  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1537:1571  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1620:1640  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"inviter_presell/stake.sol\":1586:1608  userRewardPerTokenPaid */\n      0x0d\n        /* \"inviter_presell/stake.sol\":1586:1617  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1609:1616  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":1586:1617  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1586:1640  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1685:1700  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1655:1673  userLastUpdateTime */\n      0x0e\n        /* \"inviter_presell/stake.sol\":1655:1682  userLastUpdateTime[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1674:1681  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":1655:1682  userLastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1655:1700  userLastUpdateTime[account] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1495:1712  if (account != address(0)) {... */\n    tag_294:\n        /* \"inviter_presell/stake.sol\":6352:6353  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":6343:6349  amount */\n      dup5\n        /* \"inviter_presell/stake.sol\":6343:6353  amount > 0 */\n      gt\n        /* \"inviter_presell/stake.sol\":6335:6372  require(amount > 0, \"Cannot stake 0\") */\n      tag_297\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap1\n      tag_299\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_297:\n        /* \"inviter_presell/stake.sol\":6398:6422  _totalPowers.add(amount) */\n      tag_300\n        /* \"inviter_presell/stake.sol\":6415:6421  amount */\n      dup5\n        /* \"inviter_presell/stake.sol\":6398:6410  _totalPowers */\n      sload(0x0c)\n        /* \"inviter_presell/stake.sol\":6398:6414  _totalPowers.add */\n      tag_173\n      swap1\n        /* \"inviter_presell/stake.sol\":6398:6422  _totalPowers.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_300:\n        /* \"inviter_presell/stake.sol\":6383:6395  _totalPowers */\n      0x0c\n        /* \"inviter_presell/stake.sol\":6383:6422  _totalPowers = _totalPowers.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":6451:6478  _balances[user].add(amount) */\n      tag_301\n        /* \"inviter_presell/stake.sol\":6471:6477  amount */\n      dup5\n        /* \"inviter_presell/stake.sol\":6451:6460  _balances */\n      0x10\n        /* \"inviter_presell/stake.sol\":6451:6466  _balances[user] */\n      0x00\n        /* \"inviter_presell/stake.sol\":6461:6465  user */\n      dup9\n        /* \"inviter_presell/stake.sol\":6451:6466  _balances[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":6451:6470  _balances[user].add */\n      tag_173\n      swap1\n        /* \"inviter_presell/stake.sol\":6451:6478  _balances[user].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_301:\n        /* \"inviter_presell/stake.sol\":6433:6442  _balances */\n      0x10\n        /* \"inviter_presell/stake.sol\":6433:6448  _balances[user] */\n      0x00\n        /* \"inviter_presell/stake.sol\":6443:6447  user */\n      dup8\n        /* \"inviter_presell/stake.sol\":6433:6448  _balances[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":6433:6478  _balances[user] = _balances[user].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":6501:6505  user */\n      dup5\n        /* \"inviter_presell/stake.sol\":6494:6514  Staked(user, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"inviter_presell/stake.sol\":6507:6513  amount */\n      dup6\n        /* \"inviter_presell/stake.sol\":6494:6514  Staked(user, amount) */\n      mload(0x40)\n      tag_302\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"inviter_presell/stake.sol\":1177:1731  {... */\n      pop\n      pop\n        /* \"inviter_presell/adminable.sol\":892:893  _ */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1734:1735  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2688:2695  _status */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2688:2710  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":6228:6522  function stake(address user, uint256 amount) external nonReentrant onlyAdmin updateReward(user) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2072:2183  function powersOf(address account) external view returns (uint256) {... */\n    tag_134:\n        /* \"inviter_presell/stake.sol\":2130:2137  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2157:2166  _balances */\n      0x10\n        /* \"inviter_presell/stake.sol\":2157:2175  _balances[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":2167:2174  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":2157:2175  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":2150:2175  return _balances[account] */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2072:2183  function powersOf(address account) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":782:811  uint256 public lastUpdateTime */\n    tag_137:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":3670:3785  function getCurRewardRate() public view returns (uint256) {... */\n    tag_140:\n        /* \"inviter_presell/stake.sol\":3719:3726  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":3746:3777  _getRewardRate(block.timestamp) */\n      tag_305\n        /* \"inviter_presell/stake.sol\":3761:3776  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":3746:3760  _getRewardRate */\n      tag_306\n        /* \"inviter_presell/stake.sol\":3746:3777  _getRewardRate(block.timestamp) */\n      jump\t// in\n    tag_305:\n        /* \"inviter_presell/stake.sol\":3739:3777  return _getRewardRate(block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":3670:3785  function getCurRewardRate() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":467:493  IERC20 public rewardsToken */\n    tag_143:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":1021:1071  mapping(address => uint256) public claimedBalances */\n    tag_148:\n      mstore(0x20, 0x0f)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":4835:6218  function getTimeWeightedAveRate(uint256 leftTime, uint256 rightTime) public view returns (uint256){... */\n    tag_153:\n        /* \"inviter_presell/stake.sol\":4925:4932  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":4970:4971  0 */\n      dup1\n        /* \"inviter_presell/stake.sol\":4957:4966  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":4957:4971  startTime == 0 */\n      eq\n        /* \"inviter_presell/stake.sol\":4957:4996  startTime == 0 || leftTime >= rightTime */\n      dup1\n      tag_308\n      jumpi\n      pop\n        /* \"inviter_presell/stake.sol\":4987:4996  rightTime */\n      dup2\n        /* \"inviter_presell/stake.sol\":4975:4983  leftTime */\n      dup4\n        /* \"inviter_presell/stake.sol\":4975:4996  leftTime >= rightTime */\n      lt\n      iszero\n        /* \"inviter_presell/stake.sol\":4957:4996  startTime == 0 || leftTime >= rightTime */\n    tag_308:\n        /* \"inviter_presell/stake.sol\":4957:5013  startTime == 0 || leftTime >= rightTime || leftTime == 0 */\n      dup1\n      tag_309\n      jumpi\n      pop\n        /* \"inviter_presell/stake.sol\":5012:5013  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":5000:5008  leftTime */\n      dup4\n        /* \"inviter_presell/stake.sol\":5000:5013  leftTime == 0 */\n      eq\n        /* \"inviter_presell/stake.sol\":4957:5013  startTime == 0 || leftTime >= rightTime || leftTime == 0 */\n    tag_309:\n        /* \"inviter_presell/stake.sol\":4954:5050  if(startTime == 0 || leftTime >= rightTime || leftTime == 0) {... */\n      iszero\n      tag_310\n      jumpi\n        /* \"inviter_presell/stake.sol\":5037:5038  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":5030:5038  return 0 */\n      swap1\n      pop\n      jump(tag_307)\n        /* \"inviter_presell/stake.sol\":4954:5050  if(startTime == 0 || leftTime >= rightTime || leftTime == 0) {... */\n    tag_310:\n        /* \"inviter_presell/stake.sol\":5076:5085  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":5065:5073  leftTime */\n      dup4\n        /* \"inviter_presell/stake.sol\":5065:5085  leftTime < startTime */\n      lt\n        /* \"inviter_presell/stake.sol\":5062:5134  if(leftTime < startTime) {... */\n      iszero\n      tag_311\n      jumpi\n        /* \"inviter_presell/stake.sol\":5113:5122  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":5102:5122  leftTime = startTime */\n      swap3\n      pop\n        /* \"inviter_presell/stake.sol\":5062:5134  if(leftTime < startTime) {... */\n    tag_311:\n        /* \"inviter_presell/stake.sol\":5146:5166  uint256 leftInterval */\n      0x00\n        /* \"inviter_presell/stake.sol\":5226:5238  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":5210:5222  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":5197:5206  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":5186:5194  leftTime */\n      dup7\n        /* \"inviter_presell/stake.sol\":5186:5206  leftTime - startTime */\n      tag_312\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_312:\n        /* \"inviter_presell/stake.sol\":5185:5222  (leftTime - startTime) % rateInterval */\n      tag_313\n      swap2\n      swap1\n      tag_314\n      jump\t// in\n    tag_313:\n        /* \"inviter_presell/stake.sol\":5170:5182  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":5170:5222  rateInterval - (leftTime - startTime) % rateInterval */\n      tag_315\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_315:\n        /* \"inviter_presell/stake.sol\":5169:5238  (rateInterval - (leftTime - startTime) % rateInterval) % rateInterval */\n      tag_316\n      swap2\n      swap1\n      tag_314\n      jump\t// in\n    tag_316:\n        /* \"inviter_presell/stake.sol\":5146:5238  uint256 leftInterval = (rateInterval - (leftTime - startTime) % rateInterval) % rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5249:5267  uint256 leftReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":5311:5323  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":5296:5308  leftInterval */\n      dup3\n        /* \"inviter_presell/stake.sol\":5270:5293  getRewardPool(leftTime) */\n      tag_317\n        /* \"inviter_presell/stake.sol\":5284:5292  leftTime */\n      dup8\n        /* \"inviter_presell/stake.sol\":5270:5283  getRewardPool */\n      tag_81\n        /* \"inviter_presell/stake.sol\":5270:5293  getRewardPool(leftTime) */\n      jump\t// in\n    tag_317:\n        /* \"inviter_presell/stake.sol\":5270:5308  getRewardPool(leftTime) * leftInterval */\n      tag_318\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_318:\n        /* \"inviter_presell/stake.sol\":5270:5323  getRewardPool(leftTime) * leftInterval / rateInterval */\n      tag_319\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_319:\n        /* \"inviter_presell/stake.sol\":5249:5323  uint256 leftReward = getRewardPool(leftTime) * leftInterval / rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5336:5357  uint256 rightInterval */\n      0x00\n        /* \"inviter_presell/stake.sol\":5386:5398  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":5373:5382  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":5361:5370  rightTime */\n      dup7\n        /* \"inviter_presell/stake.sol\":5361:5382  rightTime - startTime */\n      tag_320\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_320:\n        /* \"inviter_presell/stake.sol\":5360:5398  (rightTime - startTime) % rateInterval */\n      tag_321\n      swap2\n      swap1\n      tag_314\n      jump\t// in\n    tag_321:\n        /* \"inviter_presell/stake.sol\":5336:5398  uint256 rightInterval = (rightTime - startTime) % rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5409:5428  uint256 rightReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":5474:5486  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":5458:5471  rightInterval */\n      dup3\n        /* \"inviter_presell/stake.sol\":5431:5455  getRewardPool(rightTime) */\n      tag_322\n        /* \"inviter_presell/stake.sol\":5445:5454  rightTime */\n      dup9\n        /* \"inviter_presell/stake.sol\":5431:5444  getRewardPool */\n      tag_81\n        /* \"inviter_presell/stake.sol\":5431:5455  getRewardPool(rightTime) */\n      jump\t// in\n    tag_322:\n        /* \"inviter_presell/stake.sol\":5431:5471  getRewardPool(rightTime) * rightInterval */\n      tag_323\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_323:\n        /* \"inviter_presell/stake.sol\":5431:5486  getRewardPool(rightTime) * rightInterval / rateInterval */\n      tag_324\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_324:\n        /* \"inviter_presell/stake.sol\":5409:5486  uint256 rightReward = getRewardPool(rightTime) * rightInterval / rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5528:5537  rightTime */\n      dup6\n        /* \"inviter_presell/stake.sol\":5513:5525  leftInterval */\n      dup5\n        /* \"inviter_presell/stake.sol\":5502:5510  leftTime */\n      dup9\n        /* \"inviter_presell/stake.sol\":5502:5525  leftTime + leftInterval */\n      tag_325\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_325:\n        /* \"inviter_presell/stake.sol\":5502:5537  leftTime + leftInterval > rightTime */\n      gt\n        /* \"inviter_presell/stake.sol\":5499:5597  if(leftTime + leftInterval > rightTime) {... */\n      iszero\n      tag_326\n      jumpi\n        /* \"inviter_presell/stake.sol\":5561:5585  _getRewardRate(leftTime) */\n      tag_327\n        /* \"inviter_presell/stake.sol\":5576:5584  leftTime */\n      dup8\n        /* \"inviter_presell/stake.sol\":5561:5575  _getRewardRate */\n      tag_306\n        /* \"inviter_presell/stake.sol\":5561:5585  _getRewardRate(leftTime) */\n      jump\t// in\n    tag_327:\n        /* \"inviter_presell/stake.sol\":5554:5585  return _getRewardRate(leftTime) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_307)\n        /* \"inviter_presell/stake.sol\":5499:5597  if(leftTime + leftInterval > rightTime) {... */\n    tag_326:\n        /* \"inviter_presell/stake.sol\":5609:5628  uint256 midInterval */\n      0x00\n        /* \"inviter_presell/stake.sol\":5670:5682  leftInterval */\n      dup5\n        /* \"inviter_presell/stake.sol\":5659:5667  leftTime */\n      dup9\n        /* \"inviter_presell/stake.sol\":5643:5656  rightInterval */\n      dup5\n        /* \"inviter_presell/stake.sol\":5631:5640  rightTime */\n      dup10\n        /* \"inviter_presell/stake.sol\":5631:5656  rightTime - rightInterval */\n      tag_328\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_328:\n        /* \"inviter_presell/stake.sol\":5631:5667  rightTime - rightInterval - leftTime */\n      tag_329\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_329:\n        /* \"inviter_presell/stake.sol\":5631:5682  rightTime - rightInterval - leftTime - leftInterval */\n      tag_330\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_330:\n        /* \"inviter_presell/stake.sol\":5609:5682  uint256 midInterval = rightTime - rightInterval - leftTime - leftInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5693:5712  uint256 startReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":5715:5738  getRemainPool(leftTime) */\n      tag_331\n        /* \"inviter_presell/stake.sol\":5729:5737  leftTime */\n      dup10\n        /* \"inviter_presell/stake.sol\":5715:5728  getRemainPool */\n      tag_77\n        /* \"inviter_presell/stake.sol\":5715:5738  getRemainPool(leftTime) */\n      jump\t// in\n    tag_331:\n        /* \"inviter_presell/stake.sol\":5693:5738  uint256 startReward = getRemainPool(leftTime) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5750:5772  uint256 midTotalReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":5787:5805  uint256 nextReward */\n      dup1\n        /* \"inviter_presell/stake.sol\":5820:5833  uint256 value */\n      0x00\n        /* \"inviter_presell/stake.sol\":5836:5847  startReward */\n      dup4\n        /* \"inviter_presell/stake.sol\":5820:5847  uint256 value = startReward */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5858:5871  uint256 times */\n      0x00\n        /* \"inviter_presell/stake.sol\":5888:5900  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":5874:5885  midInterval */\n      dup7\n        /* \"inviter_presell/stake.sol\":5874:5900  midInterval / rateInterval */\n      tag_332\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_332:\n        /* \"inviter_presell/stake.sol\":5858:5900  uint256 times = midInterval / rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5915:5924  uint256 i */\n      0x00\n        /* \"inviter_presell/stake.sol\":5911:6125  for(uint256 i = 0; i < times; ++i) {... */\n    tag_333:\n        /* \"inviter_presell/stake.sol\":5934:5939  times */\n      dup2\n        /* \"inviter_presell/stake.sol\":5930:5931  i */\n      dup2\n        /* \"inviter_presell/stake.sol\":5930:5939  i < times */\n      lt\n        /* \"inviter_presell/stake.sol\":5911:6125  for(uint256 i = 0; i < times; ++i) {... */\n      iszero\n      tag_334\n      jumpi\n        /* \"inviter_presell/stake.sol\":6006:6029  rateIntervalDenominator */\n      sload(0x09)\n        /* \"inviter_presell/stake.sol\":5982:6003  rateIntervalNumerator */\n      sload(0x08)\n        /* \"inviter_presell/stake.sol\":5974:5979  value */\n      dup5\n        /* \"inviter_presell/stake.sol\":5974:6003  value * rateIntervalNumerator */\n      tag_336\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_336:\n        /* \"inviter_presell/stake.sol\":5974:6029  value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_337\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_337:\n        /* \"inviter_presell/stake.sol\":5961:6029  nextReward = value * rateIntervalNumerator / rateIntervalDenominator */\n      swap4\n      pop\n        /* \"inviter_presell/stake.sol\":6060:6070  nextReward */\n      dup4\n        /* \"inviter_presell/stake.sol\":6052:6057  value */\n      dup4\n        /* \"inviter_presell/stake.sol\":6052:6070  value - nextReward */\n      tag_338\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_338:\n        /* \"inviter_presell/stake.sol\":6044:6070  value = value - nextReward */\n      swap3\n      pop\n        /* \"inviter_presell/stake.sol\":6103:6113  nextReward */\n      dup4\n        /* \"inviter_presell/stake.sol\":6085:6113  midTotalReward += nextReward */\n      dup6\n      tag_339\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_339:\n      swap5\n      pop\n        /* \"inviter_presell/stake.sol\":5941:5944  ++i */\n      dup1\n      tag_340\n      swap1\n      tag_228\n      jump\t// in\n    tag_340:\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5911:6125  for(uint256 i = 0; i < times; ++i) {... */\n      jump(tag_333)\n    tag_334:\n      pop\n        /* \"inviter_presell/stake.sol\":6201:6209  leftTime */\n      dup13\n        /* \"inviter_presell/stake.sol\":6189:6198  rightTime */\n      dup13\n        /* \"inviter_presell/stake.sol\":6189:6209  rightTime - leftTime */\n      tag_341\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_341:\n        /* \"inviter_presell/stake.sol\":6173:6184  rightReward */\n      dup8\n        /* \"inviter_presell/stake.sol\":6160:6170  leftReward */\n      dup11\n        /* \"inviter_presell/stake.sol\":6143:6157  midTotalReward */\n      dup7\n        /* \"inviter_presell/stake.sol\":6143:6170  midTotalReward + leftReward */\n      tag_342\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_342:\n        /* \"inviter_presell/stake.sol\":6143:6184  midTotalReward + leftReward + rightReward */\n      tag_343\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_343:\n        /* \"inviter_presell/stake.sol\":6142:6210  (midTotalReward + leftReward + rightReward) / (rightTime - leftTime) */\n      tag_344\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_344:\n        /* \"inviter_presell/stake.sol\":6135:6210  return (midTotalReward + leftReward + rightReward) / (rightTime - leftTime) */\n      swap11\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":4835:6218  function getTimeWeightedAveRate(uint256 leftTime, uint256 rightTime) public view returns (uint256){... */\n    tag_307:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":7086:7201  function emergencyWithdraw() external onlyOwner {... */\n    tag_156:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_346\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_176\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_346:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_347\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_116\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_347:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_348\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_349\n      swap1\n      tag_180\n      jump\t// in\n    tag_349:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_348:\n        /* \"inviter_presell/stake.sol\":7153:7160  owner() */\n      tag_351\n        /* \"inviter_presell/stake.sol\":7153:7158  owner */\n      tag_116\n        /* \"inviter_presell/stake.sol\":7153:7160  owner() */\n      jump\t// in\n    tag_351:\n        /* \"inviter_presell/stake.sol\":7145:7170  payable(owner()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/stake.sol\":7145:7193  payable(owner()).transfer(address(this).balance) */\n      0x08fc\n        /* \"inviter_presell/stake.sol\":7171:7192  address(this).balance */\n      selfbalance\n        /* \"inviter_presell/stake.sol\":7145:7193  payable(owner()).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_353\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_353:\n      pop\n        /* \"inviter_presell/stake.sol\":7086:7201  function emergencyWithdraw() external onlyOwner {... */\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":818:853  uint256 public rewardPerTokenStored */\n    tag_158:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1234:1435  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_162:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_355\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_176\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_355:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_356\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_116\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_356:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_357\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_358\n      swap1\n      tag_180\n      jump\t// in\n    tag_358:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_357:\n        /* \"inviter_presell/adminable.sol\":1343:1344  0 */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1323:1345  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":1323:1331  newOwner */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1323:1345  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"inviter_presell/adminable.sol\":1315:1388  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_360\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_361\n      swap1\n      tag_362\n      jump\t// in\n    tag_361:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_360:\n        /* \"inviter_presell/adminable.sol\":1399:1427  _transferOwnership(newOwner) */\n      tag_363\n        /* \"inviter_presell/adminable.sol\":1418:1426  newOwner */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1399:1417  _transferOwnership */\n      tag_251\n        /* \"inviter_presell/adminable.sol\":1399:1427  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_363:\n        /* \"inviter_presell/adminable.sol\":1234:1435  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3214:3312  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_170:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3272:3279  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3303:3304  b */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3299:3300  a */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3299:3304  a - b */\n      tag_365\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_365:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3292:3304  return a - b */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3214:3312  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3571:3669  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_171:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3629:3636  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3660:3661  b */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3656:3657  a */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3656:3661  a * b */\n      tag_367\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_367:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3649:3661  return a * b */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3571:3669  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3970:4068  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_172:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":4028:4035  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":4059:4060  b */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":4055:4056  a */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":4055:4060  a / b */\n      tag_369\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_369:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":4048:4060  return a / b */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3970:4068  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2833:2931  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_173:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2891:2898  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2922:2923  b */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2918:2919  a */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2918:2923  a + b */\n      tag_371\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_371:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2911:2923  return a + b */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2833:2931  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":63:161  function _msgSender() internal view virtual returns (address) {... */\n    tag_176:\n        /* \"inviter_presell/adminable.sol\":116:123  address */\n      0x00\n        /* \"inviter_presell/adminable.sol\":143:153  msg.sender */\n      caller\n        /* \"inviter_presell/adminable.sol\":136:153  return msg.sender */\n      swap1\n      pop\n        /* \"inviter_presell/adminable.sol\":63:161  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1443:1634  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_251:\n        /* \"inviter_presell/adminable.sol\":1517:1533  address oldOwner */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1536:1542  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":1517:1542  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"inviter_presell/adminable.sol\":1562:1570  newOwner */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1553:1559  _owner */\n      0x01\n      0x00\n        /* \"inviter_presell/adminable.sol\":1553:1570  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/adminable.sol\":1617:1625  newOwner */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":1607:1615  oldOwner */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"inviter_presell/adminable.sol\":1506:1634  {... */\n      pop\n        /* \"inviter_presell/adminable.sol\":1443:1634  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":3793:4015  function _getRewardRate(uint256 time) private view returns (uint256) {... */\n    tag_306:\n        /* \"inviter_presell/stake.sol\":3853:3860  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":3873:3894  uint256 curPoolAmount */\n      dup1\n        /* \"inviter_presell/stake.sol\":3897:3916  getRewardPool(time) */\n      tag_375\n        /* \"inviter_presell/stake.sol\":3911:3915  time */\n      dup4\n        /* \"inviter_presell/stake.sol\":3897:3910  getRewardPool */\n      tag_81\n        /* \"inviter_presell/stake.sol\":3897:3916  getRewardPool(time) */\n      jump\t// in\n    tag_375:\n        /* \"inviter_presell/stake.sol\":3873:3916  uint256 curPoolAmount = getRewardPool(time) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":3927:3945  uint256 rewardRate */\n      0x00\n        /* \"inviter_presell/stake.sol\":3948:3979  curPoolAmount.div(rateInterval) */\n      tag_376\n        /* \"inviter_presell/stake.sol\":3966:3978  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":3948:3961  curPoolAmount */\n      dup4\n        /* \"inviter_presell/stake.sol\":3948:3965  curPoolAmount.div */\n      tag_172\n      swap1\n        /* \"inviter_presell/stake.sol\":3948:3979  curPoolAmount.div(rateInterval) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_376:\n        /* \"inviter_presell/stake.sol\":3927:3979  uint256 rewardRate = curPoolAmount.div(rateInterval) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":3997:4007  rewardRate */\n      dup1\n        /* \"inviter_presell/stake.sol\":3990:4007  return rewardRate */\n      swap3\n      pop\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":3793:4015  function _getRewardRate(uint256 time) private view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_378:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_380:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_381:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_418\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_380\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_382:\n        /* \"#utility.yul\":641:665   */\n      tag_420\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_381\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_421\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_421:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_383:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_423\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_382\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_46:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_426\n      tag_378\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":917:1036   */\n    tag_425:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_427\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_383\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_384:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_385:\n        /* \"#utility.yul\":1346:1370   */\n      tag_430\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_384\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_49:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_432\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_385\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1701   */\n    tag_386:\n        /* \"#utility.yul\":1645:1652   */\n      0x00\n        /* \"#utility.yul\":1688:1693   */\n      dup2\n        /* \"#utility.yul\":1681:1694   */\n      iszero\n        /* \"#utility.yul\":1674:1695   */\n      iszero\n        /* \"#utility.yul\":1663:1695   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1707:1823   */\n    tag_387:\n        /* \"#utility.yul\":1777:1798   */\n      tag_435\n        /* \"#utility.yul\":1792:1797   */\n      dup2\n        /* \"#utility.yul\":1777:1798   */\n      tag_386\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":1770:1775   */\n      dup2\n        /* \"#utility.yul\":1767:1799   */\n      eq\n        /* \"#utility.yul\":1757:1817   */\n      tag_436\n      jumpi\n        /* \"#utility.yul\":1813:1814   */\n      0x00\n        /* \"#utility.yul\":1810:1811   */\n      dup1\n        /* \"#utility.yul\":1803:1815   */\n      revert\n        /* \"#utility.yul\":1757:1817   */\n    tag_436:\n        /* \"#utility.yul\":1707:1823   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1829:1962   */\n    tag_388:\n        /* \"#utility.yul\":1872:1877   */\n      0x00\n        /* \"#utility.yul\":1910:1916   */\n      dup2\n        /* \"#utility.yul\":1897:1917   */\n      calldataload\n        /* \"#utility.yul\":1888:1917   */\n      swap1\n      pop\n        /* \"#utility.yul\":1926:1956   */\n      tag_438\n        /* \"#utility.yul\":1950:1955   */\n      dup2\n        /* \"#utility.yul\":1926:1956   */\n      tag_387\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":1829:1962   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1968:2436   */\n    tag_59:\n        /* \"#utility.yul\":2033:2039   */\n      0x00\n        /* \"#utility.yul\":2041:2047   */\n      dup1\n        /* \"#utility.yul\":2090:2092   */\n      0x40\n        /* \"#utility.yul\":2078:2087   */\n      dup4\n        /* \"#utility.yul\":2069:2076   */\n      dup6\n        /* \"#utility.yul\":2065:2088   */\n      sub\n        /* \"#utility.yul\":2061:2093   */\n      slt\n        /* \"#utility.yul\":2058:2177   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":2096:2175   */\n      tag_441\n      tag_378\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":2058:2177   */\n    tag_440:\n        /* \"#utility.yul\":2216:2217   */\n      0x00\n        /* \"#utility.yul\":2241:2294   */\n      tag_442\n        /* \"#utility.yul\":2286:2293   */\n      dup6\n        /* \"#utility.yul\":2277:2283   */\n      dup3\n        /* \"#utility.yul\":2266:2275   */\n      dup7\n        /* \"#utility.yul\":2262:2284   */\n      add\n        /* \"#utility.yul\":2241:2294   */\n      tag_383\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":2231:2294   */\n      swap3\n      pop\n        /* \"#utility.yul\":2187:2304   */\n      pop\n        /* \"#utility.yul\":2343:2345   */\n      0x20\n        /* \"#utility.yul\":2369:2419   */\n      tag_443\n        /* \"#utility.yul\":2411:2418   */\n      dup6\n        /* \"#utility.yul\":2402:2408   */\n      dup3\n        /* \"#utility.yul\":2391:2400   */\n      dup7\n        /* \"#utility.yul\":2387:2409   */\n      add\n        /* \"#utility.yul\":2369:2419   */\n      tag_388\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":2359:2419   */\n      swap2\n      pop\n        /* \"#utility.yul\":2314:2429   */\n      pop\n        /* \"#utility.yul\":1968:2436   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2442:2551   */\n    tag_389:\n        /* \"#utility.yul\":2523:2544   */\n      tag_445\n        /* \"#utility.yul\":2538:2543   */\n      dup2\n        /* \"#utility.yul\":2523:2544   */\n      tag_386\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":2518:2521   */\n      dup3\n        /* \"#utility.yul\":2511:2545   */\n      mstore\n        /* \"#utility.yul\":2442:2551   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2557:2767   */\n    tag_65:\n        /* \"#utility.yul\":2644:2648   */\n      0x00\n        /* \"#utility.yul\":2682:2684   */\n      0x20\n        /* \"#utility.yul\":2671:2680   */\n      dup3\n        /* \"#utility.yul\":2667:2685   */\n      add\n        /* \"#utility.yul\":2659:2685   */\n      swap1\n      pop\n        /* \"#utility.yul\":2695:2760   */\n      tag_447\n        /* \"#utility.yul\":2757:2758   */\n      0x00\n        /* \"#utility.yul\":2746:2755   */\n      dup4\n        /* \"#utility.yul\":2742:2759   */\n      add\n        /* \"#utility.yul\":2733:2739   */\n      dup5\n        /* \"#utility.yul\":2695:2760   */\n      tag_389\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":2557:2767   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2773:2895   */\n    tag_390:\n        /* \"#utility.yul\":2846:2870   */\n      tag_449\n        /* \"#utility.yul\":2864:2869   */\n      dup2\n        /* \"#utility.yul\":2846:2870   */\n      tag_384\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":2839:2844   */\n      dup2\n        /* \"#utility.yul\":2836:2871   */\n      eq\n        /* \"#utility.yul\":2826:2889   */\n      tag_450\n      jumpi\n        /* \"#utility.yul\":2885:2886   */\n      0x00\n        /* \"#utility.yul\":2882:2883   */\n      dup1\n        /* \"#utility.yul\":2875:2887   */\n      revert\n        /* \"#utility.yul\":2826:2889   */\n    tag_450:\n        /* \"#utility.yul\":2773:2895   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2901:3040   */\n    tag_391:\n        /* \"#utility.yul\":2947:2952   */\n      0x00\n        /* \"#utility.yul\":2985:2991   */\n      dup2\n        /* \"#utility.yul\":2972:2992   */\n      calldataload\n        /* \"#utility.yul\":2963:2992   */\n      swap1\n      pop\n        /* \"#utility.yul\":3001:3034   */\n      tag_452\n        /* \"#utility.yul\":3028:3033   */\n      dup2\n        /* \"#utility.yul\":3001:3034   */\n      tag_390\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":2901:3040   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3046:3375   */\n    tag_73:\n        /* \"#utility.yul\":3105:3111   */\n      0x00\n        /* \"#utility.yul\":3154:3156   */\n      0x20\n        /* \"#utility.yul\":3142:3151   */\n      dup3\n        /* \"#utility.yul\":3133:3140   */\n      dup5\n        /* \"#utility.yul\":3129:3152   */\n      sub\n        /* \"#utility.yul\":3125:3157   */\n      slt\n        /* \"#utility.yul\":3122:3241   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":3160:3239   */\n      tag_455\n      tag_378\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":3122:3241   */\n    tag_454:\n        /* \"#utility.yul\":3280:3281   */\n      0x00\n        /* \"#utility.yul\":3305:3358   */\n      tag_456\n        /* \"#utility.yul\":3350:3357   */\n      dup5\n        /* \"#utility.yul\":3341:3347   */\n      dup3\n        /* \"#utility.yul\":3330:3339   */\n      dup6\n        /* \"#utility.yul\":3326:3348   */\n      add\n        /* \"#utility.yul\":3305:3358   */\n      tag_391\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":3295:3358   */\n      swap2\n      pop\n        /* \"#utility.yul\":3251:3368   */\n      pop\n        /* \"#utility.yul\":3046:3375   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3381:3499   */\n    tag_392:\n        /* \"#utility.yul\":3468:3492   */\n      tag_458\n        /* \"#utility.yul\":3486:3491   */\n      dup2\n        /* \"#utility.yul\":3468:3492   */\n      tag_381\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":3463:3466   */\n      dup3\n        /* \"#utility.yul\":3456:3493   */\n      mstore\n        /* \"#utility.yul\":3381:3499   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3505:3727   */\n    tag_118:\n        /* \"#utility.yul\":3598:3602   */\n      0x00\n        /* \"#utility.yul\":3636:3638   */\n      0x20\n        /* \"#utility.yul\":3625:3634   */\n      dup3\n        /* \"#utility.yul\":3621:3639   */\n      add\n        /* \"#utility.yul\":3613:3639   */\n      swap1\n      pop\n        /* \"#utility.yul\":3649:3720   */\n      tag_460\n        /* \"#utility.yul\":3717:3718   */\n      0x00\n        /* \"#utility.yul\":3706:3715   */\n      dup4\n        /* \"#utility.yul\":3702:3719   */\n      add\n        /* \"#utility.yul\":3693:3699   */\n      dup5\n        /* \"#utility.yul\":3649:3720   */\n      tag_392\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":3505:3727   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3733:4207   */\n    tag_127:\n        /* \"#utility.yul\":3801:3807   */\n      0x00\n        /* \"#utility.yul\":3809:3815   */\n      dup1\n        /* \"#utility.yul\":3858:3860   */\n      0x40\n        /* \"#utility.yul\":3846:3855   */\n      dup4\n        /* \"#utility.yul\":3837:3844   */\n      dup6\n        /* \"#utility.yul\":3833:3856   */\n      sub\n        /* \"#utility.yul\":3829:3861   */\n      slt\n        /* \"#utility.yul\":3826:3945   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":3864:3943   */\n      tag_463\n      tag_378\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":3826:3945   */\n    tag_462:\n        /* \"#utility.yul\":3984:3985   */\n      0x00\n        /* \"#utility.yul\":4009:4062   */\n      tag_464\n        /* \"#utility.yul\":4054:4061   */\n      dup6\n        /* \"#utility.yul\":4045:4051   */\n      dup3\n        /* \"#utility.yul\":4034:4043   */\n      dup7\n        /* \"#utility.yul\":4030:4052   */\n      add\n        /* \"#utility.yul\":4009:4062   */\n      tag_383\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":3999:4062   */\n      swap3\n      pop\n        /* \"#utility.yul\":3955:4072   */\n      pop\n        /* \"#utility.yul\":4111:4113   */\n      0x20\n        /* \"#utility.yul\":4137:4190   */\n      tag_465\n        /* \"#utility.yul\":4182:4189   */\n      dup6\n        /* \"#utility.yul\":4173:4179   */\n      dup3\n        /* \"#utility.yul\":4162:4171   */\n      dup7\n        /* \"#utility.yul\":4158:4180   */\n      add\n        /* \"#utility.yul\":4137:4190   */\n      tag_391\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":4127:4190   */\n      swap2\n      pop\n        /* \"#utility.yul\":4082:4200   */\n      pop\n        /* \"#utility.yul\":3733:4207   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4213:4273   */\n    tag_393:\n        /* \"#utility.yul\":4241:4244   */\n      0x00\n        /* \"#utility.yul\":4262:4267   */\n      dup2\n        /* \"#utility.yul\":4255:4267   */\n      swap1\n      pop\n        /* \"#utility.yul\":4213:4273   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4279:4421   */\n    tag_394:\n        /* \"#utility.yul\":4329:4338   */\n      0x00\n        /* \"#utility.yul\":4362:4415   */\n      tag_468\n        /* \"#utility.yul\":4380:4414   */\n      tag_469\n        /* \"#utility.yul\":4389:4413   */\n      tag_470\n        /* \"#utility.yul\":4407:4412   */\n      dup5\n        /* \"#utility.yul\":4389:4413   */\n      tag_380\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":4380:4414   */\n      tag_393\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":4362:4415   */\n      tag_380\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":4349:4415   */\n      swap1\n      pop\n        /* \"#utility.yul\":4279:4421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4427:4553   */\n    tag_395:\n        /* \"#utility.yul\":4477:4486   */\n      0x00\n        /* \"#utility.yul\":4510:4547   */\n      tag_472\n        /* \"#utility.yul\":4541:4546   */\n      dup3\n        /* \"#utility.yul\":4510:4547   */\n      tag_394\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":4497:4547   */\n      swap1\n      pop\n        /* \"#utility.yul\":4427:4553   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4559:4700   */\n    tag_396:\n        /* \"#utility.yul\":4624:4633   */\n      0x00\n        /* \"#utility.yul\":4657:4694   */\n      tag_474\n        /* \"#utility.yul\":4688:4693   */\n      dup3\n        /* \"#utility.yul\":4657:4694   */\n      tag_395\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":4644:4694   */\n      swap1\n      pop\n        /* \"#utility.yul\":4559:4700   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4706:4867   */\n    tag_397:\n        /* \"#utility.yul\":4808:4860   */\n      tag_476\n        /* \"#utility.yul\":4854:4859   */\n      dup2\n        /* \"#utility.yul\":4808:4860   */\n      tag_396\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":4803:4806   */\n      dup3\n        /* \"#utility.yul\":4796:4861   */\n      mstore\n        /* \"#utility.yul\":4706:4867   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4873:5125   */\n    tag_145:\n        /* \"#utility.yul\":4981:4985   */\n      0x00\n        /* \"#utility.yul\":5019:5021   */\n      0x20\n        /* \"#utility.yul\":5008:5017   */\n      dup3\n        /* \"#utility.yul\":5004:5022   */\n      add\n        /* \"#utility.yul\":4996:5022   */\n      swap1\n      pop\n        /* \"#utility.yul\":5032:5118   */\n      tag_478\n        /* \"#utility.yul\":5115:5116   */\n      0x00\n        /* \"#utility.yul\":5104:5113   */\n      dup4\n        /* \"#utility.yul\":5100:5117   */\n      add\n        /* \"#utility.yul\":5091:5097   */\n      dup5\n        /* \"#utility.yul\":5032:5118   */\n      tag_397\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":4873:5125   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5131:5605   */\n    tag_152:\n        /* \"#utility.yul\":5199:5205   */\n      0x00\n        /* \"#utility.yul\":5207:5213   */\n      dup1\n        /* \"#utility.yul\":5256:5258   */\n      0x40\n        /* \"#utility.yul\":5244:5253   */\n      dup4\n        /* \"#utility.yul\":5235:5242   */\n      dup6\n        /* \"#utility.yul\":5231:5254   */\n      sub\n        /* \"#utility.yul\":5227:5259   */\n      slt\n        /* \"#utility.yul\":5224:5343   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":5262:5341   */\n      tag_481\n      tag_378\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":5224:5343   */\n    tag_480:\n        /* \"#utility.yul\":5382:5383   */\n      0x00\n        /* \"#utility.yul\":5407:5460   */\n      tag_482\n        /* \"#utility.yul\":5452:5459   */\n      dup6\n        /* \"#utility.yul\":5443:5449   */\n      dup3\n        /* \"#utility.yul\":5432:5441   */\n      dup7\n        /* \"#utility.yul\":5428:5450   */\n      add\n        /* \"#utility.yul\":5407:5460   */\n      tag_391\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":5397:5460   */\n      swap3\n      pop\n        /* \"#utility.yul\":5353:5470   */\n      pop\n        /* \"#utility.yul\":5509:5511   */\n      0x20\n        /* \"#utility.yul\":5535:5588   */\n      tag_483\n        /* \"#utility.yul\":5580:5587   */\n      dup6\n        /* \"#utility.yul\":5571:5577   */\n      dup3\n        /* \"#utility.yul\":5560:5569   */\n      dup7\n        /* \"#utility.yul\":5556:5578   */\n      add\n        /* \"#utility.yul\":5535:5588   */\n      tag_391\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":5525:5588   */\n      swap2\n      pop\n        /* \"#utility.yul\":5480:5598   */\n      pop\n        /* \"#utility.yul\":5131:5605   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5611:5780   */\n    tag_398:\n        /* \"#utility.yul\":5695:5706   */\n      0x00\n        /* \"#utility.yul\":5729:5735   */\n      dup3\n        /* \"#utility.yul\":5724:5727   */\n      dup3\n        /* \"#utility.yul\":5717:5736   */\n      mstore\n        /* \"#utility.yul\":5769:5773   */\n      0x20\n        /* \"#utility.yul\":5764:5767   */\n      dup3\n        /* \"#utility.yul\":5760:5774   */\n      add\n        /* \"#utility.yul\":5745:5774   */\n      swap1\n      pop\n        /* \"#utility.yul\":5611:5780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5786:6007   */\n    tag_399:\n        /* \"#utility.yul\":5926:5960   */\n      0x41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e\n        /* \"#utility.yul\":5922:5923   */\n      0x00\n        /* \"#utility.yul\":5914:5920   */\n      dup3\n        /* \"#utility.yul\":5910:5924   */\n      add\n        /* \"#utility.yul\":5903:5961   */\n      mstore\n        /* \"#utility.yul\":5995:5999   */\n      0x6572000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5990:5992   */\n      0x20\n        /* \"#utility.yul\":5982:5988   */\n      dup3\n        /* \"#utility.yul\":5978:5993   */\n      add\n        /* \"#utility.yul\":5971:6000   */\n      mstore\n        /* \"#utility.yul\":5786:6007   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6013:6379   */\n    tag_400:\n        /* \"#utility.yul\":6155:6158   */\n      0x00\n        /* \"#utility.yul\":6176:6243   */\n      tag_487\n        /* \"#utility.yul\":6240:6242   */\n      0x22\n        /* \"#utility.yul\":6235:6238   */\n      dup4\n        /* \"#utility.yul\":6176:6243   */\n      tag_398\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":6169:6243   */\n      swap2\n      pop\n        /* \"#utility.yul\":6252:6345   */\n      tag_488\n        /* \"#utility.yul\":6341:6344   */\n      dup3\n        /* \"#utility.yul\":6252:6345   */\n      tag_399\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":6370:6372   */\n      0x40\n        /* \"#utility.yul\":6365:6368   */\n      dup3\n        /* \"#utility.yul\":6361:6373   */\n      add\n        /* \"#utility.yul\":6354:6373   */\n      swap1\n      pop\n        /* \"#utility.yul\":6013:6379   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6385:6804   */\n    tag_180:\n        /* \"#utility.yul\":6551:6555   */\n      0x00\n        /* \"#utility.yul\":6589:6591   */\n      0x20\n        /* \"#utility.yul\":6578:6587   */\n      dup3\n        /* \"#utility.yul\":6574:6592   */\n      add\n        /* \"#utility.yul\":6566:6592   */\n      swap1\n      pop\n        /* \"#utility.yul\":6638:6647   */\n      dup2\n        /* \"#utility.yul\":6632:6636   */\n      dup2\n        /* \"#utility.yul\":6628:6648   */\n      sub\n        /* \"#utility.yul\":6624:6625   */\n      0x00\n        /* \"#utility.yul\":6613:6622   */\n      dup4\n        /* \"#utility.yul\":6609:6626   */\n      add\n        /* \"#utility.yul\":6602:6649   */\n      mstore\n        /* \"#utility.yul\":6666:6797   */\n      tag_490\n        /* \"#utility.yul\":6792:6796   */\n      dup2\n        /* \"#utility.yul\":6666:6797   */\n      tag_400\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":6658:6797   */\n      swap1\n      pop\n        /* \"#utility.yul\":6385:6804   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6810:7118   */\n    tag_183:\n        /* \"#utility.yul\":6919:6923   */\n      0x00\n        /* \"#utility.yul\":6957:6959   */\n      0x40\n        /* \"#utility.yul\":6946:6955   */\n      dup3\n        /* \"#utility.yul\":6942:6960   */\n      add\n        /* \"#utility.yul\":6934:6960   */\n      swap1\n      pop\n        /* \"#utility.yul\":6970:7035   */\n      tag_492\n        /* \"#utility.yul\":7032:7033   */\n      0x00\n        /* \"#utility.yul\":7021:7030   */\n      dup4\n        /* \"#utility.yul\":7017:7034   */\n      add\n        /* \"#utility.yul\":7008:7014   */\n      dup6\n        /* \"#utility.yul\":6970:7035   */\n      tag_389\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":7045:7111   */\n      tag_493\n        /* \"#utility.yul\":7107:7109   */\n      0x20\n        /* \"#utility.yul\":7096:7105   */\n      dup4\n        /* \"#utility.yul\":7092:7110   */\n      add\n        /* \"#utility.yul\":7083:7089   */\n      dup5\n        /* \"#utility.yul\":7045:7111   */\n      tag_389\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":6810:7118   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7124:7305   */\n    tag_401:\n        /* \"#utility.yul\":7264:7297   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":7260:7261   */\n      0x00\n        /* \"#utility.yul\":7252:7258   */\n      dup3\n        /* \"#utility.yul\":7248:7262   */\n      add\n        /* \"#utility.yul\":7241:7298   */\n      mstore\n        /* \"#utility.yul\":7124:7305   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7311:7677   */\n    tag_402:\n        /* \"#utility.yul\":7453:7456   */\n      0x00\n        /* \"#utility.yul\":7474:7541   */\n      tag_496\n        /* \"#utility.yul\":7538:7540   */\n      0x1f\n        /* \"#utility.yul\":7533:7536   */\n      dup4\n        /* \"#utility.yul\":7474:7541   */\n      tag_398\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":7467:7541   */\n      swap2\n      pop\n        /* \"#utility.yul\":7550:7643   */\n      tag_497\n        /* \"#utility.yul\":7639:7642   */\n      dup3\n        /* \"#utility.yul\":7550:7643   */\n      tag_401\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":7668:7670   */\n      0x20\n        /* \"#utility.yul\":7663:7666   */\n      dup3\n        /* \"#utility.yul\":7659:7671   */\n      add\n        /* \"#utility.yul\":7652:7671   */\n      swap1\n      pop\n        /* \"#utility.yul\":7311:7677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7683:8102   */\n    tag_188:\n        /* \"#utility.yul\":7849:7853   */\n      0x00\n        /* \"#utility.yul\":7887:7889   */\n      0x20\n        /* \"#utility.yul\":7876:7885   */\n      dup3\n        /* \"#utility.yul\":7872:7890   */\n      add\n        /* \"#utility.yul\":7864:7890   */\n      swap1\n      pop\n        /* \"#utility.yul\":7936:7945   */\n      dup2\n        /* \"#utility.yul\":7930:7934   */\n      dup2\n        /* \"#utility.yul\":7926:7946   */\n      sub\n        /* \"#utility.yul\":7922:7923   */\n      0x00\n        /* \"#utility.yul\":7911:7920   */\n      dup4\n        /* \"#utility.yul\":7907:7924   */\n      add\n        /* \"#utility.yul\":7900:7947   */\n      mstore\n        /* \"#utility.yul\":7964:8095   */\n      tag_499\n        /* \"#utility.yul\":8090:8094   */\n      dup2\n        /* \"#utility.yul\":7964:8095   */\n      tag_402\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":7956:8095   */\n      swap1\n      pop\n        /* \"#utility.yul\":7683:8102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8108:8440   */\n    tag_199:\n        /* \"#utility.yul\":8229:8233   */\n      0x00\n        /* \"#utility.yul\":8267:8269   */\n      0x40\n        /* \"#utility.yul\":8256:8265   */\n      dup3\n        /* \"#utility.yul\":8252:8270   */\n      add\n        /* \"#utility.yul\":8244:8270   */\n      swap1\n      pop\n        /* \"#utility.yul\":8280:8351   */\n      tag_501\n        /* \"#utility.yul\":8348:8349   */\n      0x00\n        /* \"#utility.yul\":8337:8346   */\n      dup4\n        /* \"#utility.yul\":8333:8350   */\n      add\n        /* \"#utility.yul\":8324:8330   */\n      dup6\n        /* \"#utility.yul\":8280:8351   */\n      tag_392\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":8361:8433   */\n      tag_502\n        /* \"#utility.yul\":8429:8431   */\n      0x20\n        /* \"#utility.yul\":8418:8427   */\n      dup4\n        /* \"#utility.yul\":8414:8432   */\n      add\n        /* \"#utility.yul\":8405:8411   */\n      dup5\n        /* \"#utility.yul\":8361:8433   */\n      tag_385\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":8108:8440   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8446:8583   */\n    tag_403:\n        /* \"#utility.yul\":8500:8505   */\n      0x00\n        /* \"#utility.yul\":8531:8537   */\n      dup2\n        /* \"#utility.yul\":8525:8538   */\n      mload\n        /* \"#utility.yul\":8516:8538   */\n      swap1\n      pop\n        /* \"#utility.yul\":8547:8577   */\n      tag_504\n        /* \"#utility.yul\":8571:8576   */\n      dup2\n        /* \"#utility.yul\":8547:8577   */\n      tag_387\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":8446:8583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8589:8934   */\n    tag_203:\n        /* \"#utility.yul\":8656:8662   */\n      0x00\n        /* \"#utility.yul\":8705:8707   */\n      0x20\n        /* \"#utility.yul\":8693:8702   */\n      dup3\n        /* \"#utility.yul\":8684:8691   */\n      dup5\n        /* \"#utility.yul\":8680:8703   */\n      sub\n        /* \"#utility.yul\":8676:8708   */\n      slt\n        /* \"#utility.yul\":8673:8792   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":8711:8790   */\n      tag_507\n      tag_378\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":8673:8792   */\n    tag_506:\n        /* \"#utility.yul\":8831:8832   */\n      0x00\n        /* \"#utility.yul\":8856:8917   */\n      tag_508\n        /* \"#utility.yul\":8909:8916   */\n      dup5\n        /* \"#utility.yul\":8900:8906   */\n      dup3\n        /* \"#utility.yul\":8889:8898   */\n      dup6\n        /* \"#utility.yul\":8885:8907   */\n      add\n        /* \"#utility.yul\":8856:8917   */\n      tag_403\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":8846:8917   */\n      swap2\n      pop\n        /* \"#utility.yul\":8802:8927   */\n      pop\n        /* \"#utility.yul\":8589:8934   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8940:9161   */\n    tag_404:\n        /* \"#utility.yul\":9080:9114   */\n      0x41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d\n        /* \"#utility.yul\":9076:9077   */\n      0x00\n        /* \"#utility.yul\":9068:9074   */\n      dup3\n        /* \"#utility.yul\":9064:9078   */\n      add\n        /* \"#utility.yul\":9057:9115   */\n      mstore\n        /* \"#utility.yul\":9149:9153   */\n      0x696e000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9144:9146   */\n      0x20\n        /* \"#utility.yul\":9136:9142   */\n      dup3\n        /* \"#utility.yul\":9132:9147   */\n      add\n        /* \"#utility.yul\":9125:9154   */\n      mstore\n        /* \"#utility.yul\":8940:9161   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9167:9533   */\n    tag_405:\n        /* \"#utility.yul\":9309:9312   */\n      0x00\n        /* \"#utility.yul\":9330:9397   */\n      tag_511\n        /* \"#utility.yul\":9394:9396   */\n      0x22\n        /* \"#utility.yul\":9389:9392   */\n      dup4\n        /* \"#utility.yul\":9330:9397   */\n      tag_398\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":9323:9397   */\n      swap2\n      pop\n        /* \"#utility.yul\":9406:9499   */\n      tag_512\n        /* \"#utility.yul\":9495:9498   */\n      dup3\n        /* \"#utility.yul\":9406:9499   */\n      tag_404\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":9524:9526   */\n      0x40\n        /* \"#utility.yul\":9519:9522   */\n      dup3\n        /* \"#utility.yul\":9515:9527   */\n      add\n        /* \"#utility.yul\":9508:9527   */\n      swap1\n      pop\n        /* \"#utility.yul\":9167:9533   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9539:9958   */\n    tag_210:\n        /* \"#utility.yul\":9705:9709   */\n      0x00\n        /* \"#utility.yul\":9743:9745   */\n      0x20\n        /* \"#utility.yul\":9732:9741   */\n      dup3\n        /* \"#utility.yul\":9728:9746   */\n      add\n        /* \"#utility.yul\":9720:9746   */\n      swap1\n      pop\n        /* \"#utility.yul\":9792:9801   */\n      dup2\n        /* \"#utility.yul\":9786:9790   */\n      dup2\n        /* \"#utility.yul\":9782:9802   */\n      sub\n        /* \"#utility.yul\":9778:9779   */\n      0x00\n        /* \"#utility.yul\":9767:9776   */\n      dup4\n        /* \"#utility.yul\":9763:9780   */\n      add\n        /* \"#utility.yul\":9756:9803   */\n      mstore\n        /* \"#utility.yul\":9820:9951   */\n      tag_514\n        /* \"#utility.yul\":9946:9950   */\n      dup2\n        /* \"#utility.yul\":9820:9951   */\n      tag_405\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":9812:9951   */\n      swap1\n      pop\n        /* \"#utility.yul\":9539:9958   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9964:10144   */\n    tag_406:\n        /* \"#utility.yul\":10012:10089   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10009:10010   */\n      0x00\n        /* \"#utility.yul\":10002:10090   */\n      mstore\n        /* \"#utility.yul\":10109:10113   */\n      0x11\n        /* \"#utility.yul\":10106:10107   */\n      0x04\n        /* \"#utility.yul\":10099:10114   */\n      mstore\n        /* \"#utility.yul\":10133:10137   */\n      0x24\n        /* \"#utility.yul\":10130:10131   */\n      0x00\n        /* \"#utility.yul\":10123:10138   */\n      revert\n        /* \"#utility.yul\":10150:10344   */\n    tag_215:\n        /* \"#utility.yul\":10190:10194   */\n      0x00\n        /* \"#utility.yul\":10210:10230   */\n      tag_517\n        /* \"#utility.yul\":10228:10229   */\n      dup3\n        /* \"#utility.yul\":10210:10230   */\n      tag_384\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":10205:10230   */\n      swap2\n      pop\n        /* \"#utility.yul\":10244:10264   */\n      tag_518\n        /* \"#utility.yul\":10262:10263   */\n      dup4\n        /* \"#utility.yul\":10244:10264   */\n      tag_384\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":10239:10264   */\n      swap3\n      pop\n        /* \"#utility.yul\":10288:10289   */\n      dup3\n        /* \"#utility.yul\":10285:10286   */\n      dup3\n        /* \"#utility.yul\":10281:10290   */\n      sub\n        /* \"#utility.yul\":10273:10290   */\n      swap1\n      pop\n        /* \"#utility.yul\":10312:10313   */\n      dup2\n        /* \"#utility.yul\":10306:10310   */\n      dup2\n        /* \"#utility.yul\":10303:10314   */\n      gt\n        /* \"#utility.yul\":10300:10337   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":10317:10335   */\n      tag_520\n      tag_406\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":10300:10337   */\n    tag_519:\n        /* \"#utility.yul\":10150:10344   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10350:10530   */\n    tag_407:\n        /* \"#utility.yul\":10398:10475   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10395:10396   */\n      0x00\n        /* \"#utility.yul\":10388:10476   */\n      mstore\n        /* \"#utility.yul\":10495:10499   */\n      0x12\n        /* \"#utility.yul\":10492:10493   */\n      0x04\n        /* \"#utility.yul\":10485:10500   */\n      mstore\n        /* \"#utility.yul\":10519:10523   */\n      0x24\n        /* \"#utility.yul\":10516:10517   */\n      0x00\n        /* \"#utility.yul\":10509:10524   */\n      revert\n        /* \"#utility.yul\":10536:10721   */\n    tag_217:\n        /* \"#utility.yul\":10576:10577   */\n      0x00\n        /* \"#utility.yul\":10593:10613   */\n      tag_523\n        /* \"#utility.yul\":10611:10612   */\n      dup3\n        /* \"#utility.yul\":10593:10613   */\n      tag_384\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":10588:10613   */\n      swap2\n      pop\n        /* \"#utility.yul\":10627:10647   */\n      tag_524\n        /* \"#utility.yul\":10645:10646   */\n      dup4\n        /* \"#utility.yul\":10627:10647   */\n      tag_384\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":10622:10647   */\n      swap3\n      pop\n        /* \"#utility.yul\":10666:10667   */\n      dup3\n        /* \"#utility.yul\":10656:10691   */\n      tag_525\n      jumpi\n        /* \"#utility.yul\":10671:10689   */\n      tag_526\n      tag_407\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":10656:10691   */\n    tag_525:\n        /* \"#utility.yul\":10713:10714   */\n      dup3\n        /* \"#utility.yul\":10710:10711   */\n      dup3\n        /* \"#utility.yul\":10706:10715   */\n      div\n        /* \"#utility.yul\":10701:10715   */\n      swap1\n      pop\n        /* \"#utility.yul\":10536:10721   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10727:10918   */\n    tag_219:\n        /* \"#utility.yul\":10767:10770   */\n      0x00\n        /* \"#utility.yul\":10786:10806   */\n      tag_528\n        /* \"#utility.yul\":10804:10805   */\n      dup3\n        /* \"#utility.yul\":10786:10806   */\n      tag_384\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":10781:10806   */\n      swap2\n      pop\n        /* \"#utility.yul\":10820:10840   */\n      tag_529\n        /* \"#utility.yul\":10838:10839   */\n      dup4\n        /* \"#utility.yul\":10820:10840   */\n      tag_384\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":10815:10840   */\n      swap3\n      pop\n        /* \"#utility.yul\":10863:10864   */\n      dup3\n        /* \"#utility.yul\":10860:10861   */\n      dup3\n        /* \"#utility.yul\":10856:10865   */\n      add\n        /* \"#utility.yul\":10849:10865   */\n      swap1\n      pop\n        /* \"#utility.yul\":10884:10887   */\n      dup1\n        /* \"#utility.yul\":10881:10882   */\n      dup3\n        /* \"#utility.yul\":10878:10888   */\n      gt\n        /* \"#utility.yul\":10875:10911   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":10891:10909   */\n      tag_531\n      tag_406\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":10875:10911   */\n    tag_530:\n        /* \"#utility.yul\":10727:10918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10924:11334   */\n    tag_224:\n        /* \"#utility.yul\":10964:10971   */\n      0x00\n        /* \"#utility.yul\":10987:11007   */\n      tag_533\n        /* \"#utility.yul\":11005:11006   */\n      dup3\n        /* \"#utility.yul\":10987:11007   */\n      tag_384\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":10982:11007   */\n      swap2\n      pop\n        /* \"#utility.yul\":11021:11041   */\n      tag_534\n        /* \"#utility.yul\":11039:11040   */\n      dup4\n        /* \"#utility.yul\":11021:11041   */\n      tag_384\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":11016:11041   */\n      swap3\n      pop\n        /* \"#utility.yul\":11076:11077   */\n      dup3\n        /* \"#utility.yul\":11073:11074   */\n      dup3\n        /* \"#utility.yul\":11069:11078   */\n      mul\n        /* \"#utility.yul\":11098:11128   */\n      tag_535\n        /* \"#utility.yul\":11116:11127   */\n      dup2\n        /* \"#utility.yul\":11098:11128   */\n      tag_384\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":11087:11128   */\n      swap2\n      pop\n        /* \"#utility.yul\":11277:11278   */\n      dup3\n        /* \"#utility.yul\":11268:11275   */\n      dup3\n        /* \"#utility.yul\":11264:11279   */\n      div\n        /* \"#utility.yul\":11261:11262   */\n      dup5\n        /* \"#utility.yul\":11258:11280   */\n      eq\n        /* \"#utility.yul\":11238:11239   */\n      dup4\n        /* \"#utility.yul\":11231:11240   */\n      iszero\n        /* \"#utility.yul\":11211:11294   */\n      or\n        /* \"#utility.yul\":11188:11327   */\n      tag_536\n      jumpi\n        /* \"#utility.yul\":11307:11325   */\n      tag_537\n      tag_406\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":11188:11327   */\n    tag_536:\n        /* \"#utility.yul\":10972:11334   */\n      pop\n        /* \"#utility.yul\":10924:11334   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11340:11573   */\n    tag_228:\n        /* \"#utility.yul\":11379:11382   */\n      0x00\n        /* \"#utility.yul\":11402:11426   */\n      tag_539\n        /* \"#utility.yul\":11420:11425   */\n      dup3\n        /* \"#utility.yul\":11402:11426   */\n      tag_384\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":11393:11426   */\n      swap2\n      pop\n        /* \"#utility.yul\":11448:11514   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11441:11446   */\n      dup3\n        /* \"#utility.yul\":11438:11515   */\n      sub\n        /* \"#utility.yul\":11435:11538   */\n      tag_540\n      jumpi\n        /* \"#utility.yul\":11518:11536   */\n      tag_541\n      tag_406\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":11435:11538   */\n    tag_540:\n        /* \"#utility.yul\":11565:11566   */\n      0x01\n        /* \"#utility.yul\":11558:11563   */\n      dup3\n        /* \"#utility.yul\":11554:11567   */\n      add\n        /* \"#utility.yul\":11547:11567   */\n      swap1\n      pop\n        /* \"#utility.yul\":11340:11573   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11579:11743   */\n    tag_408:\n        /* \"#utility.yul\":11719:11735   */\n      0x43616e6e6f74207374616b652030000000000000000000000000000000000000\n        /* \"#utility.yul\":11715:11716   */\n      0x00\n        /* \"#utility.yul\":11707:11713   */\n      dup3\n        /* \"#utility.yul\":11703:11717   */\n      add\n        /* \"#utility.yul\":11696:11736   */\n      mstore\n        /* \"#utility.yul\":11579:11743   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11749:12115   */\n    tag_409:\n        /* \"#utility.yul\":11891:11894   */\n      0x00\n        /* \"#utility.yul\":11912:11979   */\n      tag_544\n        /* \"#utility.yul\":11976:11978   */\n      0x0e\n        /* \"#utility.yul\":11971:11974   */\n      dup4\n        /* \"#utility.yul\":11912:11979   */\n      tag_398\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":11905:11979   */\n      swap2\n      pop\n        /* \"#utility.yul\":11988:12081   */\n      tag_545\n        /* \"#utility.yul\":12077:12080   */\n      dup3\n        /* \"#utility.yul\":11988:12081   */\n      tag_408\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":12106:12108   */\n      0x20\n        /* \"#utility.yul\":12101:12104   */\n      dup3\n        /* \"#utility.yul\":12097:12109   */\n      add\n        /* \"#utility.yul\":12090:12109   */\n      swap1\n      pop\n        /* \"#utility.yul\":11749:12115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12121:12540   */\n    tag_299:\n        /* \"#utility.yul\":12287:12291   */\n      0x00\n        /* \"#utility.yul\":12325:12327   */\n      0x20\n        /* \"#utility.yul\":12314:12323   */\n      dup3\n        /* \"#utility.yul\":12310:12328   */\n      add\n        /* \"#utility.yul\":12302:12328   */\n      swap1\n      pop\n        /* \"#utility.yul\":12374:12383   */\n      dup2\n        /* \"#utility.yul\":12368:12372   */\n      dup2\n        /* \"#utility.yul\":12364:12384   */\n      sub\n        /* \"#utility.yul\":12360:12361   */\n      0x00\n        /* \"#utility.yul\":12349:12358   */\n      dup4\n        /* \"#utility.yul\":12345:12362   */\n      add\n        /* \"#utility.yul\":12338:12385   */\n      mstore\n        /* \"#utility.yul\":12402:12533   */\n      tag_547\n        /* \"#utility.yul\":12528:12532   */\n      dup2\n        /* \"#utility.yul\":12402:12533   */\n      tag_409\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":12394:12533   */\n      swap1\n      pop\n        /* \"#utility.yul\":12121:12540   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12546:12722   */\n    tag_314:\n        /* \"#utility.yul\":12578:12579   */\n      0x00\n        /* \"#utility.yul\":12595:12615   */\n      tag_549\n        /* \"#utility.yul\":12613:12614   */\n      dup3\n        /* \"#utility.yul\":12595:12615   */\n      tag_384\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":12590:12615   */\n      swap2\n      pop\n        /* \"#utility.yul\":12629:12649   */\n      tag_550\n        /* \"#utility.yul\":12647:12648   */\n      dup4\n        /* \"#utility.yul\":12629:12649   */\n      tag_384\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":12624:12649   */\n      swap3\n      pop\n        /* \"#utility.yul\":12668:12669   */\n      dup3\n        /* \"#utility.yul\":12658:12693   */\n      tag_551\n      jumpi\n        /* \"#utility.yul\":12673:12691   */\n      tag_552\n      tag_407\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":12658:12693   */\n    tag_551:\n        /* \"#utility.yul\":12714:12715   */\n      dup3\n        /* \"#utility.yul\":12711:12712   */\n      dup3\n        /* \"#utility.yul\":12707:12716   */\n      mod\n        /* \"#utility.yul\":12702:12716   */\n      swap1\n      pop\n        /* \"#utility.yul\":12546:12722   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12728:12953   */\n    tag_410:\n        /* \"#utility.yul\":12868:12902   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":12864:12865   */\n      0x00\n        /* \"#utility.yul\":12856:12862   */\n      dup3\n        /* \"#utility.yul\":12852:12866   */\n      add\n        /* \"#utility.yul\":12845:12903   */\n      mstore\n        /* \"#utility.yul\":12937:12945   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12932:12934   */\n      0x20\n        /* \"#utility.yul\":12924:12930   */\n      dup3\n        /* \"#utility.yul\":12920:12935   */\n      add\n        /* \"#utility.yul\":12913:12946   */\n      mstore\n        /* \"#utility.yul\":12728:12953   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12959:13325   */\n    tag_411:\n        /* \"#utility.yul\":13101:13104   */\n      0x00\n        /* \"#utility.yul\":13122:13189   */\n      tag_555\n        /* \"#utility.yul\":13186:13188   */\n      0x26\n        /* \"#utility.yul\":13181:13184   */\n      dup4\n        /* \"#utility.yul\":13122:13189   */\n      tag_398\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":13115:13189   */\n      swap2\n      pop\n        /* \"#utility.yul\":13198:13291   */\n      tag_556\n        /* \"#utility.yul\":13287:13290   */\n      dup3\n        /* \"#utility.yul\":13198:13291   */\n      tag_410\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":13316:13318   */\n      0x40\n        /* \"#utility.yul\":13311:13314   */\n      dup3\n        /* \"#utility.yul\":13307:13319   */\n      add\n        /* \"#utility.yul\":13300:13319   */\n      swap1\n      pop\n        /* \"#utility.yul\":12959:13325   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13331:13750   */\n    tag_362:\n        /* \"#utility.yul\":13497:13501   */\n      0x00\n        /* \"#utility.yul\":13535:13537   */\n      0x20\n        /* \"#utility.yul\":13524:13533   */\n      dup3\n        /* \"#utility.yul\":13520:13538   */\n      add\n        /* \"#utility.yul\":13512:13538   */\n      swap1\n      pop\n        /* \"#utility.yul\":13584:13593   */\n      dup2\n        /* \"#utility.yul\":13578:13582   */\n      dup2\n        /* \"#utility.yul\":13574:13594   */\n      sub\n        /* \"#utility.yul\":13570:13571   */\n      0x00\n        /* \"#utility.yul\":13559:13568   */\n      dup4\n        /* \"#utility.yul\":13555:13572   */\n      add\n        /* \"#utility.yul\":13548:13595   */\n      mstore\n        /* \"#utility.yul\":13612:13743   */\n      tag_558\n        /* \"#utility.yul\":13738:13742   */\n      dup2\n        /* \"#utility.yul\":13612:13743   */\n      tag_411\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":13604:13743   */\n      swap1\n      pop\n        /* \"#utility.yul\":13331:13750   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200c33237825e35c9766025e5e317237c6ec8de000cabd00b504c0f8be8eafbdee64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_51": {
									"entryPoint": null,
									"id": 51,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_979": {
									"entryPoint": null,
									"id": 979,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_10": {
									"entryPoint": 88,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_150": {
									"entryPoint": 96,
									"id": 150,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526923934c5a09da19000000600555600a60075560056008556103e860095534801561002e57600080fd5b5061004b61004061005860201b60201c565b61006060201b60201c565b6001600281905550610126565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61236780620001366000396000f3fe608060405234801561001057600080fd5b50600436106102055760003560e01c8063874c120b1161011a578063b79ec812116100ad578063d42b779d1161007c578063d42b779d146105e0578063da4f843114610610578063db2e21bc14610640578063df136d651461064a578063f2fde38b1461066857610205565b8063b79ec81214610556578063c8f33c9114610586578063cdda56e0146105a4578063d1af0c7d146105c257610205565b80639499c549116100e95780639499c549146104e25780639a5b17b014610500578063a4c3b0911461051e578063adc9772e1461053a57610205565b8063874c120b146104485780638aee8127146104785780638b876347146104945780638da5cb5b146104c457610205565b80634dbdc4eb1161019d578063715018a61161016c578063715018a6146103b457806378e97925146103be5780637a6fcee7146103dc57806380faa57d146103fa5780638107368b1461041857610205565b80634dbdc4eb146103185780635cfa91f4146103485780636139d4b4146103785780636917c5011461039657610205565b806324d7806c116101d957806324d7806c146102a45780633c4045cf146102d45780633d18b912146102f25780633e0a322d146102fc57610205565b80628cc2621461020a5780630700037d1461023a5780630e15561a1461026a57806318e20ecf14610288575b600080fd5b610224600480360381019061021f9190611bcc565b610684565b6040516102319190611c12565b60405180910390f35b610254600480360381019061024f9190611bcc565b6107f0565b6040516102619190611c12565b60405180910390f35b610272610808565b60405161027f9190611c12565b60405180910390f35b6102a2600480360381019061029d9190611c65565b61080e565b005b6102be60048036038101906102b99190611bcc565b61097f565b6040516102cb9190611cb4565b60405180910390f35b6102dc6109d4565b6040516102e99190611c12565b60405180910390f35b6102fa6109da565b005b61031660048036038101906103119190611cfb565b610d3f565b005b610332600480360381019061032d9190611cfb565b610d9f565b60405161033f9190611c12565b60405180910390f35b610362600480360381019061035d9190611cfb565b610e36565b60405161036f9190611c12565b60405180910390f35b610380610ee7565b60405161038d9190611c12565b60405180910390f35b61039e610eed565b6040516103ab9190611c12565b60405180910390f35b6103bc610ef7565b005b6103c6610f7f565b6040516103d39190611c12565b60405180910390f35b6103e4610f85565b6040516103f19190611c12565b60405180910390f35b610402610f8b565b60405161040f9190611c12565b60405180910390f35b610432600480360381019061042d9190611bcc565b610f93565b60405161043f9190611c12565b60405180910390f35b610462600480360381019061045d9190611cfb565b610fab565b60405161046f9190611c12565b60405180910390f35b610492600480360381019061048d9190611bcc565b611038565b005b6104ae60048036038101906104a99190611bcc565b6110f8565b6040516104bb9190611c12565b60405180910390f35b6104cc611110565b6040516104d99190611d37565b60405180910390f35b6104ea61113a565b6040516104f79190611c12565b60405180910390f35b61050861114a565b6040516105159190611c12565b60405180910390f35b61053860048036038101906105339190611d52565b611152565b005b610554600480360381019061054f9190611d52565b611251565b005b610570600480360381019061056b9190611bcc565b6115c5565b60405161057d9190611c12565b60405180910390f35b61058e61160e565b60405161059b9190611c12565b60405180910390f35b6105ac611614565b6040516105b99190611c12565b60405180910390f35b6105ca611624565b6040516105d79190611df1565b60405180910390f35b6105fa60048036038101906105f59190611bcc565b61164a565b6040516106079190611c12565b60405180910390f35b61062a60048036038101906106259190611e0c565b611662565b6040516106379190611c12565b60405180910390f35b610648611849565b005b610652611915565b60405161065f9190611c12565b60405180910390f35b610682600480360381019061067d9190611bcc565b61191b565b005b6000806106d0600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442611662565b90506107e8600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107da670de0b6b3a76400006107cc61077e600d60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461077088610fab565b611a1290919063ffffffff16565b601060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a2890919063ffffffff16565b611a3e90919063ffffffff16565b611a5490919063ffffffff16565b915050919050565b60046020528060005260406000206000915090505481565b60055481565b610816611a6a565b73ffffffffffffffffffffffffffffffffffffffff16610834611110565b73ffffffffffffffffffffffffffffffffffffffff161461088a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088190611ecf565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f82f1fa40a3d82dea3e406073819290601f436580aa7c69f9feb61f885bdd88546000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168360405161091d929190611eef565b60405180910390a2806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60085481565b6002805403610a1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1590611f64565b60405180910390fd5b60028081905550336000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506006548111610a795760065490505b6000610a858242611662565b9050610a9081610fab565b600b81905550610a9e610f8b565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610baf57610ae183610684565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115610d31576000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610c9e929190611f84565b6020604051808303816000875af1158015610cbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce19190611fc2565b503373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048682604051610d289190611c12565b60405180910390a25b505050506001600281905550565b610d4f610d4a611a6a565b61097f565b610d8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8590612061565b60405180910390fd5b8060068190555080600a8190555050565b60008060065403610db4576006549050610e31565b6000600160075460065485610dc991906120b0565b610dd39190612113565b610ddd9190612144565b90506000600554905060005b82811015610e2a5760095460085483610e029190612178565b610e0c9190612113565b82610e1791906120b0565b915080610e23906121ba565b9050610de9565b5080925050505b919050565b60008060065403610e4b576005549050610ee2565b6000600160075460065485610e6091906120b0565b610e6a9190612113565b610e749190612144565b90506000600554905060005b82811015610ec15760095460085483610e999190612178565b610ea39190612113565b82610eae91906120b0565b915080610eba906121ba565b9050610e80565b5060095460085482610ed39190612178565b610edd9190612113565b925050505b919050565b60075481565b6000600c54905090565b610eff611a6a565b73ffffffffffffffffffffffffffffffffffffffff16610f1d611110565b73ffffffffffffffffffffffffffffffffffffffff1614610f73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6a90611ecf565b60405180910390fd5b610f7d6000611a72565b565b60065481565b60095481565b600042905090565b600e6020528060005260406000206000915090505481565b600080600c5403610fc057600b549050611033565b61103061101f600c54611011670de0b6b3a764000061100387610ff5600a54610fe7610f8b565b611a1290919063ffffffff16565b611a2890919063ffffffff16565b611a2890919063ffffffff16565b611a3e90919063ffffffff16565b600b54611a5490919063ffffffff16565b90505b919050565b611040611a6a565b73ffffffffffffffffffffffffffffffffffffffff1661105e611110565b73ffffffffffffffffffffffffffffffffffffffff16146110b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ab90611ecf565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600d6020528060005260406000206000915090505481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061114542610e36565b905090565b600042905090565b61115a611a6a565b73ffffffffffffffffffffffffffffffffffffffff16611178611110565b73ffffffffffffffffffffffffffffffffffffffff16146111ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c590611ecf565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401611209929190611f84565b6020604051808303816000875af1158015611228573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124c9190611fc2565b505050565b6002805403611295576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128c90611f64565b60405180910390fd5b600280819055506112ac6112a7611a6a565b61097f565b6112eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e290612061565b60405180910390fd5b816000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600654811161133f5760065490505b600061134b8242611662565b905061135681610fab565b600b81905550611364610f8b565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611475576113a783610684565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600084116114b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114af9061224e565b60405180910390fd5b6114cd84600c54611a5490919063ffffffff16565b600c8190555061152584601060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a5490919063ffffffff16565b601060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d856040516115ae9190611c12565b60405180910390a250505060016002819055505050565b6000601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600a5481565b600061161f42611b38565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600f6020528060005260406000206000915090505481565b60008060065414806116745750818310155b8061167f5750600083145b1561168d5760009050611843565b60065483101561169d5760065492505b6000600754600754600654866116b391906120b0565b6116bd919061226e565b6007546116ca91906120b0565b6116d4919061226e565b90506000600754826116e587610e36565b6116ef9190612178565b6116f99190612113565b905060006007546006548661170e91906120b0565b611718919061226e565b905060006007548261172988610e36565b6117339190612178565b61173d9190612113565b905085848861174c9190612144565b11156117665761175b87611b38565b945050505050611843565b60008488848961177691906120b0565b61178091906120b0565b61178a91906120b0565b9050600061179789610d9f565b905060008060008390506000600754866117b19190612113565b905060005b8181101561180857600954600854846117cf9190612178565b6117d99190612113565b935083836117e791906120b0565b925083856117f59190612144565b945080611801906121ba565b90506117b6565b508c8c61181591906120b0565b878a866118229190612144565b61182c9190612144565b6118369190612113565b9a50505050505050505050505b92915050565b611851611a6a565b73ffffffffffffffffffffffffffffffffffffffff1661186f611110565b73ffffffffffffffffffffffffffffffffffffffff16146118c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118bc90611ecf565b60405180910390fd5b6118cd611110565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015611912573d6000803e3d6000fd5b50565b600b5481565b611923611a6a565b73ffffffffffffffffffffffffffffffffffffffff16611941611110565b73ffffffffffffffffffffffffffffffffffffffff1614611997576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161198e90611ecf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611a06576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119fd90612311565b60405180910390fd5b611a0f81611a72565b50565b60008183611a2091906120b0565b905092915050565b60008183611a369190612178565b905092915050565b60008183611a4c9190612113565b905092915050565b60008183611a629190612144565b905092915050565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080611b4483610e36565b90506000611b5d60075483611a3e90919063ffffffff16565b90508092505050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611b9982611b6e565b9050919050565b611ba981611b8e565b8114611bb457600080fd5b50565b600081359050611bc681611ba0565b92915050565b600060208284031215611be257611be1611b69565b5b6000611bf084828501611bb7565b91505092915050565b6000819050919050565b611c0c81611bf9565b82525050565b6000602082019050611c276000830184611c03565b92915050565b60008115159050919050565b611c4281611c2d565b8114611c4d57600080fd5b50565b600081359050611c5f81611c39565b92915050565b60008060408385031215611c7c57611c7b611b69565b5b6000611c8a85828601611bb7565b9250506020611c9b85828601611c50565b9150509250929050565b611cae81611c2d565b82525050565b6000602082019050611cc96000830184611ca5565b92915050565b611cd881611bf9565b8114611ce357600080fd5b50565b600081359050611cf581611ccf565b92915050565b600060208284031215611d1157611d10611b69565b5b6000611d1f84828501611ce6565b91505092915050565b611d3181611b8e565b82525050565b6000602082019050611d4c6000830184611d28565b92915050565b60008060408385031215611d6957611d68611b69565b5b6000611d7785828601611bb7565b9250506020611d8885828601611ce6565b9150509250929050565b6000819050919050565b6000611db7611db2611dad84611b6e565b611d92565b611b6e565b9050919050565b6000611dc982611d9c565b9050919050565b6000611ddb82611dbe565b9050919050565b611deb81611dd0565b82525050565b6000602082019050611e066000830184611de2565b92915050565b60008060408385031215611e2357611e22611b69565b5b6000611e3185828601611ce6565b9250506020611e4285828601611ce6565b9150509250929050565b600082825260208201905092915050565b7f41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b6000611eb9602283611e4c565b9150611ec482611e5d565b604082019050919050565b60006020820190508181036000830152611ee881611eac565b9050919050565b6000604082019050611f046000830185611ca5565b611f116020830184611ca5565b9392505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611f4e601f83611e4c565b9150611f5982611f18565b602082019050919050565b60006020820190508181036000830152611f7d81611f41565b9050919050565b6000604082019050611f996000830185611d28565b611fa66020830184611c03565b9392505050565b600081519050611fbc81611c39565b92915050565b600060208284031215611fd857611fd7611b69565b5b6000611fe684828501611fad565b91505092915050565b7f41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d60008201527f696e000000000000000000000000000000000000000000000000000000000000602082015250565b600061204b602283611e4c565b915061205682611fef565b604082019050919050565b6000602082019050818103600083015261207a8161203e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006120bb82611bf9565b91506120c683611bf9565b92508282039050818111156120de576120dd612081565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061211e82611bf9565b915061212983611bf9565b925082612139576121386120e4565b5b828204905092915050565b600061214f82611bf9565b915061215a83611bf9565b925082820190508082111561217257612171612081565b5b92915050565b600061218382611bf9565b915061218e83611bf9565b925082820261219c81611bf9565b915082820484148315176121b3576121b2612081565b5b5092915050565b60006121c582611bf9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036121f7576121f6612081565b5b600182019050919050565b7f43616e6e6f74207374616b652030000000000000000000000000000000000000600082015250565b6000612238600e83611e4c565b915061224382612202565b602082019050919050565b600060208201905081810360008301526122678161222b565b9050919050565b600061227982611bf9565b915061228483611bf9565b925082612294576122936120e4565b5b828206905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006122fb602683611e4c565b91506123068261229f565b604082019050919050565b6000602082019050818103600083015261232a816122ee565b905091905056fea26469706673582212200c33237825e35c9766025e5e317237c6ec8de000cabd00b504c0f8be8eafbdee64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH10 0x23934C5A09DA19000000 PUSH1 0x5 SSTORE PUSH1 0xA PUSH1 0x7 SSTORE PUSH1 0x5 PUSH1 0x8 SSTORE PUSH2 0x3E8 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B PUSH2 0x40 PUSH2 0x58 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x60 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x126 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x2367 DUP1 PUSH3 0x136 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x205 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x874C120B GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xB79EC812 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD42B779D GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD42B779D EQ PUSH2 0x5E0 JUMPI DUP1 PUSH4 0xDA4F8431 EQ PUSH2 0x610 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x640 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x64A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x668 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0xB79EC812 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x586 JUMPI DUP1 PUSH4 0xCDDA56E0 EQ PUSH2 0x5A4 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x5C2 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0x9499C549 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x9499C549 EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0x9A5B17B0 EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0xA4C3B091 EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0xADC9772E EQ PUSH2 0x53A JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0x874C120B EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x8AEE8127 EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4C4 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0x4DBDC4EB GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0x7A6FCEE7 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x8107368B EQ PUSH2 0x418 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0x4DBDC4EB EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x5CFA91F4 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x6139D4B4 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x6917C501 EQ PUSH2 0x396 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0x24D7806C GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x3C4045CF EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x3E0A322D EQ PUSH2 0x2FC JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x18E20ECF EQ PUSH2 0x288 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x254 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH2 0x808 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST PUSH2 0x80E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0x97F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1CB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DC PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FA PUSH2 0x9DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0xD3F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x332 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0xD9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x362 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0xE36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH2 0xEE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39E PUSH2 0xEED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BC PUSH2 0xEF7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C6 PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E4 PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x402 PUSH2 0xF8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x432 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0xF93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x462 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0xFAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x492 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48D SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0x1038 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0x10F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CC PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D9 SWAP2 SWAP1 PUSH2 0x1D37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EA PUSH2 0x113A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F7 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x508 PUSH2 0x114A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x515 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x538 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x1D52 JUMP JUMPDEST PUSH2 0x1152 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x554 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54F SWAP2 SWAP1 PUSH2 0x1D52 JUMP JUMPDEST PUSH2 0x1251 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x570 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56B SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0x15C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57D SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58E PUSH2 0x160E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59B SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AC PUSH2 0x1614 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CA PUSH2 0x1624 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F5 SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0x164A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x607 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x62A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x625 SWAP2 SWAP1 PUSH2 0x1E0C JUMP JUMPDEST PUSH2 0x1662 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x637 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x648 PUSH2 0x1849 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x652 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65F SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x682 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x67D SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0x191B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6D0 PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x1662 JUMP JUMPDEST SWAP1 POP PUSH2 0x7E8 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x7DA PUSH8 0xDE0B6B3A7640000 PUSH2 0x7CC PUSH2 0x77E PUSH1 0xD PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x770 DUP9 PUSH2 0xFAB JUMP JUMPDEST PUSH2 0x1A12 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1A28 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A3E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x816 PUSH2 0x1A6A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x834 PUSH2 0x1110 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x88A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x881 SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x82F1FA40A3D82DEA3E406073819290601F436580AA7C69F9FEB61F885BDD8854 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x91D SWAP3 SWAP2 SWAP1 PUSH2 0x1EEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0xA1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA15 SWAP1 PUSH2 0x1F64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x6 SLOAD DUP2 GT PUSH2 0xA79 JUMPI PUSH1 0x6 SLOAD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0xA85 DUP3 TIMESTAMP PUSH2 0x1662 JUMP JUMPDEST SWAP1 POP PUSH2 0xA90 DUP2 PUSH2 0xFAB JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0xA9E PUSH2 0xF8B JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBAF JUMPI PUSH2 0xAE1 DUP4 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xD31 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9E SWAP3 SWAP2 SWAP1 PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCBD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCE1 SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD PUSH2 0xD28 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xD4F PUSH2 0xD4A PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0x97F JUMP JUMPDEST PUSH2 0xD8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD85 SWAP1 PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xA DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD SUB PUSH2 0xDB4 JUMPI PUSH1 0x6 SLOAD SWAP1 POP PUSH2 0xE31 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP6 PUSH2 0xDC9 SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0xDD3 SWAP2 SWAP1 PUSH2 0x2113 JUMP JUMPDEST PUSH2 0xDDD SWAP2 SWAP1 PUSH2 0x2144 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xE2A JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP4 PUSH2 0xE02 SWAP2 SWAP1 PUSH2 0x2178 JUMP JUMPDEST PUSH2 0xE0C SWAP2 SWAP1 PUSH2 0x2113 JUMP JUMPDEST DUP3 PUSH2 0xE17 SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xE23 SWAP1 PUSH2 0x21BA JUMP JUMPDEST SWAP1 POP PUSH2 0xDE9 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD SUB PUSH2 0xE4B JUMPI PUSH1 0x5 SLOAD SWAP1 POP PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP6 PUSH2 0xE60 SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0xE6A SWAP2 SWAP1 PUSH2 0x2113 JUMP JUMPDEST PUSH2 0xE74 SWAP2 SWAP1 PUSH2 0x2144 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xEC1 JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP4 PUSH2 0xE99 SWAP2 SWAP1 PUSH2 0x2178 JUMP JUMPDEST PUSH2 0xEA3 SWAP2 SWAP1 PUSH2 0x2113 JUMP JUMPDEST DUP3 PUSH2 0xEAE SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xEBA SWAP1 PUSH2 0x21BA JUMP JUMPDEST SWAP1 POP PUSH2 0xE80 JUMP JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP3 PUSH2 0xED3 SWAP2 SWAP1 PUSH2 0x2178 JUMP JUMPDEST PUSH2 0xEDD SWAP2 SWAP1 PUSH2 0x2113 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEFF PUSH2 0x1A6A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF1D PUSH2 0x1110 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6A SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF7D PUSH1 0x0 PUSH2 0x1A72 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SLOAD SUB PUSH2 0xFC0 JUMPI PUSH1 0xB SLOAD SWAP1 POP PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x1030 PUSH2 0x101F PUSH1 0xC SLOAD PUSH2 0x1011 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1003 DUP8 PUSH2 0xFF5 PUSH1 0xA SLOAD PUSH2 0xFE7 PUSH2 0xF8B JUMP JUMPDEST PUSH2 0x1A12 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A28 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A28 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A3E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1040 PUSH2 0x1A6A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x105E PUSH2 0x1110 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10AB SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1145 TIMESTAMP PUSH2 0xE36 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x115A PUSH2 0x1A6A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1178 PUSH2 0x1110 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C5 SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1209 SWAP3 SWAP2 SWAP1 PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1228 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x124C SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x1295 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128C SWAP1 PUSH2 0x1F64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x12AC PUSH2 0x12A7 PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0x97F JUMP JUMPDEST PUSH2 0x12EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E2 SWAP1 PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x6 SLOAD DUP2 GT PUSH2 0x133F JUMPI PUSH1 0x6 SLOAD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x134B DUP3 TIMESTAMP PUSH2 0x1662 JUMP JUMPDEST SWAP1 POP PUSH2 0x1356 DUP2 PUSH2 0xFAB JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x1364 PUSH2 0xF8B JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1475 JUMPI PUSH2 0x13A7 DUP4 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x14B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14AF SWAP1 PUSH2 0x224E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14CD DUP5 PUSH1 0xC SLOAD PUSH2 0x1A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH2 0x1525 DUP5 PUSH1 0x10 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP6 PUSH1 0x40 MLOAD PUSH2 0x15AE SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161F TIMESTAMP PUSH2 0x1B38 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD EQ DUP1 PUSH2 0x1674 JUMPI POP DUP2 DUP4 LT ISZERO JUMPDEST DUP1 PUSH2 0x167F JUMPI POP PUSH1 0x0 DUP4 EQ JUMPDEST ISZERO PUSH2 0x168D JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1843 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP4 LT ISZERO PUSH2 0x169D JUMPI PUSH1 0x6 SLOAD SWAP3 POP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP7 PUSH2 0x16B3 SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x16BD SWAP2 SWAP1 PUSH2 0x226E JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x16CA SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x16D4 SWAP2 SWAP1 PUSH2 0x226E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x16E5 DUP8 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x16EF SWAP2 SWAP1 PUSH2 0x2178 JUMP JUMPDEST PUSH2 0x16F9 SWAP2 SWAP1 PUSH2 0x2113 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP7 PUSH2 0x170E SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x1718 SWAP2 SWAP1 PUSH2 0x226E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x1729 DUP9 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x1733 SWAP2 SWAP1 PUSH2 0x2178 JUMP JUMPDEST PUSH2 0x173D SWAP2 SWAP1 PUSH2 0x2113 JUMP JUMPDEST SWAP1 POP DUP6 DUP5 DUP9 PUSH2 0x174C SWAP2 SWAP1 PUSH2 0x2144 JUMP JUMPDEST GT ISZERO PUSH2 0x1766 JUMPI PUSH2 0x175B DUP8 PUSH2 0x1B38 JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x1843 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP9 DUP5 DUP10 PUSH2 0x1776 SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x1780 SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x178A SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1797 DUP10 PUSH2 0xD9F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP7 PUSH2 0x17B1 SWAP2 SWAP1 PUSH2 0x2113 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1808 JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP5 PUSH2 0x17CF SWAP2 SWAP1 PUSH2 0x2178 JUMP JUMPDEST PUSH2 0x17D9 SWAP2 SWAP1 PUSH2 0x2113 JUMP JUMPDEST SWAP4 POP DUP4 DUP4 PUSH2 0x17E7 SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST SWAP3 POP DUP4 DUP6 PUSH2 0x17F5 SWAP2 SWAP1 PUSH2 0x2144 JUMP JUMPDEST SWAP5 POP DUP1 PUSH2 0x1801 SWAP1 PUSH2 0x21BA JUMP JUMPDEST SWAP1 POP PUSH2 0x17B6 JUMP JUMPDEST POP DUP13 DUP13 PUSH2 0x1815 SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST DUP8 DUP11 DUP7 PUSH2 0x1822 SWAP2 SWAP1 PUSH2 0x2144 JUMP JUMPDEST PUSH2 0x182C SWAP2 SWAP1 PUSH2 0x2144 JUMP JUMPDEST PUSH2 0x1836 SWAP2 SWAP1 PUSH2 0x2113 JUMP JUMPDEST SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1851 PUSH2 0x1A6A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x186F PUSH2 0x1110 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18BC SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18CD PUSH2 0x1110 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1912 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1923 PUSH2 0x1A6A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1941 PUSH2 0x1110 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1997 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x198E SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19FD SWAP1 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A0F DUP2 PUSH2 0x1A72 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1A20 SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1A36 SWAP2 SWAP1 PUSH2 0x2178 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1A4C SWAP2 SWAP1 PUSH2 0x2113 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1A62 SWAP2 SWAP1 PUSH2 0x2144 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1B44 DUP4 PUSH2 0xE36 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B5D PUSH1 0x7 SLOAD DUP4 PUSH2 0x1A3E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B99 DUP3 PUSH2 0x1B6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BA9 DUP2 PUSH2 0x1B8E JUMP JUMPDEST DUP2 EQ PUSH2 0x1BB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BC6 DUP2 PUSH2 0x1BA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BE2 JUMPI PUSH2 0x1BE1 PUSH2 0x1B69 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BF0 DUP5 DUP3 DUP6 ADD PUSH2 0x1BB7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C0C DUP2 PUSH2 0x1BF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C27 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C42 DUP2 PUSH2 0x1C2D JUMP JUMPDEST DUP2 EQ PUSH2 0x1C4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C5F DUP2 PUSH2 0x1C39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C7C JUMPI PUSH2 0x1C7B PUSH2 0x1B69 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C8A DUP6 DUP3 DUP7 ADD PUSH2 0x1BB7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C9B DUP6 DUP3 DUP7 ADD PUSH2 0x1C50 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CAE DUP2 PUSH2 0x1C2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CC9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CD8 DUP2 PUSH2 0x1BF9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CF5 DUP2 PUSH2 0x1CCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D11 JUMPI PUSH2 0x1D10 PUSH2 0x1B69 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D1F DUP5 DUP3 DUP6 ADD PUSH2 0x1CE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D31 DUP2 PUSH2 0x1B8E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D4C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D69 JUMPI PUSH2 0x1D68 PUSH2 0x1B69 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D77 DUP6 DUP3 DUP7 ADD PUSH2 0x1BB7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D88 DUP6 DUP3 DUP7 ADD PUSH2 0x1CE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB7 PUSH2 0x1DB2 PUSH2 0x1DAD DUP5 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1D92 JUMP JUMPDEST PUSH2 0x1B6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC9 DUP3 PUSH2 0x1D9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DDB DUP3 PUSH2 0x1DBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DEB DUP2 PUSH2 0x1DD0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E06 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E23 JUMPI PUSH2 0x1E22 PUSH2 0x1B69 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E31 DUP6 DUP3 DUP7 ADD PUSH2 0x1CE6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E42 DUP6 DUP3 DUP7 ADD PUSH2 0x1CE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646D696E61626C653A2063616C6C6572206973206E6F7420746865206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB9 PUSH1 0x22 DUP4 PUSH2 0x1E4C JUMP JUMPDEST SWAP2 POP PUSH2 0x1EC4 DUP3 PUSH2 0x1E5D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EE8 DUP2 PUSH2 0x1EAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F04 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1CA5 JUMP JUMPDEST PUSH2 0x1F11 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CA5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F4E PUSH1 0x1F DUP4 PUSH2 0x1E4C JUMP JUMPDEST SWAP2 POP PUSH2 0x1F59 DUP3 PUSH2 0x1F18 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F7D DUP2 PUSH2 0x1F41 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F99 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D28 JUMP JUMPDEST PUSH2 0x1FA6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C03 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FBC DUP2 PUSH2 0x1C39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FD8 JUMPI PUSH2 0x1FD7 PUSH2 0x1B69 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FE6 DUP5 DUP3 DUP6 ADD PUSH2 0x1FAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646D696E61626C653A2063616C6C6572206973206E6F74207468652061646D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x696E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x204B PUSH1 0x22 DUP4 PUSH2 0x1E4C JUMP JUMPDEST SWAP2 POP PUSH2 0x2056 DUP3 PUSH2 0x1FEF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x207A DUP2 PUSH2 0x203E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x20BB DUP3 PUSH2 0x1BF9 JUMP JUMPDEST SWAP2 POP PUSH2 0x20C6 DUP4 PUSH2 0x1BF9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x20DE JUMPI PUSH2 0x20DD PUSH2 0x2081 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x211E DUP3 PUSH2 0x1BF9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2129 DUP4 PUSH2 0x1BF9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2139 JUMPI PUSH2 0x2138 PUSH2 0x20E4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x214F DUP3 PUSH2 0x1BF9 JUMP JUMPDEST SWAP2 POP PUSH2 0x215A DUP4 PUSH2 0x1BF9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2172 JUMPI PUSH2 0x2171 PUSH2 0x2081 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2183 DUP3 PUSH2 0x1BF9 JUMP JUMPDEST SWAP2 POP PUSH2 0x218E DUP4 PUSH2 0x1BF9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x219C DUP2 PUSH2 0x1BF9 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x21B3 JUMPI PUSH2 0x21B2 PUSH2 0x2081 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C5 DUP3 PUSH2 0x1BF9 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x21F7 JUMPI PUSH2 0x21F6 PUSH2 0x2081 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2238 PUSH1 0xE DUP4 PUSH2 0x1E4C JUMP JUMPDEST SWAP2 POP PUSH2 0x2243 DUP3 PUSH2 0x2202 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2267 DUP2 PUSH2 0x222B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2279 DUP3 PUSH2 0x1BF9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2284 DUP4 PUSH2 0x1BF9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2294 JUMPI PUSH2 0x2293 PUSH2 0x20E4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22FB PUSH1 0x26 DUP4 PUSH2 0x1E4C JUMP JUMPDEST SWAP2 POP PUSH2 0x2306 DUP3 PUSH2 0x229F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x232A DUP2 PUSH2 0x22EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC CALLER 0x23 PUSH25 0x25E35C9766025E5E317237C6EC8DE000CABD00B504C0F8BE8E 0xAF 0xBD 0xEE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "371:6984:1:-:0;;;581:17;551:47;;666:10;636:40;;722:1;683:40;;771:4;730:45;;371:6984;;;;;;;;;;603:32:0;622:12;:10;;;:12;;:::i;:::-;603:18;;;:32;;:::i;:::-;1734:1:2;1845:7;:22;;;;371:6984:1;;63:98:0;116:7;143:10;136:17;;63:98;:::o;1443:191::-;1517:16;1536:6;;;;;;;;;;;1517:25;;1562:8;1553:6;;:17;;;;;;;;;;;;;;;;;;1617:8;1586:40;;1607:8;1586:40;;;;;;;;;;;;1506:128;1443:191;:::o;371:6984:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_getRewardRate_561": {
									"entryPoint": 6968,
									"id": 561,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_10": {
									"entryPoint": 6762,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_150": {
									"entryPoint": 6770,
									"id": 150,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_1775": {
									"entryPoint": 6740,
									"id": 1775,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@claimedBalances_232": {
									"entryPoint": 5706,
									"id": 232,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@curTime_338": {
									"entryPoint": 4426,
									"id": 338,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@div_1820": {
									"entryPoint": 6718,
									"id": 1820,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@earned_643": {
									"entryPoint": 1668,
									"id": 643,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@emergencyWithdrawToken_959": {
									"entryPoint": 4434,
									"id": 959,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@emergencyWithdraw_940": {
									"entryPoint": 6217,
									"id": 940,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCurRewardPool_361": {
									"entryPoint": 4410,
									"id": 361,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCurRewardRate_538": {
									"entryPoint": 5652,
									"id": 538,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRemainPool_527": {
									"entryPoint": 3487,
									"id": 527,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRewardPool_419": {
									"entryPoint": 3638,
									"id": 419,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getReward_895": {
									"entryPoint": 2522,
									"id": 895,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getTimeWeightedAveRate_807": {
									"entryPoint": 5730,
									"id": 807,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isAdmin_96": {
									"entryPoint": 2431,
									"id": 96,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lastTimeRewardApplicable_570": {
									"entryPoint": 3979,
									"id": 570,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lastUpdateTime_216": {
									"entryPoint": 5646,
									"id": 216,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@modificationAdmin_174": {
									"entryPoint": 2062,
									"id": 174,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mul_1805": {
									"entryPoint": 6696,
									"id": 1805,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_84": {
									"entryPoint": 4368,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@powersOf_350": {
									"entryPoint": 5573,
									"id": 350,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@rateIntervalDenominator_214": {
									"entryPoint": 3973,
									"id": 214,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rateIntervalNumerator_211": {
									"entryPoint": 2516,
									"id": 211,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rateInterval_208": {
									"entryPoint": 3815,
									"id": 208,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_109": {
									"entryPoint": 3831,
									"id": 109,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerTokenStored_218": {
									"entryPoint": 6421,
									"id": 218,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerToken_603": {
									"entryPoint": 4011,
									"id": 603,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@rewardsToken_192": {
									"entryPoint": 5668,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewards_196": {
									"entryPoint": 2032,
									"id": 196,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setRewardToken_909": {
									"entryPoint": 4152,
									"id": 909,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setStartTime_321": {
									"entryPoint": 3391,
									"id": 321,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_852": {
									"entryPoint": 4689,
									"id": 852,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@startTime_205": {
									"entryPoint": 3967,
									"id": 205,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_1790": {
									"entryPoint": 6674,
									"id": 1790,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalPowers_329": {
									"entryPoint": 3821,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalRewards_203": {
									"entryPoint": 2056,
									"id": 203,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_131": {
									"entryPoint": 6427,
									"id": 131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userLastUpdateTime_228": {
									"entryPoint": 3987,
									"id": 228,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userRewardPerTokenPaid_224": {
									"entryPoint": 4344,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 7692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$1078_to_t_address_fromStack": {
									"entryPoint": 7650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8068,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed": {
									"entryPoint": 7919,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$1078__to_t_address__fromStack_reversed": {
									"entryPoint": 7665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$1078_to_t_address": {
									"entryPoint": 7632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7580,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 7570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 8814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8321,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8420,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7017,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 8863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab": {
									"entryPoint": 8706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb": {
									"entryPoint": 7773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045": {
									"entryPoint": 8175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 7960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13753:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:7",
														"type": ""
													}
												],
												"src": "696:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:7"
															},
															"nodeType": "YulIf",
															"src": "917:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:7",
														"type": ""
													}
												],
												"src": "841:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1221:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1231:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1242:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1203:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1213:7:7",
														"type": ""
													}
												],
												"src": "1176:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1324:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1319:3:7",
														"type": ""
													}
												],
												"src": "1259:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1481:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1491:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1453:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1465:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1476:4:7",
														"type": ""
													}
												],
												"src": "1383:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1653:48:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1663:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1688:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1681:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1674:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1663:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1635:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1645:7:7",
														"type": ""
													}
												],
												"src": "1611:90:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1747:76:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1801:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1810:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1813:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1803:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1803:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1803:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1770:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1792:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "1777:14:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1777:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1767:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1767:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1760:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1760:40:7"
															},
															"nodeType": "YulIf",
															"src": "1757:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1740:5:7",
														"type": ""
													}
												],
												"src": "1707:116:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1878:84:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1888:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1910:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1897:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1888:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1950:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "1926:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1926:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1926:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1856:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1864:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1872:5:7",
														"type": ""
													}
												],
												"src": "1829:133:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2048:388:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2094:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2096:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2096:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2096:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2069:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2078:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2065:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2065:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2090:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2061:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2061:32:7"
															},
															"nodeType": "YulIf",
															"src": "2058:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "2187:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2202:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2216:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2206:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2231:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2266:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2277:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2262:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2262:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2286:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2241:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2241:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2231:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2314:115:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2329:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2343:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2333:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2359:60:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2391:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2402:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2387:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2387:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2411:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2369:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2369:50:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2359:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2010:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2021:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2033:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2041:6:7",
														"type": ""
													}
												],
												"src": "1968:468:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2501:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2518:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2538:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2523:14:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2523:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2511:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2511:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2511:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2489:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2496:3:7",
														"type": ""
													}
												],
												"src": "2442:109:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2649:118:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2659:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2671:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2682:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2667:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2667:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2659:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2733:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2746:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2757:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2742:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2742:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2695:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2695:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2695:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2621:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2633:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2644:4:7",
														"type": ""
													}
												],
												"src": "2557:210:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2816:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2873:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2882:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2885:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2875:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2875:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2875:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2839:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2864:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2846:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2846:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2836:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2836:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2829:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2829:43:7"
															},
															"nodeType": "YulIf",
															"src": "2826:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2809:5:7",
														"type": ""
													}
												],
												"src": "2773:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2953:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2963:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2985:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2972:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2972:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2963:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3028:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3001:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3001:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3001:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2931:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2939:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2947:5:7",
														"type": ""
													}
												],
												"src": "2901:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3112:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3158:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3160:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3160:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3160:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3133:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3142:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3129:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3129:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3154:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3125:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3125:32:7"
															},
															"nodeType": "YulIf",
															"src": "3122:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "3251:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3266:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3280:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3270:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3295:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3330:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3341:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3326:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3326:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3350:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3305:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3305:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3295:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3082:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3093:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3105:6:7",
														"type": ""
													}
												],
												"src": "3046:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3446:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3463:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3486:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3468:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3468:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3456:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3456:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3456:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3434:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3441:3:7",
														"type": ""
													}
												],
												"src": "3381:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3603:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3613:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3625:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3636:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3621:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3621:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3613:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3693:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3706:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3717:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3702:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3702:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3649:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3649:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3649:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3575:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3587:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3598:4:7",
														"type": ""
													}
												],
												"src": "3505:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3816:391:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3862:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3864:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3864:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3864:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3837:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3846:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3833:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3833:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3858:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3829:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3829:32:7"
															},
															"nodeType": "YulIf",
															"src": "3826:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "3955:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3970:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3984:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3974:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3999:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4034:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4030:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4030:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4054:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4009:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4009:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3999:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4082:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4097:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4111:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4101:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4127:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4162:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4173:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4158:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4158:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4182:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4137:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4137:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4127:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3778:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3789:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3801:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3809:6:7",
														"type": ""
													}
												],
												"src": "3733:474:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4245:28:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4255:12:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4262:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4255:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4231:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4241:3:7",
														"type": ""
													}
												],
												"src": "4213:60:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4339:82:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4349:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4407:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "4389:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4389:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "4380:8:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4380:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4362:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4362:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4349:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4319:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4329:9:7",
														"type": ""
													}
												],
												"src": "4279:142:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4487:66:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4497:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4541:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4510:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4510:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4497:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4467:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4477:9:7",
														"type": ""
													}
												],
												"src": "4427:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4634:66:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4644:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4688:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4657:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4657:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4644:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$1078_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4614:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4624:9:7",
														"type": ""
													}
												],
												"src": "4559:141:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4786:81:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4803:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4854:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$1078_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4808:45:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4808:52:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4796:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4796:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4796:65:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$1078_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4774:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4781:3:7",
														"type": ""
													}
												],
												"src": "4706:161:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4986:139:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4996:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5008:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5019:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5004:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5004:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4996:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5091:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5104:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5115:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5100:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5100:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$1078_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5032:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5032:86:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5032:86:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$1078__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4958:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4970:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4981:4:7",
														"type": ""
													}
												],
												"src": "4873:252:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5214:391:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5260:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5262:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5262:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5262:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5235:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5244:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5231:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5231:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5256:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5227:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5227:32:7"
															},
															"nodeType": "YulIf",
															"src": "5224:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "5353:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5368:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5382:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5372:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5397:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5432:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5443:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5428:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5428:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5452:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5407:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5407:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5397:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5480:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5495:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5509:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5499:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5525:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5560:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5571:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5556:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5556:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5580:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5535:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5535:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5525:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5176:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5187:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5199:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5207:6:7",
														"type": ""
													}
												],
												"src": "5131:474:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5707:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5724:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5729:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5717:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5717:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5717:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5745:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5764:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5769:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5760:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5760:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5745:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5679:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5684:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5695:11:7",
														"type": ""
													}
												],
												"src": "5611:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5892:115:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5914:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5922:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5910:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5910:14:7"
																	},
																	{
																		"hexValue": "41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5926:34:7",
																		"type": "",
																		"value": "Adminable: caller is not the own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5903:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5903:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5903:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5982:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5990:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5978:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5978:15:7"
																	},
																	{
																		"hexValue": "6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5995:4:7",
																		"type": "",
																		"value": "er"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5971:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5971:29:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5971:29:7"
														}
													]
												},
												"name": "store_literal_in_memory_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5884:6:7",
														"type": ""
													}
												],
												"src": "5786:221:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6159:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6169:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6235:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6240:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6176:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6176:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6169:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6341:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb",
																	"nodeType": "YulIdentifier",
																	"src": "6252:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6252:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6252:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6354:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6365:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6370:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6361:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6361:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6354:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6147:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6155:3:7",
														"type": ""
													}
												],
												"src": "6013:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6556:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6566:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6578:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6589:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6574:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6574:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6566:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6613:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6624:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6609:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6609:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6632:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6638:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6628:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6628:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6602:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6602:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6602:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6658:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6792:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6666:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6666:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6658:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6536:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6551:4:7",
														"type": ""
													}
												],
												"src": "6385:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6924:194:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6934:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6946:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6957:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6942:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6942:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6934:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7008:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7021:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7032:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7017:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7017:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6970:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6970:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6970:65:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7083:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7096:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7107:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7092:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7092:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7045:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7045:66:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7045:66:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6888:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6900:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6908:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6919:4:7",
														"type": ""
													}
												],
												"src": "6810:308:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7230:75:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7252:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7260:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7248:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7248:14:7"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7264:33:7",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7241:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7241:57:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7241:57:7"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7222:6:7",
														"type": ""
													}
												],
												"src": "7124:181:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7457:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7467:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7533:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7538:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7474:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7474:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7467:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7639:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "7550:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7550:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7550:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7652:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7663:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7668:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7659:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7659:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7652:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7445:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7453:3:7",
														"type": ""
													}
												],
												"src": "7311:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7854:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7864:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7876:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7887:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7872:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7872:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7864:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7911:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7922:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7907:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7907:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7930:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7936:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7926:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7926:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7900:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7900:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7900:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7956:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8090:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7964:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7964:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7956:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7834:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7849:4:7",
														"type": ""
													}
												],
												"src": "7683:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8234:206:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8244:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8256:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8267:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8252:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8252:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8244:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8324:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8337:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8348:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8333:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8333:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8280:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8280:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8280:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8405:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8418:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8429:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8414:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8414:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8361:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8361:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8361:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8198:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8210:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8218:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8229:4:7",
														"type": ""
													}
												],
												"src": "8108:332:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8506:77:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8516:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8531:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8525:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8525:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8516:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8571:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "8547:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8547:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8547:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8484:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8492:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8500:5:7",
														"type": ""
													}
												],
												"src": "8446:137:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8663:271:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8709:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8711:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8711:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8711:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8684:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8693:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8680:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8680:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8705:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8676:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8676:32:7"
															},
															"nodeType": "YulIf",
															"src": "8673:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "8802:125:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8817:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8831:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8821:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8846:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8889:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8900:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8885:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8885:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8909:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8856:28:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8856:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8846:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8633:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8644:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8656:6:7",
														"type": ""
													}
												],
												"src": "8589:345:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9046:115:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9068:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9076:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9064:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9064:14:7"
																	},
																	{
																		"hexValue": "41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9080:34:7",
																		"type": "",
																		"value": "Adminable: caller is not the adm"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9057:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9057:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9057:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9136:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9144:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9132:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9132:15:7"
																	},
																	{
																		"hexValue": "696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9149:4:7",
																		"type": "",
																		"value": "in"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9125:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9125:29:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9125:29:7"
														}
													]
												},
												"name": "store_literal_in_memory_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9038:6:7",
														"type": ""
													}
												],
												"src": "8940:221:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9313:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9323:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9389:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9394:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9330:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9330:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9323:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9495:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045",
																	"nodeType": "YulIdentifier",
																	"src": "9406:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9406:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9406:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9508:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9519:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9524:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9515:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9515:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9508:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9301:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9309:3:7",
														"type": ""
													}
												],
												"src": "9167:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9710:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9720:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9732:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9743:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9728:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9728:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9720:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9767:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9778:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9763:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9763:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9786:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9792:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9782:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9782:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9756:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9756:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9756:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9812:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9946:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9820:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9820:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9812:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9690:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9705:4:7",
														"type": ""
													}
												],
												"src": "9539:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9992:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10009:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10012:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10002:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10002:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10002:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10106:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10109:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10099:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10099:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10099:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10130:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10133:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10123:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10123:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10123:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9964:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10195:149:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10205:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10228:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10210:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10210:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10205:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10239:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10262:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10244:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10244:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10239:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10273:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10285:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10288:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10281:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10281:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10273:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10315:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10317:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10317:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10317:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "10306:4:7"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10312:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10303:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10303:11:7"
															},
															"nodeType": "YulIf",
															"src": "10300:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10181:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10184:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10190:4:7",
														"type": ""
													}
												],
												"src": "10150:194:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10378:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10395:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10398:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10388:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10388:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10388:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10492:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10495:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10485:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10485:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10485:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10516:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10519:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10509:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10509:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10509:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "10350:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10578:143:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10588:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10611:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10593:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10593:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10588:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10622:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10645:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10627:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10627:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10622:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10669:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "10671:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10671:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10671:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10666:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10659:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10659:9:7"
															},
															"nodeType": "YulIf",
															"src": "10656:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10701:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10710:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10713:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10706:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10706:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10701:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10567:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10570:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10576:1:7",
														"type": ""
													}
												],
												"src": "10536:185:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10771:147:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10781:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10804:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10786:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10786:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10781:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10815:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10838:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10820:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10820:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10815:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10849:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10860:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10863:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10856:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10856:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10849:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10889:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10891:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10891:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10891:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10881:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "10884:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10878:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10878:10:7"
															},
															"nodeType": "YulIf",
															"src": "10875:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10758:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10761:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10767:3:7",
														"type": ""
													}
												],
												"src": "10727:191:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10972:362:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10982:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11005:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10987:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10987:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10982:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11016:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11039:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11021:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11021:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11016:1:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11050:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11073:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11076:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11069:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11069:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "11054:11:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11087:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "11116:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11098:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11098:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11087:7:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11305:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11307:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11307:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11307:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11238:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11231:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11231:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "11261:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "11268:7:7"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "11277:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "11264:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11264:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "11258:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11258:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "11211:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11211:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11191:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11191:113:7"
															},
															"nodeType": "YulIf",
															"src": "11188:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10955:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10958:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10964:7:7",
														"type": ""
													}
												],
												"src": "10924:410:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11383:190:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11393:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11420:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11402:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11402:24:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11393:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11516:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11518:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11518:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11518:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11441:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11448:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11438:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11438:77:7"
															},
															"nodeType": "YulIf",
															"src": "11435:103:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11547:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11558:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11565:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11554:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11554:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11547:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11369:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "11379:3:7",
														"type": ""
													}
												],
												"src": "11340:233:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11685:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11707:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11715:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11703:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11703:14:7"
																	},
																	{
																		"hexValue": "43616e6e6f74207374616b652030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11719:16:7",
																		"type": "",
																		"value": "Cannot stake 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11696:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11696:40:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11696:40:7"
														}
													]
												},
												"name": "store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11677:6:7",
														"type": ""
													}
												],
												"src": "11579:164:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11895:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11905:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11971:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11976:2:7",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11912:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11912:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11905:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12077:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																	"nodeType": "YulIdentifier",
																	"src": "11988:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11988:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11988:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12090:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12101:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12106:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12097:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12097:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12090:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11883:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11891:3:7",
														"type": ""
													}
												],
												"src": "11749:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12292:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12302:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12314:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12325:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12310:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12310:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12302:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12349:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12360:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12345:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12345:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12368:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12374:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12364:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12364:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12338:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12338:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12338:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12394:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12528:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12402:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12402:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12394:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12272:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12287:4:7",
														"type": ""
													}
												],
												"src": "12121:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12580:142:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12590:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12613:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12595:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12595:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12590:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12624:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12647:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12629:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12629:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12624:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12671:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12673:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12673:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12673:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12668:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12661:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12661:9:7"
															},
															"nodeType": "YulIf",
															"src": "12658:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12702:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12711:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12714:1:7"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "12707:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12707:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12702:1:7"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12569:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12572:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12578:1:7",
														"type": ""
													}
												],
												"src": "12546:176:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12834:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12856:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12864:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12852:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12852:14:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12868:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12845:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12845:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12845:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12924:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12932:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12920:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12920:15:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12937:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12913:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12913:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12913:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12826:6:7",
														"type": ""
													}
												],
												"src": "12728:225:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13105:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13115:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13181:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13186:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13122:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13122:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13115:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13287:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "13198:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13198:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13198:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13300:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13311:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13316:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13307:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13307:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13300:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13093:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13101:3:7",
														"type": ""
													}
												],
												"src": "12959:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13502:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13512:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13524:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13535:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13520:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13520:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13512:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13559:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13570:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13555:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13555:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13578:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13584:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13574:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13574:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13548:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13548:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13548:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13604:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13738:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13612:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13612:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13604:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13482:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13497:4:7",
														"type": ""
													}
												],
												"src": "13331:419:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$1078_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$1078_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$1078_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$1078__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$1078_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Adminable: caller is not the own\")\n\n        mstore(add(memPtr, 32), \"er\")\n\n    }\n\n    function abi_encode_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045(memPtr) {\n\n        mstore(add(memPtr, 0), \"Adminable: caller is not the adm\")\n\n        mstore(add(memPtr, 32), \"in\")\n\n    }\n\n    function abi_encode_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot stake 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106102055760003560e01c8063874c120b1161011a578063b79ec812116100ad578063d42b779d1161007c578063d42b779d146105e0578063da4f843114610610578063db2e21bc14610640578063df136d651461064a578063f2fde38b1461066857610205565b8063b79ec81214610556578063c8f33c9114610586578063cdda56e0146105a4578063d1af0c7d146105c257610205565b80639499c549116100e95780639499c549146104e25780639a5b17b014610500578063a4c3b0911461051e578063adc9772e1461053a57610205565b8063874c120b146104485780638aee8127146104785780638b876347146104945780638da5cb5b146104c457610205565b80634dbdc4eb1161019d578063715018a61161016c578063715018a6146103b457806378e97925146103be5780637a6fcee7146103dc57806380faa57d146103fa5780638107368b1461041857610205565b80634dbdc4eb146103185780635cfa91f4146103485780636139d4b4146103785780636917c5011461039657610205565b806324d7806c116101d957806324d7806c146102a45780633c4045cf146102d45780633d18b912146102f25780633e0a322d146102fc57610205565b80628cc2621461020a5780630700037d1461023a5780630e15561a1461026a57806318e20ecf14610288575b600080fd5b610224600480360381019061021f9190611bcc565b610684565b6040516102319190611c12565b60405180910390f35b610254600480360381019061024f9190611bcc565b6107f0565b6040516102619190611c12565b60405180910390f35b610272610808565b60405161027f9190611c12565b60405180910390f35b6102a2600480360381019061029d9190611c65565b61080e565b005b6102be60048036038101906102b99190611bcc565b61097f565b6040516102cb9190611cb4565b60405180910390f35b6102dc6109d4565b6040516102e99190611c12565b60405180910390f35b6102fa6109da565b005b61031660048036038101906103119190611cfb565b610d3f565b005b610332600480360381019061032d9190611cfb565b610d9f565b60405161033f9190611c12565b60405180910390f35b610362600480360381019061035d9190611cfb565b610e36565b60405161036f9190611c12565b60405180910390f35b610380610ee7565b60405161038d9190611c12565b60405180910390f35b61039e610eed565b6040516103ab9190611c12565b60405180910390f35b6103bc610ef7565b005b6103c6610f7f565b6040516103d39190611c12565b60405180910390f35b6103e4610f85565b6040516103f19190611c12565b60405180910390f35b610402610f8b565b60405161040f9190611c12565b60405180910390f35b610432600480360381019061042d9190611bcc565b610f93565b60405161043f9190611c12565b60405180910390f35b610462600480360381019061045d9190611cfb565b610fab565b60405161046f9190611c12565b60405180910390f35b610492600480360381019061048d9190611bcc565b611038565b005b6104ae60048036038101906104a99190611bcc565b6110f8565b6040516104bb9190611c12565b60405180910390f35b6104cc611110565b6040516104d99190611d37565b60405180910390f35b6104ea61113a565b6040516104f79190611c12565b60405180910390f35b61050861114a565b6040516105159190611c12565b60405180910390f35b61053860048036038101906105339190611d52565b611152565b005b610554600480360381019061054f9190611d52565b611251565b005b610570600480360381019061056b9190611bcc565b6115c5565b60405161057d9190611c12565b60405180910390f35b61058e61160e565b60405161059b9190611c12565b60405180910390f35b6105ac611614565b6040516105b99190611c12565b60405180910390f35b6105ca611624565b6040516105d79190611df1565b60405180910390f35b6105fa60048036038101906105f59190611bcc565b61164a565b6040516106079190611c12565b60405180910390f35b61062a60048036038101906106259190611e0c565b611662565b6040516106379190611c12565b60405180910390f35b610648611849565b005b610652611915565b60405161065f9190611c12565b60405180910390f35b610682600480360381019061067d9190611bcc565b61191b565b005b6000806106d0600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442611662565b90506107e8600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107da670de0b6b3a76400006107cc61077e600d60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461077088610fab565b611a1290919063ffffffff16565b601060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a2890919063ffffffff16565b611a3e90919063ffffffff16565b611a5490919063ffffffff16565b915050919050565b60046020528060005260406000206000915090505481565b60055481565b610816611a6a565b73ffffffffffffffffffffffffffffffffffffffff16610834611110565b73ffffffffffffffffffffffffffffffffffffffff161461088a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088190611ecf565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f82f1fa40a3d82dea3e406073819290601f436580aa7c69f9feb61f885bdd88546000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168360405161091d929190611eef565b60405180910390a2806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60085481565b6002805403610a1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1590611f64565b60405180910390fd5b60028081905550336000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506006548111610a795760065490505b6000610a858242611662565b9050610a9081610fab565b600b81905550610a9e610f8b565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610baf57610ae183610684565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115610d31576000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610c9e929190611f84565b6020604051808303816000875af1158015610cbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce19190611fc2565b503373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048682604051610d289190611c12565b60405180910390a25b505050506001600281905550565b610d4f610d4a611a6a565b61097f565b610d8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8590612061565b60405180910390fd5b8060068190555080600a8190555050565b60008060065403610db4576006549050610e31565b6000600160075460065485610dc991906120b0565b610dd39190612113565b610ddd9190612144565b90506000600554905060005b82811015610e2a5760095460085483610e029190612178565b610e0c9190612113565b82610e1791906120b0565b915080610e23906121ba565b9050610de9565b5080925050505b919050565b60008060065403610e4b576005549050610ee2565b6000600160075460065485610e6091906120b0565b610e6a9190612113565b610e749190612144565b90506000600554905060005b82811015610ec15760095460085483610e999190612178565b610ea39190612113565b82610eae91906120b0565b915080610eba906121ba565b9050610e80565b5060095460085482610ed39190612178565b610edd9190612113565b925050505b919050565b60075481565b6000600c54905090565b610eff611a6a565b73ffffffffffffffffffffffffffffffffffffffff16610f1d611110565b73ffffffffffffffffffffffffffffffffffffffff1614610f73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6a90611ecf565b60405180910390fd5b610f7d6000611a72565b565b60065481565b60095481565b600042905090565b600e6020528060005260406000206000915090505481565b600080600c5403610fc057600b549050611033565b61103061101f600c54611011670de0b6b3a764000061100387610ff5600a54610fe7610f8b565b611a1290919063ffffffff16565b611a2890919063ffffffff16565b611a2890919063ffffffff16565b611a3e90919063ffffffff16565b600b54611a5490919063ffffffff16565b90505b919050565b611040611a6a565b73ffffffffffffffffffffffffffffffffffffffff1661105e611110565b73ffffffffffffffffffffffffffffffffffffffff16146110b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ab90611ecf565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600d6020528060005260406000206000915090505481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061114542610e36565b905090565b600042905090565b61115a611a6a565b73ffffffffffffffffffffffffffffffffffffffff16611178611110565b73ffffffffffffffffffffffffffffffffffffffff16146111ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c590611ecf565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401611209929190611f84565b6020604051808303816000875af1158015611228573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124c9190611fc2565b505050565b6002805403611295576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128c90611f64565b60405180910390fd5b600280819055506112ac6112a7611a6a565b61097f565b6112eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e290612061565b60405180910390fd5b816000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600654811161133f5760065490505b600061134b8242611662565b905061135681610fab565b600b81905550611364610f8b565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611475576113a783610684565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600084116114b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114af9061224e565b60405180910390fd5b6114cd84600c54611a5490919063ffffffff16565b600c8190555061152584601060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a5490919063ffffffff16565b601060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d856040516115ae9190611c12565b60405180910390a250505060016002819055505050565b6000601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600a5481565b600061161f42611b38565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600f6020528060005260406000206000915090505481565b60008060065414806116745750818310155b8061167f5750600083145b1561168d5760009050611843565b60065483101561169d5760065492505b6000600754600754600654866116b391906120b0565b6116bd919061226e565b6007546116ca91906120b0565b6116d4919061226e565b90506000600754826116e587610e36565b6116ef9190612178565b6116f99190612113565b905060006007546006548661170e91906120b0565b611718919061226e565b905060006007548261172988610e36565b6117339190612178565b61173d9190612113565b905085848861174c9190612144565b11156117665761175b87611b38565b945050505050611843565b60008488848961177691906120b0565b61178091906120b0565b61178a91906120b0565b9050600061179789610d9f565b905060008060008390506000600754866117b19190612113565b905060005b8181101561180857600954600854846117cf9190612178565b6117d99190612113565b935083836117e791906120b0565b925083856117f59190612144565b945080611801906121ba565b90506117b6565b508c8c61181591906120b0565b878a866118229190612144565b61182c9190612144565b6118369190612113565b9a50505050505050505050505b92915050565b611851611a6a565b73ffffffffffffffffffffffffffffffffffffffff1661186f611110565b73ffffffffffffffffffffffffffffffffffffffff16146118c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118bc90611ecf565b60405180910390fd5b6118cd611110565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015611912573d6000803e3d6000fd5b50565b600b5481565b611923611a6a565b73ffffffffffffffffffffffffffffffffffffffff16611941611110565b73ffffffffffffffffffffffffffffffffffffffff1614611997576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161198e90611ecf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611a06576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119fd90612311565b60405180910390fd5b611a0f81611a72565b50565b60008183611a2091906120b0565b905092915050565b60008183611a369190612178565b905092915050565b60008183611a4c9190612113565b905092915050565b60008183611a629190612144565b905092915050565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080611b4483610e36565b90506000611b5d60075483611a3e90919063ffffffff16565b90508092505050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611b9982611b6e565b9050919050565b611ba981611b8e565b8114611bb457600080fd5b50565b600081359050611bc681611ba0565b92915050565b600060208284031215611be257611be1611b69565b5b6000611bf084828501611bb7565b91505092915050565b6000819050919050565b611c0c81611bf9565b82525050565b6000602082019050611c276000830184611c03565b92915050565b60008115159050919050565b611c4281611c2d565b8114611c4d57600080fd5b50565b600081359050611c5f81611c39565b92915050565b60008060408385031215611c7c57611c7b611b69565b5b6000611c8a85828601611bb7565b9250506020611c9b85828601611c50565b9150509250929050565b611cae81611c2d565b82525050565b6000602082019050611cc96000830184611ca5565b92915050565b611cd881611bf9565b8114611ce357600080fd5b50565b600081359050611cf581611ccf565b92915050565b600060208284031215611d1157611d10611b69565b5b6000611d1f84828501611ce6565b91505092915050565b611d3181611b8e565b82525050565b6000602082019050611d4c6000830184611d28565b92915050565b60008060408385031215611d6957611d68611b69565b5b6000611d7785828601611bb7565b9250506020611d8885828601611ce6565b9150509250929050565b6000819050919050565b6000611db7611db2611dad84611b6e565b611d92565b611b6e565b9050919050565b6000611dc982611d9c565b9050919050565b6000611ddb82611dbe565b9050919050565b611deb81611dd0565b82525050565b6000602082019050611e066000830184611de2565b92915050565b60008060408385031215611e2357611e22611b69565b5b6000611e3185828601611ce6565b9250506020611e4285828601611ce6565b9150509250929050565b600082825260208201905092915050565b7f41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b6000611eb9602283611e4c565b9150611ec482611e5d565b604082019050919050565b60006020820190508181036000830152611ee881611eac565b9050919050565b6000604082019050611f046000830185611ca5565b611f116020830184611ca5565b9392505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611f4e601f83611e4c565b9150611f5982611f18565b602082019050919050565b60006020820190508181036000830152611f7d81611f41565b9050919050565b6000604082019050611f996000830185611d28565b611fa66020830184611c03565b9392505050565b600081519050611fbc81611c39565b92915050565b600060208284031215611fd857611fd7611b69565b5b6000611fe684828501611fad565b91505092915050565b7f41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d60008201527f696e000000000000000000000000000000000000000000000000000000000000602082015250565b600061204b602283611e4c565b915061205682611fef565b604082019050919050565b6000602082019050818103600083015261207a8161203e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006120bb82611bf9565b91506120c683611bf9565b92508282039050818111156120de576120dd612081565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061211e82611bf9565b915061212983611bf9565b925082612139576121386120e4565b5b828204905092915050565b600061214f82611bf9565b915061215a83611bf9565b925082820190508082111561217257612171612081565b5b92915050565b600061218382611bf9565b915061218e83611bf9565b925082820261219c81611bf9565b915082820484148315176121b3576121b2612081565b5b5092915050565b60006121c582611bf9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036121f7576121f6612081565b5b600182019050919050565b7f43616e6e6f74207374616b652030000000000000000000000000000000000000600082015250565b6000612238600e83611e4c565b915061224382612202565b602082019050919050565b600060208201905081810360008301526122678161222b565b9050919050565b600061227982611bf9565b915061228483611bf9565b925082612294576122936120e4565b5b828206905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006122fb602683611e4c565b91506123068261229f565b604082019050919050565b6000602082019050818103600083015261232a816122ee565b905091905056fea26469706673582212200c33237825e35c9766025e5e317237c6ec8de000cabd00b504c0f8be8eafbdee64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x205 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x874C120B GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xB79EC812 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD42B779D GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD42B779D EQ PUSH2 0x5E0 JUMPI DUP1 PUSH4 0xDA4F8431 EQ PUSH2 0x610 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x640 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x64A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x668 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0xB79EC812 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x586 JUMPI DUP1 PUSH4 0xCDDA56E0 EQ PUSH2 0x5A4 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x5C2 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0x9499C549 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x9499C549 EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0x9A5B17B0 EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0xA4C3B091 EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0xADC9772E EQ PUSH2 0x53A JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0x874C120B EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x8AEE8127 EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4C4 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0x4DBDC4EB GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0x7A6FCEE7 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x8107368B EQ PUSH2 0x418 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0x4DBDC4EB EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x5CFA91F4 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x6139D4B4 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x6917C501 EQ PUSH2 0x396 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0x24D7806C GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x3C4045CF EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x3E0A322D EQ PUSH2 0x2FC JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x18E20ECF EQ PUSH2 0x288 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x254 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH2 0x808 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST PUSH2 0x80E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0x97F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1CB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DC PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FA PUSH2 0x9DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0xD3F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x332 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0xD9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x362 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0xE36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH2 0xEE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39E PUSH2 0xEED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BC PUSH2 0xEF7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C6 PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E4 PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x402 PUSH2 0xF8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x432 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0xF93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x462 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0xFAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x492 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48D SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0x1038 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0x10F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CC PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D9 SWAP2 SWAP1 PUSH2 0x1D37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EA PUSH2 0x113A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F7 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x508 PUSH2 0x114A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x515 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x538 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x1D52 JUMP JUMPDEST PUSH2 0x1152 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x554 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54F SWAP2 SWAP1 PUSH2 0x1D52 JUMP JUMPDEST PUSH2 0x1251 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x570 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56B SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0x15C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57D SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58E PUSH2 0x160E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59B SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AC PUSH2 0x1614 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CA PUSH2 0x1624 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F5 SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0x164A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x607 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x62A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x625 SWAP2 SWAP1 PUSH2 0x1E0C JUMP JUMPDEST PUSH2 0x1662 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x637 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x648 PUSH2 0x1849 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x652 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65F SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x682 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x67D SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0x191B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6D0 PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x1662 JUMP JUMPDEST SWAP1 POP PUSH2 0x7E8 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x7DA PUSH8 0xDE0B6B3A7640000 PUSH2 0x7CC PUSH2 0x77E PUSH1 0xD PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x770 DUP9 PUSH2 0xFAB JUMP JUMPDEST PUSH2 0x1A12 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1A28 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A3E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x816 PUSH2 0x1A6A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x834 PUSH2 0x1110 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x88A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x881 SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x82F1FA40A3D82DEA3E406073819290601F436580AA7C69F9FEB61F885BDD8854 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x91D SWAP3 SWAP2 SWAP1 PUSH2 0x1EEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0xA1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA15 SWAP1 PUSH2 0x1F64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x6 SLOAD DUP2 GT PUSH2 0xA79 JUMPI PUSH1 0x6 SLOAD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0xA85 DUP3 TIMESTAMP PUSH2 0x1662 JUMP JUMPDEST SWAP1 POP PUSH2 0xA90 DUP2 PUSH2 0xFAB JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0xA9E PUSH2 0xF8B JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBAF JUMPI PUSH2 0xAE1 DUP4 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xD31 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9E SWAP3 SWAP2 SWAP1 PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCBD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCE1 SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD PUSH2 0xD28 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xD4F PUSH2 0xD4A PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0x97F JUMP JUMPDEST PUSH2 0xD8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD85 SWAP1 PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xA DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD SUB PUSH2 0xDB4 JUMPI PUSH1 0x6 SLOAD SWAP1 POP PUSH2 0xE31 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP6 PUSH2 0xDC9 SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0xDD3 SWAP2 SWAP1 PUSH2 0x2113 JUMP JUMPDEST PUSH2 0xDDD SWAP2 SWAP1 PUSH2 0x2144 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xE2A JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP4 PUSH2 0xE02 SWAP2 SWAP1 PUSH2 0x2178 JUMP JUMPDEST PUSH2 0xE0C SWAP2 SWAP1 PUSH2 0x2113 JUMP JUMPDEST DUP3 PUSH2 0xE17 SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xE23 SWAP1 PUSH2 0x21BA JUMP JUMPDEST SWAP1 POP PUSH2 0xDE9 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD SUB PUSH2 0xE4B JUMPI PUSH1 0x5 SLOAD SWAP1 POP PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP6 PUSH2 0xE60 SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0xE6A SWAP2 SWAP1 PUSH2 0x2113 JUMP JUMPDEST PUSH2 0xE74 SWAP2 SWAP1 PUSH2 0x2144 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xEC1 JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP4 PUSH2 0xE99 SWAP2 SWAP1 PUSH2 0x2178 JUMP JUMPDEST PUSH2 0xEA3 SWAP2 SWAP1 PUSH2 0x2113 JUMP JUMPDEST DUP3 PUSH2 0xEAE SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xEBA SWAP1 PUSH2 0x21BA JUMP JUMPDEST SWAP1 POP PUSH2 0xE80 JUMP JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP3 PUSH2 0xED3 SWAP2 SWAP1 PUSH2 0x2178 JUMP JUMPDEST PUSH2 0xEDD SWAP2 SWAP1 PUSH2 0x2113 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEFF PUSH2 0x1A6A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF1D PUSH2 0x1110 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6A SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF7D PUSH1 0x0 PUSH2 0x1A72 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SLOAD SUB PUSH2 0xFC0 JUMPI PUSH1 0xB SLOAD SWAP1 POP PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x1030 PUSH2 0x101F PUSH1 0xC SLOAD PUSH2 0x1011 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1003 DUP8 PUSH2 0xFF5 PUSH1 0xA SLOAD PUSH2 0xFE7 PUSH2 0xF8B JUMP JUMPDEST PUSH2 0x1A12 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A28 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A28 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A3E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1040 PUSH2 0x1A6A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x105E PUSH2 0x1110 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10AB SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1145 TIMESTAMP PUSH2 0xE36 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x115A PUSH2 0x1A6A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1178 PUSH2 0x1110 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C5 SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1209 SWAP3 SWAP2 SWAP1 PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1228 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x124C SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x1295 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128C SWAP1 PUSH2 0x1F64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x12AC PUSH2 0x12A7 PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0x97F JUMP JUMPDEST PUSH2 0x12EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E2 SWAP1 PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x6 SLOAD DUP2 GT PUSH2 0x133F JUMPI PUSH1 0x6 SLOAD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x134B DUP3 TIMESTAMP PUSH2 0x1662 JUMP JUMPDEST SWAP1 POP PUSH2 0x1356 DUP2 PUSH2 0xFAB JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x1364 PUSH2 0xF8B JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1475 JUMPI PUSH2 0x13A7 DUP4 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x14B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14AF SWAP1 PUSH2 0x224E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14CD DUP5 PUSH1 0xC SLOAD PUSH2 0x1A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH2 0x1525 DUP5 PUSH1 0x10 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP6 PUSH1 0x40 MLOAD PUSH2 0x15AE SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161F TIMESTAMP PUSH2 0x1B38 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD EQ DUP1 PUSH2 0x1674 JUMPI POP DUP2 DUP4 LT ISZERO JUMPDEST DUP1 PUSH2 0x167F JUMPI POP PUSH1 0x0 DUP4 EQ JUMPDEST ISZERO PUSH2 0x168D JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1843 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP4 LT ISZERO PUSH2 0x169D JUMPI PUSH1 0x6 SLOAD SWAP3 POP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP7 PUSH2 0x16B3 SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x16BD SWAP2 SWAP1 PUSH2 0x226E JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x16CA SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x16D4 SWAP2 SWAP1 PUSH2 0x226E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x16E5 DUP8 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x16EF SWAP2 SWAP1 PUSH2 0x2178 JUMP JUMPDEST PUSH2 0x16F9 SWAP2 SWAP1 PUSH2 0x2113 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP7 PUSH2 0x170E SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x1718 SWAP2 SWAP1 PUSH2 0x226E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x1729 DUP9 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x1733 SWAP2 SWAP1 PUSH2 0x2178 JUMP JUMPDEST PUSH2 0x173D SWAP2 SWAP1 PUSH2 0x2113 JUMP JUMPDEST SWAP1 POP DUP6 DUP5 DUP9 PUSH2 0x174C SWAP2 SWAP1 PUSH2 0x2144 JUMP JUMPDEST GT ISZERO PUSH2 0x1766 JUMPI PUSH2 0x175B DUP8 PUSH2 0x1B38 JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x1843 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP9 DUP5 DUP10 PUSH2 0x1776 SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x1780 SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x178A SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1797 DUP10 PUSH2 0xD9F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP7 PUSH2 0x17B1 SWAP2 SWAP1 PUSH2 0x2113 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1808 JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP5 PUSH2 0x17CF SWAP2 SWAP1 PUSH2 0x2178 JUMP JUMPDEST PUSH2 0x17D9 SWAP2 SWAP1 PUSH2 0x2113 JUMP JUMPDEST SWAP4 POP DUP4 DUP4 PUSH2 0x17E7 SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST SWAP3 POP DUP4 DUP6 PUSH2 0x17F5 SWAP2 SWAP1 PUSH2 0x2144 JUMP JUMPDEST SWAP5 POP DUP1 PUSH2 0x1801 SWAP1 PUSH2 0x21BA JUMP JUMPDEST SWAP1 POP PUSH2 0x17B6 JUMP JUMPDEST POP DUP13 DUP13 PUSH2 0x1815 SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST DUP8 DUP11 DUP7 PUSH2 0x1822 SWAP2 SWAP1 PUSH2 0x2144 JUMP JUMPDEST PUSH2 0x182C SWAP2 SWAP1 PUSH2 0x2144 JUMP JUMPDEST PUSH2 0x1836 SWAP2 SWAP1 PUSH2 0x2113 JUMP JUMPDEST SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1851 PUSH2 0x1A6A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x186F PUSH2 0x1110 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18BC SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18CD PUSH2 0x1110 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1912 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1923 PUSH2 0x1A6A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1941 PUSH2 0x1110 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1997 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x198E SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19FD SWAP1 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A0F DUP2 PUSH2 0x1A72 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1A20 SWAP2 SWAP1 PUSH2 0x20B0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1A36 SWAP2 SWAP1 PUSH2 0x2178 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1A4C SWAP2 SWAP1 PUSH2 0x2113 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1A62 SWAP2 SWAP1 PUSH2 0x2144 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1B44 DUP4 PUSH2 0xE36 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B5D PUSH1 0x7 SLOAD DUP4 PUSH2 0x1A3E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B99 DUP3 PUSH2 0x1B6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BA9 DUP2 PUSH2 0x1B8E JUMP JUMPDEST DUP2 EQ PUSH2 0x1BB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BC6 DUP2 PUSH2 0x1BA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BE2 JUMPI PUSH2 0x1BE1 PUSH2 0x1B69 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BF0 DUP5 DUP3 DUP6 ADD PUSH2 0x1BB7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C0C DUP2 PUSH2 0x1BF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C27 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C42 DUP2 PUSH2 0x1C2D JUMP JUMPDEST DUP2 EQ PUSH2 0x1C4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C5F DUP2 PUSH2 0x1C39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C7C JUMPI PUSH2 0x1C7B PUSH2 0x1B69 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C8A DUP6 DUP3 DUP7 ADD PUSH2 0x1BB7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C9B DUP6 DUP3 DUP7 ADD PUSH2 0x1C50 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CAE DUP2 PUSH2 0x1C2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CC9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CD8 DUP2 PUSH2 0x1BF9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CF5 DUP2 PUSH2 0x1CCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D11 JUMPI PUSH2 0x1D10 PUSH2 0x1B69 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D1F DUP5 DUP3 DUP6 ADD PUSH2 0x1CE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D31 DUP2 PUSH2 0x1B8E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D4C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D69 JUMPI PUSH2 0x1D68 PUSH2 0x1B69 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D77 DUP6 DUP3 DUP7 ADD PUSH2 0x1BB7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D88 DUP6 DUP3 DUP7 ADD PUSH2 0x1CE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB7 PUSH2 0x1DB2 PUSH2 0x1DAD DUP5 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1D92 JUMP JUMPDEST PUSH2 0x1B6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC9 DUP3 PUSH2 0x1D9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DDB DUP3 PUSH2 0x1DBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DEB DUP2 PUSH2 0x1DD0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E06 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E23 JUMPI PUSH2 0x1E22 PUSH2 0x1B69 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E31 DUP6 DUP3 DUP7 ADD PUSH2 0x1CE6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E42 DUP6 DUP3 DUP7 ADD PUSH2 0x1CE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646D696E61626C653A2063616C6C6572206973206E6F7420746865206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB9 PUSH1 0x22 DUP4 PUSH2 0x1E4C JUMP JUMPDEST SWAP2 POP PUSH2 0x1EC4 DUP3 PUSH2 0x1E5D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EE8 DUP2 PUSH2 0x1EAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F04 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1CA5 JUMP JUMPDEST PUSH2 0x1F11 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CA5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F4E PUSH1 0x1F DUP4 PUSH2 0x1E4C JUMP JUMPDEST SWAP2 POP PUSH2 0x1F59 DUP3 PUSH2 0x1F18 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F7D DUP2 PUSH2 0x1F41 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F99 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D28 JUMP JUMPDEST PUSH2 0x1FA6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C03 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FBC DUP2 PUSH2 0x1C39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FD8 JUMPI PUSH2 0x1FD7 PUSH2 0x1B69 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FE6 DUP5 DUP3 DUP6 ADD PUSH2 0x1FAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646D696E61626C653A2063616C6C6572206973206E6F74207468652061646D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x696E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x204B PUSH1 0x22 DUP4 PUSH2 0x1E4C JUMP JUMPDEST SWAP2 POP PUSH2 0x2056 DUP3 PUSH2 0x1FEF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x207A DUP2 PUSH2 0x203E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x20BB DUP3 PUSH2 0x1BF9 JUMP JUMPDEST SWAP2 POP PUSH2 0x20C6 DUP4 PUSH2 0x1BF9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x20DE JUMPI PUSH2 0x20DD PUSH2 0x2081 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x211E DUP3 PUSH2 0x1BF9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2129 DUP4 PUSH2 0x1BF9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2139 JUMPI PUSH2 0x2138 PUSH2 0x20E4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x214F DUP3 PUSH2 0x1BF9 JUMP JUMPDEST SWAP2 POP PUSH2 0x215A DUP4 PUSH2 0x1BF9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2172 JUMPI PUSH2 0x2171 PUSH2 0x2081 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2183 DUP3 PUSH2 0x1BF9 JUMP JUMPDEST SWAP2 POP PUSH2 0x218E DUP4 PUSH2 0x1BF9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x219C DUP2 PUSH2 0x1BF9 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x21B3 JUMPI PUSH2 0x21B2 PUSH2 0x2081 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C5 DUP3 PUSH2 0x1BF9 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x21F7 JUMPI PUSH2 0x21F6 PUSH2 0x2081 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2238 PUSH1 0xE DUP4 PUSH2 0x1E4C JUMP JUMPDEST SWAP2 POP PUSH2 0x2243 DUP3 PUSH2 0x2202 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2267 DUP2 PUSH2 0x222B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2279 DUP3 PUSH2 0x1BF9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2284 DUP4 PUSH2 0x1BF9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2294 JUMPI PUSH2 0x2293 PUSH2 0x20E4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22FB PUSH1 0x26 DUP4 PUSH2 0x1E4C JUMP JUMPDEST SWAP2 POP PUSH2 0x2306 DUP3 PUSH2 0x229F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x232A DUP2 PUSH2 0x22EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC CALLER 0x23 PUSH25 0x25E35C9766025E5E317237C6EC8DE000CABD00B504C0F8BE8E 0xAF 0xBD 0xEE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "371:6984:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4496:296;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;500:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;551:47;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1642:184:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1004:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;683:40:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6534:305;;;:::i;:::-;;1739:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3246:416;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2313:499;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;636:40;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1869:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1123:103:0;;;:::i;:::-;;605:24:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;730:45;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4025:107;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;961:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4140:348;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6847:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;897:57;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;909:87:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2191:114:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1970:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7209:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6228:294;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2072:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;782:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3670:115;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;467:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1021:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4835:1383;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7086:115;;;:::i;:::-;;818:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1234:201:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4496:296:1;4550:7;4570:12;4585:68;4608:18;:27;4627:7;4608:27;;;;;;;;;;;;;;;;4637:15;4585:22;:68::i;:::-;4570:83;;4671:113;4767:7;:16;4775:7;4767:16;;;;;;;;;;;;;;;;4671:91;4757:4;4671:81;4694:57;4719:22;:31;4742:7;4719:31;;;;;;;;;;;;;;;;4694:20;4709:4;4694:14;:20::i;:::-;:24;;:57;;;;:::i;:::-;4671:9;:18;4681:7;4671:18;;;;;;;;;;;;;;;;:22;;:81;;;;:::i;:::-;:85;;:91;;;;:::i;:::-;:95;;:113;;;;:::i;:::-;4664:120;;;4496:296;;;:::o;500:42::-;;;;;;;;;;;;;;;;;:::o;551:47::-;;;;:::o;1642:184:0:-;702:12;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1755:5:::1;1737:48;;;1763:7;:14:::0;1771:5:::1;1763:14;;;;;;;;;;;;;;;;;;;;;;;;;1779:5;1737:48;;;;;;;:::i;:::-;;;;;;;;1813:5;1796:7;:14:::0;1804:5:::1;1796:14;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;1642:184:::0;;:::o;1004:111::-;1067:4;1091:7;:16;1099:7;1091:16;;;;;;;;;;;;;;;;;;;;;;;;;1084:23;;1004:111;;;:::o;683:40:1:-;;;;:::o;6534:305::-;1778:1:2;2376:7;;:19;2368:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1778:1;2509:7;:18;;;;6590:10:1::1;1188:12;1203:18;:27;1222:7;1203:27;;;;;;;;;;;;;;;;1188:42;;1252:9;;1244:4;:17;1241:65;;1285:9;;1278:16;;1241:65;1316:12;1331:45;1354:4;1360:15;1331:22;:45::i;:::-;1316:60;;1410:20;1425:4;1410:14;:20::i;:::-;1387;:43;;;;1458:26;:24;:26::i;:::-;1441:14;:43;;;;1518:1;1499:21;;:7;:21;;;1495:217;;1556:15;1563:7;1556:6;:15::i;:::-;1537:7;:16;1545:7;1537:16;;;;;;;;;;;;;;;:34;;;;1620:20;;1586:22;:31;1609:7;1586:31;;;;;;;;;;;;;;;:54;;;;1685:15;1655:18;:27;1674:7;1655:27;;;;;;;;;;;;;;;:45;;;;1495:217;6613:14:::2;6630:7;:19;6638:10;6630:19;;;;;;;;;;;;;;;;6613:36;;6673:1;6664:6;:10;6660:172;;;6713:1;6691:7;:19;6699:10;6691:19;;;;;;;;;;;;;;;:23;;;;6729:12;;;;;;;;;;;:21;;;6751:10;6763:6;6729:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6801:10;6790:30;;;6813:6;6790:30;;;;;;:::i;:::-;;;;;;;;6660:172;6602:237;1177:554:::1;;2540:1:2;1734::::0;2688:7;:22;;;;6534:305:1:o;1739:122::-;821:21:0;829:12;:10;:12::i;:::-;821:7;:21::i;:::-;813:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1817:4:1::1;1805:9;:16;;;;1849:4;1832:14;:21;;;;1739:122:::0;:::o;3246:416::-;3304:7;3340:1;3327:9;;:14;3324:62;;3365:9;;3358:16;;;;3324:62;3396:13;3448:1;3433:12;;3420:9;;3413:4;:16;;;;:::i;:::-;3412:33;;;;:::i;:::-;:37;;;;:::i;:::-;3396:53;;3460:13;3476:12;;3460:28;;3503:9;3499:133;3522:5;3518:1;:9;3499:133;;;3597:23;;3573:21;;3565:5;:29;;;;:::i;:::-;:55;;;;:::i;:::-;3557:5;:63;;;;:::i;:::-;3549:71;;3529:3;;;;:::i;:::-;;;3499:133;;;;3649:5;3642:12;;;;3246:416;;;;:::o;2313:499::-;2371:7;2407:1;2394:9;;:14;2391:65;;2432:12;;2425:19;;;;2391:65;2466:13;2518:1;2503:12;;2490:9;;2483:4;:16;;;;:::i;:::-;2482:33;;;;:::i;:::-;:37;;;;:::i;:::-;2466:53;;2530:13;2546:12;;2530:28;;2573:9;2569:133;2592:5;2588:1;:9;2569:133;;;2667:23;;2643:21;;2635:5;:29;;;;:::i;:::-;:55;;;;:::i;:::-;2627:5;:63;;;;:::i;:::-;2619:71;;2599:3;;;;:::i;:::-;;;2569:133;;;;2781:23;;2757:21;;2749:5;:29;;;;:::i;:::-;:55;;;;:::i;:::-;2742:62;;;;2313:499;;;;:::o;636:40::-;;;;:::o;1869:93::-;1915:7;1942:12;;1935:19;;1869:93;:::o;1123:103:0:-;702:12;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1188:30:::1;1215:1;1188:18;:30::i;:::-;1123:103::o:0;605:24:1:-;;;;:::o;730:45::-;;;;:::o;4025:107::-;4082:7;4109:15;4102:22;;4025:107;:::o;961:53::-;;;;;;;;;;;;;;;;;:::o;4140:348::-;4205:7;4245:1;4229:12;;:17;4225:77;;4270:20;;4263:27;;;;4225:77;4332:148;4375:90;4452:12;;4375:72;4442:4;4375:62;4426:10;4375:46;4406:14;;4375:26;:24;:26::i;:::-;:30;;:46;;;;:::i;:::-;:50;;:62;;;;:::i;:::-;:66;;:72;;;;:::i;:::-;:76;;:90;;;;:::i;:::-;4332:20;;:24;;:148;;;;:::i;:::-;4312:168;;4140:348;;;;:::o;6847:105::-;702:12:0;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;6938:5:1::1;6916:12;;:28;;;;;;;;;;;;;;;;;;6847:105:::0;:::o;897:57::-;;;;;;;;;;;;;;;;;:::o;909:87:0:-;955:7;982:6;;;;;;;;;;;975:13;;909:87;:::o;2191:114:1:-;2240:7;2267:30;2281:15;2267:13;:30::i;:::-;2260:37;;2191:114;:::o;1970:94::-;2014:7;2041:15;2034:22;;1970:94;:::o;7209:143::-;702:12:0;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7309:5:1::1;7302:22;;;7325:10;7337:6;7302:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7209:143:::0;;:::o;6228:294::-;1778:1:2;2376:7;;:19;2368:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1778:1;2509:7;:18;;;;821:21:0::1;829:12;:10;:12::i;:::-;821:7;:21::i;:::-;813:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6318:4:1::2;1188:12;1203:18;:27;1222:7;1203:27;;;;;;;;;;;;;;;;1188:42;;1252:9;;1244:4;:17;1241:65;;1285:9;;1278:16;;1241:65;1316:12;1331:45;1354:4;1360:15;1331:22;:45::i;:::-;1316:60;;1410:20;1425:4;1410:14;:20::i;:::-;1387;:43;;;;1458:26;:24;:26::i;:::-;1441:14;:43;;;;1518:1;1499:21;;:7;:21;;;1495:217;;1556:15;1563:7;1556:6;:15::i;:::-;1537:7;:16;1545:7;1537:16;;;;;;;;;;;;;;;:34;;;;1620:20;;1586:22;:31;1609:7;1586:31;;;;;;;;;;;;;;;:54;;;;1685:15;1655:18;:27;1674:7;1655:27;;;;;;;;;;;;;;;:45;;;;1495:217;6352:1:::3;6343:6;:10;6335:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;6398:24;6415:6;6398:12;;:16;;:24;;;;:::i;:::-;6383:12;:39;;;;6451:27;6471:6;6451:9;:15;6461:4;6451:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;6433:9;:15;6443:4;6433:15;;;;;;;;;;;;;;;:45;;;;6501:4;6494:20;;;6507:6;6494:20;;;;;;:::i;:::-;;;;;;;;1177:554:::2;;892:1:0;1734::2::0;2688:7;:22;;;;6228:294:1;;:::o;2072:111::-;2130:7;2157:9;:18;2167:7;2157:18;;;;;;;;;;;;;;;;2150:25;;2072:111;;;:::o;782:29::-;;;;:::o;3670:115::-;3719:7;3746:31;3761:15;3746:14;:31::i;:::-;3739:38;;3670:115;:::o;467:26::-;;;;;;;;;;;;;:::o;1021:50::-;;;;;;;;;;;;;;;;;:::o;4835:1383::-;4925:7;4970:1;4957:9;;:14;:39;;;;4987:9;4975:8;:21;;4957:39;:56;;;;5012:1;5000:8;:13;4957:56;4954:96;;;5037:1;5030:8;;;;4954:96;5076:9;;5065:8;:20;5062:72;;;5113:9;;5102:20;;5062:72;5146:20;5226:12;;5210;;5197:9;;5186:8;:20;;;;:::i;:::-;5185:37;;;;:::i;:::-;5170:12;;:52;;;;:::i;:::-;5169:69;;;;:::i;:::-;5146:92;;5249:18;5311:12;;5296;5270:23;5284:8;5270:13;:23::i;:::-;:38;;;;:::i;:::-;:53;;;;:::i;:::-;5249:74;;5336:21;5386:12;;5373:9;;5361;:21;;;;:::i;:::-;5360:38;;;;:::i;:::-;5336:62;;5409:19;5474:12;;5458:13;5431:24;5445:9;5431:13;:24::i;:::-;:40;;;;:::i;:::-;:55;;;;:::i;:::-;5409:77;;5528:9;5513:12;5502:8;:23;;;;:::i;:::-;:35;5499:98;;;5561:24;5576:8;5561:14;:24::i;:::-;5554:31;;;;;;;;5499:98;5609:19;5670:12;5659:8;5643:13;5631:9;:25;;;;:::i;:::-;:36;;;;:::i;:::-;:51;;;;:::i;:::-;5609:73;;5693:19;5715:23;5729:8;5715:13;:23::i;:::-;5693:45;;5750:22;5787:18;5820:13;5836:11;5820:27;;5858:13;5888:12;;5874:11;:26;;;;:::i;:::-;5858:42;;5915:9;5911:214;5934:5;5930:1;:9;5911:214;;;6006:23;;5982:21;;5974:5;:29;;;;:::i;:::-;:55;;;;:::i;:::-;5961:68;;6060:10;6052:5;:18;;;;:::i;:::-;6044:26;;6103:10;6085:28;;;;;:::i;:::-;;;5941:3;;;;:::i;:::-;;;5911:214;;;;6201:8;6189:9;:20;;;;:::i;:::-;6173:11;6160:10;6143:14;:27;;;;:::i;:::-;:41;;;;:::i;:::-;6142:68;;;;:::i;:::-;6135:75;;;;;;;;;;;;4835:1383;;;;;:::o;7086:115::-;702:12:0;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7153:7:1::1;:5;:7::i;:::-;7145:25;;:48;7171:21;7145:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;7086:115::o:0;818:35::-;;;;:::o;1234:201:0:-;702:12;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1343:1:::1;1323:22;;:8;:22;;::::0;1315:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1399:28;1418:8;1399:18;:28::i;:::-;1234:201:::0;:::o;3214:98:6:-;3272:7;3303:1;3299;:5;;;;:::i;:::-;3292:12;;3214:98;;;;:::o;3571:::-;3629:7;3660:1;3656;:5;;;;:::i;:::-;3649:12;;3571:98;;;;:::o;3970:::-;4028:7;4059:1;4055;:5;;;;:::i;:::-;4048:12;;3970:98;;;;:::o;2833:::-;2891:7;2922:1;2918;:5;;;;:::i;:::-;2911:12;;2833:98;;;;:::o;63::0:-;116:7;143:10;136:17;;63:98;:::o;1443:191::-;1517:16;1536:6;;;;;;;;;;;1517:25;;1562:8;1553:6;;:17;;;;;;;;;;;;;;;;;;1617:8;1586:40;;1607:8;1586:40;;;;;;;;;;;;1506:128;1443:191;:::o;3793:222:1:-;3853:7;3873:21;3897:19;3911:4;3897:13;:19::i;:::-;3873:43;;3927:18;3948:31;3966:12;;3948:13;:17;;:31;;;;:::i;:::-;3927:52;;3997:10;3990:17;;;;3793:222;;;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:90::-;1645:7;1688:5;1681:13;1674:21;1663:32;;1611:90;;;:::o;1707:116::-;1777:21;1792:5;1777:21;:::i;:::-;1770:5;1767:32;1757:60;;1813:1;1810;1803:12;1757:60;1707:116;:::o;1829:133::-;1872:5;1910:6;1897:20;1888:29;;1926:30;1950:5;1926:30;:::i;:::-;1829:133;;;;:::o;1968:468::-;2033:6;2041;2090:2;2078:9;2069:7;2065:23;2061:32;2058:119;;;2096:79;;:::i;:::-;2058:119;2216:1;2241:53;2286:7;2277:6;2266:9;2262:22;2241:53;:::i;:::-;2231:63;;2187:117;2343:2;2369:50;2411:7;2402:6;2391:9;2387:22;2369:50;:::i;:::-;2359:60;;2314:115;1968:468;;;;;:::o;2442:109::-;2523:21;2538:5;2523:21;:::i;:::-;2518:3;2511:34;2442:109;;:::o;2557:210::-;2644:4;2682:2;2671:9;2667:18;2659:26;;2695:65;2757:1;2746:9;2742:17;2733:6;2695:65;:::i;:::-;2557:210;;;;:::o;2773:122::-;2846:24;2864:5;2846:24;:::i;:::-;2839:5;2836:35;2826:63;;2885:1;2882;2875:12;2826:63;2773:122;:::o;2901:139::-;2947:5;2985:6;2972:20;2963:29;;3001:33;3028:5;3001:33;:::i;:::-;2901:139;;;;:::o;3046:329::-;3105:6;3154:2;3142:9;3133:7;3129:23;3125:32;3122:119;;;3160:79;;:::i;:::-;3122:119;3280:1;3305:53;3350:7;3341:6;3330:9;3326:22;3305:53;:::i;:::-;3295:63;;3251:117;3046:329;;;;:::o;3381:118::-;3468:24;3486:5;3468:24;:::i;:::-;3463:3;3456:37;3381:118;;:::o;3505:222::-;3598:4;3636:2;3625:9;3621:18;3613:26;;3649:71;3717:1;3706:9;3702:17;3693:6;3649:71;:::i;:::-;3505:222;;;;:::o;3733:474::-;3801:6;3809;3858:2;3846:9;3837:7;3833:23;3829:32;3826:119;;;3864:79;;:::i;:::-;3826:119;3984:1;4009:53;4054:7;4045:6;4034:9;4030:22;4009:53;:::i;:::-;3999:63;;3955:117;4111:2;4137:53;4182:7;4173:6;4162:9;4158:22;4137:53;:::i;:::-;4127:63;;4082:118;3733:474;;;;;:::o;4213:60::-;4241:3;4262:5;4255:12;;4213:60;;;:::o;4279:142::-;4329:9;4362:53;4380:34;4389:24;4407:5;4389:24;:::i;:::-;4380:34;:::i;:::-;4362:53;:::i;:::-;4349:66;;4279:142;;;:::o;4427:126::-;4477:9;4510:37;4541:5;4510:37;:::i;:::-;4497:50;;4427:126;;;:::o;4559:141::-;4624:9;4657:37;4688:5;4657:37;:::i;:::-;4644:50;;4559:141;;;:::o;4706:161::-;4808:52;4854:5;4808:52;:::i;:::-;4803:3;4796:65;4706:161;;:::o;4873:252::-;4981:4;5019:2;5008:9;5004:18;4996:26;;5032:86;5115:1;5104:9;5100:17;5091:6;5032:86;:::i;:::-;4873:252;;;;:::o;5131:474::-;5199:6;5207;5256:2;5244:9;5235:7;5231:23;5227:32;5224:119;;;5262:79;;:::i;:::-;5224:119;5382:1;5407:53;5452:7;5443:6;5432:9;5428:22;5407:53;:::i;:::-;5397:63;;5353:117;5509:2;5535:53;5580:7;5571:6;5560:9;5556:22;5535:53;:::i;:::-;5525:63;;5480:118;5131:474;;;;;:::o;5611:169::-;5695:11;5729:6;5724:3;5717:19;5769:4;5764:3;5760:14;5745:29;;5611:169;;;;:::o;5786:221::-;5926:34;5922:1;5914:6;5910:14;5903:58;5995:4;5990:2;5982:6;5978:15;5971:29;5786:221;:::o;6013:366::-;6155:3;6176:67;6240:2;6235:3;6176:67;:::i;:::-;6169:74;;6252:93;6341:3;6252:93;:::i;:::-;6370:2;6365:3;6361:12;6354:19;;6013:366;;;:::o;6385:419::-;6551:4;6589:2;6578:9;6574:18;6566:26;;6638:9;6632:4;6628:20;6624:1;6613:9;6609:17;6602:47;6666:131;6792:4;6666:131;:::i;:::-;6658:139;;6385:419;;;:::o;6810:308::-;6919:4;6957:2;6946:9;6942:18;6934:26;;6970:65;7032:1;7021:9;7017:17;7008:6;6970:65;:::i;:::-;7045:66;7107:2;7096:9;7092:18;7083:6;7045:66;:::i;:::-;6810:308;;;;;:::o;7124:181::-;7264:33;7260:1;7252:6;7248:14;7241:57;7124:181;:::o;7311:366::-;7453:3;7474:67;7538:2;7533:3;7474:67;:::i;:::-;7467:74;;7550:93;7639:3;7550:93;:::i;:::-;7668:2;7663:3;7659:12;7652:19;;7311:366;;;:::o;7683:419::-;7849:4;7887:2;7876:9;7872:18;7864:26;;7936:9;7930:4;7926:20;7922:1;7911:9;7907:17;7900:47;7964:131;8090:4;7964:131;:::i;:::-;7956:139;;7683:419;;;:::o;8108:332::-;8229:4;8267:2;8256:9;8252:18;8244:26;;8280:71;8348:1;8337:9;8333:17;8324:6;8280:71;:::i;:::-;8361:72;8429:2;8418:9;8414:18;8405:6;8361:72;:::i;:::-;8108:332;;;;;:::o;8446:137::-;8500:5;8531:6;8525:13;8516:22;;8547:30;8571:5;8547:30;:::i;:::-;8446:137;;;;:::o;8589:345::-;8656:6;8705:2;8693:9;8684:7;8680:23;8676:32;8673:119;;;8711:79;;:::i;:::-;8673:119;8831:1;8856:61;8909:7;8900:6;8889:9;8885:22;8856:61;:::i;:::-;8846:71;;8802:125;8589:345;;;;:::o;8940:221::-;9080:34;9076:1;9068:6;9064:14;9057:58;9149:4;9144:2;9136:6;9132:15;9125:29;8940:221;:::o;9167:366::-;9309:3;9330:67;9394:2;9389:3;9330:67;:::i;:::-;9323:74;;9406:93;9495:3;9406:93;:::i;:::-;9524:2;9519:3;9515:12;9508:19;;9167:366;;;:::o;9539:419::-;9705:4;9743:2;9732:9;9728:18;9720:26;;9792:9;9786:4;9782:20;9778:1;9767:9;9763:17;9756:47;9820:131;9946:4;9820:131;:::i;:::-;9812:139;;9539:419;;;:::o;9964:180::-;10012:77;10009:1;10002:88;10109:4;10106:1;10099:15;10133:4;10130:1;10123:15;10150:194;10190:4;10210:20;10228:1;10210:20;:::i;:::-;10205:25;;10244:20;10262:1;10244:20;:::i;:::-;10239:25;;10288:1;10285;10281:9;10273:17;;10312:1;10306:4;10303:11;10300:37;;;10317:18;;:::i;:::-;10300:37;10150:194;;;;:::o;10350:180::-;10398:77;10395:1;10388:88;10495:4;10492:1;10485:15;10519:4;10516:1;10509:15;10536:185;10576:1;10593:20;10611:1;10593:20;:::i;:::-;10588:25;;10627:20;10645:1;10627:20;:::i;:::-;10622:25;;10666:1;10656:35;;10671:18;;:::i;:::-;10656:35;10713:1;10710;10706:9;10701:14;;10536:185;;;;:::o;10727:191::-;10767:3;10786:20;10804:1;10786:20;:::i;:::-;10781:25;;10820:20;10838:1;10820:20;:::i;:::-;10815:25;;10863:1;10860;10856:9;10849:16;;10884:3;10881:1;10878:10;10875:36;;;10891:18;;:::i;:::-;10875:36;10727:191;;;;:::o;10924:410::-;10964:7;10987:20;11005:1;10987:20;:::i;:::-;10982:25;;11021:20;11039:1;11021:20;:::i;:::-;11016:25;;11076:1;11073;11069:9;11098:30;11116:11;11098:30;:::i;:::-;11087:41;;11277:1;11268:7;11264:15;11261:1;11258:22;11238:1;11231:9;11211:83;11188:139;;11307:18;;:::i;:::-;11188:139;10972:362;10924:410;;;;:::o;11340:233::-;11379:3;11402:24;11420:5;11402:24;:::i;:::-;11393:33;;11448:66;11441:5;11438:77;11435:103;;11518:18;;:::i;:::-;11435:103;11565:1;11558:5;11554:13;11547:20;;11340:233;;;:::o;11579:164::-;11719:16;11715:1;11707:6;11703:14;11696:40;11579:164;:::o;11749:366::-;11891:3;11912:67;11976:2;11971:3;11912:67;:::i;:::-;11905:74;;11988:93;12077:3;11988:93;:::i;:::-;12106:2;12101:3;12097:12;12090:19;;11749:366;;;:::o;12121:419::-;12287:4;12325:2;12314:9;12310:18;12302:26;;12374:9;12368:4;12364:20;12360:1;12349:9;12345:17;12338:47;12402:131;12528:4;12402:131;:::i;:::-;12394:139;;12121:419;;;:::o;12546:176::-;12578:1;12595:20;12613:1;12595:20;:::i;:::-;12590:25;;12629:20;12647:1;12629:20;:::i;:::-;12624:25;;12668:1;12658:35;;12673:18;;:::i;:::-;12658:35;12714:1;12711;12707:9;12702:14;;12546:176;;;;:::o;12728:225::-;12868:34;12864:1;12856:6;12852:14;12845:58;12937:8;12932:2;12924:6;12920:15;12913:33;12728:225;:::o;12959:366::-;13101:3;13122:67;13186:2;13181:3;13122:67;:::i;:::-;13115:74;;13198:93;13287:3;13198:93;:::i;:::-;13316:2;13311:3;13307:12;13300:19;;12959:366;;;:::o;13331:419::-;13497:4;13535:2;13524:9;13520:18;13512:26;;13584:9;13578:4;13574:20;13570:1;13559:9;13555:17;13548:47;13612:131;13738:4;13612:131;:::i;:::-;13604:139;;13331:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1812600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"claimedBalances(address)": "2858",
								"curTime()": "403",
								"earned(address)": "infinite",
								"emergencyWithdraw()": "infinite",
								"emergencyWithdrawToken(address,uint256)": "infinite",
								"getCurRewardPool()": "infinite",
								"getCurRewardRate()": "infinite",
								"getRemainPool(uint256)": "infinite",
								"getReward()": "infinite",
								"getRewardPool(uint256)": "infinite",
								"getTimeWeightedAveRate(uint256,uint256)": "infinite",
								"isAdmin(address)": "2929",
								"lastTimeRewardApplicable()": "447",
								"lastUpdateTime()": "2496",
								"modificationAdmin(address,bool)": "infinite",
								"owner()": "2634",
								"powersOf(address)": "2886",
								"rateInterval()": "2519",
								"rateIntervalDenominator()": "2518",
								"rateIntervalNumerator()": "2497",
								"renounceOwnership()": "30419",
								"rewardPerToken(uint256)": "infinite",
								"rewardPerTokenStored()": "2539",
								"rewards(address)": "2883",
								"rewardsToken()": "infinite",
								"setRewardToken(address)": "27030",
								"setStartTime(uint256)": "47066",
								"stake(address,uint256)": "infinite",
								"startTime()": "2496",
								"totalPowers()": "2549",
								"totalRewards()": "2520",
								"transferOwnership(address)": "30852",
								"userLastUpdateTime(address)": "2947",
								"userRewardPerTokenPaid(address)": "2904"
							},
							"internal": {
								"_getRemainPool(uint256)": "infinite",
								"_getRewardRate(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 371,
									"end": 7355,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 371,
									"end": 7355,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 371,
									"end": 7355,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 581,
									"end": 598,
									"name": "PUSH",
									"source": 1,
									"value": "23934C5A09DA19000000"
								},
								{
									"begin": 551,
									"end": 598,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 551,
									"end": 598,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 666,
									"end": 676,
									"name": "PUSH",
									"source": 1,
									"value": "A"
								},
								{
									"begin": 636,
									"end": 676,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 636,
									"end": 676,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 722,
									"end": 723,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 683,
									"end": 723,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 683,
									"end": 723,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 771,
									"end": 775,
									"name": "PUSH",
									"source": 1,
									"value": "3E8"
								},
								{
									"begin": 730,
									"end": 775,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 730,
									"end": 775,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7355,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7355,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7355,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7355,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 371,
									"end": 7355,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7355,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 7355,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7355,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7355,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 371,
									"end": 7355,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7355,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 603,
									"end": 635,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 622,
									"end": 634,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 622,
									"end": 632,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 622,
									"end": 632,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 622,
									"end": 632,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 622,
									"end": 634,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 622,
									"end": 634,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 622,
									"end": 634,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 622,
									"end": 634,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 622,
									"end": 634,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 603,
									"end": 621,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 603,
									"end": 621,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 603,
									"end": 621,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 603,
									"end": 635,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 603,
									"end": 635,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 603,
									"end": 635,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 603,
									"end": 635,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 603,
									"end": 635,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1845,
									"end": 1852,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1845,
									"end": 1867,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1845,
									"end": 1867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1845,
									"end": 1867,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1845,
									"end": 1867,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 371,
									"end": 7355,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 371,
									"end": 7355,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 63,
									"end": 161,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 63,
									"end": 161,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 116,
									"end": 123,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 153,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 136,
									"end": 153,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 136,
									"end": 153,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63,
									"end": 161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 161,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 1634,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1443,
									"end": 1634,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1517,
									"end": 1533,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1517,
									"end": 1542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1517,
									"end": 1542,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1562,
									"end": 1570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1559,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1553,
									"end": 1559,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1617,
									"end": 1625,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1607,
									"end": 1615,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 1506,
									"end": 1634,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 1634,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 1634,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 371,
									"end": 7355,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 371,
									"end": 7355,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7355,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 371,
									"end": 7355,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7355,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 371,
									"end": 7355,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 7355,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7355,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 7355,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200c33237825e35c9766025e5e317237c6ec8de000cabd00b504c0f8be8eafbdee64736f6c63430008110033",
									".code": [
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "874C120B"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "B79EC812"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "D42B779D"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "D42B779D"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "DA4F8431"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "DB2E21BC"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "DF136D65"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "B79EC812"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "C8F33C91"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "CDDA56E0"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "D1AF0C7D"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "9499C549"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "9499C549"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "9A5B17B0"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "A4C3B091"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "ADC9772E"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "874C120B"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "8AEE8127"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "8B876347"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "4DBDC4EB"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "78E97925"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "7A6FCEE7"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "80FAA57D"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "8107368B"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "4DBDC4EB"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "5CFA91F4"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "6139D4B4"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "6917C501"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "24D7806C"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "24D7806C"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "3C4045CF"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "3D18B912"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "3E0A322D"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "8CC262"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "700037D"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "E15561A"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "18E20ECF"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7355,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4496,
											"end": 4792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4496,
											"end": 4792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4496,
											"end": 4792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 500,
											"end": 542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 500,
											"end": 542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 500,
											"end": 542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 551,
											"end": 598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 551,
											"end": 598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1642,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1642,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1004,
											"end": 1115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1004,
											"end": 1115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1004,
											"end": 1115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 683,
											"end": 723,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 683,
											"end": 723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 683,
											"end": 723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6534,
											"end": 6839,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 6534,
											"end": 6839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6534,
											"end": 6839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 6534,
											"end": 6839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 6534,
											"end": 6839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6534,
											"end": 6839,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 6534,
											"end": 6839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6534,
											"end": 6839,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1739,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1739,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1739,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1861,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1739,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1739,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1739,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1739,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1739,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1861,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3246,
											"end": 3662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3246,
											"end": 3662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3246,
											"end": 3662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2313,
											"end": 2812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2313,
											"end": 2812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2313,
											"end": 2812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 636,
											"end": 676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 636,
											"end": 676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1962,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1869,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1869,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1869,
											"end": 1962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1962,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1869,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1962,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1869,
											"end": 1962,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1869,
											"end": 1962,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1869,
											"end": 1962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1962,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1869,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1962,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1869,
											"end": 1962,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1962,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1962,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1962,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1962,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1123,
											"end": 1226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 605,
											"end": 629,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 605,
											"end": 629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 605,
											"end": 629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 730,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 730,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4025,
											"end": 4132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4025,
											"end": 4132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 961,
											"end": 1014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 961,
											"end": 1014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 961,
											"end": 1014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4140,
											"end": 4488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4140,
											"end": 4488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4140,
											"end": 4488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6952,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6847,
											"end": 6952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 6847,
											"end": 6952,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6847,
											"end": 6952,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6952,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6952,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6952,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6952,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6952,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 6847,
											"end": 6952,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6952,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 6847,
											"end": 6952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6952,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 6847,
											"end": 6952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 6847,
											"end": 6952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6952,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 6847,
											"end": 6952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6952,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 897,
											"end": 954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 897,
											"end": 954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 897,
											"end": 954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 909,
											"end": 996,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 909,
											"end": 996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 909,
											"end": 996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2191,
											"end": 2305,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2191,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2191,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2191,
											"end": 2305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2305,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2191,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2305,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2191,
											"end": 2305,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2191,
											"end": 2305,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2191,
											"end": 2305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2305,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2191,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2305,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2191,
											"end": 2305,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2305,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2305,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2305,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 2064,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1970,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1970,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1970,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 2064,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1970,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 2064,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1970,
											"end": 2064,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1970,
											"end": 2064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 2064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1970,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 2064,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1970,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 2064,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1970,
											"end": 2064,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 2064,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 2064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 2064,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 2064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 2064,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7352,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7209,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7209,
											"end": 7352,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7209,
											"end": 7352,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7352,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7352,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7352,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7352,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7209,
											"end": 7352,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7209,
											"end": 7352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7352,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7209,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7209,
											"end": 7352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7352,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7209,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7352,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6522,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 6228,
											"end": 6522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6228,
											"end": 6522,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6228,
											"end": 6522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6522,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6522,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6522,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6228,
											"end": 6522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 6228,
											"end": 6522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6522,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6228,
											"end": 6522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6228,
											"end": 6522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6522,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6228,
											"end": 6522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6522,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2072,
											"end": 2183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2072,
											"end": 2183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2072,
											"end": 2183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 782,
											"end": 811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 782,
											"end": 811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3785,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3670,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 3670,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3670,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3785,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 3670,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3785,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3670,
											"end": 3785,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3670,
											"end": 3785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3670,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3785,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3670,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3785,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3670,
											"end": 3785,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3785,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3785,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 467,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 467,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1021,
											"end": 1071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1021,
											"end": 1071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1021,
											"end": 1071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4835,
											"end": 6218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4835,
											"end": 6218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4835,
											"end": 6218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 7086,
											"end": 7201,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 7086,
											"end": 7201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7086,
											"end": 7201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 7086,
											"end": 7201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 7086,
											"end": 7201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7086,
											"end": 7201,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 7086,
											"end": 7201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7086,
											"end": 7201,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 818,
											"end": 853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 818,
											"end": 853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1234,
											"end": 1435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1234,
											"end": 1435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4550,
											"end": 4557,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4570,
											"end": 4582,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4585,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 4608,
											"end": 4626,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4627,
											"end": 4634,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4637,
											"end": 4652,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 4585,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4585,
											"end": 4653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4585,
											"end": 4653,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 4585,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 4653,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 4653,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 4767,
											"end": 4774,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4767,
											"end": 4783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4775,
											"end": 4782,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4767,
											"end": 4783,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4767,
											"end": 4783,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4767,
											"end": 4783,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4767,
											"end": 4783,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4767,
											"end": 4783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4767,
											"end": 4783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4767,
											"end": 4783,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4767,
											"end": 4783,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4767,
											"end": 4783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4767,
											"end": 4783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4767,
											"end": 4783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4767,
											"end": 4783,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4767,
											"end": 4783,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4767,
											"end": 4783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4767,
											"end": 4783,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4767,
											"end": 4783,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 4757,
											"end": 4761,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4671,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 4694,
											"end": 4751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 4719,
											"end": 4750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4742,
											"end": 4749,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4750,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4719,
											"end": 4750,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4750,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4719,
											"end": 4750,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4750,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4750,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4719,
											"end": 4750,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4750,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4750,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4719,
											"end": 4750,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4750,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4750,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4694,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 4709,
											"end": 4713,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4694,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4694,
											"end": 4714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4694,
											"end": 4714,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 4694,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4694,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 4694,
											"end": 4718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4694,
											"end": 4751,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4694,
											"end": 4751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4694,
											"end": 4751,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4694,
											"end": 4751,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4694,
											"end": 4751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4694,
											"end": 4751,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 4694,
											"end": 4751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4680,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 4671,
											"end": 4693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4752,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4671,
											"end": 4752,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4752,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 4671,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 4671,
											"end": 4756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4762,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4671,
											"end": 4762,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4762,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 4671,
											"end": 4762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 4671,
											"end": 4766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4784,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4784,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4784,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4671,
											"end": 4784,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4784,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 4671,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4664,
											"end": 4784,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4664,
											"end": 4784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4664,
											"end": 4784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "82F1FA40A3D82DEA3E406073819290601F436580AA7C69F9FEB61F885BDD8854"
										},
										{
											"begin": 1763,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1776,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1784,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1737,
											"end": 1785,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1818,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1803,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1804,
											"end": 1809,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 1071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1106,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 723,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6534,
											"end": 6839,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 6534,
											"end": 6839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 2368,
											"end": 2431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2509,
											"end": 2516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6590,
											"end": 6600,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1229,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1230,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1230,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1252,
											"end": 1261,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1248,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1261,
											"modifierDepth": 1,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1306,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 1241,
											"end": 1306,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1285,
											"end": 1294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1285,
											"end": 1294,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1278,
											"end": 1294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1278,
											"end": 1294,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1306,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 1241,
											"end": 1306,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1328,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1331,
											"end": 1376,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 1354,
											"end": 1358,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1375,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1353,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1331,
											"end": 1376,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1376,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 1331,
											"end": 1376,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1376,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1376,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1430,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 1425,
											"end": 1429,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1424,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1410,
											"end": 1430,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1430,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 1410,
											"end": 1430,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1387,
											"end": 1430,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1430,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1430,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1430,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 1458,
											"end": 1482,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1458,
											"end": 1484,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 1458,
											"end": 1484,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1441,
											"end": 1484,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1484,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1484,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1499,
											"end": 1520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1499,
											"end": 1520,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1499,
											"end": 1520,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1520,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 1495,
											"end": 1712,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1563,
											"end": 1570,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1562,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1556,
											"end": 1571,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1571,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1556,
											"end": 1571,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1552,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1571,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1571,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1571,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1620,
											"end": 1640,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1609,
											"end": 1616,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1640,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1640,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1640,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1640,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1700,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1681,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1700,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1700,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1700,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1700,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1712,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 1495,
											"end": 1712,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6613,
											"end": 6627,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6630,
											"end": 6637,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6630,
											"end": 6649,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6638,
											"end": 6648,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 6630,
											"end": 6649,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6630,
											"end": 6649,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6630,
											"end": 6649,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6630,
											"end": 6649,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6630,
											"end": 6649,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6630,
											"end": 6649,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6630,
											"end": 6649,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6630,
											"end": 6649,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6630,
											"end": 6649,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6630,
											"end": 6649,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6630,
											"end": 6649,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6630,
											"end": 6649,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6630,
											"end": 6649,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6630,
											"end": 6649,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6630,
											"end": 6649,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6630,
											"end": 6649,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6613,
											"end": 6649,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6613,
											"end": 6649,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6673,
											"end": 6674,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6664,
											"end": 6670,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6664,
											"end": 6674,
											"modifierDepth": 2,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 6832,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 6832,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 6660,
											"end": 6832,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6713,
											"end": 6714,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6691,
											"end": 6698,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6691,
											"end": 6710,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6699,
											"end": 6709,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 6691,
											"end": 6710,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6691,
											"end": 6710,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6691,
											"end": 6710,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6691,
											"end": 6710,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6691,
											"end": 6710,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6691,
											"end": 6710,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6691,
											"end": 6710,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6691,
											"end": 6710,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6691,
											"end": 6710,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6691,
											"end": 6710,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6691,
											"end": 6710,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6691,
											"end": 6710,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6691,
											"end": 6710,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6691,
											"end": 6710,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6691,
											"end": 6710,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6691,
											"end": 6714,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6691,
											"end": 6714,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6691,
											"end": 6714,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6691,
											"end": 6714,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6741,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6729,
											"end": 6741,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6741,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6741,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6741,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6741,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6729,
											"end": 6741,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6741,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6741,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6741,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6729,
											"end": 6741,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6729,
											"end": 6750,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 6751,
											"end": 6761,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 6763,
											"end": 6769,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 6729,
											"end": 6770,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 6729,
											"end": 6770,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6770,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6811,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6820,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6790,
											"end": 6820,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6820,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 6813,
											"end": 6819,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6820,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6790,
											"end": 6820,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6820,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 6790,
											"end": 6820,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6820,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6820,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 6790,
											"end": 6820,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6820,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 6790,
											"end": 6820,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6820,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6790,
											"end": 6820,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6820,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6820,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6820,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6820,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6820,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 6832,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 6660,
											"end": 6832,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6839,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1177,
											"end": 1731,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1177,
											"end": 1731,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2540,
											"end": 2541,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1735,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2688,
											"end": 2695,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1739,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 821,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 829,
											"end": 841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 829,
											"end": 841,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 821,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 821,
											"end": 842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 821,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 821,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 813,
											"end": 881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 1821,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1805,
											"end": 1821,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1821,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1821,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1821,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1853,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3340,
											"end": 3341,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3336,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3327,
											"end": 3336,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 3324,
											"end": 3386,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3374,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3365,
											"end": 3374,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3374,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 3358,
											"end": 3374,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3386,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 3324,
											"end": 3386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3448,
											"end": 3449,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3433,
											"end": 3445,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3433,
											"end": 3445,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3420,
											"end": 3429,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3420,
											"end": 3429,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 3413,
											"end": 3429,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3429,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 3413,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3429,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 3413,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 3412,
											"end": 3445,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 3412,
											"end": 3445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3445,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 3412,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 3412,
											"end": 3449,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 3412,
											"end": 3449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3449,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 3412,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3460,
											"end": 3473,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3476,
											"end": 3488,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3476,
											"end": 3488,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3460,
											"end": 3488,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3460,
											"end": 3488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3503,
											"end": 3512,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3632,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 3499,
											"end": 3632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3522,
											"end": 3527,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3518,
											"end": 3519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3518,
											"end": 3527,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3632,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 3499,
											"end": 3632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3620,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3597,
											"end": 3620,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3573,
											"end": 3594,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3573,
											"end": 3594,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3570,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 3565,
											"end": 3594,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 3565,
											"end": 3594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3594,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 3565,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 3565,
											"end": 3620,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 3565,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 3565,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 3557,
											"end": 3620,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 3557,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 3557,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3620,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3529,
											"end": 3532,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3529,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 3529,
											"end": 3532,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3529,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 3529,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3529,
											"end": 3532,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 3529,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3529,
											"end": 3532,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3529,
											"end": 3532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 3499,
											"end": 3632,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3632,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 3499,
											"end": 3632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3649,
											"end": 3654,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3642,
											"end": 3654,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3642,
											"end": 3654,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3642,
											"end": 3654,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3642,
											"end": 3654,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2408,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2403,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2394,
											"end": 2403,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2408,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2391,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2391,
											"end": 2456,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2432,
											"end": 2444,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 2425,
											"end": 2444,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2391,
											"end": 2456,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2391,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2466,
											"end": 2479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2519,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2503,
											"end": 2515,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2503,
											"end": 2515,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2499,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2490,
											"end": 2499,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2487,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2483,
											"end": 2499,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 2483,
											"end": 2499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2499,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2483,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2482,
											"end": 2515,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2482,
											"end": 2515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2515,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2482,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 2482,
											"end": 2519,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 2482,
											"end": 2519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2519,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 2482,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2466,
											"end": 2519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2466,
											"end": 2519,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2543,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2546,
											"end": 2558,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2546,
											"end": 2558,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2582,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2569,
											"end": 2702,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 2569,
											"end": 2702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 2597,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2588,
											"end": 2589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2588,
											"end": 2597,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2702,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 2569,
											"end": 2702,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2664,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2643,
											"end": 2664,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2640,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 2635,
											"end": 2664,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 2635,
											"end": 2664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2664,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 2635,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 2635,
											"end": 2690,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2690,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2635,
											"end": 2690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2690,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 2635,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2632,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 2627,
											"end": 2690,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2690,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 2627,
											"end": 2690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2690,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 2627,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2619,
											"end": 2690,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2619,
											"end": 2690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2602,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 2599,
											"end": 2602,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2599,
											"end": 2602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2602,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 2599,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2602,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2602,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 2569,
											"end": 2702,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2702,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 2569,
											"end": 2702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2804,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2781,
											"end": 2804,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2778,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2757,
											"end": 2778,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2754,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 2749,
											"end": 2778,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2778,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 2749,
											"end": 2778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2778,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 2749,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 2749,
											"end": 2804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2749,
											"end": 2804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2804,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 2749,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2804,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1962,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1869,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1915,
											"end": 1922,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1942,
											"end": 1954,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 1942,
											"end": 1954,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1935,
											"end": 1954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1935,
											"end": 1954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 1215,
											"end": 1216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1206,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1188,
											"end": 1218,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1218,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 1188,
											"end": 1218,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 605,
											"end": 629,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4109,
											"end": 4124,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4124,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4205,
											"end": 4212,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4245,
											"end": 4246,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4241,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 4229,
											"end": 4241,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4246,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 4225,
											"end": 4302,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4290,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 4263,
											"end": 4290,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4302,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 4225,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 4375,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 4452,
											"end": 4464,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 4452,
											"end": 4464,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 4442,
											"end": 4446,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4375,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 4426,
											"end": 4436,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 4406,
											"end": 4420,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 4406,
											"end": 4420,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 4375,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4375,
											"end": 4401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4401,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 4375,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 4375,
											"end": 4405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4421,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4421,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4375,
											"end": 4421,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4421,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 4375,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 4375,
											"end": 4425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4437,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4437,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4375,
											"end": 4437,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4437,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 4375,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 4375,
											"end": 4441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4447,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4375,
											"end": 4447,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4447,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 4375,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 4375,
											"end": 4451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4465,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4375,
											"end": 4465,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4465,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 4375,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4352,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 4332,
											"end": 4352,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 4332,
											"end": 4356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4480,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4480,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4480,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4332,
											"end": 4480,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4480,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 4332,
											"end": 4480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4312,
											"end": 4480,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4312,
											"end": 4480,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6952,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 6847,
											"end": 6952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 6943,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6916,
											"end": 6928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6916,
											"end": 6928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6916,
											"end": 6944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6916,
											"end": 6944,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6916,
											"end": 6944,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6916,
											"end": 6944,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6916,
											"end": 6944,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6916,
											"end": 6944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6916,
											"end": 6944,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6916,
											"end": 6944,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6916,
											"end": 6944,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6916,
											"end": 6944,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6916,
											"end": 6944,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6916,
											"end": 6944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6916,
											"end": 6944,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6916,
											"end": 6944,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6916,
											"end": 6944,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6916,
											"end": 6944,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6916,
											"end": 6944,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6916,
											"end": 6944,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6952,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 909,
											"end": 996,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 955,
											"end": 962,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 975,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 975,
											"end": 988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2191,
											"end": 2305,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2191,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 2281,
											"end": 2296,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2267,
											"end": 2297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2267,
											"end": 2297,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 2267,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 2064,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1970,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2014,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2056,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2056,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 2064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 2064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7352,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7209,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7314,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7302,
											"end": 7324,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 7325,
											"end": 7335,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7343,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 7302,
											"end": 7344,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7302,
											"end": 7344,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 7302,
											"end": 7344,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7344,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7352,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7352,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6522,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6228,
											"end": 6522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 2368,
											"end": 2431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2509,
											"end": 2516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 821,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 829,
											"end": 841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 829,
											"end": 839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 829,
											"end": 841,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 829,
											"end": 841,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 829,
											"end": 841,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 821,
											"end": 828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 821,
											"end": 842,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 821,
											"end": 842,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 821,
											"end": 842,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 813,
											"end": 881,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6322,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1200,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1221,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1229,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1230,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1230,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1230,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1261,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1252,
											"end": 1261,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1248,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1261,
											"modifierDepth": 2,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1306,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 1241,
											"end": 1306,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1285,
											"end": 1294,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1285,
											"end": 1294,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1278,
											"end": 1294,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1278,
											"end": 1294,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1306,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 1241,
											"end": 1306,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1328,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1331,
											"end": 1376,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 1354,
											"end": 1358,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1375,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1353,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1331,
											"end": 1376,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1376,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 1331,
											"end": 1376,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1376,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1376,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1430,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 1425,
											"end": 1429,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1424,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1410,
											"end": 1430,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1430,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 1410,
											"end": 1430,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1387,
											"end": 1430,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1430,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1430,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1430,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 1458,
											"end": 1482,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1458,
											"end": 1484,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1484,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 1458,
											"end": 1484,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1455,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1441,
											"end": 1484,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1484,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1484,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1484,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1519,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1499,
											"end": 1520,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1499,
											"end": 1520,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1506,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1520,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1499,
											"end": 1520,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1520,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1712,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 1495,
											"end": 1712,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1571,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 1563,
											"end": 1570,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1562,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1556,
											"end": 1571,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1571,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 1556,
											"end": 1571,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1544,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1552,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1553,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1571,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1571,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1571,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1571,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1640,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1620,
											"end": 1640,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1608,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1609,
											"end": 1616,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1617,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1640,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1640,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1640,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1640,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1700,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1673,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1681,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1655,
											"end": 1682,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1700,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1700,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1700,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1655,
											"end": 1700,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1712,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 1495,
											"end": 1712,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6352,
											"end": 6353,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6343,
											"end": 6349,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6343,
											"end": 6353,
											"modifierDepth": 3,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6335,
											"end": 6372,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 6335,
											"end": 6372,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6335,
											"end": 6372,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6335,
											"end": 6372,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6335,
											"end": 6372,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6335,
											"end": 6372,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6335,
											"end": 6372,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6335,
											"end": 6372,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6335,
											"end": 6372,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6335,
											"end": 6372,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 6335,
											"end": 6372,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6335,
											"end": 6372,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 6335,
											"end": 6372,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6335,
											"end": 6372,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 6335,
											"end": 6372,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6335,
											"end": 6372,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6335,
											"end": 6372,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6335,
											"end": 6372,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6335,
											"end": 6372,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6335,
											"end": 6372,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6335,
											"end": 6372,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6335,
											"end": 6372,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6335,
											"end": 6372,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 6335,
											"end": 6372,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6398,
											"end": 6422,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 6415,
											"end": 6421,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6398,
											"end": 6410,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 6398,
											"end": 6410,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6398,
											"end": 6414,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 6398,
											"end": 6414,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6398,
											"end": 6422,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6398,
											"end": 6422,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6398,
											"end": 6422,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6398,
											"end": 6422,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6398,
											"end": 6422,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6398,
											"end": 6422,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 6398,
											"end": 6422,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6383,
											"end": 6395,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 6383,
											"end": 6422,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6383,
											"end": 6422,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6383,
											"end": 6422,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6383,
											"end": 6422,
											"modifierDepth": 3,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6478,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 6471,
											"end": 6477,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6460,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 6451,
											"end": 6466,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6461,
											"end": 6465,
											"modifierDepth": 3,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6466,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6451,
											"end": 6466,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6466,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6451,
											"end": 6466,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6466,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6466,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6466,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6451,
											"end": 6466,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6466,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6466,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6466,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6466,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6451,
											"end": 6466,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6466,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6451,
											"end": 6466,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6466,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6470,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 6451,
											"end": 6470,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6478,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6478,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6478,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6451,
											"end": 6478,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6478,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6478,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 6451,
											"end": 6478,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6442,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 6433,
											"end": 6448,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6443,
											"end": 6447,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6448,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6433,
											"end": 6448,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6448,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6433,
											"end": 6448,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6448,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6448,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6448,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6433,
											"end": 6448,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6448,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6448,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6448,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6448,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6433,
											"end": 6448,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6448,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6433,
											"end": 6448,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6478,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6478,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6478,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6478,
											"modifierDepth": 3,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6501,
											"end": 6505,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6494,
											"end": 6514,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6494,
											"end": 6514,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6494,
											"end": 6514,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 6507,
											"end": 6513,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6494,
											"end": 6514,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6494,
											"end": 6514,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6494,
											"end": 6514,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 6494,
											"end": 6514,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6494,
											"end": 6514,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6494,
											"end": 6514,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 6494,
											"end": 6514,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6494,
											"end": 6514,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 6494,
											"end": 6514,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6494,
											"end": 6514,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6494,
											"end": 6514,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6494,
											"end": 6514,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6494,
											"end": 6514,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6494,
											"end": 6514,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6494,
											"end": 6514,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6494,
											"end": 6514,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 1177,
											"end": 1731,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1177,
											"end": 1731,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 892,
											"end": 893,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1734,
											"end": 1735,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2688,
											"end": 2695,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6228,
											"end": 6522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2157,
											"end": 2166,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2157,
											"end": 2175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2174,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2175,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2157,
											"end": 2175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2175,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2157,
											"end": 2175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2157,
											"end": 2175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2157,
											"end": 2175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2157,
											"end": 2175,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3785,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3670,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3719,
											"end": 3726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3746,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 3761,
											"end": 3776,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 3746,
											"end": 3777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3777,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 3746,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3739,
											"end": 3777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3739,
											"end": 3777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 4932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4970,
											"end": 4971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4957,
											"end": 4966,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4957,
											"end": 4966,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4957,
											"end": 4971,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4957,
											"end": 4996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4957,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 4957,
											"end": 4996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4957,
											"end": 4996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 4996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4975,
											"end": 4983,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4975,
											"end": 4996,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4975,
											"end": 4996,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4957,
											"end": 4996,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 4957,
											"end": 4996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4957,
											"end": 5013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4957,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 4957,
											"end": 5013,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4957,
											"end": 5013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5012,
											"end": 5013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5000,
											"end": 5008,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5013,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4957,
											"end": 5013,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 4957,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4954,
											"end": 5050,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4954,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 4954,
											"end": 5050,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5037,
											"end": 5038,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5030,
											"end": 5038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5038,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 5030,
											"end": 5038,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4954,
											"end": 5050,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 4954,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5085,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5076,
											"end": 5085,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5065,
											"end": 5073,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5065,
											"end": 5085,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5134,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 5062,
											"end": 5134,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5122,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5113,
											"end": 5122,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5102,
											"end": 5122,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5102,
											"end": 5122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5134,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 5062,
											"end": 5134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5146,
											"end": 5166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5226,
											"end": 5238,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5226,
											"end": 5238,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5210,
											"end": 5222,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5210,
											"end": 5222,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5206,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5197,
											"end": 5206,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5194,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 5186,
											"end": 5206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 5186,
											"end": 5206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5206,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 5186,
											"end": 5206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5185,
											"end": 5222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 5185,
											"end": 5222,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5185,
											"end": 5222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5185,
											"end": 5222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 5185,
											"end": 5222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5185,
											"end": 5222,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 5185,
											"end": 5222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5182,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5170,
											"end": 5182,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 5170,
											"end": 5222,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 5170,
											"end": 5222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5222,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 5170,
											"end": 5222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5169,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 5169,
											"end": 5238,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5169,
											"end": 5238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5169,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 5169,
											"end": 5238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5169,
											"end": 5238,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 5169,
											"end": 5238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5146,
											"end": 5238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5146,
											"end": 5238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5311,
											"end": 5323,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5311,
											"end": 5323,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5296,
											"end": 5308,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 5284,
											"end": 5292,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5270,
											"end": 5293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5293,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 5270,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 5270,
											"end": 5308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 5270,
											"end": 5308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5308,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 5270,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 5270,
											"end": 5323,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 5270,
											"end": 5323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5323,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 5270,
											"end": 5323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5336,
											"end": 5357,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5386,
											"end": 5398,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5386,
											"end": 5398,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5373,
											"end": 5382,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5370,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 5361,
											"end": 5382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 5361,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5382,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 5361,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5360,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 5360,
											"end": 5398,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5360,
											"end": 5398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5360,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 5360,
											"end": 5398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5360,
											"end": 5398,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 5360,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5336,
											"end": 5398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5336,
											"end": 5398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5409,
											"end": 5428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5474,
											"end": 5486,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5474,
											"end": 5486,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5458,
											"end": 5471,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5431,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 5445,
											"end": 5454,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5431,
											"end": 5444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5431,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5431,
											"end": 5455,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 5431,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5431,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 5431,
											"end": 5471,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5431,
											"end": 5471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5431,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 5431,
											"end": 5471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5431,
											"end": 5471,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 5431,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5431,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 5431,
											"end": 5486,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5431,
											"end": 5486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5431,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 5431,
											"end": 5486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5431,
											"end": 5486,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 5431,
											"end": 5486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5409,
											"end": 5486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5409,
											"end": 5486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5528,
											"end": 5537,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5513,
											"end": 5525,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5502,
											"end": 5510,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5502,
											"end": 5525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 5502,
											"end": 5525,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5502,
											"end": 5525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5502,
											"end": 5525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 5502,
											"end": 5525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5502,
											"end": 5525,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 5502,
											"end": 5525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5502,
											"end": 5537,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5499,
											"end": 5597,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5499,
											"end": 5597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 5499,
											"end": 5597,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5561,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 5576,
											"end": 5584,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5561,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 5561,
											"end": 5585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5561,
											"end": 5585,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 5561,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5554,
											"end": 5585,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5554,
											"end": 5585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5554,
											"end": 5585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5554,
											"end": 5585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5554,
											"end": 5585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5554,
											"end": 5585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5554,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 5554,
											"end": 5585,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5499,
											"end": 5597,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 5499,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5609,
											"end": 5628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5682,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5659,
											"end": 5667,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5656,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5631,
											"end": 5640,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5631,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 5631,
											"end": 5656,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5631,
											"end": 5656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5631,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 5631,
											"end": 5656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5631,
											"end": 5656,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 5631,
											"end": 5656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5631,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 5631,
											"end": 5667,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5631,
											"end": 5667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5631,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 5631,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5631,
											"end": 5667,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 5631,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5631,
											"end": 5682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 5631,
											"end": 5682,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5631,
											"end": 5682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5631,
											"end": 5682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 5631,
											"end": 5682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5631,
											"end": 5682,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 5631,
											"end": 5682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5609,
											"end": 5682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5609,
											"end": 5682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5693,
											"end": 5712,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5715,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 5729,
											"end": 5737,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5715,
											"end": 5738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5738,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 5715,
											"end": 5738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5693,
											"end": 5738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5693,
											"end": 5738,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5750,
											"end": 5772,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 5805,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5820,
											"end": 5833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5836,
											"end": 5847,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5820,
											"end": 5847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5820,
											"end": 5847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5858,
											"end": 5871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5888,
											"end": 5900,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5888,
											"end": 5900,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5874,
											"end": 5885,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5874,
											"end": 5900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 5874,
											"end": 5900,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5874,
											"end": 5900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5874,
											"end": 5900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 5874,
											"end": 5900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5874,
											"end": 5900,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 5874,
											"end": 5900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5858,
											"end": 5900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5858,
											"end": 5900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5915,
											"end": 5924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5911,
											"end": 6125,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 5911,
											"end": 6125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5934,
											"end": 5939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5930,
											"end": 5931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5930,
											"end": 5939,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5911,
											"end": 6125,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5911,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 5911,
											"end": 6125,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6006,
											"end": 6029,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 6006,
											"end": 6029,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5982,
											"end": 6003,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5982,
											"end": 6003,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 5979,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 5974,
											"end": 6003,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6003,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 5974,
											"end": 6003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6003,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 5974,
											"end": 6003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 5974,
											"end": 6029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 5974,
											"end": 6029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6029,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 5974,
											"end": 6029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6029,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6060,
											"end": 6070,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6052,
											"end": 6057,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6052,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 6052,
											"end": 6070,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6052,
											"end": 6070,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6052,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 6052,
											"end": 6070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6052,
											"end": 6070,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 6052,
											"end": 6070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6044,
											"end": 6070,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6044,
											"end": 6070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6103,
											"end": 6113,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6085,
											"end": 6113,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6085,
											"end": 6113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 6085,
											"end": 6113,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6085,
											"end": 6113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6085,
											"end": 6113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 6085,
											"end": 6113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6085,
											"end": 6113,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 6085,
											"end": 6113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6085,
											"end": 6113,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6085,
											"end": 6113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 5944,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 5944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 5941,
											"end": 5944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 5944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 5941,
											"end": 5944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 5944,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 5941,
											"end": 5944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 5944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 5944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5911,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 5911,
											"end": 6125,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5911,
											"end": 6125,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 5911,
											"end": 6125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5911,
											"end": 6125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6209,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 6189,
											"end": 6198,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 6189,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 6189,
											"end": 6209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6189,
											"end": 6209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6189,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 6189,
											"end": 6209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6189,
											"end": 6209,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 6189,
											"end": 6209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6173,
											"end": 6184,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6160,
											"end": 6170,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6157,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 6143,
											"end": 6170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 6143,
											"end": 6170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6170,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 6143,
											"end": 6170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 6143,
											"end": 6184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 6143,
											"end": 6184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6184,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 6143,
											"end": 6184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 6142,
											"end": 6210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 6142,
											"end": 6210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6210,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 6142,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6210,
											"name": "SWAP11",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 6218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7086,
											"end": 7201,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 7086,
											"end": 7201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7153,
											"end": 7160,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 7153,
											"end": 7158,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 7153,
											"end": 7160,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7153,
											"end": 7160,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 7153,
											"end": 7160,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7145,
											"end": 7170,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 7171,
											"end": 7192,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7145,
											"end": 7193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7193,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7086,
											"end": 7201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1323,
											"end": 1345,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1331,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1323,
											"end": 1345,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 1315,
											"end": 1388,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 1418,
											"end": 1426,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1399,
											"end": 1427,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1427,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 1399,
											"end": 1427,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3312,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 3214,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3279,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3303,
											"end": 3304,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3300,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 3299,
											"end": 3304,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3299,
											"end": 3304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3304,
											"name": "tag",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 3299,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3292,
											"end": 3304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3292,
											"end": 3304,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3214,
											"end": 3312,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3214,
											"end": 3312,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3214,
											"end": 3312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3214,
											"end": 3312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3214,
											"end": 3312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3669,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 3571,
											"end": 3669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3660,
											"end": 3661,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3657,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3656,
											"end": 3661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "tag",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3661,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3669,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3669,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3669,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3669,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4068,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 3970,
											"end": 4068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4035,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4059,
											"end": 4060,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4056,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 4055,
											"end": 4060,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4060,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 4055,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4060,
											"name": "tag",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 4055,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4048,
											"end": 4060,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4048,
											"end": 4060,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4068,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4068,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2833,
											"end": 2931,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2833,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2891,
											"end": 2898,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2923,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 2919,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 2918,
											"end": 2923,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 2923,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2918,
											"end": 2923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 2923,
											"name": "tag",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 2918,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2833,
											"end": 2931,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2833,
											"end": 2931,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2833,
											"end": 2931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2833,
											"end": 2931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2833,
											"end": 2931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 63,
											"end": 161,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 63,
											"end": 161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 116,
											"end": 123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 153,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 136,
											"end": 153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 136,
											"end": 153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63,
											"end": 161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1634,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1443,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1562,
											"end": 1570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1607,
											"end": 1615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3793,
											"end": 4015,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 3793,
											"end": 4015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3853,
											"end": 3860,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3873,
											"end": 3894,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3897,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 3911,
											"end": 3915,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3897,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3897,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3897,
											"end": 3916,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 3897,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 3916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 3916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3948,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 3966,
											"end": 3978,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3966,
											"end": 3978,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3948,
											"end": 3961,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3948,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 3948,
											"end": 3965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3948,
											"end": 3979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3948,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3948,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3948,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3948,
											"end": 3979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3948,
											"end": 3979,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 3948,
											"end": 3979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3997,
											"end": 4007,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3990,
											"end": 4007,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3990,
											"end": 4007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3990,
											"end": 4007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3990,
											"end": 4007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3793,
											"end": 4015,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3793,
											"end": 4015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3793,
											"end": 4015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3793,
											"end": 4015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1645,
											"end": 1652,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1693,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1694,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1674,
											"end": 1695,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1663,
											"end": 1695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1663,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1707,
											"end": 1823,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 1707,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 1792,
											"end": 1797,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 1777,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 1798,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 1777,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1775,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1799,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1757,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 1757,
											"end": 1817,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1814,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1811,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1815,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1757,
											"end": 1817,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 1757,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1707,
											"end": 1823,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1707,
											"end": 1823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1872,
											"end": 1877,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1916,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1897,
											"end": 1917,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1917,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1926,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 1950,
											"end": 1955,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1926,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 1926,
											"end": 1956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1926,
											"end": 1956,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 1926,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 2436,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1968,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2033,
											"end": 2039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2047,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2092,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2078,
											"end": 2087,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2076,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2088,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2061,
											"end": 2093,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2096,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 2096,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 2096,
											"end": 2175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2096,
											"end": 2175,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 2096,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2241,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 2286,
											"end": 2293,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2277,
											"end": 2283,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2275,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2284,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 2241,
											"end": 2294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2294,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 2241,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2294,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2187,
											"end": 2304,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2343,
											"end": 2345,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 2411,
											"end": 2418,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2408,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2391,
											"end": 2400,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2409,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2369,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 2369,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2369,
											"end": 2419,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 2369,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2314,
											"end": 2429,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 2436,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 2436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 2436,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 2436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 2436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 2436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2442,
											"end": 2551,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 2442,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2523,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 2538,
											"end": 2543,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2523,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 2523,
											"end": 2544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2523,
											"end": 2544,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 2523,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2521,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2545,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2442,
											"end": 2551,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2442,
											"end": 2551,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2442,
											"end": 2551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2767,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2557,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2648,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2680,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2685,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2659,
											"end": 2685,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2659,
											"end": 2685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2695,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 2757,
											"end": 2758,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2755,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2759,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2739,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2695,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 2695,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2695,
											"end": 2760,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 2695,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2767,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2767,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2767,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2767,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2773,
											"end": 2895,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 2773,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 2864,
											"end": 2869,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 2846,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2870,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 2846,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2886,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 2887,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2773,
											"end": 2895,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2773,
											"end": 2895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 3040,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 2901,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2952,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 2991,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 2992,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2963,
											"end": 2992,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2963,
											"end": 2992,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3001,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 3028,
											"end": 3033,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3001,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 3001,
											"end": 3034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3001,
											"end": 3034,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 3001,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 3040,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 3040,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 3040,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 3040,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 3040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3046,
											"end": 3375,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 3046,
											"end": 3375,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3111,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3154,
											"end": 3156,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3142,
											"end": 3151,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3133,
											"end": 3140,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3129,
											"end": 3152,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3125,
											"end": 3157,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3122,
											"end": 3241,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3122,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 3122,
											"end": 3241,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3160,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 3160,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 3160,
											"end": 3239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3160,
											"end": 3239,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 3160,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3122,
											"end": 3241,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 3122,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3280,
											"end": 3281,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3305,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 3350,
											"end": 3357,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3341,
											"end": 3347,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3330,
											"end": 3339,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3326,
											"end": 3348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3305,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 3305,
											"end": 3358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3305,
											"end": 3358,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 3305,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3358,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3358,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3251,
											"end": 3368,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3046,
											"end": 3375,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3046,
											"end": 3375,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3046,
											"end": 3375,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3046,
											"end": 3375,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3046,
											"end": 3375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3499,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 3381,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3468,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 3486,
											"end": 3491,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3468,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 3468,
											"end": 3492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3468,
											"end": 3492,
											"name": "tag",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 3468,
											"end": 3492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3466,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3456,
											"end": 3493,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3499,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3499,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3727,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 3505,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3602,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3638,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3625,
											"end": 3634,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3613,
											"end": 3639,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3613,
											"end": 3639,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 3717,
											"end": 3718,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3706,
											"end": 3715,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3719,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3693,
											"end": 3699,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 3649,
											"end": 3720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3720,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 3649,
											"end": 3720,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3727,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3727,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3727,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3727,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 4207,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 3733,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3807,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3809,
											"end": 3815,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3858,
											"end": 3860,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3855,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3837,
											"end": 3844,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3856,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3829,
											"end": 3861,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3945,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 3826,
											"end": 3945,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3864,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 3864,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 3864,
											"end": 3943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3864,
											"end": 3943,
											"name": "tag",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 3864,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3945,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 3826,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 3985,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4009,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 4054,
											"end": 4061,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4051,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4034,
											"end": 4043,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4030,
											"end": 4052,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 4009,
											"end": 4062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4062,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 4009,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3999,
											"end": 4062,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3999,
											"end": 4062,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3955,
											"end": 4072,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4111,
											"end": 4113,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4137,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 4182,
											"end": 4189,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4173,
											"end": 4179,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4162,
											"end": 4171,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4180,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 4137,
											"end": 4190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4190,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 4137,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4082,
											"end": 4200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 4207,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 4207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 4207,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 4207,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 4207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 4207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4213,
											"end": 4273,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 4213,
											"end": 4273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4241,
											"end": 4244,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4262,
											"end": 4267,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4267,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4267,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4213,
											"end": 4273,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4213,
											"end": 4273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4213,
											"end": 4273,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4213,
											"end": 4273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4421,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 4279,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4329,
											"end": 4338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4362,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 4380,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 4389,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 4407,
											"end": 4412,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 4389,
											"end": 4413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4413,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 4389,
											"end": 4413,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4380,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 4380,
											"end": 4414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4380,
											"end": 4414,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 4380,
											"end": 4414,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 4362,
											"end": 4415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4415,
											"name": "tag",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 4362,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 4415,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 4415,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4421,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4421,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4421,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4427,
											"end": 4553,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 4427,
											"end": 4553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4477,
											"end": 4486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4510,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 4541,
											"end": 4546,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4510,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 4510,
											"end": 4547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4510,
											"end": 4547,
											"name": "tag",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 4510,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4547,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4547,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4427,
											"end": 4553,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4427,
											"end": 4553,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4427,
											"end": 4553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4427,
											"end": 4553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4559,
											"end": 4700,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 4559,
											"end": 4700,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4624,
											"end": 4633,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4657,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 4688,
											"end": 4693,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4657,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 4657,
											"end": 4694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4657,
											"end": 4694,
											"name": "tag",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 4657,
											"end": 4694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4644,
											"end": 4694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4644,
											"end": 4694,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4559,
											"end": 4700,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4559,
											"end": 4700,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4559,
											"end": 4700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4559,
											"end": 4700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4867,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 4706,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4808,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 4854,
											"end": 4859,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4808,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 4808,
											"end": 4860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4808,
											"end": 4860,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 4808,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4803,
											"end": 4806,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4796,
											"end": 4861,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 5125,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 4873,
											"end": 5125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4981,
											"end": 4985,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5019,
											"end": 5021,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5008,
											"end": 5017,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5004,
											"end": 5022,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4996,
											"end": 5022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4996,
											"end": 5022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5032,
											"end": 5118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 5115,
											"end": 5116,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5104,
											"end": 5113,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5117,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5091,
											"end": 5097,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5032,
											"end": 5118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 5032,
											"end": 5118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5032,
											"end": 5118,
											"name": "tag",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 5032,
											"end": 5118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 5125,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 5125,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 5125,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 5125,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 5125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5131,
											"end": 5605,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 5131,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5199,
											"end": 5205,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5207,
											"end": 5213,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5256,
											"end": 5258,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5244,
											"end": 5253,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5235,
											"end": 5242,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5231,
											"end": 5254,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5227,
											"end": 5259,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5224,
											"end": 5343,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5224,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 5224,
											"end": 5343,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5262,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 5262,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 5262,
											"end": 5341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5262,
											"end": 5341,
											"name": "tag",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 5262,
											"end": 5341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5224,
											"end": 5343,
											"name": "tag",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 5224,
											"end": 5343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5382,
											"end": 5383,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 5452,
											"end": 5459,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5432,
											"end": 5441,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5428,
											"end": 5450,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 5407,
											"end": 5460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5460,
											"name": "tag",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 5407,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5397,
											"end": 5460,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5397,
											"end": 5460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5353,
											"end": 5470,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5509,
											"end": 5511,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 5580,
											"end": 5587,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5577,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5560,
											"end": 5569,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5556,
											"end": 5578,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 5535,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "tag",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5480,
											"end": 5598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5131,
											"end": 5605,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5131,
											"end": 5605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5131,
											"end": 5605,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5131,
											"end": 5605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5131,
											"end": 5605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5131,
											"end": 5605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5611,
											"end": 5780,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 5611,
											"end": 5780,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5695,
											"end": 5706,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5729,
											"end": 5735,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5724,
											"end": 5727,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5717,
											"end": 5736,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5769,
											"end": 5773,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5764,
											"end": 5767,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 5774,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5745,
											"end": 5774,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5745,
											"end": 5774,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5611,
											"end": 5780,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5611,
											"end": 5780,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5611,
											"end": 5780,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5611,
											"end": 5780,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5611,
											"end": 5780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5786,
											"end": 6007,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 5786,
											"end": 6007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5926,
											"end": 5960,
											"name": "PUSH",
											"source": 7,
											"value": "41646D696E61626C653A2063616C6C6572206973206E6F7420746865206F776E"
										},
										{
											"begin": 5922,
											"end": 5923,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5914,
											"end": 5920,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5910,
											"end": 5924,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5903,
											"end": 5961,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5995,
											"end": 5999,
											"name": "PUSH",
											"source": 7,
											"value": "6572000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5990,
											"end": 5992,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5982,
											"end": 5988,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5978,
											"end": 5993,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5971,
											"end": 6000,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5786,
											"end": 6007,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5786,
											"end": 6007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6013,
											"end": 6379,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 6013,
											"end": 6379,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6155,
											"end": 6158,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6176,
											"end": 6243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 6240,
											"end": 6242,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6235,
											"end": 6238,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6176,
											"end": 6243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 6176,
											"end": 6243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6176,
											"end": 6243,
											"name": "tag",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 6176,
											"end": 6243,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6169,
											"end": 6243,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6169,
											"end": 6243,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6252,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 6341,
											"end": 6344,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6252,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 6252,
											"end": 6345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6252,
											"end": 6345,
											"name": "tag",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 6252,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6372,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6365,
											"end": 6368,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6361,
											"end": 6373,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6373,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6373,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6013,
											"end": 6379,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6013,
											"end": 6379,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6013,
											"end": 6379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6013,
											"end": 6379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6385,
											"end": 6804,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 6385,
											"end": 6804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6551,
											"end": 6555,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6589,
											"end": 6591,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6578,
											"end": 6587,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6574,
											"end": 6592,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6566,
											"end": 6592,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6566,
											"end": 6592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6638,
											"end": 6647,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6632,
											"end": 6636,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6628,
											"end": 6648,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6624,
											"end": 6625,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6613,
											"end": 6622,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6609,
											"end": 6626,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6649,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6666,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 6792,
											"end": 6796,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6666,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 6666,
											"end": 6797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6666,
											"end": 6797,
											"name": "tag",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 6666,
											"end": 6797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6658,
											"end": 6797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6658,
											"end": 6797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6385,
											"end": 6804,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6385,
											"end": 6804,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6385,
											"end": 6804,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6385,
											"end": 6804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6810,
											"end": 7118,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 6810,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6919,
											"end": 6923,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6957,
											"end": 6959,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6946,
											"end": 6955,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6942,
											"end": 6960,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6934,
											"end": 6960,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6934,
											"end": 6960,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6970,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 7032,
											"end": 7033,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7017,
											"end": 7034,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7008,
											"end": 7014,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6970,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 6970,
											"end": 7035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6970,
											"end": 7035,
											"name": "tag",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 6970,
											"end": 7035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7045,
											"end": 7111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 7107,
											"end": 7109,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7096,
											"end": 7105,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7092,
											"end": 7110,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7089,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7045,
											"end": 7111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 7045,
											"end": 7111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7045,
											"end": 7111,
											"name": "tag",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 7045,
											"end": 7111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6810,
											"end": 7118,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6810,
											"end": 7118,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6810,
											"end": 7118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6810,
											"end": 7118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6810,
											"end": 7118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6810,
											"end": 7118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7124,
											"end": 7305,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 7124,
											"end": 7305,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7264,
											"end": 7297,
											"name": "PUSH",
											"source": 7,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 7260,
											"end": 7261,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7258,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7248,
											"end": 7262,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7241,
											"end": 7298,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7124,
											"end": 7305,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7124,
											"end": 7305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7311,
											"end": 7677,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 7311,
											"end": 7677,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7453,
											"end": 7456,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7474,
											"end": 7541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 7538,
											"end": 7540,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7533,
											"end": 7536,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7474,
											"end": 7541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 7474,
											"end": 7541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7474,
											"end": 7541,
											"name": "tag",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 7474,
											"end": 7541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7467,
											"end": 7541,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7467,
											"end": 7541,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7550,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 7639,
											"end": 7642,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7550,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 7550,
											"end": 7643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7550,
											"end": 7643,
											"name": "tag",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 7550,
											"end": 7643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7668,
											"end": 7670,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7663,
											"end": 7666,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7659,
											"end": 7671,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7652,
											"end": 7671,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7652,
											"end": 7671,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7311,
											"end": 7677,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7311,
											"end": 7677,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7311,
											"end": 7677,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7311,
											"end": 7677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7683,
											"end": 8102,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 7683,
											"end": 8102,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7849,
											"end": 7853,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7887,
											"end": 7889,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7876,
											"end": 7885,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7872,
											"end": 7890,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7864,
											"end": 7890,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7864,
											"end": 7890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7936,
											"end": 7945,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7930,
											"end": 7934,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7926,
											"end": 7946,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7922,
											"end": 7923,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7911,
											"end": 7920,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7907,
											"end": 7924,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7900,
											"end": 7947,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7964,
											"end": 8095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 8090,
											"end": 8094,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7964,
											"end": 8095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 7964,
											"end": 8095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7964,
											"end": 8095,
											"name": "tag",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 7964,
											"end": 8095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7956,
											"end": 8095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7956,
											"end": 8095,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7683,
											"end": 8102,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7683,
											"end": 8102,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7683,
											"end": 8102,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7683,
											"end": 8102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8108,
											"end": 8440,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 8108,
											"end": 8440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8229,
											"end": 8233,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8267,
											"end": 8269,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8256,
											"end": 8265,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8252,
											"end": 8270,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8244,
											"end": 8270,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8244,
											"end": 8270,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8280,
											"end": 8351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 8348,
											"end": 8349,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8337,
											"end": 8346,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8333,
											"end": 8350,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8324,
											"end": 8330,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8280,
											"end": 8351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 8280,
											"end": 8351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8280,
											"end": 8351,
											"name": "tag",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 8280,
											"end": 8351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8361,
											"end": 8433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 8429,
											"end": 8431,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8418,
											"end": 8427,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8414,
											"end": 8432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8405,
											"end": 8411,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8361,
											"end": 8433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 8361,
											"end": 8433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8361,
											"end": 8433,
											"name": "tag",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 8361,
											"end": 8433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8108,
											"end": 8440,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8108,
											"end": 8440,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8108,
											"end": 8440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8108,
											"end": 8440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8108,
											"end": 8440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8108,
											"end": 8440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8446,
											"end": 8583,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 8446,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8500,
											"end": 8505,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8531,
											"end": 8537,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8525,
											"end": 8538,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8516,
											"end": 8538,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8516,
											"end": 8538,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8547,
											"end": 8577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 8571,
											"end": 8576,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8547,
											"end": 8577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 8547,
											"end": 8577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8547,
											"end": 8577,
											"name": "tag",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 8547,
											"end": 8577,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8446,
											"end": 8583,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8446,
											"end": 8583,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8446,
											"end": 8583,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8446,
											"end": 8583,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8446,
											"end": 8583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8934,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 8589,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8656,
											"end": 8662,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8705,
											"end": 8707,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8693,
											"end": 8702,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8684,
											"end": 8691,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8680,
											"end": 8703,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8676,
											"end": 8708,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8673,
											"end": 8792,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8673,
											"end": 8792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 8673,
											"end": 8792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 8711,
											"end": 8790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 8711,
											"end": 8790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8790,
											"name": "tag",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 8711,
											"end": 8790,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8673,
											"end": 8792,
											"name": "tag",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 8673,
											"end": 8792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8831,
											"end": 8832,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8856,
											"end": 8917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 8909,
											"end": 8916,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8900,
											"end": 8906,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8889,
											"end": 8898,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8885,
											"end": 8907,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8856,
											"end": 8917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 8856,
											"end": 8917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8856,
											"end": 8917,
											"name": "tag",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 8856,
											"end": 8917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8846,
											"end": 8917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8846,
											"end": 8917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8802,
											"end": 8927,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8934,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8934,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8934,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8934,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8940,
											"end": 9161,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 8940,
											"end": 9161,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9080,
											"end": 9114,
											"name": "PUSH",
											"source": 7,
											"value": "41646D696E61626C653A2063616C6C6572206973206E6F74207468652061646D"
										},
										{
											"begin": 9076,
											"end": 9077,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9068,
											"end": 9074,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9064,
											"end": 9078,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9057,
											"end": 9115,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9149,
											"end": 9153,
											"name": "PUSH",
											"source": 7,
											"value": "696E000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9144,
											"end": 9146,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9136,
											"end": 9142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9132,
											"end": 9147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9125,
											"end": 9154,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8940,
											"end": 9161,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8940,
											"end": 9161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9167,
											"end": 9533,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 9167,
											"end": 9533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9309,
											"end": 9312,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9330,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 9394,
											"end": 9396,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 9389,
											"end": 9392,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9330,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 9330,
											"end": 9397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9330,
											"end": 9397,
											"name": "tag",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 9330,
											"end": 9397,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9323,
											"end": 9397,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9323,
											"end": 9397,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9406,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 9495,
											"end": 9498,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9406,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 9406,
											"end": 9499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9406,
											"end": 9499,
											"name": "tag",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 9406,
											"end": 9499,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9524,
											"end": 9526,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9519,
											"end": 9522,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9515,
											"end": 9527,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9508,
											"end": 9527,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9508,
											"end": 9527,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9167,
											"end": 9533,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9167,
											"end": 9533,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9167,
											"end": 9533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9167,
											"end": 9533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9539,
											"end": 9958,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 9539,
											"end": 9958,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9705,
											"end": 9709,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9743,
											"end": 9745,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9732,
											"end": 9741,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9728,
											"end": 9746,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9720,
											"end": 9746,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9720,
											"end": 9746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9792,
											"end": 9801,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9786,
											"end": 9790,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9782,
											"end": 9802,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9778,
											"end": 9779,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9767,
											"end": 9776,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9763,
											"end": 9780,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9756,
											"end": 9803,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9820,
											"end": 9951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 9946,
											"end": 9950,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9820,
											"end": 9951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 9820,
											"end": 9951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9820,
											"end": 9951,
											"name": "tag",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 9820,
											"end": 9951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9812,
											"end": 9951,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9812,
											"end": 9951,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9539,
											"end": 9958,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9539,
											"end": 9958,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9539,
											"end": 9958,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9539,
											"end": 9958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9964,
											"end": 10144,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 9964,
											"end": 10144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10012,
											"end": 10089,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10009,
											"end": 10010,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10002,
											"end": 10090,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10113,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 10106,
											"end": 10107,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10099,
											"end": 10114,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10133,
											"end": 10137,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10130,
											"end": 10131,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10123,
											"end": 10138,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10150,
											"end": 10344,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 10150,
											"end": 10344,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10190,
											"end": 10194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10210,
											"end": 10230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 10228,
											"end": 10229,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10210,
											"end": 10230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 10210,
											"end": 10230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10210,
											"end": 10230,
											"name": "tag",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 10210,
											"end": 10230,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10205,
											"end": 10230,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10205,
											"end": 10230,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10244,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10244,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 10244,
											"end": 10264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10244,
											"end": 10264,
											"name": "tag",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 10244,
											"end": 10264,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10239,
											"end": 10264,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10239,
											"end": 10264,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10288,
											"end": 10289,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10285,
											"end": 10286,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10281,
											"end": 10290,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10273,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10273,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10312,
											"end": 10313,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10306,
											"end": 10310,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10303,
											"end": 10314,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10300,
											"end": 10337,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10300,
											"end": 10337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 10300,
											"end": 10337,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10317,
											"end": 10335,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 10317,
											"end": 10335,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 10317,
											"end": 10335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10317,
											"end": 10335,
											"name": "tag",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 10317,
											"end": 10335,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10300,
											"end": 10337,
											"name": "tag",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 10300,
											"end": 10337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10150,
											"end": 10344,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10150,
											"end": 10344,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10150,
											"end": 10344,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10150,
											"end": 10344,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10150,
											"end": 10344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10350,
											"end": 10530,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 10350,
											"end": 10530,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10398,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10395,
											"end": 10396,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10388,
											"end": 10476,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10495,
											"end": 10499,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 10492,
											"end": 10493,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10485,
											"end": 10500,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10519,
											"end": 10523,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10516,
											"end": 10517,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10524,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10536,
											"end": 10721,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 10536,
											"end": 10721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10576,
											"end": 10577,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10593,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 10611,
											"end": 10612,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10593,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 10593,
											"end": 10613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10593,
											"end": 10613,
											"name": "tag",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 10593,
											"end": 10613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10588,
											"end": 10613,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10588,
											"end": 10613,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10627,
											"end": 10647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 10645,
											"end": 10646,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10627,
											"end": 10647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 10627,
											"end": 10647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10627,
											"end": 10647,
											"name": "tag",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 10627,
											"end": 10647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10622,
											"end": 10647,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10622,
											"end": 10647,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10666,
											"end": 10667,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10656,
											"end": 10691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 10656,
											"end": 10691,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 10671,
											"end": 10689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "tag",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10656,
											"end": 10691,
											"name": "tag",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 10656,
											"end": 10691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10713,
											"end": 10714,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10710,
											"end": 10711,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10706,
											"end": 10715,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10701,
											"end": 10715,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10701,
											"end": 10715,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10536,
											"end": 10721,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10536,
											"end": 10721,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10536,
											"end": 10721,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10536,
											"end": 10721,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10536,
											"end": 10721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10727,
											"end": 10918,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 10727,
											"end": 10918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10767,
											"end": 10770,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10786,
											"end": 10806,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 10804,
											"end": 10805,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10786,
											"end": 10806,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 10786,
											"end": 10806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10786,
											"end": 10806,
											"name": "tag",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 10786,
											"end": 10806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10781,
											"end": 10806,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10781,
											"end": 10806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10820,
											"end": 10840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 10838,
											"end": 10839,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10820,
											"end": 10840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 10820,
											"end": 10840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10820,
											"end": 10840,
											"name": "tag",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 10820,
											"end": 10840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10815,
											"end": 10840,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10815,
											"end": 10840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10863,
											"end": 10864,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10860,
											"end": 10861,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10856,
											"end": 10865,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10849,
											"end": 10865,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10849,
											"end": 10865,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10884,
											"end": 10887,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10881,
											"end": 10882,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10878,
											"end": 10888,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10875,
											"end": 10911,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10875,
											"end": 10911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 10875,
											"end": 10911,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10891,
											"end": 10909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 10891,
											"end": 10909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 10891,
											"end": 10909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10891,
											"end": 10909,
											"name": "tag",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 10891,
											"end": 10909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10875,
											"end": 10911,
											"name": "tag",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 10875,
											"end": 10911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10727,
											"end": 10918,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10727,
											"end": 10918,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10727,
											"end": 10918,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10727,
											"end": 10918,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10727,
											"end": 10918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10924,
											"end": 11334,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 10924,
											"end": 11334,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10964,
											"end": 10971,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10987,
											"end": 11007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 11005,
											"end": 11006,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10987,
											"end": 11007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 10987,
											"end": 11007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10987,
											"end": 11007,
											"name": "tag",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 10987,
											"end": 11007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10982,
											"end": 11007,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10982,
											"end": 11007,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11021,
											"end": 11041,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 11039,
											"end": 11040,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11021,
											"end": 11041,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 11021,
											"end": 11041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11021,
											"end": 11041,
											"name": "tag",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 11021,
											"end": 11041,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11016,
											"end": 11041,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11016,
											"end": 11041,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11076,
											"end": 11077,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11073,
											"end": 11074,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11069,
											"end": 11078,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 11098,
											"end": 11128,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 11116,
											"end": 11127,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11098,
											"end": 11128,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 11098,
											"end": 11128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11098,
											"end": 11128,
											"name": "tag",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 11098,
											"end": 11128,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11087,
											"end": 11128,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11087,
											"end": 11128,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11277,
											"end": 11278,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11268,
											"end": 11275,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11264,
											"end": 11279,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 11261,
											"end": 11262,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11258,
											"end": 11280,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 11238,
											"end": 11239,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11231,
											"end": 11240,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11211,
											"end": 11294,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 11188,
											"end": 11327,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 11188,
											"end": 11327,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11307,
											"end": 11325,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 11307,
											"end": 11325,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 11307,
											"end": 11325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11307,
											"end": 11325,
											"name": "tag",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 11307,
											"end": 11325,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11188,
											"end": 11327,
											"name": "tag",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 11188,
											"end": 11327,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10972,
											"end": 11334,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10924,
											"end": 11334,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10924,
											"end": 11334,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10924,
											"end": 11334,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10924,
											"end": 11334,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10924,
											"end": 11334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11340,
											"end": 11573,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 11340,
											"end": 11573,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11379,
											"end": 11382,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11402,
											"end": 11426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 11420,
											"end": 11425,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11402,
											"end": 11426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 11402,
											"end": 11426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11402,
											"end": 11426,
											"name": "tag",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 11402,
											"end": 11426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11393,
											"end": 11426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11393,
											"end": 11426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11448,
											"end": 11514,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11441,
											"end": 11446,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11438,
											"end": 11515,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11435,
											"end": 11538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 11435,
											"end": 11538,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11518,
											"end": 11536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 11518,
											"end": 11536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 11518,
											"end": 11536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11518,
											"end": 11536,
											"name": "tag",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 11518,
											"end": 11536,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11435,
											"end": 11538,
											"name": "tag",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 11435,
											"end": 11538,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11565,
											"end": 11566,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11558,
											"end": 11563,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11554,
											"end": 11567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11547,
											"end": 11567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11547,
											"end": 11567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11340,
											"end": 11573,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11340,
											"end": 11573,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11340,
											"end": 11573,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11340,
											"end": 11573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11579,
											"end": 11743,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 11579,
											"end": 11743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11719,
											"end": 11735,
											"name": "PUSH",
											"source": 7,
											"value": "43616E6E6F74207374616B652030000000000000000000000000000000000000"
										},
										{
											"begin": 11715,
											"end": 11716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11707,
											"end": 11713,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11703,
											"end": 11717,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11696,
											"end": 11736,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11579,
											"end": 11743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11579,
											"end": 11743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11749,
											"end": 12115,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 11749,
											"end": 12115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11891,
											"end": 11894,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11912,
											"end": 11979,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 11976,
											"end": 11978,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 11971,
											"end": 11974,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11912,
											"end": 11979,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 11912,
											"end": 11979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11912,
											"end": 11979,
											"name": "tag",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 11912,
											"end": 11979,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11905,
											"end": 11979,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11905,
											"end": 11979,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11988,
											"end": 12081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 12077,
											"end": 12080,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11988,
											"end": 12081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 11988,
											"end": 12081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11988,
											"end": 12081,
											"name": "tag",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 11988,
											"end": 12081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12106,
											"end": 12108,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12101,
											"end": 12104,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12097,
											"end": 12109,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12090,
											"end": 12109,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12090,
											"end": 12109,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11749,
											"end": 12115,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11749,
											"end": 12115,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11749,
											"end": 12115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11749,
											"end": 12115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12121,
											"end": 12540,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 12121,
											"end": 12540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12287,
											"end": 12291,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12325,
											"end": 12327,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12314,
											"end": 12323,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12302,
											"end": 12328,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12302,
											"end": 12328,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12374,
											"end": 12383,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12368,
											"end": 12372,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12364,
											"end": 12384,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12360,
											"end": 12361,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12349,
											"end": 12358,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12345,
											"end": 12362,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12338,
											"end": 12385,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12402,
											"end": 12533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 12528,
											"end": 12532,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12402,
											"end": 12533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 12402,
											"end": 12533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12402,
											"end": 12533,
											"name": "tag",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 12402,
											"end": 12533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12394,
											"end": 12533,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12394,
											"end": 12533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12121,
											"end": 12540,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12121,
											"end": 12540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12121,
											"end": 12540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12121,
											"end": 12540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12546,
											"end": 12722,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 12546,
											"end": 12722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12578,
											"end": 12579,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12595,
											"end": 12615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 12613,
											"end": 12614,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12595,
											"end": 12615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 12595,
											"end": 12615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12595,
											"end": 12615,
											"name": "tag",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 12595,
											"end": 12615,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12590,
											"end": 12615,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12590,
											"end": 12615,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12629,
											"end": 12649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 12647,
											"end": 12648,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12629,
											"end": 12649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 12629,
											"end": 12649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12629,
											"end": 12649,
											"name": "tag",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 12629,
											"end": 12649,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12624,
											"end": 12649,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12624,
											"end": 12649,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12668,
											"end": 12669,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12658,
											"end": 12693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 12658,
											"end": 12693,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12673,
											"end": 12691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 12673,
											"end": 12691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 12673,
											"end": 12691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12673,
											"end": 12691,
											"name": "tag",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 12673,
											"end": 12691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12658,
											"end": 12693,
											"name": "tag",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 12658,
											"end": 12693,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12714,
											"end": 12715,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12711,
											"end": 12712,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12707,
											"end": 12716,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": 12702,
											"end": 12716,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12702,
											"end": 12716,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12546,
											"end": 12722,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12546,
											"end": 12722,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12546,
											"end": 12722,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12546,
											"end": 12722,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12546,
											"end": 12722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12728,
											"end": 12953,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 12728,
											"end": 12953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12868,
											"end": 12902,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 12864,
											"end": 12865,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12856,
											"end": 12862,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12852,
											"end": 12866,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12845,
											"end": 12903,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12937,
											"end": 12945,
											"name": "PUSH",
											"source": 7,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12932,
											"end": 12934,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12924,
											"end": 12930,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12920,
											"end": 12935,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12913,
											"end": 12946,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12728,
											"end": 12953,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12728,
											"end": 12953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12959,
											"end": 13325,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 12959,
											"end": 13325,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13101,
											"end": 13104,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13122,
											"end": 13189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "555"
										},
										{
											"begin": 13186,
											"end": 13188,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 13181,
											"end": 13184,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13122,
											"end": 13189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 13122,
											"end": 13189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13122,
											"end": 13189,
											"name": "tag",
											"source": 7,
											"value": "555"
										},
										{
											"begin": 13122,
											"end": 13189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13115,
											"end": 13189,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13115,
											"end": 13189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13198,
											"end": 13291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 13287,
											"end": 13290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13198,
											"end": 13291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 13198,
											"end": 13291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13198,
											"end": 13291,
											"name": "tag",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 13198,
											"end": 13291,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13316,
											"end": 13318,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13311,
											"end": 13314,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13307,
											"end": 13319,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13300,
											"end": 13319,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13300,
											"end": 13319,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12959,
											"end": 13325,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12959,
											"end": 13325,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12959,
											"end": 13325,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12959,
											"end": 13325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13331,
											"end": 13750,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 13331,
											"end": 13750,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13497,
											"end": 13501,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13535,
											"end": 13537,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13524,
											"end": 13533,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13520,
											"end": 13538,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13512,
											"end": 13538,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13512,
											"end": 13538,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13584,
											"end": 13593,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13578,
											"end": 13582,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13574,
											"end": 13594,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13570,
											"end": 13571,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13559,
											"end": 13568,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13555,
											"end": 13572,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13548,
											"end": 13595,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13612,
											"end": 13743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "558"
										},
										{
											"begin": 13738,
											"end": 13742,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13612,
											"end": 13743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 13612,
											"end": 13743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13612,
											"end": 13743,
											"name": "tag",
											"source": 7,
											"value": "558"
										},
										{
											"begin": 13612,
											"end": 13743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13604,
											"end": 13743,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13604,
											"end": 13743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13331,
											"end": 13750,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13331,
											"end": 13750,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13331,
											"end": 13750,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13331,
											"end": 13750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"claimedBalances(address)": "d42b779d",
							"curTime()": "9a5b17b0",
							"earned(address)": "008cc262",
							"emergencyWithdraw()": "db2e21bc",
							"emergencyWithdrawToken(address,uint256)": "a4c3b091",
							"getCurRewardPool()": "9499c549",
							"getCurRewardRate()": "cdda56e0",
							"getRemainPool(uint256)": "4dbdc4eb",
							"getReward()": "3d18b912",
							"getRewardPool(uint256)": "5cfa91f4",
							"getTimeWeightedAveRate(uint256,uint256)": "da4f8431",
							"isAdmin(address)": "24d7806c",
							"lastTimeRewardApplicable()": "80faa57d",
							"lastUpdateTime()": "c8f33c91",
							"modificationAdmin(address,bool)": "18e20ecf",
							"owner()": "8da5cb5b",
							"powersOf(address)": "b79ec812",
							"rateInterval()": "6139d4b4",
							"rateIntervalDenominator()": "7a6fcee7",
							"rateIntervalNumerator()": "3c4045cf",
							"renounceOwnership()": "715018a6",
							"rewardPerToken(uint256)": "874c120b",
							"rewardPerTokenStored()": "df136d65",
							"rewards(address)": "0700037d",
							"rewardsToken()": "d1af0c7d",
							"setRewardToken(address)": "8aee8127",
							"setStartTime(uint256)": "3e0a322d",
							"stake(address,uint256)": "adc9772e",
							"startTime()": "78e97925",
							"totalPowers()": "6917c501",
							"totalRewards()": "0e15561a",
							"transferOwnership(address)": "f2fde38b",
							"userLastUpdateTime(address)": "8107368b",
							"userRewardPerTokenPaid(address)": "8b876347"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"oldState\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newState\",\"type\":\"bool\"}],\"name\":\"ModificationAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimedBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurRewardPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"getRemainPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"getRewardPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"leftTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rightTime\",\"type\":\"uint256\"}],\"name\":\"getTimeWeightedAveRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"modificationAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"powersOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rateInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rateIntervalDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rateIntervalNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"}],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"setRewardToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setStartTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPowers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userLastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"inviter_presell/stake.sol\":\"StakingRewards\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"inviter_presell/adminable.sol\":{\"keccak256\":\"0x077c3b664bd79c85f8dcbcfb38594ca46e79324915b0db87e9adff3431025837\",\"urls\":[\"bzz-raw://4a0d86ef7c9f4e8601f58977faa5232d325604963aebb0de4ff455f0bd5b893c\",\"dweb:/ipfs/QmTr9KaGYYdn4FvWKq1RDJL3xY8wZcaJMoJubTDz5YWM2p\"]},\"inviter_presell/stake.sol\":{\"keccak256\":\"0x2fbf18ec630d698915bd8917264898ef1452e5d1b49568ab4b402b83601466f4\",\"urls\":[\"bzz-raw://6aa0de0c6ac2fc5d80bdbcbce8d8562372545c57769755064ed205b410037b1d\",\"dweb:/ipfs/Qmb1iR5kJY6jCekvFVhnf6CkqhkRRtWkKBR9jwEdnGetTR\"]},\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x06707b8e54c7eb2b94ccbc637da3fff949722f4b486240f9c90d78791a2a4236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2ffd99bd45ef286df212f5ee7104f995164b3ec2d892d322c02fbac2b1c86ba\",\"dweb:/ipfs/QmSmuvFCGuke41naLkGXikj2pjjLNfK1THf5KCFNzHt5KM\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xd3498b152364c51284e38a01585debf7f69c6908fbab1da8f11a75ba5b89c251\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb8f6252c31c2ffb1143ca2d9e89e2cf6f031f1dd2e6a9b06fd81ab3ab6cf12b\",\"dweb:/ipfs/QmSJp6A2Ku5F1nZvRp8PnmKtCocurhVcXiZtKC7L86zY6b\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x1d8c67ff4df5cae6fe8e310ad03346ee68a394357f1f300f25e7dcd239237768\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://295c487f024e0ae6114161519a82d21b9689da0a98bd4234351512d1dc3c9e77\",\"dweb:/ipfs/QmYvtHQ7mLC2tjjdz6Q3HAGWR25WjgvNh8KGkTdhjRVm9t\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5ecc35dbdbecd0fb1ef55aaac24c52625952b288220eb19f828f8a09a9c10229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86c64d344a2826ceca37440c53159f5f9b298653c8d60edfeba50ecfe175878\",\"dweb:/ipfs/QmSx7BqU1YDXLzafmUp6rAWiDMmR3vyJ1zM7hBWgvT5qxp\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2bc6c5dcc8227e2c72debda8b30d912ea9acf7b3938b2729d2de3bf9e5546e19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e297a8cc9b2b2d9819ddfa1d3fbfefa1b5677fc75443be19c518f13f35a4fc3\",\"dweb:/ipfs/QmYvxeCTDkdxRvfB9SyiSFWUYTNFhvqFbY6UF2pHruJFaQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_admins",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 28,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 971,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_status",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 192,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rewardsToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)1078"
							},
							{
								"astId": 196,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rewards",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 203,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "totalRewards",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 205,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "startTime",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 208,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rateInterval",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 211,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rateIntervalNumerator",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 214,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rateIntervalDenominator",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 216,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "lastUpdateTime",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 218,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rewardPerTokenStored",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 220,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_totalPowers",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 224,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "userRewardPerTokenPaid",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 228,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "userLastUpdateTime",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 232,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "claimedBalances",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 236,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_balances",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)1078": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x06707b8e54c7eb2b94ccbc637da3fff949722f4b486240f9c90d78791a2a4236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2ffd99bd45ef286df212f5ee7104f995164b3ec2d892d322c02fbac2b1c86ba\",\"dweb:/ipfs/QmSmuvFCGuke41naLkGXikj2pjjLNfK1THf5KCFNzHt5KM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 971,
								"contract": "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xd3498b152364c51284e38a01585debf7f69c6908fbab1da8f11a75ba5b89c251\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb8f6252c31c2ffb1143ca2d9e89e2cf6f031f1dd2e6a9b06fd81ab3ab6cf12b\",\"dweb:/ipfs/QmSJp6A2Ku5F1nZvRp8PnmKtCocurhVcXiZtKC7L86zY6b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":662:4013  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":662:4013  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207331da5e5a247088c9af3ed5adb1ce3de9baa75769bb31afc7637d356f16c34c64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207331da5e5a247088c9af3ed5adb1ce3de9baa75769bb31afc7637d356f16c34c64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x31DA5E5A247088C9AF3ED5ADB1CE3DE9BAA75769 0xBB BALANCE 0xAF 0xC7 PUSH4 0x7D356F16 0xC3 0x4C PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "662:3351:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207331da5e5a247088c9af3ed5adb1ce3de9baa75769bb31afc7637d356f16c34c64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x31DA5E5A247088C9AF3ED5ADB1CE3DE9BAA75769 0xBB BALANCE 0xAF 0xC7 PUSH4 0x7D356F16 0xC3 0x4C PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "662:3351:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207331da5e5a247088c9af3ed5adb1ce3de9baa75769bb31afc7637d356f16c34c64736f6c63430008110033",
									".code": [
										{
											"begin": 662,
											"end": 4013,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xd3498b152364c51284e38a01585debf7f69c6908fbab1da8f11a75ba5b89c251\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb8f6252c31c2ffb1143ca2d9e89e2cf6f031f1dd2e6a9b06fd81ab3ab6cf12b\",\"dweb:/ipfs/QmSJp6A2Ku5F1nZvRp8PnmKtCocurhVcXiZtKC7L86zY6b\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x1d8c67ff4df5cae6fe8e310ad03346ee68a394357f1f300f25e7dcd239237768\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://295c487f024e0ae6114161519a82d21b9689da0a98bd4234351512d1dc3c9e77\",\"dweb:/ipfs/QmYvtHQ7mLC2tjjdz6Q3HAGWR25WjgvNh8KGkTdhjRVm9t\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5ecc35dbdbecd0fb1ef55aaac24c52625952b288220eb19f828f8a09a9c10229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86c64d344a2826ceca37440c53159f5f9b298653c8d60edfeba50ecfe175878\",\"dweb:/ipfs/QmSx7BqU1YDXLzafmUp6rAWiDMmR3vyJ1zM7hBWgvT5qxp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":187:8124  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":187:8124  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e179e244acfe816093e1847a0fd8fe1c3ce565caaeb547a8c8dab80385b8fddb64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e179e244acfe816093e1847a0fd8fe1c3ce565caaeb547a8c8dab80385b8fddb64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 PUSH26 0xE244ACFE816093E1847A0FD8FE1C3CE565CAAEB547A8C8DAB803 DUP6 0xB8 REVERT 0xDB PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "187:7937:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e179e244acfe816093e1847a0fd8fe1c3ce565caaeb547a8c8dab80385b8fddb64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 PUSH26 0xE244ACFE816093E1847A0FD8FE1C3CE565CAAEB547A8C8DAB803 DUP6 0xB8 REVERT 0xDB PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "187:7937:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e179e244acfe816093e1847a0fd8fe1c3ce565caaeb547a8c8dab80385b8fddb64736f6c63430008110033",
									".code": [
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5ecc35dbdbecd0fb1ef55aaac24c52625952b288220eb19f828f8a09a9c10229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86c64d344a2826ceca37440c53159f5f9b298653c8d60edfeba50ecfe175878\",\"dweb:/ipfs/QmSx7BqU1YDXLzafmUp6rAWiDMmR3vyJ1zM7hBWgvT5qxp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6994  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6994  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122016774d5bf876b18936949106003822d6683a7b19bd496b37df8b764b85c99ae464736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122016774d5bf876b18936949106003822d6683a7b19bd496b37df8b764b85c99ae464736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND PUSH24 0x4D5BF876B18936949106003822D6683A7B19BD496B37DF8B PUSH23 0x4B85C99AE464736F6C6343000811003300000000000000 ",
							"sourceMap": "482:6512:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122016774d5bf876b18936949106003822d6683a7b19bd496b37df8b764b85c99ae464736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND PUSH24 0x4D5BF876B18936949106003822D6683A7B19BD496B37DF8B PUSH23 0x4B85C99AE464736F6C6343000811003300000000000000 ",
							"sourceMap": "482:6512:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122016774d5bf876b18936949106003822d6683a7b19bd496b37df8b764b85c99ae464736f6c63430008110033",
									".code": [
										{
											"begin": 482,
											"end": 6994,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2bc6c5dcc8227e2c72debda8b30d912ea9acf7b3938b2729d2de3bf9e5546e19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e297a8cc9b2b2d9819ddfa1d3fbfefa1b5677fc75443be19c518f13f35a4fc3\",\"dweb:/ipfs/QmYvxeCTDkdxRvfB9SyiSFWUYTNFhvqFbY6UF2pHruJFaQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> inviter_presell/adminable.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "inviter_presell/adminable.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> inviter_presell/stake.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "inviter_presell/stake.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"inviter_presell/adminable.sol": {
				"ast": {
					"absolutePath": "inviter_presell/adminable.sol",
					"exportedSymbols": {
						"Adminable": [
							175
						],
						"Context": [
							20
						]
					},
					"id": 176,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "2:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 20,
							"linearizedBaseContracts": [
								20
							],
							"name": "Context",
							"nameLocation": "48:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "125:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "143:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "147:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "143:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "136:17:0"
											}
										]
									},
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "72:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "82:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "116:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "115:9:0"
									},
									"scope": 20,
									"src": "63:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "236:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 15,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "254:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "258:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "254:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 17,
												"nodeType": "Return",
												"src": "247:15:0"
											}
										]
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "178:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "186:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "220:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "220:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "219:16:0"
									},
									"scope": 20,
									"src": "169:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 176,
							"src": "30:243:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 21,
										"name": "Context",
										"nameLocations": [
											"310:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 20,
										"src": "310:7:0"
									},
									"id": 22,
									"nodeType": "InheritanceSpecifier",
									"src": "310:7:0"
								}
							],
							"canonicalName": "Adminable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 175,
							"linearizedBaseContracts": [
								175,
								20
							],
							"name": "Adminable",
							"nameLocation": "297:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_admins",
									"nameLocation": "358:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 175,
									"src": "325:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 25,
										"keyType": {
											"id": 23,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "333:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "325:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 24,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "344:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "388:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 175,
									"src": "372:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 27,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "372:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 34,
									"name": "OwnershipTransferred",
									"nameLocation": "409:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "446:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "430:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "477:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "461:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "429:57:0"
									},
									"src": "403:84:0"
								},
								{
									"anonymous": false,
									"eventSelector": "82f1fa40a3d82dea3e406073819290601f436580aa7c69f9feb61f885bdd8854",
									"id": 42,
									"name": "ModificationAdmin",
									"nameLocation": "499:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "533:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "517:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldState",
												"nameLocation": "545:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "540:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 37,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "540:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": false,
												"mutability": "mutable",
												"name": "newState",
												"nameLocation": "560:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "555:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "516:53:0"
									},
									"src": "493:77:0"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "592:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 46,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "622:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "622:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "603:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "603:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "603:32:0"
											}
										]
									},
									"id": 51,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "589:2:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "592:0:0"
									},
									"scope": 175,
									"src": "578:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "672:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 54,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "691:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "691:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 56,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "702:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "702:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "691:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "716:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb",
																"typeString": "literal_string \"Adminable: caller is not the owner\""
															},
															"value": "Adminable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb",
																"typeString": "literal_string \"Adminable: caller is not the owner\""
															}
														],
														"id": 53,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "683:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "683:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "683:70:0"
											},
											{
												"id": 62,
												"nodeType": "PlaceholderStatement",
												"src": "764:1:0"
											}
										]
									},
									"id": 64,
									"name": "onlyOwner",
									"nameLocation": "660:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "669:2:0"
									},
									"src": "651:122:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "802:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 68,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "829:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 69,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "829:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 67,
																"name": "isAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "821:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "821:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d696e",
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "844:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045",
																"typeString": "literal_string \"Adminable: caller is not the admin\""
															},
															"value": "Adminable: caller is not the admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045",
																"typeString": "literal_string \"Adminable: caller is not the admin\""
															}
														],
														"id": 66,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "813:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "813:68:0"
											},
											{
												"id": 74,
												"nodeType": "PlaceholderStatement",
												"src": "892:1:0"
											}
										]
									},
									"id": 76,
									"name": "onlyAdmin",
									"nameLocation": "790:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "799:2:0"
									},
									"src": "781:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "964:32:0",
										"statements": [
											{
												"expression": {
													"id": 81,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "982:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 80,
												"id": 82,
												"nodeType": "Return",
												"src": "975:13:0"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "918:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "955:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "954:9:0"
									},
									"scope": 175,
									"src": "909:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "1073:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 91,
														"name": "_admins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1091:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 93,
													"indexExpression": {
														"id": 92,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "1099:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1091:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 90,
												"id": 94,
												"nodeType": "Return",
												"src": "1084:23:0"
											}
										]
									},
									"functionSelector": "24d7806c",
									"id": 96,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAdmin",
									"nameLocation": "1013:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1029:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1021:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1020:17:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1067:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 88,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1067:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1066:6:0"
									},
									"scope": 175,
									"src": "1004:111:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "1177:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1215:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1207:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 102,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1207:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1207:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 101,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "1188:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1188:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1188:30:0"
											}
										]
									},
									"functionSelector": "715018a6",
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 99,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 98,
												"name": "onlyOwner",
												"nameLocations": [
													"1167:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "1167:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1167:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1132:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1149:2:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1177:0:0"
									},
									"scope": 175,
									"src": "1123:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1304:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 117,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "1323:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1343:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1335:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 118,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1335:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1335:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1323:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1347:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 116,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1315:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1315:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "1315:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 127,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "1418:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 126,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "1399:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1399:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1399:28:0"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 114,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 113,
												"name": "onlyOwner",
												"nameLocations": [
													"1294:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "1294:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1294:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1243:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1269:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1261:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:18:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1304:0:0"
									},
									"scope": 175,
									"src": "1234:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "1506:128:0",
										"statements": [
											{
												"assignments": [
													137
												],
												"declarations": [
													{
														"constant": false,
														"id": 137,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "1525:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 149,
														"src": "1517:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 136,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1517:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 139,
												"initialValue": {
													"id": 138,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "1536:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1517:25:0"
											},
											{
												"expression": {
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 140,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1553:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 141,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "1562:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1553:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "1553:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 145,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "1607:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 146,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "1617:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 144,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1586:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1586:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "EmitStatement",
												"src": "1581:45:0"
											}
										]
									},
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "1452:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1479:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1471:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:18:0"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1506:0:0"
									},
									"scope": 175,
									"src": "1443:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "1721:105:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 160,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1755:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 161,
																"name": "_admins",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1763:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 163,
															"indexExpression": {
																"id": 162,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "1771:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1763:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 164,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "1779:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 159,
														"name": "ModificationAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "1737:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$_t_bool_$returns$__$",
															"typeString": "function (address,bool,bool)"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1737:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 166,
												"nodeType": "EmitStatement",
												"src": "1732:53:0"
											},
											{
												"expression": {
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 167,
															"name": "_admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "1796:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 169,
														"indexExpression": {
															"id": 168,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1804:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1796:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 170,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "1813:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1796:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1796:22:0"
											}
										]
									},
									"functionSelector": "18e20ecf",
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 157,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 156,
												"name": "onlyOwner",
												"nameLocations": [
													"1711:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "1711:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1711:9:0"
										}
									],
									"name": "modificationAdmin",
									"nameLocation": "1651:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "state",
												"nameLocation": "1689:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1684:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1684:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1668:27:0"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1721:0:0"
									},
									"scope": 175,
									"src": "1642:184:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 176,
							"src": "279:1550:0",
							"usedErrors": []
						}
					],
					"src": "2:1829:0"
				},
				"id": 0
			},
			"inviter_presell/stake.sol": {
				"ast": {
					"absolutePath": "inviter_presell/stake.sol",
					"exportedSymbols": {
						"Address": [
							1599
						],
						"Adminable": [
							175
						],
						"Context": [
							20
						],
						"IERC20": [
							1078
						],
						"ReentrancyGuard": [
							1000
						],
						"SafeERC20": [
							1302
						],
						"SafeMath": [
							1911
						],
						"StakingRewards": [
							960
						]
					},
					"id": 961,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"absolutePath": "inviter_presell/adminable.sol",
							"file": "./adminable.sol",
							"id": 178,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 961,
							"sourceUnit": 176,
							"src": "30:25:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "../node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 179,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 961,
							"sourceUnit": 1912,
							"src": "57:73:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 961,
							"sourceUnit": 1303,
							"src": "132:81:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "../node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 961,
							"sourceUnit": 1001,
							"src": "215:78:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 182,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 961,
							"sourceUnit": 1079,
							"src": "295:72:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 183,
										"name": "Adminable",
										"nameLocations": [
											"398:9:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 175,
										"src": "398:9:1"
									},
									"id": 184,
									"nodeType": "InheritanceSpecifier",
									"src": "398:9:1"
								},
								{
									"baseName": {
										"id": 185,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"410:15:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1000,
										"src": "410:15:1"
									},
									"id": 186,
									"nodeType": "InheritanceSpecifier",
									"src": "410:15:1"
								}
							],
							"canonicalName": "StakingRewards",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 960,
							"linearizedBaseContracts": [
								960,
								1000,
								175,
								20
							],
							"name": "StakingRewards",
							"nameLocation": "380:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 189,
									"libraryName": {
										"id": 187,
										"name": "SafeMath",
										"nameLocations": [
											"438:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1911,
										"src": "438:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "432:27:1",
									"typeName": {
										"id": 188,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "451:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "d1af0c7d",
									"id": 192,
									"mutability": "mutable",
									"name": "rewardsToken",
									"nameLocation": "481:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 960,
									"src": "467:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1078",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 191,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 190,
											"name": "IERC20",
											"nameLocations": [
												"467:6:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1078,
											"src": "467:6:1"
										},
										"referencedDeclaration": 1078,
										"src": "467:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1078",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0700037d",
									"id": 196,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "535:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 960,
									"src": "500:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 195,
										"keyType": {
											"id": 193,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "508:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "500:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 194,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "519:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0e15561a",
									"id": 203,
									"mutability": "mutable",
									"name": "totalRewards",
									"nameLocation": "566:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 960,
									"src": "551:47:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 197,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "551:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_168000000000000000000000_by_1",
											"typeString": "int_const 168000000000000000000000"
										},
										"id": 202,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "313638303030",
											"id": 198,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "581:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_168000_by_1",
												"typeString": "int_const 168000"
											},
											"value": "168000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 201,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 199,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "590:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 200,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "596:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "590:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "581:17:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_168000000000000000000000_by_1",
											"typeString": "int_const 168000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78e97925",
									"id": 205,
									"mutability": "mutable",
									"name": "startTime",
									"nameLocation": "620:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 960,
									"src": "605:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 204,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "605:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6139d4b4",
									"id": 208,
									"mutability": "mutable",
									"name": "rateInterval",
									"nameLocation": "651:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 960,
									"src": "636:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 206,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "636:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "666:10:1",
										"subdenomination": "seconds",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3c4045cf",
									"id": 211,
									"mutability": "mutable",
									"name": "rateIntervalNumerator",
									"nameLocation": "698:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 960,
									"src": "683:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 209,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "683:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 210,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "722:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7a6fcee7",
									"id": 214,
									"mutability": "mutable",
									"name": "rateIntervalDenominator",
									"nameLocation": "745:23:1",
									"nodeType": "VariableDeclaration",
									"scope": 960,
									"src": "730:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 212,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "730:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 213,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "771:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c8f33c91",
									"id": 216,
									"mutability": "mutable",
									"name": "lastUpdateTime",
									"nameLocation": "797:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 960,
									"src": "782:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 215,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "782:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df136d65",
									"id": 218,
									"mutability": "mutable",
									"name": "rewardPerTokenStored",
									"nameLocation": "833:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 960,
									"src": "818:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 217,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "818:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 220,
									"mutability": "mutable",
									"name": "_totalPowers",
									"nameLocation": "876:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 960,
									"src": "860:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 219,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "860:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "8b876347",
									"id": 224,
									"mutability": "mutable",
									"name": "userRewardPerTokenPaid",
									"nameLocation": "932:22:1",
									"nodeType": "VariableDeclaration",
									"scope": 960,
									"src": "897:57:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 223,
										"keyType": {
											"id": 221,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "905:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "897:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 222,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "916:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8107368b",
									"id": 228,
									"mutability": "mutable",
									"name": "userLastUpdateTime",
									"nameLocation": "996:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 960,
									"src": "961:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 227,
										"keyType": {
											"id": 225,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "969:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "961:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 226,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "980:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d42b779d",
									"id": 232,
									"mutability": "mutable",
									"name": "claimedBalances",
									"nameLocation": "1056:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 960,
									"src": "1021:50:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 231,
										"keyType": {
											"id": 229,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1029:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1021:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 230,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1040:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 236,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1116:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 960,
									"src": "1080:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 235,
										"keyType": {
											"id": 233,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1088:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1080:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 234,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1099:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "1177:554:1",
										"statements": [
											{
												"assignments": [
													241
												],
												"declarations": [
													{
														"constant": false,
														"id": 241,
														"mutability": "mutable",
														"name": "time",
														"nameLocation": "1196:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 304,
														"src": "1188:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 240,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1188:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 245,
												"initialValue": {
													"baseExpression": {
														"id": 242,
														"name": "userLastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "1203:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 244,
													"indexExpression": {
														"id": 243,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 238,
														"src": "1222:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1203:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1188:42:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 246,
														"name": "time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "1244:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 247,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "1252:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1244:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "1241:65:1",
												"trueBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "1263:43:1",
													"statements": [
														{
															"expression": {
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 249,
																	"name": "time",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "1278:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 250,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "1285:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1278:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 252,
															"nodeType": "ExpressionStatement",
															"src": "1278:16:1"
														}
													]
												}
											},
											{
												"assignments": [
													256
												],
												"declarations": [
													{
														"constant": false,
														"id": 256,
														"mutability": "mutable",
														"name": "rate",
														"nameLocation": "1324:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 304,
														"src": "1316:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 255,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1316:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 262,
												"initialValue": {
													"arguments": [
														{
															"id": 258,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "1354:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 259,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1360:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1366:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1360:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 257,
														"name": "getTimeWeightedAveRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "1331:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1331:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1316:60:1"
											},
											{
												"expression": {
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 263,
														"name": "rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "1387:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 265,
																"name": "rate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "1425:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 264,
															"name": "rewardPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "1410:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1410:20:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1387:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "1387:43:1"
											},
											{
												"expression": {
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 269,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "1441:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 270,
															"name": "lastTimeRewardApplicable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "1458:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1458:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1441:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 273,
												"nodeType": "ExpressionStatement",
												"src": "1441:43:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 274,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 238,
														"src": "1499:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1518:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1510:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 275,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1510:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1510:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1499:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 302,
												"nodeType": "IfStatement",
												"src": "1495:217:1",
												"trueBody": {
													"id": 301,
													"nodeType": "Block",
													"src": "1522:190:1",
													"statements": [
														{
															"expression": {
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 280,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 196,
																		"src": "1537:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 282,
																	"indexExpression": {
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "1545:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1537:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 284,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 238,
																			"src": "1563:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 283,
																		"name": "earned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 643,
																		"src": "1556:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1556:15:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1537:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 287,
															"nodeType": "ExpressionStatement",
															"src": "1537:34:1"
														},
														{
															"expression": {
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 288,
																		"name": "userRewardPerTokenPaid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "1586:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 290,
																	"indexExpression": {
																		"id": 289,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "1609:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1586:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 291,
																	"name": "rewardPerTokenStored",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "1620:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1586:54:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 293,
															"nodeType": "ExpressionStatement",
															"src": "1586:54:1"
														},
														{
															"expression": {
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 294,
																		"name": "userLastUpdateTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 228,
																		"src": "1655:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 296,
																	"indexExpression": {
																		"id": 295,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "1674:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1655:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 297,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1685:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1691:9:1",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1685:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1655:45:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 300,
															"nodeType": "ExpressionStatement",
															"src": "1655:45:1"
														}
													]
												}
											},
											{
												"id": 303,
												"nodeType": "PlaceholderStatement",
												"src": "1722:1:1"
											}
										]
									},
									"id": 305,
									"name": "updateReward",
									"nameLocation": "1147:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1168:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1160:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1160:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1159:17:1"
									},
									"src": "1138:593:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "1794:67:1",
										"statements": [
											{
												"expression": {
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 312,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "1805:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 313,
														"name": "time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "1817:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1805:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "1805:16:1"
											},
											{
												"expression": {
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 316,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "1832:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 317,
														"name": "time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "1849:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1832:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "1832:21:1"
											}
										]
									},
									"functionSelector": "3e0a322d",
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 310,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 309,
												"name": "onlyAdmin",
												"nameLocations": [
													"1784:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 76,
												"src": "1784:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1784:9:1"
										}
									],
									"name": "setStartTime",
									"nameLocation": "1748:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "1769:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "1761:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1761:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1760:14:1"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1794:0:1"
									},
									"scope": 960,
									"src": "1739:122:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "1924:38:1",
										"statements": [
											{
												"expression": {
													"id": 326,
													"name": "_totalPowers",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 220,
													"src": "1942:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 325,
												"id": 327,
												"nodeType": "Return",
												"src": "1935:19:1"
											}
										]
									},
									"functionSelector": "6917c501",
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalPowers",
									"nameLocation": "1878:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1889:2:1"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1915:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1915:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1914:9:1"
									},
									"scope": 960,
									"src": "1869:93:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "2023:41:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 334,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "2041:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2047:9:1",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "2041:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 333,
												"id": 336,
												"nodeType": "Return",
												"src": "2034:22:1"
											}
										]
									},
									"functionSelector": "9a5b17b0",
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "curTime",
									"nameLocation": "1979:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1986:2:1"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "2014:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:9:1"
									},
									"scope": 960,
									"src": "1970:94:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "2139:44:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 345,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "2157:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 347,
													"indexExpression": {
														"id": 346,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "2167:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2157:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 344,
												"id": 348,
												"nodeType": "Return",
												"src": "2150:25:1"
											}
										]
									},
									"functionSelector": "b79ec812",
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "powersOf",
									"nameLocation": "2081:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2098:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "2090:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2089:17:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "2130:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2130:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2129:9:1"
									},
									"scope": 960,
									"src": "2072:111:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "2249:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 356,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2281:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2287:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2281:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 355,
														"name": "getRewardPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "2267:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2267:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 354,
												"id": 359,
												"nodeType": "Return",
												"src": "2260:37:1"
											}
										]
									},
									"functionSelector": "9499c549",
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurRewardPool",
									"nameLocation": "2200:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2216:2:1"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2240:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:1"
									},
									"scope": 960,
									"src": "2191:114:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "2380:432:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 368,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "2394:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2407:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2394:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 374,
												"nodeType": "IfStatement",
												"src": "2391:65:1",
												"trueBody": {
													"id": 373,
													"nodeType": "Block",
													"src": "2410:46:1",
													"statements": [
														{
															"expression": {
																"id": 371,
																"name": "totalRewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "2432:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 367,
															"id": 372,
															"nodeType": "Return",
															"src": "2425:19:1"
														}
													]
												}
											},
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "times",
														"nameLocation": "2474:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 418,
														"src": "2466:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 375,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2466:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 377,
																		"name": "time",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "2483:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 378,
																		"name": "startTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 205,
																		"src": "2490:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 380,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2482:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 381,
															"name": "rateInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "2503:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2482:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2518:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2482:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2466:53:1"
											},
											{
												"assignments": [
													387
												],
												"declarations": [
													{
														"constant": false,
														"id": 387,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "2538:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 418,
														"src": "2530:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 386,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2530:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 389,
												"initialValue": {
													"id": 388,
													"name": "totalRewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 203,
													"src": "2546:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2530:28:1"
											},
											{
												"body": {
													"id": 410,
													"nodeType": "Block",
													"src": "2604:98:1",
													"statements": [
														{
															"expression": {
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 400,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "2619:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 401,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 387,
																		"src": "2627:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 402,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 387,
																				"src": "2635:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 403,
																				"name": "rateIntervalNumerator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 211,
																				"src": "2643:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2635:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 405,
																			"name": "rateIntervalDenominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "2667:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2635:55:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2627:63:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2619:71:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 409,
															"nodeType": "ExpressionStatement",
															"src": "2619:71:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 394,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "2588:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 395,
														"name": "times",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "2592:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2588:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 411,
												"initializationExpression": {
													"assignments": [
														391
													],
													"declarations": [
														{
															"constant": false,
															"id": 391,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2581:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 411,
															"src": "2573:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 390,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2573:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 393,
													"initialValue": {
														"hexValue": "30",
														"id": 392,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2585:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2573:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2599:3:1",
														"subExpression": {
															"id": 397,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "2601:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 399,
													"nodeType": "ExpressionStatement",
													"src": "2599:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2569:133:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 412,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "2749:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 413,
															"name": "rateIntervalNumerator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "2757:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2749:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 415,
														"name": "rateIntervalDenominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "2781:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2749:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 367,
												"id": 417,
												"nodeType": "Return",
												"src": "2742:62:1"
											}
										]
									},
									"functionSelector": "5cfa91f4",
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardPool",
									"nameLocation": "2322:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "2344:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2336:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2336:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2335:14:1"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2371:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2371:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2370:9:1"
									},
									"scope": 960,
									"src": "2313:499:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "2889:349:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 426,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "2903:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2916:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2903:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 432,
												"nodeType": "IfStatement",
												"src": "2900:62:1",
												"trueBody": {
													"id": 431,
													"nodeType": "Block",
													"src": "2919:43:1",
													"statements": [
														{
															"expression": {
																"id": 429,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "2941:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 425,
															"id": 430,
															"nodeType": "Return",
															"src": "2934:16:1"
														}
													]
												}
											},
											{
												"assignments": [
													434
												],
												"declarations": [
													{
														"constant": false,
														"id": 434,
														"mutability": "mutable",
														"name": "times",
														"nameLocation": "2980:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "2972:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 433,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2972:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 443,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 435,
																		"name": "time",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "2989:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 436,
																		"name": "startTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 205,
																		"src": "2996:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2989:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 438,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2988:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 439,
															"name": "rateInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "3009:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2988:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3024:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2988:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2972:53:1"
											},
											{
												"assignments": [
													445
												],
												"declarations": [
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "3044:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "3036:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 444,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3036:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 447,
												"initialValue": {
													"id": 446,
													"name": "totalRewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 203,
													"src": "3052:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3036:28:1"
											},
											{
												"body": {
													"id": 468,
													"nodeType": "Block",
													"src": "3110:98:1",
													"statements": [
														{
															"expression": {
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 458,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "3125:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 459,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 445,
																		"src": "3133:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 460,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 445,
																				"src": "3141:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 461,
																				"name": "rateIntervalNumerator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 211,
																				"src": "3149:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3141:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 463,
																			"name": "rateIntervalDenominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "3173:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3141:55:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3133:63:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3125:71:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 467,
															"nodeType": "ExpressionStatement",
															"src": "3125:71:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 452,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "3094:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 453,
														"name": "times",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "3098:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3094:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 469,
												"initializationExpression": {
													"assignments": [
														449
													],
													"declarations": [
														{
															"constant": false,
															"id": 449,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3087:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 469,
															"src": "3079:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 448,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3079:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 451,
													"initialValue": {
														"hexValue": "30",
														"id": 450,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3091:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3079:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3105:3:1",
														"subExpression": {
															"id": 455,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "3107:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 457,
													"nodeType": "ExpressionStatement",
													"src": "3105:3:1"
												},
												"nodeType": "ForStatement",
												"src": "3075:133:1"
											},
											{
												"expression": {
													"id": 470,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 445,
													"src": "3225:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 425,
												"id": 471,
												"nodeType": "Return",
												"src": "3218:12:1"
											}
										]
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRemainPool",
									"nameLocation": "2829:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "2852:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "2844:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2844:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2843:14:1"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "2880:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2880:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2879:9:1"
									},
									"scope": 960,
									"src": "2820:418:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "3313:349:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 480,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "3327:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3340:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3327:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 486,
												"nodeType": "IfStatement",
												"src": "3324:62:1",
												"trueBody": {
													"id": 485,
													"nodeType": "Block",
													"src": "3343:43:1",
													"statements": [
														{
															"expression": {
																"id": 483,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "3365:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 479,
															"id": 484,
															"nodeType": "Return",
															"src": "3358:16:1"
														}
													]
												}
											},
											{
												"assignments": [
													488
												],
												"declarations": [
													{
														"constant": false,
														"id": 488,
														"mutability": "mutable",
														"name": "times",
														"nameLocation": "3404:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 526,
														"src": "3396:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 487,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3396:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 497,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 489,
																		"name": "time",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 475,
																		"src": "3413:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 490,
																		"name": "startTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 205,
																		"src": "3420:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3413:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 492,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3412:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 493,
															"name": "rateInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "3433:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3412:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3448:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3412:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3396:53:1"
											},
											{
												"assignments": [
													499
												],
												"declarations": [
													{
														"constant": false,
														"id": 499,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "3468:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 526,
														"src": "3460:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 498,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3460:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 501,
												"initialValue": {
													"id": 500,
													"name": "totalRewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 203,
													"src": "3476:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3460:28:1"
											},
											{
												"body": {
													"id": 522,
													"nodeType": "Block",
													"src": "3534:98:1",
													"statements": [
														{
															"expression": {
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 512,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "3549:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 513,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 499,
																		"src": "3557:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 514,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 499,
																				"src": "3565:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 515,
																				"name": "rateIntervalNumerator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 211,
																				"src": "3573:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3565:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 517,
																			"name": "rateIntervalDenominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "3597:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3565:55:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3557:63:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3549:71:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 521,
															"nodeType": "ExpressionStatement",
															"src": "3549:71:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 506,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 503,
														"src": "3518:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 507,
														"name": "times",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "3522:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3518:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 523,
												"initializationExpression": {
													"assignments": [
														503
													],
													"declarations": [
														{
															"constant": false,
															"id": 503,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3511:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 523,
															"src": "3503:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 502,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3503:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 505,
													"initialValue": {
														"hexValue": "30",
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3515:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3503:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3529:3:1",
														"subExpression": {
															"id": 509,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "3531:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 511,
													"nodeType": "ExpressionStatement",
													"src": "3529:3:1"
												},
												"nodeType": "ForStatement",
												"src": "3499:133:1"
											},
											{
												"expression": {
													"id": 524,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 499,
													"src": "3649:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 479,
												"id": 525,
												"nodeType": "Return",
												"src": "3642:12:1"
											}
										]
									},
									"functionSelector": "4dbdc4eb",
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRemainPool",
									"nameLocation": "3255:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "3277:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "3269:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3269:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3268:14:1"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "3304:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3304:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3303:9:1"
									},
									"scope": 960,
									"src": "3246:416:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "3728:57:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 533,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3761:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3767:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3761:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 532,
														"name": "_getRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 561,
														"src": "3746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3746:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 531,
												"id": 536,
												"nodeType": "Return",
												"src": "3739:38:1"
											}
										]
									},
									"functionSelector": "cdda56e0",
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurRewardRate",
									"nameLocation": "3679:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3695:2:1"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3719:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3718:9:1"
									},
									"scope": 960,
									"src": "3670:115:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "3862:153:1",
										"statements": [
											{
												"assignments": [
													546
												],
												"declarations": [
													{
														"constant": false,
														"id": 546,
														"mutability": "mutable",
														"name": "curPoolAmount",
														"nameLocation": "3881:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 560,
														"src": "3873:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 545,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3873:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 550,
												"initialValue": {
													"arguments": [
														{
															"id": 548,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "3911:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 547,
														"name": "getRewardPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "3897:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3897:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3873:43:1"
											},
											{
												"assignments": [
													552
												],
												"declarations": [
													{
														"constant": false,
														"id": 552,
														"mutability": "mutable",
														"name": "rewardRate",
														"nameLocation": "3935:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 560,
														"src": "3927:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 551,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3927:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 557,
												"initialValue": {
													"arguments": [
														{
															"id": 555,
															"name": "rateInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "3966:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 553,
															"name": "curPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "3948:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3962:3:1",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1820,
														"src": "3948:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3948:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3927:52:1"
											},
											{
												"expression": {
													"id": 558,
													"name": "rewardRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 552,
													"src": "3997:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 544,
												"id": 559,
												"nodeType": "Return",
												"src": "3990:17:1"
											}
										]
									},
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRewardRate",
									"nameLocation": "3802:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "3825:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "3817:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3817:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3816:14:1"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "3853:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3853:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3852:9:1"
									},
									"scope": 960,
									"src": "3793:222:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "4091:41:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 566,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "4109:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4115:9:1",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "4109:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 565,
												"id": 568,
												"nodeType": "Return",
												"src": "4102:22:1"
											}
										]
									},
									"functionSelector": "80faa57d",
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimeRewardApplicable",
									"nameLocation": "4034:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4058:2:1"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "4082:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4082:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4081:9:1"
									},
									"scope": 960,
									"src": "4025:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "4214:274:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 577,
														"name": "_totalPowers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "4229:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4245:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4229:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "4225:77:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "4248:54:1",
													"statements": [
														{
															"expression": {
																"id": 580,
																"name": "rewardPerTokenStored",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "4270:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 576,
															"id": 581,
															"nodeType": "Return",
															"src": "4263:27:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 598,
																	"name": "_totalPowers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "4452:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "31653138",
																			"id": 595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4442:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 592,
																					"name": "rewardRate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 572,
																					"src": "4426:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 589,
																							"name": "lastUpdateTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 216,
																							"src": "4406:14:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 586,
																								"name": "lastTimeRewardApplicable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 570,
																								"src": "4375:24:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 587,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4375:26:1",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 588,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4402:3:1",
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1790,
																						"src": "4375:30:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 590,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4375:46:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 591,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4422:3:1",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1805,
																				"src": "4375:50:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4375:62:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4438:3:1",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1805,
																		"src": "4375:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4375:72:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4448:3:1",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1820,
																"src": "4375:76:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4375:90:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 584,
															"name": "rewardPerTokenStored",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "4332:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4353:3:1",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1775,
														"src": "4332:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4332:148:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 576,
												"id": 601,
												"nodeType": "Return",
												"src": "4312:168:1"
											}
										]
									},
									"functionSelector": "874c120b",
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nameLocation": "4149:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "4172:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "4164:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4164:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4163:20:1"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "4205:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4204:9:1"
									},
									"scope": 960,
									"src": "4140:348:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "4559:233:1",
										"statements": [
											{
												"assignments": [
													611
												],
												"declarations": [
													{
														"constant": false,
														"id": 611,
														"mutability": "mutable",
														"name": "rate",
														"nameLocation": "4578:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 642,
														"src": "4570:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 610,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4570:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 619,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 613,
																"name": "userLastUpdateTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "4608:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 615,
															"indexExpression": {
																"id": 614,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 605,
																"src": "4627:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4608:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 616,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4637:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4643:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4637:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 612,
														"name": "getTimeWeightedAveRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "4585:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4585:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4570:83:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 637,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 196,
																"src": "4767:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 639,
															"indexExpression": {
																"id": 638,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 605,
																"src": "4775:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4767:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4757:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 628,
																						"name": "userRewardPerTokenPaid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 224,
																						"src": "4719:22:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 630,
																					"indexExpression": {
																						"id": 629,
																						"name": "account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 605,
																						"src": "4742:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4719:31:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 625,
																							"name": "rate",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 611,
																							"src": "4709:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 624,
																						"name": "rewardPerToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 603,
																						"src": "4694:14:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256) view returns (uint256)"
																						}
																					},
																					"id": 626,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4694:20:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 627,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4715:3:1",
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1790,
																				"src": "4694:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4694:57:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 620,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 236,
																				"src": "4671:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 622,
																			"indexExpression": {
																				"id": 621,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "4681:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4671:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4690:3:1",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1805,
																		"src": "4671:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4671:81:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4753:3:1",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1820,
																"src": "4671:85:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4671:91:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4763:3:1",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1775,
														"src": "4671:95:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4671:113:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 609,
												"id": 641,
												"nodeType": "Return",
												"src": "4664:120:1"
											}
										]
									},
									"functionSelector": "008cc262",
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "4505:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4520:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "4512:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4512:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4511:17:1"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "4550:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4550:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4549:9:1"
									},
									"scope": 960,
									"src": "4496:296:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 806,
										"nodeType": "Block",
										"src": "4933:1285:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 652,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "4957:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4970:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4957:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 655,
																"name": "leftTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "4975:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 656,
																"name": "rightTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "4987:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4975:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "4957:39:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 659,
															"name": "leftTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "5000:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5012:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5000:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4957:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 666,
												"nodeType": "IfStatement",
												"src": "4954:96:1",
												"trueBody": {
													"id": 665,
													"nodeType": "Block",
													"src": "5015:35:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5037:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 651,
															"id": 664,
															"nodeType": "Return",
															"src": "5030:8:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 667,
														"name": "leftTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "5065:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 668,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "5076:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5065:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 675,
												"nodeType": "IfStatement",
												"src": "5062:72:1",
												"trueBody": {
													"id": 674,
													"nodeType": "Block",
													"src": "5087:47:1",
													"statements": [
														{
															"expression": {
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 670,
																	"name": "leftTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "5102:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 671,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "5113:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5102:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 673,
															"nodeType": "ExpressionStatement",
															"src": "5102:20:1"
														}
													]
												}
											},
											{
												"assignments": [
													677
												],
												"declarations": [
													{
														"constant": false,
														"id": 677,
														"mutability": "mutable",
														"name": "leftInterval",
														"nameLocation": "5154:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 806,
														"src": "5146:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 676,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5146:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 689,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 678,
																	"name": "rateInterval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "5170:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 681,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 679,
																					"name": "leftTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 645,
																					"src": "5186:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 680,
																					"name": "startTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 205,
																					"src": "5197:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5186:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 682,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5185:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 683,
																		"name": "rateInterval",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 208,
																		"src": "5210:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5185:37:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5170:52:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 686,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5169:54:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 687,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "5226:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5169:69:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5146:92:1"
											},
											{
												"assignments": [
													691
												],
												"declarations": [
													{
														"constant": false,
														"id": 691,
														"mutability": "mutable",
														"name": "leftReward",
														"nameLocation": "5257:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 806,
														"src": "5249:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 690,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5249:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 699,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 693,
																	"name": "leftTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "5284:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 692,
																"name": "getRewardPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "5270:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5270:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 695,
															"name": "leftInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "5296:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5270:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 697,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "5311:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5270:53:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5249:74:1"
											},
											{
												"assignments": [
													701
												],
												"declarations": [
													{
														"constant": false,
														"id": 701,
														"mutability": "mutable",
														"name": "rightInterval",
														"nameLocation": "5344:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 806,
														"src": "5336:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 700,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5336:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 708,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 702,
																	"name": "rightTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "5361:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 703,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "5373:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5361:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 705,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5360:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 706,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "5386:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5360:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5336:62:1"
											},
											{
												"assignments": [
													710
												],
												"declarations": [
													{
														"constant": false,
														"id": 710,
														"mutability": "mutable",
														"name": "rightReward",
														"nameLocation": "5417:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 806,
														"src": "5409:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 709,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5409:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 718,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 712,
																	"name": "rightTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "5445:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 711,
																"name": "getRewardPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "5431:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5431:24:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 714,
															"name": "rightInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "5458:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5431:40:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 716,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "5474:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5431:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5409:77:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 719,
															"name": "leftTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "5502:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 720,
															"name": "leftInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "5513:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5502:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 722,
														"name": "rightTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "5528:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5502:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 729,
												"nodeType": "IfStatement",
												"src": "5499:98:1",
												"trueBody": {
													"id": 728,
													"nodeType": "Block",
													"src": "5539:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 725,
																		"name": "leftTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 645,
																		"src": "5576:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 724,
																	"name": "_getRewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 561,
																	"src": "5561:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5561:24:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 651,
															"id": 727,
															"nodeType": "Return",
															"src": "5554:31:1"
														}
													]
												}
											},
											{
												"assignments": [
													731
												],
												"declarations": [
													{
														"constant": false,
														"id": 731,
														"mutability": "mutable",
														"name": "midInterval",
														"nameLocation": "5617:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 806,
														"src": "5609:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 730,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5609:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 739,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 732,
																"name": "rightTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "5631:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 733,
																"name": "rightInterval",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "5643:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5631:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 735,
															"name": "leftTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "5659:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5631:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 737,
														"name": "leftInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "5670:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5631:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5609:73:1"
											},
											{
												"assignments": [
													741
												],
												"declarations": [
													{
														"constant": false,
														"id": 741,
														"mutability": "mutable",
														"name": "startReward",
														"nameLocation": "5701:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 806,
														"src": "5693:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 740,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5693:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 745,
												"initialValue": {
													"arguments": [
														{
															"id": 743,
															"name": "leftTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "5729:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 742,
														"name": "getRemainPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "5715:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5715:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5693:45:1"
											},
											{
												"assignments": [
													747
												],
												"declarations": [
													{
														"constant": false,
														"id": 747,
														"mutability": "mutable",
														"name": "midTotalReward",
														"nameLocation": "5758:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 806,
														"src": "5750:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 746,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5750:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 749,
												"initialValue": {
													"hexValue": "30",
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5775:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5750:26:1"
											},
											{
												"assignments": [
													751
												],
												"declarations": [
													{
														"constant": false,
														"id": 751,
														"mutability": "mutable",
														"name": "nextReward",
														"nameLocation": "5795:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 806,
														"src": "5787:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 750,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5787:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"initialValue": {
													"hexValue": "30",
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5808:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5787:22:1"
											},
											{
												"assignments": [
													755
												],
												"declarations": [
													{
														"constant": false,
														"id": 755,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "5828:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 806,
														"src": "5820:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 754,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5820:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 757,
												"initialValue": {
													"id": 756,
													"name": "startReward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 741,
													"src": "5836:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5820:27:1"
											},
											{
												"assignments": [
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "times",
														"nameLocation": "5866:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 806,
														"src": "5858:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 758,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5858:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 763,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 760,
														"name": "midInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "5874:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 761,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "5888:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5874:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5858:42:1"
											},
											{
												"body": {
													"id": 792,
													"nodeType": "Block",
													"src": "5946:179:1",
													"statements": [
														{
															"expression": {
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 774,
																	"name": "nextReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "5961:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 775,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 755,
																			"src": "5974:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 776,
																			"name": "rateIntervalNumerator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 211,
																			"src": "5982:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5974:29:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 778,
																		"name": "rateIntervalDenominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 214,
																		"src": "6006:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5974:55:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5961:68:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 781,
															"nodeType": "ExpressionStatement",
															"src": "5961:68:1"
														},
														{
															"expression": {
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 782,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "6044:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 783,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 755,
																		"src": "6052:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 784,
																		"name": "nextReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 751,
																		"src": "6060:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6052:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6044:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 787,
															"nodeType": "ExpressionStatement",
															"src": "6044:26:1"
														},
														{
															"expression": {
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 788,
																	"name": "midTotalReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "6085:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 789,
																	"name": "nextReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "6103:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6085:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 791,
															"nodeType": "ExpressionStatement",
															"src": "6085:28:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 768,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "5930:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 769,
														"name": "times",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "5934:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5930:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 793,
												"initializationExpression": {
													"assignments": [
														765
													],
													"declarations": [
														{
															"constant": false,
															"id": 765,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5923:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 793,
															"src": "5915:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 764,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5915:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 767,
													"initialValue": {
														"hexValue": "30",
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5927:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5915:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5941:3:1",
														"subExpression": {
															"id": 771,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "5943:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 773,
													"nodeType": "ExpressionStatement",
													"src": "5941:3:1"
												},
												"nodeType": "ForStatement",
												"src": "5911:214:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 794,
																		"name": "midTotalReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 747,
																		"src": "6143:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 795,
																		"name": "leftReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 691,
																		"src": "6160:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6143:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 797,
																	"name": "rightReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "6173:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6143:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 799,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6142:43:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 800,
																	"name": "rightTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "6189:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 801,
																	"name": "leftTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "6201:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6189:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 803,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6188:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6142:68:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 651,
												"id": 805,
												"nodeType": "Return",
												"src": "6135:75:1"
											}
										]
									},
									"functionSelector": "da4f8431",
									"id": 807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTimeWeightedAveRate",
									"nameLocation": "4844:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "leftTime",
												"nameLocation": "4875:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "4867:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4867:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "rightTime",
												"nameLocation": "4893:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "4885:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4885:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4866:37:1"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "4925:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4925:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4924:9:1"
									},
									"scope": 960,
									"src": "4835:1383:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "6324:198:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 822,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "6343:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6352:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6343:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b652030",
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6355:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															},
															"value": "Cannot stake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															}
														],
														"id": 821,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6335:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6335:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 827,
												"nodeType": "ExpressionStatement",
												"src": "6335:37:1"
											},
											{
												"expression": {
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 828,
														"name": "_totalPowers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "6383:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 831,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "6415:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 829,
																"name": "_totalPowers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6398:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6411:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1775,
															"src": "6398:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6398:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6383:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "6383:39:1"
											},
											{
												"expression": {
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 835,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "6433:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 837,
														"indexExpression": {
															"id": 836,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "6443:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6433:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 842,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "6471:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 838,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "6451:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 840,
																"indexExpression": {
																	"id": 839,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 809,
																	"src": "6461:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6451:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6467:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1775,
															"src": "6451:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6451:27:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6433:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "6433:45:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 847,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "6501:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 848,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "6507:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 846,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "6494:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6494:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "EmitStatement",
												"src": "6489:25:1"
											}
										]
									},
									"functionSelector": "adc9772e",
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 814,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 813,
												"name": "nonReentrant",
												"nameLocations": [
													"6282:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 999,
												"src": "6282:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "6282:12:1"
										},
										{
											"id": 816,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 815,
												"name": "onlyAdmin",
												"nameLocations": [
													"6295:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 76,
												"src": "6295:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "6295:9:1"
										},
										{
											"arguments": [
												{
													"id": 818,
													"name": "user",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 809,
													"src": "6318:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 819,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 817,
												"name": "updateReward",
												"nameLocations": [
													"6305:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 305,
												"src": "6305:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "6305:18:1"
										}
									],
									"name": "stake",
									"nameLocation": "6237:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6251:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "6243:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6243:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6265:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "6257:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6257:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6242:30:1"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6324:0:1"
									},
									"scope": 960,
									"src": "6228:294:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "6602:237:1",
										"statements": [
											{
												"assignments": [
													862
												],
												"declarations": [
													{
														"constant": false,
														"id": 862,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "6621:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 894,
														"src": "6613:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 861,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6613:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 867,
												"initialValue": {
													"baseExpression": {
														"id": 863,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "6630:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 866,
													"indexExpression": {
														"expression": {
															"id": 864,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6638:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 865,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6642:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6638:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6630:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6613:36:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 868,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "6664:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6673:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6664:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 893,
												"nodeType": "IfStatement",
												"src": "6660:172:1",
												"trueBody": {
													"id": 892,
													"nodeType": "Block",
													"src": "6676:156:1",
													"statements": [
														{
															"expression": {
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 871,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 196,
																		"src": "6691:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 874,
																	"indexExpression": {
																		"expression": {
																			"id": 872,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6699:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6703:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6699:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6691:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6713:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6691:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 877,
															"nodeType": "ExpressionStatement",
															"src": "6691:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 881,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6751:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6755:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6751:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 883,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 862,
																		"src": "6763:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 878,
																		"name": "rewardsToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 192,
																		"src": "6729:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1078",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6742:8:1",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1027,
																	"src": "6729:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6729:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 885,
															"nodeType": "ExpressionStatement",
															"src": "6729:41:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 887,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6801:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6805:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6801:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 889,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 862,
																		"src": "6813:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 886,
																	"name": "RewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "6790:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6790:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 891,
															"nodeType": "EmitStatement",
															"src": "6785:35:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "3d18b912",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 855,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 854,
												"name": "nonReentrant",
												"nameLocations": [
													"6564:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 999,
												"src": "6564:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "6564:12:1"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 857,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "6590:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6594:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "6590:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 859,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 856,
												"name": "updateReward",
												"nameLocations": [
													"6577:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 305,
												"src": "6577:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "6577:24:1"
										}
									],
									"name": "getReward",
									"nameLocation": "6543:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6552:2:1"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6602:0:1"
									},
									"scope": 960,
									"src": "6534:305:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "6905:47:1",
										"statements": [
											{
												"expression": {
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 902,
														"name": "rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "6916:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1078",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 904,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 897,
																"src": "6938:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 903,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "6931:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$1078_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6931:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1078",
															"typeString": "contract IERC20"
														}
													},
													"src": "6916:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1078",
														"typeString": "contract IERC20"
													}
												},
												"id": 907,
												"nodeType": "ExpressionStatement",
												"src": "6916:28:1"
											}
										]
									},
									"functionSelector": "8aee8127",
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 900,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 899,
												"name": "onlyOwner",
												"nameLocations": [
													"6895:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "6895:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "6895:9:1"
										}
									],
									"name": "setRewardToken",
									"nameLocation": "6856:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6879:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "6871:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6871:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6870:15:1"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6905:0:1"
									},
									"scope": 960,
									"src": "6847:105:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 915,
									"name": "Staked",
									"nameLocation": "6972:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6995:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "6979:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6979:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7009:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "7001:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7001:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6978:38:1"
									},
									"src": "6966:51:1"
								},
								{
									"anonymous": false,
									"eventSelector": "e2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486",
									"id": 921,
									"name": "RewardPaid",
									"nameLocation": "7029:10:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7056:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "7040:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7040:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "7070:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "7062:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7062:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7039:38:1"
									},
									"src": "7023:55:1"
								},
								{
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "7134:67:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 934,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7179:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StakingRewards_$960",
																			"typeString": "contract StakingRewards"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_StakingRewards_$960",
																			"typeString": "contract StakingRewards"
																		}
																	],
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7171:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 932,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7171:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7171:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7185:7:1",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "7171:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 928,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 84,
																		"src": "7153:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7153:7:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7145:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 926,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7145:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7145:16:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7162:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "7145:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7145:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 938,
												"nodeType": "ExpressionStatement",
												"src": "7145:48:1"
											}
										]
									},
									"functionSelector": "db2e21bc",
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 924,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 923,
												"name": "onlyOwner",
												"nameLocations": [
													"7124:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "7124:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "7124:9:1"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "7095:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7112:2:1"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:1"
									},
									"scope": 960,
									"src": "7086:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 958,
										"nodeType": "Block",
										"src": "7291:61:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 953,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7325:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7329:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7325:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 955,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "7337:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 950,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "7309:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 949,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1078,
																"src": "7302:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1078_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7302:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1078",
																"typeString": "contract IERC20"
															}
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7316:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1027,
														"src": "7302:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7302:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 957,
												"nodeType": "ExpressionStatement",
												"src": "7302:42:1"
											}
										]
									},
									"functionSelector": "a4c3b091",
									"id": 959,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 947,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 946,
												"name": "onlyOwner",
												"nameLocations": [
													"7281:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "7281:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "7281:9:1"
										}
									],
									"name": "emergencyWithdrawToken",
									"nameLocation": "7218:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7249:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "7241:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7241:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7264:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "7256:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7256:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7240:31:1"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7291:0:1"
									},
									"scope": 960,
									"src": "7209:143:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 961,
							"src": "371:6984:1",
							"usedErrors": []
						}
					],
					"src": "0:7355:1"
				},
				"id": 1
			},
			"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1000
						]
					},
					"id": 1001,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 962,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 963,
								"nodeType": "StructuredDocumentation",
								"src": "127:765:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1000,
							"linearizedBaseContracts": [
								1000
							],
							"name": "ReentrancyGuard",
							"nameLocation": "912:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 966,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1719:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 1000,
									"src": "1694:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 964,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1694:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 965,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1734:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 969,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1767:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 1000,
									"src": "1742:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 967,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1742:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 968,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1778:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 971,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1804:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1000,
									"src": "1788:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 970,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1788:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "1834:41:2",
										"statements": [
											{
												"expression": {
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 974,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "1845:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 975,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "1855:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1845:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "1845:22:2"
											}
										]
									},
									"id": 979,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1831:2:2"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1834:0:2"
									},
									"scope": 1000,
									"src": "1820:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "2285:433:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 983,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "2376:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 984,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "2387:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2376:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2397:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 982,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2368:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2368:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "2368:63:2"
											},
											{
												"expression": {
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 989,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "2509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 990,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "2519:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2509:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "2509:18:2"
											},
											{
												"id": 993,
												"nodeType": "PlaceholderStatement",
												"src": "2540:1:2"
											},
											{
												"expression": {
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 994,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "2688:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 995,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "2698:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2688:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "2688:22:2"
											}
										]
									},
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "1883:372:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 999,
									"name": "nonReentrant",
									"nameLocation": "2270:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2282:2:2"
									},
									"src": "2261:457:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1001,
							"src": "894:1827:2",
							"usedErrors": []
						}
					],
					"src": "100:2623:2"
				},
				"id": 2
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1078
						]
					},
					"id": 1079,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1002,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1003,
								"nodeType": "StructuredDocumentation",
								"src": "121:72:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1078,
							"linearizedBaseContracts": [
								1078
							],
							"name": "IERC20",
							"nameLocation": "205:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "219:68:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1009,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "302:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "313:2:3"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "339:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:9:3"
									},
									"scope": 1078,
									"src": "293:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "356:74:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1017,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "445:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "454:17:3"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "495:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:9:3"
									},
									"scope": 1078,
									"src": "436:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "512:215:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1027,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "742:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "759:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "751:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "751:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "778:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "770:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "770:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "750:35:3"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "804:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1024,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "804:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:6:3"
									},
									"scope": 1078,
									"src": "733:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "818:270:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1037,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1103:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1121:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "1113:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1136:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "1128:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1128:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1112:32:3"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "1168:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1167:9:3"
									},
									"scope": 1078,
									"src": "1094:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "1185:655:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1047,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1855:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1871:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "1863:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1863:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1888:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "1880:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1880:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:33:3"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "1914:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1044,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1914:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:6:3"
									},
									"scope": 1078,
									"src": "1846:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "1928:304:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1059,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2247:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2278:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "2270:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2270:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2303:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "2295:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2295:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2331:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "2323:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2323:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2259:85:3"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "2363:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1056,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2363:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2362:6:3"
									},
									"scope": 1078,
									"src": "2238:131:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1060,
										"nodeType": "StructuredDocumentation",
										"src": "2377:163:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1068,
									"name": "Transfer",
									"nameLocation": "2552:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2577:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "2561:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2561:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2599:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "2583:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2611:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "2603:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2560:57:3"
									},
									"src": "2546:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "2626:151:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1077,
									"name": "Approval",
									"nameLocation": "2789:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2814:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "2798:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2837:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "2821:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2821:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2854:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "2846:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2846:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2797:63:3"
									},
									"src": "2783:78:3"
								}
							],
							"scope": 1079,
							"src": "195:2669:3",
							"usedErrors": []
						}
					],
					"src": "94:2772:3"
				},
				"id": 3
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1599
						],
						"IERC20": [
							1078
						],
						"SafeERC20": [
							1302
						]
					},
					"id": 1303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1080,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:4"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1081,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1303,
							"sourceUnit": 1079,
							"src": "130:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 1082,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1303,
							"sourceUnit": 1600,
							"src": "155:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1083,
								"nodeType": "StructuredDocumentation",
								"src": "195:465:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1302,
							"linearizedBaseContracts": [
								1302
							],
							"name": "SafeERC20",
							"nameLocation": "670:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1086,
									"libraryName": {
										"id": 1084,
										"name": "Address",
										"nameLocations": [
											"693:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1599,
										"src": "693:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "687:26:4",
									"typeName": {
										"id": 1085,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "705:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1108,
										"nodeType": "Block",
										"src": "827:105:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1097,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "858:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1078",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1100,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1089,
																			"src": "888:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1078",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "894:8:4",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1027,
																		"src": "888:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "903:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "888:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1103,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "913:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1104,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1093,
																	"src": "917:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1098,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "865:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "869:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "865:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "865:58:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1078",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1096,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "838:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1078_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "838:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "838:86:4"
											}
										]
									},
									"id": 1109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "730:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "760:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "753:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1078",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1088,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1087,
														"name": "IERC20",
														"nameLocations": [
															"753:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1078,
														"src": "753:6:4"
													},
													"referencedDeclaration": 1078,
													"src": "753:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1078",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "784:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "776:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "805:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "797:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:75:4"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "827:0:4"
									},
									"scope": 1302,
									"src": "721:211:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1134,
										"nodeType": "Block",
										"src": "1073:115:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1122,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "1104:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1078",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1125,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1112,
																			"src": "1134:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1078",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1140:12:4",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1059,
																		"src": "1134:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1153:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1134:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1128,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1114,
																	"src": "1163:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1129,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1116,
																	"src": "1169:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1130,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1118,
																	"src": "1173:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1123,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1111:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1115:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1111:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1111:68:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1078",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1121,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "1084:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1078_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1084:96:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "1084:96:4"
											}
										]
									},
									"id": 1135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "949:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "983:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "976:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1078",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1111,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1110,
														"name": "IERC20",
														"nameLocations": [
															"976:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1078,
														"src": "976:6:4"
													},
													"referencedDeclaration": 1078,
													"src": "976:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1078",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1007:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "999:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1030:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "1022:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1051:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "1043:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "965:98:4"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1073:0:4"
									},
									"scope": 1302,
									"src": "940:248:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1178,
										"nodeType": "Block",
										"src": "1567:506:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1147,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1143,
																			"src": "1821:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1830:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1821:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1150,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1820:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1155,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1861:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1302",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1302",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 1154,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1853:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1153,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1853:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1156,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1853:13:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1157,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1141,
																					"src": "1868:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1151,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1139,
																					"src": "1837:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1078",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1152,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1843:9:4",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1037,
																				"src": "1837:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1837:39:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1880:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1837:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1161,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1836:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1820:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1897:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1146,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1798:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1798:166:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1165,
												"nodeType": "ExpressionStatement",
												"src": "1798:166:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1167,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "1995:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1078",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1170,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1139,
																			"src": "2025:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1078",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2031:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1047,
																		"src": "2025:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2039:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2025:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1173,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "2049:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1174,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1143,
																	"src": "2058:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1168,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2002:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2006:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2002:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2002:62:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1078",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1166,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "1975:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1078_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1975:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1177,
												"nodeType": "ExpressionStatement",
												"src": "1975:90:4"
											}
										]
									},
									"documentation": {
										"id": 1136,
										"nodeType": "StructuredDocumentation",
										"src": "1196:255:4",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1466:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1495:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "1488:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1078",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1138,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1137,
														"name": "IERC20",
														"nameLocations": [
															"1488:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1078,
														"src": "1488:6:4"
													},
													"referencedDeclaration": 1078,
													"src": "1488:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1078",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "1511:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1545:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "1537:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1537:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1477:80:4"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1567:0:4"
									},
									"scope": 1302,
									"src": "1457:616:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "2201:197:4",
										"statements": [
											{
												"assignments": [
													1190
												],
												"declarations": [
													{
														"constant": false,
														"id": 1190,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2220:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 1214,
														"src": "2212:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1189,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2212:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1201,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1195,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2259:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$1302",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$1302",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 1194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2251:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1193,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2251:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2251:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1197,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "2266:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1191,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "2235:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1078",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2241:9:4",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1037,
															"src": "2235:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2235:39:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1199,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "2277:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2235:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2212:70:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1203,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "2313:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1078",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1206,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1182,
																			"src": "2343:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1078",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2349:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1047,
																		"src": "2343:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2357:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2343:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1209,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1184,
																	"src": "2367:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1210,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1190,
																	"src": "2376:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1204,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2320:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2324:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2320:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2320:69:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1078",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1202,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "2293:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1078_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2293:97:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1213,
												"nodeType": "ExpressionStatement",
												"src": "2293:97:4"
											}
										]
									},
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2129:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "2122:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1078",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1181,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1180,
														"name": "IERC20",
														"nameLocations": [
															"2122:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1078,
														"src": "2122:6:4"
													},
													"referencedDeclaration": 1078,
													"src": "2122:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1078",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2153:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "2145:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2145:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "2171:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:80:4"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:0:4"
									},
									"scope": 1302,
									"src": "2081:317:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1262,
										"nodeType": "Block",
										"src": "2526:377:4",
										"statements": [
											{
												"id": 1261,
												"nodeType": "UncheckedBlock",
												"src": "2537:359:4",
												"statements": [
													{
														"assignments": [
															1226
														],
														"declarations": [
															{
																"constant": false,
																"id": 1226,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2570:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 1261,
																"src": "2562:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1225,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2562:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1235,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1231,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2609:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1302",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1302",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2601:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1229,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2601:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2601:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1233,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1220,
																	"src": "2616:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1227,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1218,
																	"src": "2585:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1078",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2591:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1037,
																"src": "2585:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2585:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2562:62:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1237,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1226,
																		"src": "2647:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1238,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1222,
																		"src": "2663:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2647:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2670:43:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 1236,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2639:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2639:75:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1242,
														"nodeType": "ExpressionStatement",
														"src": "2639:75:4"
													},
													{
														"assignments": [
															1244
														],
														"declarations": [
															{
																"constant": false,
																"id": 1244,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2737:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 1261,
																"src": "2729:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1243,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2729:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1248,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1245,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "2752:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1246,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1222,
																"src": "2767:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2752:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2729:43:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1250,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1218,
																	"src": "2807:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1078",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 1253,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1218,
																					"src": "2837:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1078",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1254,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2843:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1047,
																				"src": "2837:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2851:8:4",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2837:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 1256,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1220,
																			"src": "2861:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1257,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1244,
																			"src": "2870:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1251,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2814:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2818:18:4",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2814:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 1258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2814:69:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1078",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1249,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1301,
																"src": "2787:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1078_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2787:97:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1260,
														"nodeType": "ExpressionStatement",
														"src": "2787:97:4"
													}
												]
											}
										]
									},
									"id": 1263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2415:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "2447:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1078",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1217,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1216,
														"name": "IERC20",
														"nameLocations": [
															"2447:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1078,
														"src": "2447:6:4"
													},
													"referencedDeclaration": 1078,
													"src": "2447:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1078",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2478:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "2470:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2504:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "2496:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2496:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2436:80:4"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2526:0:4"
									},
									"scope": 1302,
									"src": "2406:497:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1300,
										"nodeType": "Block",
										"src": "3364:646:4",
										"statements": [
											{
												"assignments": [
													1273
												],
												"declarations": [
													{
														"constant": false,
														"id": 1273,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3731:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1300,
														"src": "3718:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1272,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3718:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1282,
												"initialValue": {
													"arguments": [
														{
															"id": 1279,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "3772:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3778:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1276,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1267,
																	"src": "3752:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1078",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1078",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3744:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1274,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3744:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3744:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3759:12:4",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1393,
														"src": "3744:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3744:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3718:95:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1283,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "3828:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3839:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3828:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3848:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3828:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1299,
												"nodeType": "IfStatement",
												"src": "3824:179:4",
												"trueBody": {
													"id": 1298,
													"nodeType": "Block",
													"src": "3851:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1290,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1273,
																				"src": "3925:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1292,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3938:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1291,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3938:4:4",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1293,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3937:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1288,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3914:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3918:6:4",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3914:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3914:30:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3946:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1287,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3906:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3906:85:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1297,
															"nodeType": "ExpressionStatement",
															"src": "3906:85:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1264,
										"nodeType": "StructuredDocumentation",
										"src": "2911:377:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3303:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3330:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "3323:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1078",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1266,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1265,
														"name": "IERC20",
														"nameLocations": [
															"3323:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1078,
														"src": "3323:6:4"
													},
													"referencedDeclaration": 1078,
													"src": "3323:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1078",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "3337:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3337:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:33:4"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3364:0:4"
									},
									"scope": 1302,
									"src": "3294:716:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1303,
							"src": "662:3351:4",
							"usedErrors": []
						}
					],
					"src": "103:3912:4"
				},
				"id": 4
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1599
						]
					},
					"id": 1600,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1304,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1305,
								"nodeType": "StructuredDocumentation",
								"src": "116:69:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1599,
							"linearizedBaseContracts": [
								1599
							],
							"name": "Address",
							"nameLocation": "195:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1321,
										"nodeType": "Block",
										"src": "863:321:5",
										"statements": [
											{
												"assignments": [
													1314
												],
												"declarations": [
													{
														"constant": false,
														"id": 1314,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1073:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1321,
														"src": "1065:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1313,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1065:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1315,
												"nodeType": "VariableDeclarationStatement",
												"src": "1065:12:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1097:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1112:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1132:7:5"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1120:11:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1120:20:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1112:4:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1308,
														"isOffset": false,
														"isSlot": false,
														"src": "1132:7:5",
														"valueSize": 1
													},
													{
														"declaration": 1314,
														"isOffset": false,
														"isSlot": false,
														"src": "1112:4:5",
														"valueSize": 1
													}
												],
												"id": 1316,
												"nodeType": "InlineAssembly",
												"src": "1088:63:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1317,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "1168:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1318,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1175:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1168:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1312,
												"id": 1320,
												"nodeType": "Return",
												"src": "1161:15:5"
											}
										]
									},
									"documentation": {
										"id": 1306,
										"nodeType": "StructuredDocumentation",
										"src": "210:581:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "806:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "825:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "817:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:17:5"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "857:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "857:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "856:6:5"
									},
									"scope": 1599,
									"src": "797:387:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "2190:246:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1333,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2217:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1599",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1599",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2209:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1331,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2209:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2209:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2223:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2209:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1336,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "2234:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2209:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2242:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1330,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2201:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2201:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1340,
												"nodeType": "ExpressionStatement",
												"src": "2201:73:5"
											},
											{
												"assignments": [
													1342,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1342,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2293:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1355,
														"src": "2288:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1341,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2288:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1349,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2336:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1343,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1325,
																"src": "2306:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2316:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2306:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1346,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1345,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "2328:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2306:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2306:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2287:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1351,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "2358:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2367:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1350,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2350:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2350:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1354,
												"nodeType": "ExpressionStatement",
												"src": "2350:78:5"
											}
										]
									},
									"documentation": {
										"id": 1323,
										"nodeType": "StructuredDocumentation",
										"src": "1192:921:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2128:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2154:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "2138:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2138:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2173:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "2165:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2165:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:43:5"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2190:0:5"
									},
									"scope": 1599,
									"src": "2119:317:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1372,
										"nodeType": "Block",
										"src": "3287:86:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1367,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "3318:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1368,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "3326:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3332:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1366,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1373,
															1393
														],
														"referencedDeclaration": 1393,
														"src": "3305:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3305:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1365,
												"id": 1371,
												"nodeType": "Return",
												"src": "3298:67:5"
											}
										]
									},
									"documentation": {
										"id": 1357,
										"nodeType": "StructuredDocumentation",
										"src": "2444:748:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3207:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3228:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "3220:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3220:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3249:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "3236:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3236:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3219:35:5"
									},
									"returnParameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "3273:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1363,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3273:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3272:14:5"
									},
									"scope": 1599,
									"src": "3198:175:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1392,
										"nodeType": "Block",
										"src": "3754:78:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1386,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "3794:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1387,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "3802:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3808:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1389,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "3811:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1385,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1413,
															1463
														],
														"referencedDeclaration": 1463,
														"src": "3772:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3772:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1384,
												"id": 1391,
												"nodeType": "Return",
												"src": "3765:59:5"
											}
										]
									},
									"documentation": {
										"id": 1374,
										"nodeType": "StructuredDocumentation",
										"src": "3381:216:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3612:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3643:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "3635:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3635:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3673:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "3660:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1377,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3660:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3702:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "3688:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1379,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3688:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3624:97:5"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "3740:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1382,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3740:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3739:14:5"
									},
									"scope": 1599,
									"src": "3603:229:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1412,
										"nodeType": "Block",
										"src": "4354:113:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1406,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1396,
															"src": "4394:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1407,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "4402:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1408,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "4408:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4415:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1405,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1413,
															1463
														],
														"referencedDeclaration": 1463,
														"src": "4372:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4372:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1404,
												"id": 1411,
												"nodeType": "Return",
												"src": "4365:94:5"
											}
										]
									},
									"documentation": {
										"id": 1394,
										"nodeType": "StructuredDocumentation",
										"src": "3840:361:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4216:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4256:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "4248:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4248:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4286:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "4273:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4273:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4309:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "4301:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4301:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4237:84:5"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "4340:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1402,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4340:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4339:14:5"
									},
									"scope": 1599,
									"src": "4207:260:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1462,
										"nodeType": "Block",
										"src": "4907:326:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1430,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4934:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1599",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1599",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4926:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1428,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4926:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4926:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4940:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4926:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1433,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1420,
																"src": "4951:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4926:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4958:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1427,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4918:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4918:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1437,
												"nodeType": "ExpressionStatement",
												"src": "4918:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1440,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1416,
																	"src": "5029:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1439,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1322,
																"src": "5018:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5018:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5038:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1438,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5010:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5010:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1444,
												"nodeType": "ExpressionStatement",
												"src": "5010:60:5"
											},
											{
												"assignments": [
													1446,
													1448
												],
												"declarations": [
													{
														"constant": false,
														"id": 1446,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5089:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1462,
														"src": "5084:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1445,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5084:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1448,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5111:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1462,
														"src": "5098:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1447,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5098:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1455,
												"initialValue": {
													"arguments": [
														{
															"id": 1453,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "5151:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1449,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1416,
																"src": "5125:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5132:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5125:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1451,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1420,
																"src": "5144:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5125:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5125:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5083:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1457,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "5191:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1458,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "5200:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1459,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "5212:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1456,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1598,
														"src": "5174:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5174:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1426,
												"id": 1461,
												"nodeType": "Return",
												"src": "5167:58:5"
											}
										]
									},
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "4475:242:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4732:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4772:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "4764:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4764:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4802:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "4789:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1417,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4789:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4825:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "4817:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4817:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4855:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "4841:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1421,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4841:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4753:121:5"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "4893:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1424,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4893:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4892:14:5"
									},
									"scope": 1599,
									"src": "4723:510:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1479,
										"nodeType": "Block",
										"src": "5518:99:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1474,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "5555:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1475,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "5563:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5569:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1473,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1480,
															1515
														],
														"referencedDeclaration": 1515,
														"src": "5536:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5536:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1472,
												"id": 1478,
												"nodeType": "Return",
												"src": "5529:80:5"
											}
										]
									},
									"documentation": {
										"id": 1464,
										"nodeType": "StructuredDocumentation",
										"src": "5241:171:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5427:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5454:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "5446:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5446:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5475:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "5462:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5462:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5445:35:5"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "5504:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5504:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5503:14:5"
									},
									"scope": 1599,
									"src": "5418:199:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1514,
										"nodeType": "Block",
										"src": "5971:233:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1494,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1483,
																	"src": "6001:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1493,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1322,
																"src": "5990:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5990:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6010:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1492,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5982:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5982:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1498,
												"nodeType": "ExpressionStatement",
												"src": "5982:67:5"
											},
											{
												"assignments": [
													1500,
													1502
												],
												"declarations": [
													{
														"constant": false,
														"id": 1500,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6068:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1514,
														"src": "6063:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1499,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6063:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1502,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6090:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1514,
														"src": "6077:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1501,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6077:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1507,
												"initialValue": {
													"arguments": [
														{
															"id": 1505,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "6122:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1503,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "6104:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6111:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6104:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6104:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6062:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1509,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1500,
															"src": "6162:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1510,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1502,
															"src": "6171:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1511,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "6183:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1508,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1598,
														"src": "6145:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6145:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1491,
												"id": 1513,
												"nodeType": "Return",
												"src": "6138:58:5"
											}
										]
									},
									"documentation": {
										"id": 1481,
										"nodeType": "StructuredDocumentation",
										"src": "5625:178:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5818:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5855:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "5847:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5847:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5885:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "5872:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1484,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5872:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5914:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "5900:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1486,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5900:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5836:97:5"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "5957:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5957:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5956:14:5"
									},
									"scope": 1599,
									"src": "5809:395:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1531,
										"nodeType": "Block",
										"src": "6488:103:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1526,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "6527:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1527,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "6535:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6541:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1525,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1532,
															1567
														],
														"referencedDeclaration": 1567,
														"src": "6506:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6506:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1524,
												"id": 1530,
												"nodeType": "Return",
												"src": "6499:84:5"
											}
										]
									},
									"documentation": {
										"id": 1516,
										"nodeType": "StructuredDocumentation",
										"src": "6212:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6400:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6429:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "6421:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6421:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6450:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "6437:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1519,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6437:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6420:35:5"
									},
									"returnParameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "6474:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1522,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6474:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6473:14:5"
									},
									"scope": 1599,
									"src": "6391:200:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1566,
										"nodeType": "Block",
										"src": "6944:237:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1546,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1535,
																	"src": "6974:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1545,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1322,
																"src": "6963:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6963:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6983:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1544,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6955:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6955:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1550,
												"nodeType": "ExpressionStatement",
												"src": "6955:69:5"
											},
											{
												"assignments": [
													1552,
													1554
												],
												"declarations": [
													{
														"constant": false,
														"id": 1552,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7043:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1566,
														"src": "7038:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1551,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7038:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1554,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7065:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1566,
														"src": "7052:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1553,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7052:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1559,
												"initialValue": {
													"arguments": [
														{
															"id": 1557,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "7099:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1555,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "7079:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7086:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7079:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7079:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7037:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1561,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1552,
															"src": "7139:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1562,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "7148:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1563,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1539,
															"src": "7160:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1560,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1598,
														"src": "7122:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7122:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1543,
												"id": 1565,
												"nodeType": "Return",
												"src": "7115:58:5"
											}
										]
									},
									"documentation": {
										"id": 1533,
										"nodeType": "StructuredDocumentation",
										"src": "6599:180:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6794:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6833:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "6825:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6825:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6863:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "6850:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1536,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6850:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6892:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "6878:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1538,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6878:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6814:97:5"
									},
									"returnParameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "6930:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1541,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6930:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6929:14:5"
									},
									"scope": 1599,
									"src": "6785:396:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1597,
										"nodeType": "Block",
										"src": "7573:548:5",
										"statements": [
											{
												"condition": {
													"id": 1579,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1570,
													"src": "7588:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1595,
													"nodeType": "Block",
													"src": "7647:467:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1583,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1572,
																		"src": "7733:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7744:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7733:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7753:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7733:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1593,
																"nodeType": "Block",
																"src": "8048:55:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1590,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1574,
																					"src": "8074:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1589,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8067:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8067:20:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1592,
																		"nodeType": "ExpressionStatement",
																		"src": "8067:20:5"
																	}
																]
															},
															"id": 1594,
															"nodeType": "IfStatement",
															"src": "7729:374:5",
															"trueBody": {
																"id": 1588,
																"nodeType": "Block",
																"src": "7756:286:5",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7879:148:5",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7902:40:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7931:10:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7925:5:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7925:17:5"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7906:15:5",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7975:2:5",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7979:10:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7971:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7971:19:5"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7992:15:5"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7964:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7964:44:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7964:44:5"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1572,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7931:10:5",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1572,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7979:10:5",
																				"valueSize": 1
																			}
																		],
																		"id": 1587,
																		"nodeType": "InlineAssembly",
																		"src": "7870:157:5"
																	}
																]
															}
														}
													]
												},
												"id": 1596,
												"nodeType": "IfStatement",
												"src": "7584:530:5",
												"trueBody": {
													"id": 1582,
													"nodeType": "Block",
													"src": "7597:44:5",
													"statements": [
														{
															"expression": {
																"id": 1580,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1572,
																"src": "7619:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1578,
															"id": 1581,
															"nodeType": "Return",
															"src": "7612:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1568,
										"nodeType": "StructuredDocumentation",
										"src": "7189:214:5",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7418:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7450:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "7445:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7445:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7481:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "7468:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1571,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7468:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7516:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "7502:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1573,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7502:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7434:101:5"
									},
									"returnParameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "7559:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1576,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7559:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7558:14:5"
									},
									"scope": 1599,
									"src": "7409:712:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1600,
							"src": "187:7937:5",
							"usedErrors": []
						}
					],
					"src": "89:8037:5"
				},
				"id": 5
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1911
						]
					},
					"id": 1912,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1601,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1602,
								"nodeType": "StructuredDocumentation",
								"src": "279:201:6",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1911,
							"linearizedBaseContracts": [
								1911
							],
							"name": "SafeMath",
							"nameLocation": "490:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1633,
										"nodeType": "Block",
										"src": "723:146:6",
										"statements": [
											{
												"id": 1632,
												"nodeType": "UncheckedBlock",
												"src": "734:128:6",
												"statements": [
													{
														"assignments": [
															1615
														],
														"declarations": [
															{
																"constant": false,
																"id": 1615,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "767:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1632,
																"src": "759:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1614,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "759:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1619,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1616,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1605,
																"src": "771:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1617,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1607,
																"src": "775:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "759:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1620,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1615,
																"src": "795:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1621,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1605,
																"src": "799:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "795:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1627,
														"nodeType": "IfStatement",
														"src": "791:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "810:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "817:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1625,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "809:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1613,
															"id": 1626,
															"nodeType": "Return",
															"src": "802:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "842:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1629,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1615,
																	"src": "848:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1630,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "841:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1613,
														"id": 1631,
														"nodeType": "Return",
														"src": "834:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1603,
										"nodeType": "StructuredDocumentation",
										"src": "506:135:6",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "656:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "671:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "663:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "682:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "674:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "662:22:6"
									},
									"returnParameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "708:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1609,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "708:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "714:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "707:15:6"
									},
									"scope": 1911,
									"src": "647:222:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1661,
										"nodeType": "Block",
										"src": "1098:118:6",
										"statements": [
											{
												"id": 1660,
												"nodeType": "UncheckedBlock",
												"src": "1109:100:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1646,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1639,
																"src": "1138:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1647,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1637,
																"src": "1142:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1138:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1653,
														"nodeType": "IfStatement",
														"src": "1134:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1153:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1160:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1651,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1152:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1645,
															"id": 1652,
															"nodeType": "Return",
															"src": "1145:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1185:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1655,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1637,
																		"src": "1191:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1656,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1639,
																		"src": "1195:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1191:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1658,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1184:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1645,
														"id": 1659,
														"nodeType": "Return",
														"src": "1177:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1635,
										"nodeType": "StructuredDocumentation",
										"src": "877:139:6",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1031:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1046:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "1038:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1038:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1057:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "1049:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1049:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1037:22:6"
									},
									"returnParameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "1083:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1641,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1083:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "1089:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1082:15:6"
									},
									"scope": 1911,
									"src": "1022:194:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "1447:427:6",
										"statements": [
											{
												"id": 1702,
												"nodeType": "UncheckedBlock",
												"src": "1458:409:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1674,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1665,
																"src": "1720:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1725:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1720:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1681,
														"nodeType": "IfStatement",
														"src": "1716:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1736:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1742:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1679,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1735:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1673,
															"id": 1680,
															"nodeType": "Return",
															"src": "1728:16:6"
														}
													},
													{
														"assignments": [
															1683
														],
														"declarations": [
															{
																"constant": false,
																"id": 1683,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1767:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1702,
																"src": "1759:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1682,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1759:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1687,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1684,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1665,
																"src": "1771:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1685,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1667,
																"src": "1775:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1771:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1759:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1688,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1683,
																	"src": "1795:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1689,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1665,
																	"src": "1799:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1795:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1691,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1667,
																"src": "1804:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1795:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1697,
														"nodeType": "IfStatement",
														"src": "1791:33:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1815:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1822:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1695,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1814:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1673,
															"id": 1696,
															"nodeType": "Return",
															"src": "1807:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1847:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1699,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1683,
																	"src": "1853:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1700,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1846:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1673,
														"id": 1701,
														"nodeType": "Return",
														"src": "1839:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1663,
										"nodeType": "StructuredDocumentation",
										"src": "1224:141:6",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1380:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1395:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "1387:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1387:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1406:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "1398:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1398:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1386:22:6"
									},
									"returnParameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "1432:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1669,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1432:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "1438:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:15:6"
									},
									"scope": 1911,
									"src": "1371:503:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1731,
										"nodeType": "Block",
										"src": "2106:119:6",
										"statements": [
											{
												"id": 1730,
												"nodeType": "UncheckedBlock",
												"src": "2117:101:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1716,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1709,
																"src": "2146:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2151:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2146:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1723,
														"nodeType": "IfStatement",
														"src": "2142:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2162:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2169:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1721,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2161:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1715,
															"id": 1722,
															"nodeType": "Return",
															"src": "2154:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2194:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1725,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1707,
																		"src": "2200:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1726,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1709,
																		"src": "2204:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2200:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1728,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2193:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1715,
														"id": 1729,
														"nodeType": "Return",
														"src": "2186:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1705,
										"nodeType": "StructuredDocumentation",
										"src": "1882:142:6",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "2039:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2054:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "2046:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2065:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "2057:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2057:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2045:22:6"
									},
									"returnParameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "2091:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1711,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2091:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "2097:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2090:15:6"
									},
									"scope": 1911,
									"src": "2030:195:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1759,
										"nodeType": "Block",
										"src": "2467:119:6",
										"statements": [
											{
												"id": 1758,
												"nodeType": "UncheckedBlock",
												"src": "2478:101:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1744,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1737,
																"src": "2507:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2512:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2507:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1751,
														"nodeType": "IfStatement",
														"src": "2503:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2523:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2530:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1749,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2522:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1743,
															"id": 1750,
															"nodeType": "Return",
															"src": "2515:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2555:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1753,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1735,
																		"src": "2561:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1754,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1737,
																		"src": "2565:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2561:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1756,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2554:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1743,
														"id": 1757,
														"nodeType": "Return",
														"src": "2547:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1733,
										"nodeType": "StructuredDocumentation",
										"src": "2233:152:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2400:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2415:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "2407:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2426:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "2418:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2418:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:22:6"
									},
									"returnParameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "2452:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1739,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2452:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "2458:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2451:15:6"
									},
									"scope": 1911,
									"src": "2391:195:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1774,
										"nodeType": "Block",
										"src": "2900:31:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1770,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1763,
														"src": "2918:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1771,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1765,
														"src": "2922:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2918:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1769,
												"id": 1773,
												"nodeType": "Return",
												"src": "2911:12:6"
											}
										]
									},
									"documentation": {
										"id": 1761,
										"nodeType": "StructuredDocumentation",
										"src": "2594:233:6",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2842:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2854:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "2846:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2846:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2865:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "2857:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2857:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2845:22:6"
									},
									"returnParameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "2891:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2890:9:6"
									},
									"scope": 1911,
									"src": "2833:98:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1789,
										"nodeType": "Block",
										"src": "3281:31:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1785,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1778,
														"src": "3299:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1786,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1780,
														"src": "3303:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3299:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1784,
												"id": 1788,
												"nodeType": "Return",
												"src": "3292:12:6"
											}
										]
									},
									"documentation": {
										"id": 1776,
										"nodeType": "StructuredDocumentation",
										"src": "2939:269:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3223:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3235:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1790,
												"src": "3227:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3227:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3246:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1790,
												"src": "3238:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3238:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3226:22:6"
									},
									"returnParameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1790,
												"src": "3272:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3272:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3271:9:6"
									},
									"scope": 1911,
									"src": "3214:98:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1804,
										"nodeType": "Block",
										"src": "3638:31:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1800,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1793,
														"src": "3656:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1801,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1795,
														"src": "3660:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3656:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1799,
												"id": 1803,
												"nodeType": "Return",
												"src": "3649:12:6"
											}
										]
									},
									"documentation": {
										"id": 1791,
										"nodeType": "StructuredDocumentation",
										"src": "3320:245:6",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3580:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3592:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "3584:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3584:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3603:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "3595:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3595:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3583:22:6"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "3629:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3629:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3628:9:6"
									},
									"scope": 1911,
									"src": "3571:98:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1819,
										"nodeType": "Block",
										"src": "4037:31:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1815,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1808,
														"src": "4055:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1816,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1810,
														"src": "4059:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4055:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1814,
												"id": 1818,
												"nodeType": "Return",
												"src": "4048:12:6"
											}
										]
									},
									"documentation": {
										"id": 1806,
										"nodeType": "StructuredDocumentation",
										"src": "3677:287:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3979:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3991:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "3983:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3983:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4002:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "3994:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:22:6"
									},
									"returnParameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "4028:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4028:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4027:9:6"
									},
									"scope": 1911,
									"src": "3970:98:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1834,
										"nodeType": "Block",
										"src": "4602:31:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1830,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1823,
														"src": "4620:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1831,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1825,
														"src": "4624:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4620:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1829,
												"id": 1833,
												"nodeType": "Return",
												"src": "4613:12:6"
											}
										]
									},
									"documentation": {
										"id": 1821,
										"nodeType": "StructuredDocumentation",
										"src": "4076:453:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4544:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4556:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "4548:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4548:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4567:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "4559:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4559:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4547:22:6"
									},
									"returnParameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "4593:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4592:9:6"
									},
									"scope": 1911,
									"src": "4535:98:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1859,
										"nodeType": "Block",
										"src": "5241:111:6",
										"statements": [
											{
												"id": 1858,
												"nodeType": "UncheckedBlock",
												"src": "5252:93:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1848,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1840,
																		"src": "5285:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1849,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1838,
																		"src": "5290:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5285:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1851,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1842,
																	"src": "5293:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1847,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5277:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5277:29:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1853,
														"nodeType": "ExpressionStatement",
														"src": "5277:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1854,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1838,
																"src": "5328:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1855,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1840,
																"src": "5332:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5328:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1846,
														"id": 1857,
														"nodeType": "Return",
														"src": "5321:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1836,
										"nodeType": "StructuredDocumentation",
										"src": "4641:465:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "5121:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5143:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "5135:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5135:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5163:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "5155:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5155:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5189:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "5175:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1841,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5175:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:84:6"
									},
									"returnParameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "5232:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5232:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5231:9:6"
									},
									"scope": 1911,
									"src": "5112:240:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1884,
										"nodeType": "Block",
										"src": "5979:110:6",
										"statements": [
											{
												"id": 1883,
												"nodeType": "UncheckedBlock",
												"src": "5990:92:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1873,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1865,
																		"src": "6023:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6027:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6023:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1876,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1867,
																	"src": "6030:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1872,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6015:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6015:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1878,
														"nodeType": "ExpressionStatement",
														"src": "6015:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1879,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1863,
																"src": "6065:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1880,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1865,
																"src": "6069:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6065:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1871,
														"id": 1882,
														"nodeType": "Return",
														"src": "6058:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1861,
										"nodeType": "StructuredDocumentation",
										"src": "5360:484:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5859:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5881:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "5873:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5873:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5901:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "5893:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5893:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5927:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "5913:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1866,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5913:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:84:6"
									},
									"returnParameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "5970:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5970:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5969:9:6"
									},
									"scope": 1911,
									"src": "5850:239:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1909,
										"nodeType": "Block",
										"src": "6881:110:6",
										"statements": [
											{
												"id": 1908,
												"nodeType": "UncheckedBlock",
												"src": "6892:92:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1898,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1890,
																		"src": "6925:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6929:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6925:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1901,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1892,
																	"src": "6932:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1897,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6917:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6917:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1903,
														"nodeType": "ExpressionStatement",
														"src": "6917:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1904,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1888,
																"src": "6967:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1905,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1890,
																"src": "6971:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6967:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1896,
														"id": 1907,
														"nodeType": "Return",
														"src": "6960:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1886,
										"nodeType": "StructuredDocumentation",
										"src": "6097:649:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6761:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6783:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "6775:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6775:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6803:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "6795:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6795:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6829:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "6815:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1891,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6815:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6764:84:6"
									},
									"returnParameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "6872:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6872:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6871:9:6"
									},
									"scope": 1911,
									"src": "6752:239:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1912,
							"src": "482:6512:6",
							"usedErrors": []
						}
					],
					"src": "95:6901:6"
				},
				"id": 6
			}
		}
	}
}